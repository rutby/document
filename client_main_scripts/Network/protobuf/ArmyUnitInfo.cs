// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ArmyUnitInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Protobuf {

  /// <summary>Holder for reflection information generated from ArmyUnitInfo.proto</summary>
  public static partial class ArmyUnitInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for ArmyUnitInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ArmyUnitInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJBcm15VW5pdEluZm8ucHJvdG8SCHByb3RvYnVmIocBCgxTb2xkaWVyUHJv",
            "dG8SDgoGYXJtc0lkGAEgASgJEgwKBHR5cGUYAiABKAUSDQoFdG90YWwYAyAB",
            "KAUSDAoEbG9zdBgEIAEoBRIPCgd3b3VuZGVkGAUgASgFEg8KB2luanVyZWQY",
            "BiABKAUSDAoEZGVhZBgHIAEoBRIMCgRjdXJlGAggASgFIjYKEkhlcm9Ta2ls",
            "bEluZm9Qcm90bxIPCgdza2lsbElkGAEgASgFEg8KB3NraWxsTHYYAiABKAUi",
            "ywEKDUhlcm9JbmZvUHJvdG8SDgoGaGVyb0lkGAEgASgFEhEKCWhlcm9MZXZl",
            "bBgCIAEoBRITCgtoZXJvUXVhbGl0eRgDIAEoBRINCgVpbmRleBgEIAEoBRIw",
            "Cgpza2lsbEluZm9zGAUgAygLMhwucHJvdG9idWYuSGVyb1NraWxsSW5mb1By",
            "b3RvEhAKCGhlcm9VdWlkGAYgASgDEhAKCG1heExldmVsGAcgASgFEg4KBnJh",
            "bmtMdhgIIAEoBRINCgVzdGFnZRgJIAEoBSItCg5FcXVpcEluZm9Qcm90bxIP",
            "CgdlcXVpcElkGAEgASgFEgoKAmx2GAIgASgFIpMBCg1TdWl0SW5mb1Byb3Rv",
            "EhAKCGNhckluZGV4GAEgASgFEhAKCHN1aXRUeXBlGAIgASgFEiwKCmVxdWlw",
            "SW5mb3MYAyADKAsyGC5wcm90b2J1Zi5FcXVpcEluZm9Qcm90bxIwCgpza2ls",
            "bEluZm9zGAQgAygLMhwucHJvdG9idWYuSGVyb1NraWxsSW5mb1Byb3RvIucC",
            "CgxBcm15VW5pdEluZm8SKAoIc29sZGllcnMYASADKAsyFi5wcm90b2J1Zi5T",
            "b2xkaWVyUHJvdG8SJwoGaGVyb2VzGAIgAygLMhcucHJvdG9idWYuSGVyb0lu",
            "Zm9Qcm90bxIMCgRuYW1lGAMgASgJEg4KBmFsQWJichgEIAEoCRILCgNwaWMY",
            "BSABKAkSDgoGcGljVmVyGAYgASgFEhEKCWhlYWRGcmFtZRgHIAEoBRISCgpj",
            "YXJlZXJUeXBlGAggASgFEhAKCGNhcmVlckx2GAkgASgFEikKCXVuaXRCdWZm",
            "cxgKIAMoCzIWLnByb3RvYnVmLkFybXlVbml0QnVmZhISCgpoZWFkU2tpbklk",
            "GAsgASgFEikKC3VuaXRFZmZlY3RzGAwgAygLMhQucHJvdG9idWYuVW5pdEVm",
            "ZmVjdBImCgVzdWl0cxgNIAMoCzIXLnByb3RvYnVmLlN1aXRJbmZvUHJvdG8i",
            "4wEKF0FybXlVbml0RWZmZWN0SW5mb1Byb3RvEhQKDHBsYXllckVmZmVjdBgB",
            "IAMoAhIXCg9mb3JtYXRpb25FZmZlY3QYAiADKAISNQoRdW5pdEVmZmVjdFJl",
            "YXNvbnMYAyADKAsyGi5wcm90b2J1Zi5Vbml0RWZmZWN0UmVhc29uEikKCXVu",
            "aXRCdWZmcxgEIAMoCzIWLnByb3RvYnVmLkFybXlVbml0QnVmZhI3Cg5mb3Jt",
            "YXRpb25CdWZmcxgFIAMoCzIfLnByb3RvYnVmLkFybXlVbml0Rm9ybWF0aW9u",
            "QnVmZiJNChBVbml0RWZmZWN0UmVhc29uEhAKCGVmZmVjdElkGAEgASgFEicK",
            "B3JlYXNvbnMYAiADKAsyFi5wcm90b2J1Zi5FZmZlY3RSZWFzb24iLQoKVW5p",
            "dEVmZmVjdBIQCghlZmZlY3RJZBgBIAEoBRINCgV2YWx1ZRgCIAEoAiJTCgxB",
            "cm15VW5pdEJ1ZmYSDgoGYnVmZklkGAEgASgFEhAKCGVmZmVjdElkGAIgAygF",
            "Eg0KBXZhbHVlGAMgAygCEhIKCmV4cGlyZVRpbWUYBCABKAUifQoVQXJteVVu",
            "aXRGb3JtYXRpb25CdWZmEg4KBmJ1ZmZJZBgBIAEoBRIQCghlZmZlY3RJZBgC",
            "IAMoBRINCgV2YWx1ZRgDIAMoAhISCgpleHBpcmVUaW1lGAQgASgFEhAKCHRp",
            "bWVUeXBlGAUgASgFEg0KBXR5cGUyGAYgASgFIi0KDEVmZmVjdFJlYXNvbhIO",
            "CgZyZWFzb24YASABKAUSDQoFdmFsdWUYAiABKAIi5wEKDkFybXlEQlVuaXRJ",
            "bmZvEgsKA3VpZBgBIAEoCRIoCghzb2xkaWVycxgCIAMoCzIWLnByb3RvYnVm",
            "LlNvbGRpZXJQcm90bxInCgZoZXJvZXMYAyADKAsyFy5wcm90b2J1Zi5IZXJv",
            "SW5mb1Byb3RvEjUKCmVmZmVjdEluZm8YBCABKAsyIS5wcm90b2J1Zi5Bcm15",
            "VW5pdEVmZmVjdEluZm9Qcm90bxIWCg5mb3JtYXRpb25JbmRleBgFIAEoBRIm",
            "CgVzdWl0cxgGIAMoCzIXLnByb3RvYnVmLlN1aXRJbmZvUHJvdG8iOwoORGVm",
            "ZW5kQXJteUluZm8SKQoHZGVmZW5kcxgBIAMoCzIYLnByb3RvYnVmLkFybXlE",
            "QlVuaXRJbmZvQh0KG25ldC5pbTMwLmFwcy5tb2RlbC5wcm90b2J1ZmIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.SoldierProto), global::Protobuf.SoldierProto.Parser, new[]{ "ArmsId", "Type", "Total", "Lost", "Wounded", "Injured", "Dead", "Cure" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.HeroSkillInfoProto), global::Protobuf.HeroSkillInfoProto.Parser, new[]{ "SkillId", "SkillLv" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.HeroInfoProto), global::Protobuf.HeroInfoProto.Parser, new[]{ "HeroId", "HeroLevel", "HeroQuality", "Index", "SkillInfos", "HeroUuid", "MaxLevel", "RankLv", "Stage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.EquipInfoProto), global::Protobuf.EquipInfoProto.Parser, new[]{ "EquipId", "Lv" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.SuitInfoProto), global::Protobuf.SuitInfoProto.Parser, new[]{ "CarIndex", "SuitType", "EquipInfos", "SkillInfos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.ArmyUnitInfo), global::Protobuf.ArmyUnitInfo.Parser, new[]{ "Soldiers", "Heroes", "Name", "AlAbbr", "Pic", "PicVer", "HeadFrame", "CareerType", "CareerLv", "UnitBuffs", "HeadSkinId", "UnitEffects", "Suits" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.ArmyUnitEffectInfoProto), global::Protobuf.ArmyUnitEffectInfoProto.Parser, new[]{ "PlayerEffect", "FormationEffect", "UnitEffectReasons", "UnitBuffs", "FormationBuffs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.UnitEffectReason), global::Protobuf.UnitEffectReason.Parser, new[]{ "EffectId", "Reasons" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.UnitEffect), global::Protobuf.UnitEffect.Parser, new[]{ "EffectId", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.ArmyUnitBuff), global::Protobuf.ArmyUnitBuff.Parser, new[]{ "BuffId", "EffectId", "Value", "ExpireTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.ArmyUnitFormationBuff), global::Protobuf.ArmyUnitFormationBuff.Parser, new[]{ "BuffId", "EffectId", "Value", "ExpireTime", "TimeType", "Type2" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.EffectReason), global::Protobuf.EffectReason.Parser, new[]{ "Reason", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.ArmyDBUnitInfo), global::Protobuf.ArmyDBUnitInfo.Parser, new[]{ "Uid", "Soldiers", "Heroes", "EffectInfo", "FormationIndex", "Suits" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.DefendArmyInfo), global::Protobuf.DefendArmyInfo.Parser, new[]{ "Defends" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SoldierProto : pb::IMessage<SoldierProto> {
    private static readonly pb::MessageParser<SoldierProto> _parser = new pb::MessageParser<SoldierProto>(() => new SoldierProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SoldierProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.ArmyUnitInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SoldierProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SoldierProto(SoldierProto other) : this() {
      armsId_ = other.armsId_;
      type_ = other.type_;
      total_ = other.total_;
      lost_ = other.lost_;
      wounded_ = other.wounded_;
      injured_ = other.injured_;
      dead_ = other.dead_;
      cure_ = other.cure_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SoldierProto Clone() {
      return new SoldierProto(this);
    }

    /// <summary>Field number for the "armsId" field.</summary>
    public const int ArmsIdFieldNumber = 1;
    private string armsId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ArmsId {
      get { return armsId_; }
      set {
        armsId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private int type_;
    /// <summary>
    /// 士兵类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 3;
    private int total_;
    /// <summary>
    /// 总量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "lost" field.</summary>
    public const int LostFieldNumber = 4;
    private int lost_;
    /// <summary>
    /// 损失
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Lost {
      get { return lost_; }
      set {
        lost_ = value;
      }
    }

    /// <summary>Field number for the "wounded" field.</summary>
    public const int WoundedFieldNumber = 5;
    private int wounded_;
    /// <summary>
    /// 轻伤
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Wounded {
      get { return wounded_; }
      set {
        wounded_ = value;
      }
    }

    /// <summary>Field number for the "injured" field.</summary>
    public const int InjuredFieldNumber = 6;
    private int injured_;
    /// <summary>
    /// 重伤
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Injured {
      get { return injured_; }
      set {
        injured_ = value;
      }
    }

    /// <summary>Field number for the "dead" field.</summary>
    public const int DeadFieldNumber = 7;
    private int dead_;
    /// <summary>
    /// 死亡
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Dead {
      get { return dead_; }
      set {
        dead_ = value;
      }
    }

    /// <summary>Field number for the "cure" field.</summary>
    public const int CureFieldNumber = 8;
    private int cure_;
    /// <summary>
    /// 治疗
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Cure {
      get { return cure_; }
      set {
        cure_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SoldierProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SoldierProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ArmsId != other.ArmsId) return false;
      if (Type != other.Type) return false;
      if (Total != other.Total) return false;
      if (Lost != other.Lost) return false;
      if (Wounded != other.Wounded) return false;
      if (Injured != other.Injured) return false;
      if (Dead != other.Dead) return false;
      if (Cure != other.Cure) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ArmsId.Length != 0) hash ^= ArmsId.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (Lost != 0) hash ^= Lost.GetHashCode();
      if (Wounded != 0) hash ^= Wounded.GetHashCode();
      if (Injured != 0) hash ^= Injured.GetHashCode();
      if (Dead != 0) hash ^= Dead.GetHashCode();
      if (Cure != 0) hash ^= Cure.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ArmsId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ArmsId);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Type);
      }
      if (Total != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Total);
      }
      if (Lost != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Lost);
      }
      if (Wounded != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Wounded);
      }
      if (Injured != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Injured);
      }
      if (Dead != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Dead);
      }
      if (Cure != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Cure);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ArmsId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ArmsId);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (Lost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Lost);
      }
      if (Wounded != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Wounded);
      }
      if (Injured != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Injured);
      }
      if (Dead != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dead);
      }
      if (Cure != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cure);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SoldierProto other) {
      if (other == null) {
        return;
      }
      if (other.ArmsId.Length != 0) {
        ArmsId = other.ArmsId;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Total != 0) {
        Total = other.Total;
      }
      if (other.Lost != 0) {
        Lost = other.Lost;
      }
      if (other.Wounded != 0) {
        Wounded = other.Wounded;
      }
      if (other.Injured != 0) {
        Injured = other.Injured;
      }
      if (other.Dead != 0) {
        Dead = other.Dead;
      }
      if (other.Cure != 0) {
        Cure = other.Cure;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ArmsId = input.ReadString();
            break;
          }
          case 16: {
            Type = input.ReadInt32();
            break;
          }
          case 24: {
            Total = input.ReadInt32();
            break;
          }
          case 32: {
            Lost = input.ReadInt32();
            break;
          }
          case 40: {
            Wounded = input.ReadInt32();
            break;
          }
          case 48: {
            Injured = input.ReadInt32();
            break;
          }
          case 56: {
            Dead = input.ReadInt32();
            break;
          }
          case 64: {
            Cure = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HeroSkillInfoProto : pb::IMessage<HeroSkillInfoProto> {
    private static readonly pb::MessageParser<HeroSkillInfoProto> _parser = new pb::MessageParser<HeroSkillInfoProto>(() => new HeroSkillInfoProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeroSkillInfoProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.ArmyUnitInfoReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroSkillInfoProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroSkillInfoProto(HeroSkillInfoProto other) : this() {
      skillId_ = other.skillId_;
      skillLv_ = other.skillLv_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroSkillInfoProto Clone() {
      return new HeroSkillInfoProto(this);
    }

    /// <summary>Field number for the "skillId" field.</summary>
    public const int SkillIdFieldNumber = 1;
    private int skillId_;
    /// <summary>
    ///技能id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SkillId {
      get { return skillId_; }
      set {
        skillId_ = value;
      }
    }

    /// <summary>Field number for the "skillLv" field.</summary>
    public const int SkillLvFieldNumber = 2;
    private int skillLv_;
    /// <summary>
    ///技能等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SkillLv {
      get { return skillLv_; }
      set {
        skillLv_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeroSkillInfoProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeroSkillInfoProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SkillId != other.SkillId) return false;
      if (SkillLv != other.SkillLv) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SkillId != 0) hash ^= SkillId.GetHashCode();
      if (SkillLv != 0) hash ^= SkillLv.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SkillId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SkillId);
      }
      if (SkillLv != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SkillLv);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SkillId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkillId);
      }
      if (SkillLv != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkillLv);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeroSkillInfoProto other) {
      if (other == null) {
        return;
      }
      if (other.SkillId != 0) {
        SkillId = other.SkillId;
      }
      if (other.SkillLv != 0) {
        SkillLv = other.SkillLv;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SkillId = input.ReadInt32();
            break;
          }
          case 16: {
            SkillLv = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HeroInfoProto : pb::IMessage<HeroInfoProto> {
    private static readonly pb::MessageParser<HeroInfoProto> _parser = new pb::MessageParser<HeroInfoProto>(() => new HeroInfoProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeroInfoProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.ArmyUnitInfoReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroInfoProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroInfoProto(HeroInfoProto other) : this() {
      heroId_ = other.heroId_;
      heroLevel_ = other.heroLevel_;
      heroQuality_ = other.heroQuality_;
      index_ = other.index_;
      skillInfos_ = other.skillInfos_.Clone();
      heroUuid_ = other.heroUuid_;
      maxLevel_ = other.maxLevel_;
      rankLv_ = other.rankLv_;
      stage_ = other.stage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroInfoProto Clone() {
      return new HeroInfoProto(this);
    }

    /// <summary>Field number for the "heroId" field.</summary>
    public const int HeroIdFieldNumber = 1;
    private int heroId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HeroId {
      get { return heroId_; }
      set {
        heroId_ = value;
      }
    }

    /// <summary>Field number for the "heroLevel" field.</summary>
    public const int HeroLevelFieldNumber = 2;
    private int heroLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HeroLevel {
      get { return heroLevel_; }
      set {
        heroLevel_ = value;
      }
    }

    /// <summary>Field number for the "heroQuality" field.</summary>
    public const int HeroQualityFieldNumber = 3;
    private int heroQuality_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HeroQuality {
      get { return heroQuality_; }
      set {
        heroQuality_ = value;
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 4;
    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "skillInfos" field.</summary>
    public const int SkillInfosFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Protobuf.HeroSkillInfoProto> _repeated_skillInfos_codec
        = pb::FieldCodec.ForMessage(42, global::Protobuf.HeroSkillInfoProto.Parser);
    private readonly pbc::RepeatedField<global::Protobuf.HeroSkillInfoProto> skillInfos_ = new pbc::RepeatedField<global::Protobuf.HeroSkillInfoProto>();
    /// <summary>
    ///英雄技能
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protobuf.HeroSkillInfoProto> SkillInfos {
      get { return skillInfos_; }
    }

    /// <summary>Field number for the "heroUuid" field.</summary>
    public const int HeroUuidFieldNumber = 6;
    private long heroUuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long HeroUuid {
      get { return heroUuid_; }
      set {
        heroUuid_ = value;
      }
    }

    /// <summary>Field number for the "maxLevel" field.</summary>
    public const int MaxLevelFieldNumber = 7;
    private int maxLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxLevel {
      get { return maxLevel_; }
      set {
        maxLevel_ = value;
      }
    }

    /// <summary>Field number for the "rankLv" field.</summary>
    public const int RankLvFieldNumber = 8;
    private int rankLv_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RankLv {
      get { return rankLv_; }
      set {
        rankLv_ = value;
      }
    }

    /// <summary>Field number for the "stage" field.</summary>
    public const int StageFieldNumber = 9;
    private int stage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Stage {
      get { return stage_; }
      set {
        stage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeroInfoProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeroInfoProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HeroId != other.HeroId) return false;
      if (HeroLevel != other.HeroLevel) return false;
      if (HeroQuality != other.HeroQuality) return false;
      if (Index != other.Index) return false;
      if(!skillInfos_.Equals(other.skillInfos_)) return false;
      if (HeroUuid != other.HeroUuid) return false;
      if (MaxLevel != other.MaxLevel) return false;
      if (RankLv != other.RankLv) return false;
      if (Stage != other.Stage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HeroId != 0) hash ^= HeroId.GetHashCode();
      if (HeroLevel != 0) hash ^= HeroLevel.GetHashCode();
      if (HeroQuality != 0) hash ^= HeroQuality.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      hash ^= skillInfos_.GetHashCode();
      if (HeroUuid != 0L) hash ^= HeroUuid.GetHashCode();
      if (MaxLevel != 0) hash ^= MaxLevel.GetHashCode();
      if (RankLv != 0) hash ^= RankLv.GetHashCode();
      if (Stage != 0) hash ^= Stage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HeroId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(HeroId);
      }
      if (HeroLevel != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(HeroLevel);
      }
      if (HeroQuality != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(HeroQuality);
      }
      if (Index != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Index);
      }
      skillInfos_.WriteTo(output, _repeated_skillInfos_codec);
      if (HeroUuid != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(HeroUuid);
      }
      if (MaxLevel != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(MaxLevel);
      }
      if (RankLv != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(RankLv);
      }
      if (Stage != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Stage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HeroId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HeroId);
      }
      if (HeroLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HeroLevel);
      }
      if (HeroQuality != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HeroQuality);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      size += skillInfos_.CalculateSize(_repeated_skillInfos_codec);
      if (HeroUuid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HeroUuid);
      }
      if (MaxLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxLevel);
      }
      if (RankLv != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RankLv);
      }
      if (Stage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Stage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeroInfoProto other) {
      if (other == null) {
        return;
      }
      if (other.HeroId != 0) {
        HeroId = other.HeroId;
      }
      if (other.HeroLevel != 0) {
        HeroLevel = other.HeroLevel;
      }
      if (other.HeroQuality != 0) {
        HeroQuality = other.HeroQuality;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      skillInfos_.Add(other.skillInfos_);
      if (other.HeroUuid != 0L) {
        HeroUuid = other.HeroUuid;
      }
      if (other.MaxLevel != 0) {
        MaxLevel = other.MaxLevel;
      }
      if (other.RankLv != 0) {
        RankLv = other.RankLv;
      }
      if (other.Stage != 0) {
        Stage = other.Stage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            HeroId = input.ReadInt32();
            break;
          }
          case 16: {
            HeroLevel = input.ReadInt32();
            break;
          }
          case 24: {
            HeroQuality = input.ReadInt32();
            break;
          }
          case 32: {
            Index = input.ReadInt32();
            break;
          }
          case 42: {
            skillInfos_.AddEntriesFrom(input, _repeated_skillInfos_codec);
            break;
          }
          case 48: {
            HeroUuid = input.ReadInt64();
            break;
          }
          case 56: {
            MaxLevel = input.ReadInt32();
            break;
          }
          case 64: {
            RankLv = input.ReadInt32();
            break;
          }
          case 72: {
            Stage = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EquipInfoProto : pb::IMessage<EquipInfoProto> {
    private static readonly pb::MessageParser<EquipInfoProto> _parser = new pb::MessageParser<EquipInfoProto>(() => new EquipInfoProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EquipInfoProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.ArmyUnitInfoReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipInfoProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipInfoProto(EquipInfoProto other) : this() {
      equipId_ = other.equipId_;
      lv_ = other.lv_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipInfoProto Clone() {
      return new EquipInfoProto(this);
    }

    /// <summary>Field number for the "equipId" field.</summary>
    public const int EquipIdFieldNumber = 1;
    private int equipId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EquipId {
      get { return equipId_; }
      set {
        equipId_ = value;
      }
    }

    /// <summary>Field number for the "lv" field.</summary>
    public const int LvFieldNumber = 2;
    private int lv_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Lv {
      get { return lv_; }
      set {
        lv_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EquipInfoProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EquipInfoProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EquipId != other.EquipId) return false;
      if (Lv != other.Lv) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EquipId != 0) hash ^= EquipId.GetHashCode();
      if (Lv != 0) hash ^= Lv.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EquipId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(EquipId);
      }
      if (Lv != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Lv);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EquipId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EquipId);
      }
      if (Lv != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Lv);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EquipInfoProto other) {
      if (other == null) {
        return;
      }
      if (other.EquipId != 0) {
        EquipId = other.EquipId;
      }
      if (other.Lv != 0) {
        Lv = other.Lv;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EquipId = input.ReadInt32();
            break;
          }
          case 16: {
            Lv = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SuitInfoProto : pb::IMessage<SuitInfoProto> {
    private static readonly pb::MessageParser<SuitInfoProto> _parser = new pb::MessageParser<SuitInfoProto>(() => new SuitInfoProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SuitInfoProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.ArmyUnitInfoReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuitInfoProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuitInfoProto(SuitInfoProto other) : this() {
      carIndex_ = other.carIndex_;
      suitType_ = other.suitType_;
      equipInfos_ = other.equipInfos_.Clone();
      skillInfos_ = other.skillInfos_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuitInfoProto Clone() {
      return new SuitInfoProto(this);
    }

    /// <summary>Field number for the "carIndex" field.</summary>
    public const int CarIndexFieldNumber = 1;
    private int carIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CarIndex {
      get { return carIndex_; }
      set {
        carIndex_ = value;
      }
    }

    /// <summary>Field number for the "suitType" field.</summary>
    public const int SuitTypeFieldNumber = 2;
    private int suitType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SuitType {
      get { return suitType_; }
      set {
        suitType_ = value;
      }
    }

    /// <summary>Field number for the "equipInfos" field.</summary>
    public const int EquipInfosFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Protobuf.EquipInfoProto> _repeated_equipInfos_codec
        = pb::FieldCodec.ForMessage(26, global::Protobuf.EquipInfoProto.Parser);
    private readonly pbc::RepeatedField<global::Protobuf.EquipInfoProto> equipInfos_ = new pbc::RepeatedField<global::Protobuf.EquipInfoProto>();
    /// <summary>
    ///装备
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protobuf.EquipInfoProto> EquipInfos {
      get { return equipInfos_; }
    }

    /// <summary>Field number for the "skillInfos" field.</summary>
    public const int SkillInfosFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Protobuf.HeroSkillInfoProto> _repeated_skillInfos_codec
        = pb::FieldCodec.ForMessage(34, global::Protobuf.HeroSkillInfoProto.Parser);
    private readonly pbc::RepeatedField<global::Protobuf.HeroSkillInfoProto> skillInfos_ = new pbc::RepeatedField<global::Protobuf.HeroSkillInfoProto>();
    /// <summary>
    ///装备技能
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protobuf.HeroSkillInfoProto> SkillInfos {
      get { return skillInfos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SuitInfoProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SuitInfoProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CarIndex != other.CarIndex) return false;
      if (SuitType != other.SuitType) return false;
      if(!equipInfos_.Equals(other.equipInfos_)) return false;
      if(!skillInfos_.Equals(other.skillInfos_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CarIndex != 0) hash ^= CarIndex.GetHashCode();
      if (SuitType != 0) hash ^= SuitType.GetHashCode();
      hash ^= equipInfos_.GetHashCode();
      hash ^= skillInfos_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CarIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CarIndex);
      }
      if (SuitType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SuitType);
      }
      equipInfos_.WriteTo(output, _repeated_equipInfos_codec);
      skillInfos_.WriteTo(output, _repeated_skillInfos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CarIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CarIndex);
      }
      if (SuitType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SuitType);
      }
      size += equipInfos_.CalculateSize(_repeated_equipInfos_codec);
      size += skillInfos_.CalculateSize(_repeated_skillInfos_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SuitInfoProto other) {
      if (other == null) {
        return;
      }
      if (other.CarIndex != 0) {
        CarIndex = other.CarIndex;
      }
      if (other.SuitType != 0) {
        SuitType = other.SuitType;
      }
      equipInfos_.Add(other.equipInfos_);
      skillInfos_.Add(other.skillInfos_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CarIndex = input.ReadInt32();
            break;
          }
          case 16: {
            SuitType = input.ReadInt32();
            break;
          }
          case 26: {
            equipInfos_.AddEntriesFrom(input, _repeated_equipInfos_codec);
            break;
          }
          case 34: {
            skillInfos_.AddEntriesFrom(input, _repeated_skillInfos_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ArmyUnitInfo : pb::IMessage<ArmyUnitInfo> {
    private static readonly pb::MessageParser<ArmyUnitInfo> _parser = new pb::MessageParser<ArmyUnitInfo>(() => new ArmyUnitInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArmyUnitInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.ArmyUnitInfoReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmyUnitInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmyUnitInfo(ArmyUnitInfo other) : this() {
      soldiers_ = other.soldiers_.Clone();
      heroes_ = other.heroes_.Clone();
      name_ = other.name_;
      alAbbr_ = other.alAbbr_;
      pic_ = other.pic_;
      picVer_ = other.picVer_;
      headFrame_ = other.headFrame_;
      careerType_ = other.careerType_;
      careerLv_ = other.careerLv_;
      unitBuffs_ = other.unitBuffs_.Clone();
      headSkinId_ = other.headSkinId_;
      unitEffects_ = other.unitEffects_.Clone();
      suits_ = other.suits_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmyUnitInfo Clone() {
      return new ArmyUnitInfo(this);
    }

    /// <summary>Field number for the "soldiers" field.</summary>
    public const int SoldiersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protobuf.SoldierProto> _repeated_soldiers_codec
        = pb::FieldCodec.ForMessage(10, global::Protobuf.SoldierProto.Parser);
    private readonly pbc::RepeatedField<global::Protobuf.SoldierProto> soldiers_ = new pbc::RepeatedField<global::Protobuf.SoldierProto>();
    /// <summary>
    /// 士兵
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protobuf.SoldierProto> Soldiers {
      get { return soldiers_; }
    }

    /// <summary>Field number for the "heroes" field.</summary>
    public const int HeroesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Protobuf.HeroInfoProto> _repeated_heroes_codec
        = pb::FieldCodec.ForMessage(18, global::Protobuf.HeroInfoProto.Parser);
    private readonly pbc::RepeatedField<global::Protobuf.HeroInfoProto> heroes_ = new pbc::RepeatedField<global::Protobuf.HeroInfoProto>();
    /// <summary>
    /// 英雄
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protobuf.HeroInfoProto> Heroes {
      get { return heroes_; }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "alAbbr" field.</summary>
    public const int AlAbbrFieldNumber = 4;
    private string alAbbr_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AlAbbr {
      get { return alAbbr_; }
      set {
        alAbbr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pic" field.</summary>
    public const int PicFieldNumber = 5;
    private string pic_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pic {
      get { return pic_; }
      set {
        pic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "picVer" field.</summary>
    public const int PicVerFieldNumber = 6;
    private int picVer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PicVer {
      get { return picVer_; }
      set {
        picVer_ = value;
      }
    }

    /// <summary>Field number for the "headFrame" field.</summary>
    public const int HeadFrameFieldNumber = 7;
    private int headFrame_;
    /// <summary>
    ///头像框 0无 1有
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HeadFrame {
      get { return headFrame_; }
      set {
        headFrame_ = value;
      }
    }

    /// <summary>Field number for the "careerType" field.</summary>
    public const int CareerTypeFieldNumber = 8;
    private int careerType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CareerType {
      get { return careerType_; }
      set {
        careerType_ = value;
      }
    }

    /// <summary>Field number for the "careerLv" field.</summary>
    public const int CareerLvFieldNumber = 9;
    private int careerLv_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CareerLv {
      get { return careerLv_; }
      set {
        careerLv_ = value;
      }
    }

    /// <summary>Field number for the "unitBuffs" field.</summary>
    public const int UnitBuffsFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Protobuf.ArmyUnitBuff> _repeated_unitBuffs_codec
        = pb::FieldCodec.ForMessage(82, global::Protobuf.ArmyUnitBuff.Parser);
    private readonly pbc::RepeatedField<global::Protobuf.ArmyUnitBuff> unitBuffs_ = new pbc::RepeatedField<global::Protobuf.ArmyUnitBuff>();
    /// <summary>
    /// buff
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protobuf.ArmyUnitBuff> UnitBuffs {
      get { return unitBuffs_; }
    }

    /// <summary>Field number for the "headSkinId" field.</summary>
    public const int HeadSkinIdFieldNumber = 11;
    private int headSkinId_;
    /// <summary>
    ///头像框皮肤id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HeadSkinId {
      get { return headSkinId_; }
      set {
        headSkinId_ = value;
      }
    }

    /// <summary>Field number for the "unitEffects" field.</summary>
    public const int UnitEffectsFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Protobuf.UnitEffect> _repeated_unitEffects_codec
        = pb::FieldCodec.ForMessage(98, global::Protobuf.UnitEffect.Parser);
    private readonly pbc::RepeatedField<global::Protobuf.UnitEffect> unitEffects_ = new pbc::RepeatedField<global::Protobuf.UnitEffect>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protobuf.UnitEffect> UnitEffects {
      get { return unitEffects_; }
    }

    /// <summary>Field number for the "suits" field.</summary>
    public const int SuitsFieldNumber = 13;
    private static readonly pb::FieldCodec<global::Protobuf.SuitInfoProto> _repeated_suits_codec
        = pb::FieldCodec.ForMessage(106, global::Protobuf.SuitInfoProto.Parser);
    private readonly pbc::RepeatedField<global::Protobuf.SuitInfoProto> suits_ = new pbc::RepeatedField<global::Protobuf.SuitInfoProto>();
    /// <summary>
    /// 套装
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protobuf.SuitInfoProto> Suits {
      get { return suits_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArmyUnitInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArmyUnitInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!soldiers_.Equals(other.soldiers_)) return false;
      if(!heroes_.Equals(other.heroes_)) return false;
      if (Name != other.Name) return false;
      if (AlAbbr != other.AlAbbr) return false;
      if (Pic != other.Pic) return false;
      if (PicVer != other.PicVer) return false;
      if (HeadFrame != other.HeadFrame) return false;
      if (CareerType != other.CareerType) return false;
      if (CareerLv != other.CareerLv) return false;
      if(!unitBuffs_.Equals(other.unitBuffs_)) return false;
      if (HeadSkinId != other.HeadSkinId) return false;
      if(!unitEffects_.Equals(other.unitEffects_)) return false;
      if(!suits_.Equals(other.suits_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= soldiers_.GetHashCode();
      hash ^= heroes_.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (AlAbbr.Length != 0) hash ^= AlAbbr.GetHashCode();
      if (Pic.Length != 0) hash ^= Pic.GetHashCode();
      if (PicVer != 0) hash ^= PicVer.GetHashCode();
      if (HeadFrame != 0) hash ^= HeadFrame.GetHashCode();
      if (CareerType != 0) hash ^= CareerType.GetHashCode();
      if (CareerLv != 0) hash ^= CareerLv.GetHashCode();
      hash ^= unitBuffs_.GetHashCode();
      if (HeadSkinId != 0) hash ^= HeadSkinId.GetHashCode();
      hash ^= unitEffects_.GetHashCode();
      hash ^= suits_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      soldiers_.WriteTo(output, _repeated_soldiers_codec);
      heroes_.WriteTo(output, _repeated_heroes_codec);
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (AlAbbr.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AlAbbr);
      }
      if (Pic.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Pic);
      }
      if (PicVer != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(PicVer);
      }
      if (HeadFrame != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(HeadFrame);
      }
      if (CareerType != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(CareerType);
      }
      if (CareerLv != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(CareerLv);
      }
      unitBuffs_.WriteTo(output, _repeated_unitBuffs_codec);
      if (HeadSkinId != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(HeadSkinId);
      }
      unitEffects_.WriteTo(output, _repeated_unitEffects_codec);
      suits_.WriteTo(output, _repeated_suits_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += soldiers_.CalculateSize(_repeated_soldiers_codec);
      size += heroes_.CalculateSize(_repeated_heroes_codec);
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (AlAbbr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AlAbbr);
      }
      if (Pic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pic);
      }
      if (PicVer != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PicVer);
      }
      if (HeadFrame != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HeadFrame);
      }
      if (CareerType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CareerType);
      }
      if (CareerLv != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CareerLv);
      }
      size += unitBuffs_.CalculateSize(_repeated_unitBuffs_codec);
      if (HeadSkinId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HeadSkinId);
      }
      size += unitEffects_.CalculateSize(_repeated_unitEffects_codec);
      size += suits_.CalculateSize(_repeated_suits_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArmyUnitInfo other) {
      if (other == null) {
        return;
      }
      soldiers_.Add(other.soldiers_);
      heroes_.Add(other.heroes_);
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.AlAbbr.Length != 0) {
        AlAbbr = other.AlAbbr;
      }
      if (other.Pic.Length != 0) {
        Pic = other.Pic;
      }
      if (other.PicVer != 0) {
        PicVer = other.PicVer;
      }
      if (other.HeadFrame != 0) {
        HeadFrame = other.HeadFrame;
      }
      if (other.CareerType != 0) {
        CareerType = other.CareerType;
      }
      if (other.CareerLv != 0) {
        CareerLv = other.CareerLv;
      }
      unitBuffs_.Add(other.unitBuffs_);
      if (other.HeadSkinId != 0) {
        HeadSkinId = other.HeadSkinId;
      }
      unitEffects_.Add(other.unitEffects_);
      suits_.Add(other.suits_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            soldiers_.AddEntriesFrom(input, _repeated_soldiers_codec);
            break;
          }
          case 18: {
            heroes_.AddEntriesFrom(input, _repeated_heroes_codec);
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            AlAbbr = input.ReadString();
            break;
          }
          case 42: {
            Pic = input.ReadString();
            break;
          }
          case 48: {
            PicVer = input.ReadInt32();
            break;
          }
          case 56: {
            HeadFrame = input.ReadInt32();
            break;
          }
          case 64: {
            CareerType = input.ReadInt32();
            break;
          }
          case 72: {
            CareerLv = input.ReadInt32();
            break;
          }
          case 82: {
            unitBuffs_.AddEntriesFrom(input, _repeated_unitBuffs_codec);
            break;
          }
          case 88: {
            HeadSkinId = input.ReadInt32();
            break;
          }
          case 98: {
            unitEffects_.AddEntriesFrom(input, _repeated_unitEffects_codec);
            break;
          }
          case 106: {
            suits_.AddEntriesFrom(input, _repeated_suits_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ArmyUnitEffectInfoProto : pb::IMessage<ArmyUnitEffectInfoProto> {
    private static readonly pb::MessageParser<ArmyUnitEffectInfoProto> _parser = new pb::MessageParser<ArmyUnitEffectInfoProto>(() => new ArmyUnitEffectInfoProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArmyUnitEffectInfoProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.ArmyUnitInfoReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmyUnitEffectInfoProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmyUnitEffectInfoProto(ArmyUnitEffectInfoProto other) : this() {
      playerEffect_ = other.playerEffect_.Clone();
      formationEffect_ = other.formationEffect_.Clone();
      unitEffectReasons_ = other.unitEffectReasons_.Clone();
      unitBuffs_ = other.unitBuffs_.Clone();
      formationBuffs_ = other.formationBuffs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmyUnitEffectInfoProto Clone() {
      return new ArmyUnitEffectInfoProto(this);
    }

    /// <summary>Field number for the "playerEffect" field.</summary>
    public const int PlayerEffectFieldNumber = 1;
    private static readonly pb::FieldCodec<float> _repeated_playerEffect_codec
        = pb::FieldCodec.ForFloat(10);
    private readonly pbc::RepeatedField<float> playerEffect_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> PlayerEffect {
      get { return playerEffect_; }
    }

    /// <summary>Field number for the "formationEffect" field.</summary>
    public const int FormationEffectFieldNumber = 2;
    private static readonly pb::FieldCodec<float> _repeated_formationEffect_codec
        = pb::FieldCodec.ForFloat(18);
    private readonly pbc::RepeatedField<float> formationEffect_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> FormationEffect {
      get { return formationEffect_; }
    }

    /// <summary>Field number for the "unitEffectReasons" field.</summary>
    public const int UnitEffectReasonsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Protobuf.UnitEffectReason> _repeated_unitEffectReasons_codec
        = pb::FieldCodec.ForMessage(26, global::Protobuf.UnitEffectReason.Parser);
    private readonly pbc::RepeatedField<global::Protobuf.UnitEffectReason> unitEffectReasons_ = new pbc::RepeatedField<global::Protobuf.UnitEffectReason>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protobuf.UnitEffectReason> UnitEffectReasons {
      get { return unitEffectReasons_; }
    }

    /// <summary>Field number for the "unitBuffs" field.</summary>
    public const int UnitBuffsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Protobuf.ArmyUnitBuff> _repeated_unitBuffs_codec
        = pb::FieldCodec.ForMessage(34, global::Protobuf.ArmyUnitBuff.Parser);
    private readonly pbc::RepeatedField<global::Protobuf.ArmyUnitBuff> unitBuffs_ = new pbc::RepeatedField<global::Protobuf.ArmyUnitBuff>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protobuf.ArmyUnitBuff> UnitBuffs {
      get { return unitBuffs_; }
    }

    /// <summary>Field number for the "formationBuffs" field.</summary>
    public const int FormationBuffsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Protobuf.ArmyUnitFormationBuff> _repeated_formationBuffs_codec
        = pb::FieldCodec.ForMessage(42, global::Protobuf.ArmyUnitFormationBuff.Parser);
    private readonly pbc::RepeatedField<global::Protobuf.ArmyUnitFormationBuff> formationBuffs_ = new pbc::RepeatedField<global::Protobuf.ArmyUnitFormationBuff>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protobuf.ArmyUnitFormationBuff> FormationBuffs {
      get { return formationBuffs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArmyUnitEffectInfoProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArmyUnitEffectInfoProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!playerEffect_.Equals(other.playerEffect_)) return false;
      if(!formationEffect_.Equals(other.formationEffect_)) return false;
      if(!unitEffectReasons_.Equals(other.unitEffectReasons_)) return false;
      if(!unitBuffs_.Equals(other.unitBuffs_)) return false;
      if(!formationBuffs_.Equals(other.formationBuffs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= playerEffect_.GetHashCode();
      hash ^= formationEffect_.GetHashCode();
      hash ^= unitEffectReasons_.GetHashCode();
      hash ^= unitBuffs_.GetHashCode();
      hash ^= formationBuffs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      playerEffect_.WriteTo(output, _repeated_playerEffect_codec);
      formationEffect_.WriteTo(output, _repeated_formationEffect_codec);
      unitEffectReasons_.WriteTo(output, _repeated_unitEffectReasons_codec);
      unitBuffs_.WriteTo(output, _repeated_unitBuffs_codec);
      formationBuffs_.WriteTo(output, _repeated_formationBuffs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += playerEffect_.CalculateSize(_repeated_playerEffect_codec);
      size += formationEffect_.CalculateSize(_repeated_formationEffect_codec);
      size += unitEffectReasons_.CalculateSize(_repeated_unitEffectReasons_codec);
      size += unitBuffs_.CalculateSize(_repeated_unitBuffs_codec);
      size += formationBuffs_.CalculateSize(_repeated_formationBuffs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArmyUnitEffectInfoProto other) {
      if (other == null) {
        return;
      }
      playerEffect_.Add(other.playerEffect_);
      formationEffect_.Add(other.formationEffect_);
      unitEffectReasons_.Add(other.unitEffectReasons_);
      unitBuffs_.Add(other.unitBuffs_);
      formationBuffs_.Add(other.formationBuffs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 13: {
            playerEffect_.AddEntriesFrom(input, _repeated_playerEffect_codec);
            break;
          }
          case 18:
          case 21: {
            formationEffect_.AddEntriesFrom(input, _repeated_formationEffect_codec);
            break;
          }
          case 26: {
            unitEffectReasons_.AddEntriesFrom(input, _repeated_unitEffectReasons_codec);
            break;
          }
          case 34: {
            unitBuffs_.AddEntriesFrom(input, _repeated_unitBuffs_codec);
            break;
          }
          case 42: {
            formationBuffs_.AddEntriesFrom(input, _repeated_formationBuffs_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnitEffectReason : pb::IMessage<UnitEffectReason> {
    private static readonly pb::MessageParser<UnitEffectReason> _parser = new pb::MessageParser<UnitEffectReason>(() => new UnitEffectReason());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnitEffectReason> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.ArmyUnitInfoReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitEffectReason() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitEffectReason(UnitEffectReason other) : this() {
      effectId_ = other.effectId_;
      reasons_ = other.reasons_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitEffectReason Clone() {
      return new UnitEffectReason(this);
    }

    /// <summary>Field number for the "effectId" field.</summary>
    public const int EffectIdFieldNumber = 1;
    private int effectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EffectId {
      get { return effectId_; }
      set {
        effectId_ = value;
      }
    }

    /// <summary>Field number for the "reasons" field.</summary>
    public const int ReasonsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Protobuf.EffectReason> _repeated_reasons_codec
        = pb::FieldCodec.ForMessage(18, global::Protobuf.EffectReason.Parser);
    private readonly pbc::RepeatedField<global::Protobuf.EffectReason> reasons_ = new pbc::RepeatedField<global::Protobuf.EffectReason>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protobuf.EffectReason> Reasons {
      get { return reasons_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnitEffectReason);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnitEffectReason other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EffectId != other.EffectId) return false;
      if(!reasons_.Equals(other.reasons_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EffectId != 0) hash ^= EffectId.GetHashCode();
      hash ^= reasons_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EffectId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(EffectId);
      }
      reasons_.WriteTo(output, _repeated_reasons_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EffectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EffectId);
      }
      size += reasons_.CalculateSize(_repeated_reasons_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnitEffectReason other) {
      if (other == null) {
        return;
      }
      if (other.EffectId != 0) {
        EffectId = other.EffectId;
      }
      reasons_.Add(other.reasons_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EffectId = input.ReadInt32();
            break;
          }
          case 18: {
            reasons_.AddEntriesFrom(input, _repeated_reasons_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnitEffect : pb::IMessage<UnitEffect> {
    private static readonly pb::MessageParser<UnitEffect> _parser = new pb::MessageParser<UnitEffect>(() => new UnitEffect());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnitEffect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.ArmyUnitInfoReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitEffect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitEffect(UnitEffect other) : this() {
      effectId_ = other.effectId_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitEffect Clone() {
      return new UnitEffect(this);
    }

    /// <summary>Field number for the "effectId" field.</summary>
    public const int EffectIdFieldNumber = 1;
    private int effectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EffectId {
      get { return effectId_; }
      set {
        effectId_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private float value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnitEffect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnitEffect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EffectId != other.EffectId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Value, other.Value)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EffectId != 0) hash ^= EffectId.GetHashCode();
      if (Value != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Value);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EffectId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(EffectId);
      }
      if (Value != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EffectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EffectId);
      }
      if (Value != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnitEffect other) {
      if (other == null) {
        return;
      }
      if (other.EffectId != 0) {
        EffectId = other.EffectId;
      }
      if (other.Value != 0F) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EffectId = input.ReadInt32();
            break;
          }
          case 21: {
            Value = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ArmyUnitBuff : pb::IMessage<ArmyUnitBuff> {
    private static readonly pb::MessageParser<ArmyUnitBuff> _parser = new pb::MessageParser<ArmyUnitBuff>(() => new ArmyUnitBuff());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArmyUnitBuff> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.ArmyUnitInfoReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmyUnitBuff() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmyUnitBuff(ArmyUnitBuff other) : this() {
      buffId_ = other.buffId_;
      effectId_ = other.effectId_.Clone();
      value_ = other.value_.Clone();
      expireTime_ = other.expireTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmyUnitBuff Clone() {
      return new ArmyUnitBuff(this);
    }

    /// <summary>Field number for the "buffId" field.</summary>
    public const int BuffIdFieldNumber = 1;
    private int buffId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuffId {
      get { return buffId_; }
      set {
        buffId_ = value;
      }
    }

    /// <summary>Field number for the "effectId" field.</summary>
    public const int EffectIdFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_effectId_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> effectId_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> EffectId {
      get { return effectId_; }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 3;
    private static readonly pb::FieldCodec<float> _repeated_value_codec
        = pb::FieldCodec.ForFloat(26);
    private readonly pbc::RepeatedField<float> value_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> Value {
      get { return value_; }
    }

    /// <summary>Field number for the "expireTime" field.</summary>
    public const int ExpireTimeFieldNumber = 4;
    private int expireTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExpireTime {
      get { return expireTime_; }
      set {
        expireTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArmyUnitBuff);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArmyUnitBuff other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BuffId != other.BuffId) return false;
      if(!effectId_.Equals(other.effectId_)) return false;
      if(!value_.Equals(other.value_)) return false;
      if (ExpireTime != other.ExpireTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BuffId != 0) hash ^= BuffId.GetHashCode();
      hash ^= effectId_.GetHashCode();
      hash ^= value_.GetHashCode();
      if (ExpireTime != 0) hash ^= ExpireTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BuffId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BuffId);
      }
      effectId_.WriteTo(output, _repeated_effectId_codec);
      value_.WriteTo(output, _repeated_value_codec);
      if (ExpireTime != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ExpireTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BuffId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuffId);
      }
      size += effectId_.CalculateSize(_repeated_effectId_codec);
      size += value_.CalculateSize(_repeated_value_codec);
      if (ExpireTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExpireTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArmyUnitBuff other) {
      if (other == null) {
        return;
      }
      if (other.BuffId != 0) {
        BuffId = other.BuffId;
      }
      effectId_.Add(other.effectId_);
      value_.Add(other.value_);
      if (other.ExpireTime != 0) {
        ExpireTime = other.ExpireTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BuffId = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            effectId_.AddEntriesFrom(input, _repeated_effectId_codec);
            break;
          }
          case 26:
          case 29: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
          case 32: {
            ExpireTime = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ArmyUnitFormationBuff : pb::IMessage<ArmyUnitFormationBuff> {
    private static readonly pb::MessageParser<ArmyUnitFormationBuff> _parser = new pb::MessageParser<ArmyUnitFormationBuff>(() => new ArmyUnitFormationBuff());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArmyUnitFormationBuff> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.ArmyUnitInfoReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmyUnitFormationBuff() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmyUnitFormationBuff(ArmyUnitFormationBuff other) : this() {
      buffId_ = other.buffId_;
      effectId_ = other.effectId_.Clone();
      value_ = other.value_.Clone();
      expireTime_ = other.expireTime_;
      timeType_ = other.timeType_;
      type2_ = other.type2_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmyUnitFormationBuff Clone() {
      return new ArmyUnitFormationBuff(this);
    }

    /// <summary>Field number for the "buffId" field.</summary>
    public const int BuffIdFieldNumber = 1;
    private int buffId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuffId {
      get { return buffId_; }
      set {
        buffId_ = value;
      }
    }

    /// <summary>Field number for the "effectId" field.</summary>
    public const int EffectIdFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_effectId_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> effectId_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> EffectId {
      get { return effectId_; }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 3;
    private static readonly pb::FieldCodec<float> _repeated_value_codec
        = pb::FieldCodec.ForFloat(26);
    private readonly pbc::RepeatedField<float> value_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> Value {
      get { return value_; }
    }

    /// <summary>Field number for the "expireTime" field.</summary>
    public const int ExpireTimeFieldNumber = 4;
    private int expireTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExpireTime {
      get { return expireTime_; }
      set {
        expireTime_ = value;
      }
    }

    /// <summary>Field number for the "timeType" field.</summary>
    public const int TimeTypeFieldNumber = 5;
    private int timeType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TimeType {
      get { return timeType_; }
      set {
        timeType_ = value;
      }
    }

    /// <summary>Field number for the "type2" field.</summary>
    public const int Type2FieldNumber = 6;
    private int type2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type2 {
      get { return type2_; }
      set {
        type2_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArmyUnitFormationBuff);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArmyUnitFormationBuff other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BuffId != other.BuffId) return false;
      if(!effectId_.Equals(other.effectId_)) return false;
      if(!value_.Equals(other.value_)) return false;
      if (ExpireTime != other.ExpireTime) return false;
      if (TimeType != other.TimeType) return false;
      if (Type2 != other.Type2) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BuffId != 0) hash ^= BuffId.GetHashCode();
      hash ^= effectId_.GetHashCode();
      hash ^= value_.GetHashCode();
      if (ExpireTime != 0) hash ^= ExpireTime.GetHashCode();
      if (TimeType != 0) hash ^= TimeType.GetHashCode();
      if (Type2 != 0) hash ^= Type2.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BuffId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BuffId);
      }
      effectId_.WriteTo(output, _repeated_effectId_codec);
      value_.WriteTo(output, _repeated_value_codec);
      if (ExpireTime != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ExpireTime);
      }
      if (TimeType != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TimeType);
      }
      if (Type2 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Type2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BuffId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuffId);
      }
      size += effectId_.CalculateSize(_repeated_effectId_codec);
      size += value_.CalculateSize(_repeated_value_codec);
      if (ExpireTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExpireTime);
      }
      if (TimeType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimeType);
      }
      if (Type2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArmyUnitFormationBuff other) {
      if (other == null) {
        return;
      }
      if (other.BuffId != 0) {
        BuffId = other.BuffId;
      }
      effectId_.Add(other.effectId_);
      value_.Add(other.value_);
      if (other.ExpireTime != 0) {
        ExpireTime = other.ExpireTime;
      }
      if (other.TimeType != 0) {
        TimeType = other.TimeType;
      }
      if (other.Type2 != 0) {
        Type2 = other.Type2;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BuffId = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            effectId_.AddEntriesFrom(input, _repeated_effectId_codec);
            break;
          }
          case 26:
          case 29: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
          case 32: {
            ExpireTime = input.ReadInt32();
            break;
          }
          case 40: {
            TimeType = input.ReadInt32();
            break;
          }
          case 48: {
            Type2 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EffectReason : pb::IMessage<EffectReason> {
    private static readonly pb::MessageParser<EffectReason> _parser = new pb::MessageParser<EffectReason>(() => new EffectReason());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EffectReason> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.ArmyUnitInfoReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EffectReason() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EffectReason(EffectReason other) : this() {
      reason_ = other.reason_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EffectReason Clone() {
      return new EffectReason(this);
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 1;
    private int reason_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Reason {
      get { return reason_; }
      set {
        reason_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private float value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EffectReason);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EffectReason other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Reason != other.Reason) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Value, other.Value)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Reason != 0) hash ^= Reason.GetHashCode();
      if (Value != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Value);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Reason != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Reason);
      }
      if (Value != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Reason != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Reason);
      }
      if (Value != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EffectReason other) {
      if (other == null) {
        return;
      }
      if (other.Reason != 0) {
        Reason = other.Reason;
      }
      if (other.Value != 0F) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Reason = input.ReadInt32();
            break;
          }
          case 21: {
            Value = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ArmyDBUnitInfo : pb::IMessage<ArmyDBUnitInfo> {
    private static readonly pb::MessageParser<ArmyDBUnitInfo> _parser = new pb::MessageParser<ArmyDBUnitInfo>(() => new ArmyDBUnitInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArmyDBUnitInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.ArmyUnitInfoReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmyDBUnitInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmyDBUnitInfo(ArmyDBUnitInfo other) : this() {
      uid_ = other.uid_;
      soldiers_ = other.soldiers_.Clone();
      heroes_ = other.heroes_.Clone();
      effectInfo_ = other.effectInfo_ != null ? other.effectInfo_.Clone() : null;
      formationIndex_ = other.formationIndex_;
      suits_ = other.suits_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArmyDBUnitInfo Clone() {
      return new ArmyDBUnitInfo(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private string uid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uid {
      get { return uid_; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "soldiers" field.</summary>
    public const int SoldiersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Protobuf.SoldierProto> _repeated_soldiers_codec
        = pb::FieldCodec.ForMessage(18, global::Protobuf.SoldierProto.Parser);
    private readonly pbc::RepeatedField<global::Protobuf.SoldierProto> soldiers_ = new pbc::RepeatedField<global::Protobuf.SoldierProto>();
    /// <summary>
    /// 士兵
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protobuf.SoldierProto> Soldiers {
      get { return soldiers_; }
    }

    /// <summary>Field number for the "heroes" field.</summary>
    public const int HeroesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Protobuf.HeroInfoProto> _repeated_heroes_codec
        = pb::FieldCodec.ForMessage(26, global::Protobuf.HeroInfoProto.Parser);
    private readonly pbc::RepeatedField<global::Protobuf.HeroInfoProto> heroes_ = new pbc::RepeatedField<global::Protobuf.HeroInfoProto>();
    /// <summary>
    /// 英雄
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protobuf.HeroInfoProto> Heroes {
      get { return heroes_; }
    }

    /// <summary>Field number for the "effectInfo" field.</summary>
    public const int EffectInfoFieldNumber = 4;
    private global::Protobuf.ArmyUnitEffectInfoProto effectInfo_;
    /// <summary>
    /// 作用号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.ArmyUnitEffectInfoProto EffectInfo {
      get { return effectInfo_; }
      set {
        effectInfo_ = value;
      }
    }

    /// <summary>Field number for the "formationIndex" field.</summary>
    public const int FormationIndexFieldNumber = 5;
    private int formationIndex_;
    /// <summary>
    ///编队编号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FormationIndex {
      get { return formationIndex_; }
      set {
        formationIndex_ = value;
      }
    }

    /// <summary>Field number for the "suits" field.</summary>
    public const int SuitsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Protobuf.SuitInfoProto> _repeated_suits_codec
        = pb::FieldCodec.ForMessage(50, global::Protobuf.SuitInfoProto.Parser);
    private readonly pbc::RepeatedField<global::Protobuf.SuitInfoProto> suits_ = new pbc::RepeatedField<global::Protobuf.SuitInfoProto>();
    /// <summary>
    /// 套装
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protobuf.SuitInfoProto> Suits {
      get { return suits_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArmyDBUnitInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArmyDBUnitInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if(!soldiers_.Equals(other.soldiers_)) return false;
      if(!heroes_.Equals(other.heroes_)) return false;
      if (!object.Equals(EffectInfo, other.EffectInfo)) return false;
      if (FormationIndex != other.FormationIndex) return false;
      if(!suits_.Equals(other.suits_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uid.Length != 0) hash ^= Uid.GetHashCode();
      hash ^= soldiers_.GetHashCode();
      hash ^= heroes_.GetHashCode();
      if (effectInfo_ != null) hash ^= EffectInfo.GetHashCode();
      if (FormationIndex != 0) hash ^= FormationIndex.GetHashCode();
      hash ^= suits_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Uid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      soldiers_.WriteTo(output, _repeated_soldiers_codec);
      heroes_.WriteTo(output, _repeated_heroes_codec);
      if (effectInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(EffectInfo);
      }
      if (FormationIndex != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(FormationIndex);
      }
      suits_.WriteTo(output, _repeated_suits_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      size += soldiers_.CalculateSize(_repeated_soldiers_codec);
      size += heroes_.CalculateSize(_repeated_heroes_codec);
      if (effectInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EffectInfo);
      }
      if (FormationIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FormationIndex);
      }
      size += suits_.CalculateSize(_repeated_suits_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArmyDBUnitInfo other) {
      if (other == null) {
        return;
      }
      if (other.Uid.Length != 0) {
        Uid = other.Uid;
      }
      soldiers_.Add(other.soldiers_);
      heroes_.Add(other.heroes_);
      if (other.effectInfo_ != null) {
        if (effectInfo_ == null) {
          EffectInfo = new global::Protobuf.ArmyUnitEffectInfoProto();
        }
        EffectInfo.MergeFrom(other.EffectInfo);
      }
      if (other.FormationIndex != 0) {
        FormationIndex = other.FormationIndex;
      }
      suits_.Add(other.suits_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 18: {
            soldiers_.AddEntriesFrom(input, _repeated_soldiers_codec);
            break;
          }
          case 26: {
            heroes_.AddEntriesFrom(input, _repeated_heroes_codec);
            break;
          }
          case 34: {
            if (effectInfo_ == null) {
              EffectInfo = new global::Protobuf.ArmyUnitEffectInfoProto();
            }
            input.ReadMessage(EffectInfo);
            break;
          }
          case 40: {
            FormationIndex = input.ReadInt32();
            break;
          }
          case 50: {
            suits_.AddEntriesFrom(input, _repeated_suits_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DefendArmyInfo : pb::IMessage<DefendArmyInfo> {
    private static readonly pb::MessageParser<DefendArmyInfo> _parser = new pb::MessageParser<DefendArmyInfo>(() => new DefendArmyInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DefendArmyInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protobuf.ArmyUnitInfoReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DefendArmyInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DefendArmyInfo(DefendArmyInfo other) : this() {
      defends_ = other.defends_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DefendArmyInfo Clone() {
      return new DefendArmyInfo(this);
    }

    /// <summary>Field number for the "defends" field.</summary>
    public const int DefendsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protobuf.ArmyDBUnitInfo> _repeated_defends_codec
        = pb::FieldCodec.ForMessage(10, global::Protobuf.ArmyDBUnitInfo.Parser);
    private readonly pbc::RepeatedField<global::Protobuf.ArmyDBUnitInfo> defends_ = new pbc::RepeatedField<global::Protobuf.ArmyDBUnitInfo>();
    /// <summary>
    /// 守城编队
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protobuf.ArmyDBUnitInfo> Defends {
      get { return defends_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DefendArmyInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DefendArmyInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!defends_.Equals(other.defends_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= defends_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      defends_.WriteTo(output, _repeated_defends_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += defends_.CalculateSize(_repeated_defends_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DefendArmyInfo other) {
      if (other == null) {
        return;
      }
      defends_.Add(other.defends_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            defends_.AddEntriesFrom(input, _repeated_defends_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
