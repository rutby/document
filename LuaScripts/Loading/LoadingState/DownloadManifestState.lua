---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 4/3/2024 上午10:51
---
local LoadingStateBase = require("Loading.LoadingState.LoadingStateBase")
local DownloadManifestState = BaseClass("DownloadManifestState", LoadingStateBase)
local Const = require("Loading.Const")

function DownloadManifestState:__init(startupLoading)
    LoadingStateBase:__init(startupLoading)
    self._downloadManifests = {}
end

function DownloadManifestState:OnEnter(args)
    print("start download manifest")
    local names = CS.GameEntry.Resource:GetManifestNames();

    for i = 0, names.Length - 1 do
        local n = names[i]
        table.insert(self._downloadManifests, CS.DownloadManifest.LoadAsync(n))
    end
end

function DownloadManifestState:OnExit()
    for k,v in pairs(self._downloadManifests) do
        v:Dispose()
    end
    table.clear(self._downloadManifests)
    print(">>>DownloadManifestState:OnExit")
end

function DownloadManifestState:OnUpdate()
    if table.length(self._downloadManifests) <= 0 then
        return
    end

    local allDone = true
    local occurredError = false
    for _, v in pairs(self._downloadManifests) do
        v:OnUpdate()

        if not v.isDone then
            allDone = false
        elseif not string.IsNullOrEmpty(v.error) then
            occurredError = true
            break
        end
    end

    if occurredError then
        self._startupLoading:SetState(Const.LoadingState.LoadingError, LoginErrorCode.ERROR_UPDATE_MANIFEST)
        return
    end

    if allDone then
        local manifests = {}
        for _, v in pairs(self._downloadManifests) do
            if (v.manifest ~= nil) then
                local _name = v.manifest.name
                if (not string.IsNullOrEmpty(_name)) then
                    table.insert(manifests, v.manifest)
                end
            end
        end
        self._startupLoading:SetState(Const.LoadingState.DownloadUpdate, manifests)
    end
end

return DownloadManifestState