---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 4/3/2024 下午12:02
---
local LoadingStateBase = require("Loading.LoadingState.LoadingStateBase")
local ConnectGameState = BaseClass("ConnectGameState", LoadingStateBase)
local Const = require("Loading.Const")

function ConnectGameState:__init(startupLoading)
    LoadingStateBase:__init(startupLoading)
end

function ConnectGameState:OnEnter(args)
    self._elapseTime = 0
    self._timeout = 6
    self._maxTryCount = 3
    self._tryCount = 1
    self._startupLoading.LoginTryCount = self._startupLoading.LoginTryCount + 1

    Logger.Log(string.format("#network# ConnectGameState:OnEnter serverUrl:%s, serverPort:%d", args[1], tonumber(args[2])))

    CS.GameEntry.Network.GameServerUrl = args[1]
    CS.GameEntry.Network.GameServerPort = toInt(args[2])
    CS.GameEntry.Network.ZoneName = args[3]
    CS.GameEntry.Network.Uid =args[4]
    CS.GameEntry.Network.OnConnectionEvent = BindCallback(self, self.OnGameConnection)
    CS.GameEntry.Network:Connect();
    PostEventLog.Record(PostEventLog.Defines.START_CONNECT);
end

function ConnectGameState:OnExit()
    CS.GameEntry.Network.OnConnectionEvent = nil
end

function ConnectGameState:OnUpdate()
    self._elapseTime = self._elapseTime + Time.deltaTime
    if self._elapseTime > self._timeout then
        PostEventLog.Record(PostEventLog.Defines.CONNECT_TIME_OUT, tostring(self._tryCount));
        if self._tryCount < self._maxTryCount then

            CS.GameEntry.Network:Disconnect()
            CS.GameEntry.Network:Connect()

            self._elapseTime = 0
            self._tryCount = self._tryCount + 1
            EventManager:GetInstance():Broadcast(EventId.NetworkRetry, true)

            Logger.Log("[NET]connect game try count :", self._tryCount)
        else
            self:OnGameConnection(Const.LoginErrorCode.ERROR_TIMEOUT, "connect game server time out");
        end
    end
end

function ConnectGameState:OnGameConnection(err, errorMessage)

    if err ~= Const.LoginErrorCode.ERROR_SUCCESS then
        Logger.Log("connect error!")
        CS.GameEntry.Network:Disconnect()
        PostEventLog.Record(PostEventLog.Defines.LOGIN_FAILED, errorMessage)
        self._startupLoading:SetState(Const.LoadingState.GetServerStatus)
        return
    end

    Logger.Log("Game server connected. start login")
    EventManager:GetInstance():Broadcast(EventId.NetworkRetry, false)
    self._startupLoading:SetState(Const.LoadingState.Login)
end

return ConnectGameState