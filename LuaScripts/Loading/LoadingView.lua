---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by mac.
--- DateTime: 12/17/21 4:01 PM
---

local timer = nil
local Setting = CS.GameEntry.Setting
local Localization = CS.GameEntry.Localization
local time_sec = 5.0
local all_tips = {}
local all_tips_temp = {}
local all_weight = {}
local all_weight_temp = {}
local _txt_tips
local _state_text

local LoadingState =
{
    None = 0,
    Logo = 1,
    Permission = 2,
    CheckResVersion = 3,
    DownloadManifest = 4,
    DownloadUpdate = 5,
    LoadDataTable = 6,
    GetServerList = 7,
    GetServerStatus = 8,
    ConnectGame = 9,
    Login = 10,
    AppUpdate = 11,
    PushInit = 12,
    AuthPin = 13,
    CNIdentify = 14,
    LoadScene = 15,
    EnterGame = 16,
    LoadingError = 17,
}

local LoadingStateText =
{
    [LoadingState.None] = "",
    [LoadingState.Logo] = "",
    [LoadingState.Permission] = "121015",
    [LoadingState.CheckResVersion] = "121016",
    [LoadingState.DownloadManifest] = "121017",
    [LoadingState.DownloadUpdate] = "121018",
    [LoadingState.LoadDataTable] = "121019",
    [LoadingState.GetServerList] = "121020",
    [LoadingState.GetServerStatus] = "121021",
    [LoadingState.ConnectGame] = "121022",
    [LoadingState.Login] = "121023",
    [LoadingState.AppUpdate] = "",
    [LoadingState.PushInit] = "121024",
    [LoadingState.AuthPin] = "121025",
    [LoadingState.CNIdentify] = "121025",
    [LoadingState.LoadScene] = "121026",
    [LoadingState.EnterGame] = "",
    [LoadingState.LoadingError] = "",
}

local function OnUpdate()
    time_sec = time_sec + Time.deltaTime
    if (time_sec < 4.0 or _txt_tips == nil) then
        return
    end
    Localization = CS.GameEntry.Localization
    time_sec = 0.0
    local tipsCount = table.count(all_tips_temp)
    if (tipsCount > 0 ) then
        local index = Mathf.GetRandomByWeight(all_weight_temp)
        _txt_tips:SetLocalText(all_tips_temp[index])
        table.remove(all_tips_temp, index)
        table.remove(all_weight_temp,index)
        if (table.count(all_tips_temp) == 0) then
            all_weight_temp = {}
            for k, v in pairs(all_tips) do
                all_tips_temp[k] = v;
                if all_weight[k]~=nil then
                    all_weight_temp[k] = all_weight[k]
                end
            end
        end
    end
end

local function AddTimer(self,time)
    if timer == nil then
        timer = TimerManager:GetInstance():GetTimer(0.0, OnUpdate, nil, false,false,false)
    end
    timer:Start()
end

local function InitLoadTips()
    AddTimer()
    local level = Setting:GetInt("FUN_BUILD_MAIN_LEVEL")
    level = level <= 0 and 1 or level
    local objTips = self.transform:Find("ProgressBg/Tip")
    if (objTips ~= nil) then
        _txt_tips = objTips:GetComponent(typeof(CS.UnityEngine.UI.Text))
    end

    all_tips = {}
    LocalController:instance():visitTable(TableName.LoadingTips,function(id,lineData)
        local levelRange = lineData:getValue("level_range")
        local id = lineData:getValue("id")
        local description = lineData:getValue("description")
        local weight = lineData:getValue("rate")
        if weight==nil then
            weight = 1
        end
        if (levelRange == "" or id == "" or description == "") then
            return
        end
        local levels = string.split_ii_array(levelRange, ';')
        if (table.count(levels) < 2) then
            return
        end
        if (level < levels[1] or level > levels[2]) then
            return
        end
        local tips = string.split_ss_array(description, ';')
        for k, v in pairs(tips) do
            all_tips[#all_tips+1] = v
            all_tips_temp[#all_tips_temp+1] = v
            all_weight[#all_weight+1] = weight
            all_weight_temp[#all_weight_temp+1] = weight
        end
    end)
end

local function OnLoadingStateChange(state)
    if _state_text == nil  then
        return
    end

    Logger.Log("OnLoadingStateChange " .. tostring(state))
    local text = LoadingStateText[state]
    if text ~= "" then
        _state_text.text = Localization:GetString(text)
    end
end

local function InitStateText()
    local objState = self.transform:Find("State")
    if objState ~= nil then
        _state_text = objState:GetComponent(typeof(CS.UnityEngine.UI.Text))
    end
    EventManager:GetInstance():AddListener(EventId.LoadingState, OnLoadingStateChange)
end

function OnStart()
    Logger.Log("LoadingView OnStart")
    InitLoadTips()
    InitStateText()
end



function OnDestroy()
    if (timer ~= nil) then
        timer:Stop()
    end
    EventManager:GetInstance():RemoveListener(EventId.LoadingState, OnLoadingStateChange)
end
