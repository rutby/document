---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2022/5/7 18:12
---

local PveCaveBattleMessage = BaseClass("PveCaveBattleMessage", SFSBaseMessage)
local Localization = CS.GameEntry.Localization

local base = SFSBaseMessage

local function OnCreate(self, mineIndex, formationUuid, heroes, armys, totalPower)
    base.OnCreate(self)
    self.sfsObj:PutInt("mineIndex", mineIndex)
    self.sfsObj:PutLong("formationUuid", formationUuid)
    local sfsHeroes = SFSArray.New()
    for _, v in pairs(heroes) do
        local index = v["index"]
        local uuid = v["uuid"]
        local obj = SFSObject.New()
        obj:PutInt("index",index)
        obj:PutLong("uuid", uuid)
        sfsHeroes:AddSFSObject(obj)
    end
    self.sfsObj:PutSFSArray("heroes", sfsHeroes)
    local formationArray = SFSArray.New()
    table.walk(armys,function (k,v)
        local obj = SFSObject.New()
        obj:PutUtfString("armyId",k)
        obj:PutInt("count", v)
        formationArray:AddSFSObject(obj)
    end)
    self.sfsObj:PutSFSArray("formations", formationArray)
    self.sfsObj:PutUtfString("power", totalPower)
end

local function HandleMessage(self, t)
    base.HandleMessage(self, t)
    local errCode =  t["errorCode"]
    if errCode ~= nil then
        UIUtil.ShowTipsId(errCode)

        local levelType = DataCenter.BattleLevel:GetLevelType()
        if levelType == PveLevelType.FightLevel or levelType == PveLevelType.RadarExpLevel then
            DataCenter.BattleLevel:Exit()
        elseif levelType == PveLevelType.NormalLevel or levelType == PveLevelType.HeroExpLevel or levelType == PveLevelType.SkillLevel then
            PveActorMgr:GetInstance():Leave()
        end
        
        return
    end
    if (t == nil) then
        return
    end
    local battleContent = ""
    if (t["battleContent"] ~= nil) then
        battleContent = t["battleContent"]
    elseif t["battleContentArr"] ~= nil then
        local tabCnt = table.count(t["battleContentArr"])
        if (tabCnt > 0) then
            for i = 1, tabCnt do
                battleContent = battleContent .. t["battleContentArr"][i]
            end
        end
    end

    local detailContent = ""
    if (t["detailContent"] ~= nil) then
        detailContent = t["detailContent"]
    elseif t["detailContentArr"] ~= nil then
        local tabCnt = table.count(t["detailContentArr"])
        if (tabCnt > 0) then
            for i = 1, tabCnt do
                detailContent = detailContent .. t["detailContentArr"][i]
            end
        end
    end

    local expContent = t["heroExpReward"]
    
    DataCenter.MineCaveManager:SetEnemyPlayerPower(t["enemyPower"])
    DataCenter.MineCaveManager:CacheRewards(t["reward"])
    PveActorMgr:GetInstance():ParseData(battleContent, detailContent, expContent)
end

PveCaveBattleMessage.OnCreate = OnCreate
PveCaveBattleMessage.HandleMessage = HandleMessage

return PveCaveBattleMessage