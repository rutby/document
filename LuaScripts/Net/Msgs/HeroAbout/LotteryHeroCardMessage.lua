---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhangliheng.
--- DateTime: 7/7/21 7:05 PM
---
--- 抽卡请求协议

local LotteryHeroCardMessage = BaseClass("LotteryHeroCardMessage", SFSBaseMessage)
local base = SFSBaseMessage
local Localization = CS.GameEntry.Localization

---抽卡请求
---@param id string lotteryId
---@param isTen number 0:非十连抽 1:十连抽
---@param useFree number 是否免费 目前没用 都传0
---@param itemId string 使用的道具id
---@param jigsawCount number 如果此字段不为空 代表是拼图兑换
local function OnCreate(self, id, isTen, useFree, itemId, jigsawCount)
    base.OnCreate(self)

    self.sfsObj:PutUtfString("id", id)
    self.sfsObj:PutInt("isTen", isTen)
    self.sfsObj:PutInt("useFree", useFree)
    self.sfsObj:PutUtfString("itemId", itemId)

    if jigsawCount ~= nil and jigsawCount > 0 then
        self.sfsObj:PutInt('lotteryCount', jigsawCount)
    end

    HeroUtils.IsInTheLottery = true
    DataCenter.GuideManager:SetWaitingMessage(WaitMessageFinishType.LotteryHeroCard,true)
end

local function HandleMessage(self, message)
    base.HandleMessage(self, message)
   
    if message["errorCode"] ~= nil then
        local lang = Localization:GetString(message["errorCode"])
        UIUtil.ShowTips(lang or message["errorCode"])
    else
        --拼图兑换返回
        --if message['lotteryCount'] ~= nil and message['lotteryCount'] > 0 then
        --    --展示碎片奖励提示
        --    local window = UIManager:GetInstance():GetWindow(UIWindowNames.UINewHero)
        --    if window == nil then
        --        UIManager:GetInstance():OpenWindow(UIWindowNames.UIHeroJigsawReward, {anim = true}, message)
        --    end
        --else
            --招募次数
            DataCenter.LotteryDataManager:UpdateOneLottery(message)
            --if message["totalLotteryNum"] ~= nil then
            --    DataCenter.LotteryDataManager:SetLotteryTotalNum(message["totalLotteryNum"])
            --end

            local classId = message["classId"]
            local pityProProtectNum = message["pityProProtectNum"]
            if classId ~= nil and pityProProtectNum ~= nil then
                DataCenter.LotteryDataManager:ChangeClassLotteryNum(classId, pityProProtectNum)
            end

            EventManager:GetInstance():Broadcast(EventId.HeroicRecruitmentData, message)
        --end

        --全部英雄处理完成之后再进行气泡检查 避免每个英雄更新时多次调用
        EventManager:GetInstance():Broadcast(EventId.CheckPubBubble, true)
        EventManager:GetInstance():Broadcast(EventId.HeroStationUpdate)
        HeroUtils.IsInTheLottery = false
    end
    DataCenter.GuideManager:SetWaitingMessage(WaitMessageFinishType.LotteryHeroCard, nil)
    EventManager:GetInstance():Broadcast(EventId.GuideWaitMessage)
end

LotteryHeroCardMessage.OnCreate = OnCreate
LotteryHeroCardMessage.HandleMessage = HandleMessage

return LotteryHeroCardMessage