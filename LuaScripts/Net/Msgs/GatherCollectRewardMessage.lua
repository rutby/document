---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2021/11/9 17:18
---
local GatherCollectRewardMessage = BaseClass("GatherCollectRewardMessage", SFSBaseMessage)
local base = SFSBaseMessage
local function OnCreate(self,uuidList)
    base.OnCreate(self)
    --self.sfsObj:PutLong("uuid",uuid or 0)
    --gatherAll = gatherAll == nil and true or gatherAll
    --self.sfsObj:PutBool("gatherAll",gatherAll)

    local uuidArr = SFSArray.New()
    for i, v in ipairs(uuidList) do
        uuidArr:AddLong(v)
    end
    self.sfsObj:PutSFSArray("uuidArr", uuidArr)
end

local function HandleMessage(self, t)
    base.HandleMessage(self, t)
    if t["errorCode"] ~= nil then
        local errorCode = t["errorCode"]
        if errorCode ~= SeverErrorCode then
            UIUtil.ShowTips(Localization:GetString(t["errorCode"]))
        end
    else
        if t["reward"] ~= nil then
            local rewardList = DataCenter.RewardManager:ReturnRewardParamForMessage(t["reward"])
            if rewardList ~= nil then
                local srcPos = CS.SceneManager.World:WorldToScreenPoint(CS.SceneManager.World.CurTarget)
                table.walk(rewardList, function (_, v)
                    --应要求全都飘到左上角的箱子
                    local pic = DataCenter.RewardManager:GetPicByType(v.rewardType, v.itemId)
                    local flyPos =UIUtil.GetUIMainSavePos(UIMainSavePosType.Goods)
                    local num = v.count
                    num = math.min(num, 3)
                    if v.rewardType == RewardType.OIL or v.rewardType == RewardType.METAL or v.rewardType == RewardType.WATER or v.rewardType == RewardType.ELECTRICITY  or v.rewardType == RewardType.MONEY then
                        local param = {}
                        param.resType = RewardToResType[v.rewardType]
                        param.rewardTyp = tonumber(v.rewardType)
                        param.num = num
                        param.pic = pic
                        param.screenPos = screenPos
                        param.flyPos = flyPos
                        EventManager:GetInstance():Broadcast(EventId.ShowPickGarbageResource, param)
                    else
                        UIUtil.DoFly(tonumber(RewardType.GOODS), num, pic,srcPos,UIUtil.GetUIMainSavePos(UIMainSavePosType.Goods))
                    end
                end)
            end
            TimerManager:GetInstance():DelayInvoke(function()
                for k,v in pairs(t["reward"]) do
                    DataCenter.RewardManager:AddOneReward(v)
                end
            end, 1.5)
        end
        
        DataCenter.CollectRewardDataManager:UpdateCollectRewardList(t)
        EventManager:GetInstance():Broadcast(EventId.RefreshMonsterRewardBag)
    end
end

GatherCollectRewardMessage.OnCreate = OnCreate
GatherCollectRewardMessage.HandleMessage = HandleMessage

return GatherCollectRewardMessage