---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2021/7/13 17:07
---



local PushHeroDataMessage = BaseClass("PushHeroDataMessage", SFSBaseMessage)
local base = SFSBaseMessage

local function OnCreate(self)
    base.OnCreate(self)
end

local function HandleMessage(self, message)
    base.HandleMessage(self, message)
    if message["errorCode"] ~= nil then
        UIUtil.ShowTips(Localization:GetString(message["errorCode"]))
        return
    end
    local newHero = false
    local isLevelUp = false
    local isMaster = false
    if message['uuid'] ~= nil and not CS.SceneManager.IsInPVE() then
        local heroData = DataCenter.HeroDataManager:GetHeroByUuid(message['uuid'])
        if heroData == nil then
            newHero = true
            isLevelUp = false
        else
            local oldLevel = heroData.level
            local newLevel = message["lev"]
            if newLevel~=nil and newLevel>oldLevel then
                isLevelUp = true
            end
        end
        
    end
    local hero = message
    if hero ~= nil then
        local uuid = hero["uuid"]
        local power = 0
        local heroData = DataCenter.HeroDataManager:GetHeroByUuid(uuid)
        if heroData ~= nil then
            power = HeroUtils.GetHeroPower(heroData)
        end
        DataCenter.HeroDataManager:UpdateOneHero(hero)
        heroData = DataCenter.HeroDataManager:GetHeroByUuid(uuid)
        if heroData ~= nil then
            power = HeroUtils.GetHeroPower(heroData) - power
        end
        if power > 0 then
            GoToUtil.ShowPower({power = power})
        end
    end
    local heroData = DataCenter.HeroDataManager:GetHeroByUuid(message['uuid'])
    isMaster = heroData.isMaster

    if not HeroUtils.IsInTheLottery then
        EventManager:GetInstance():Broadcast(EventId.CheckPubBubble, true)
    end
    if newHero then
        if isMaster then
            if DataCenter.BattleLevel:IsInBattleLevel() and DataCenter.GuideManager:InGuide() then
                DataCenter.GuideManager:SetGuideEndCallBack(function()
                    
                    UIManager:GetInstance():OpenWindow(UIWindowNames.UINewHero, message['uuid'])
                end)
            else
                local window = UIManager:GetInstance():GetWindow(UIWindowNames.UIHeroRecruit)
                if window == nil then
                    UIManager:GetInstance():OpenWindow(UIWindowNames.UINewHero, message['uuid'])
                end
            end
        end
        EventManager:GetInstance():Broadcast(EventId.HeroExChange)
    end
    if isLevelUp then
        EventManager:GetInstance():Broadcast(EventId.HeroLevelUpgrade)
    end
end

PushHeroDataMessage.OnCreate = OnCreate
PushHeroDataMessage.HandleMessage = HandleMessage

return PushHeroDataMessage