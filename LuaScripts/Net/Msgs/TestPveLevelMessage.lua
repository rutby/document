---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2023/12/11 10:21
---

local TestPveLevelMessage = BaseClass("TestPveLevelMessage", SFSBaseMessage)
local base = SFSBaseMessage

local function OnCreate(self, levelId, heroes, formations)
    base.OnCreate(self)
    self.sfsObj:PutInt("pveId", levelId)
    
    if heroes then
        local heroArray = SFSArray.New()
        for _, v in pairs(heroes) do
            local obj = SFSObject.New()
            obj:PutInt("index", v.index)
            obj:PutLong("uuid", v.uuid)
            heroArray:AddSFSObject(obj)
        end
        self.sfsObj:PutSFSArray("heroes", heroArray)
    end

    if formations then
        local formationArray = SFSArray.New()
        for armyId, count in pairs(formations) do
            local obj = SFSObject.New()
            obj:PutUtfString("armyId", armyId)
            obj:PutInt("count", count)
            formationArray:AddSFSObject(obj)
        end
        self.sfsObj:PutSFSArray("formations", formationArray)
    end
end

local function HandleMessage(self, t)
    base.HandleMessage(self, t)

    local battleContent = PveUtil.ParseBattleContent(t)
    local detailContent = PveUtil.ParseDetailContent(t)
    PveActorMgr:GetInstance():ParseData(battleContent, detailContent)
end

TestPveLevelMessage.OnCreate = OnCreate
TestPveLevelMessage.HandleMessage = HandleMessage

return TestPveLevelMessage