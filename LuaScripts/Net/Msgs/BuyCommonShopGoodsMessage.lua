---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2022/5/11 18:32
---BuyCommonShopGoodsMessage


local BuyCommonShopGoodsMessage = BaseClass("BuyCommonShopGoodsMessage", SFSBaseMessage)
local base = SFSBaseMessage
local Localization = CS.GameEntry.Localization

local function OnCreate(self, goodsId,goodsArr, num)
    base.OnCreate(self)
    self.sfsObj:PutInt("id", goodsId)
    if num then
        self.sfsObj:PutInt("num", num)
    end
    if goodsArr then
        local resources = SFSArray.New()
        for k,v in pairs(goodsArr) do
            local obj = SFSObject.New()
            obj:PutUtfString("goodId",k)
            obj:PutInt("num", v)
            resources:AddSFSObject(obj)
        end
        self.sfsObj:PutSFSArray("goodsArr", resources)
    end
end

local function HandleMessage(self, t)
    base.HandleMessage(self, t)
    local errCode =  t["errorCode"]
    if errCode ~= nil then
        UIUtil.ShowTipsId(errCode)
    else
        if t["remainGold"]~=nil then
            LuaEntry.Player.gold = t["remainGold"]
            EventManager:GetInstance():Broadcast(EventId.UpdateGold)
        end
        if t["resource"] then
            LuaEntry.Resource:UpdateResource(t["resource"])
        end
        if not string.IsNullOrEmpty(t.itemId) then
            local curNum = DataCenter.ItemData:GetItemCount(t.itemId)
            local itemTemplate = DataCenter.ItemTemplateManager:GetItemTemplate(t.itemId)
            itemTemplate.itemId = t.itemId
            itemTemplate.count = t.count-- curNum + t.itemAddNum
            itemTemplate.rewardAdd = t.itemAddNum
            itemTemplate.uuid = t.itemUuid
            local reward = {
                type = RewardType.GOODS,
                value = itemTemplate
            }
            DataCenter.RewardManager:AddOneReward(reward)
            UIUtil.ShowTipsId(120120)
            --local msg = {
            --    reward = {},
            --}
            --table.insert(msg.reward, reward)
            --DataCenter.RewardManager:ShowCommonReward(msg)
        elseif t.heroes and #t.heroes > 0 then
            for i, v in ipairs(t.heroes) do
                v.type = RewardType.HERO
                v.value = {heroId = v.heroId,uuid = v.uuid,num = 1}

                local hero = v
                if hero ~= nil then
                    local uuid = hero["uuid"]
                    local power = 0
                    local heroData = DataCenter.HeroDataManager:GetHeroByUuid(uuid)
                    if heroData ~= nil then
                        power = HeroUtils.GetHeroPower(heroData)
                    end
                    DataCenter.HeroDataManager:UpdateOneHero(hero)
                    heroData = DataCenter.HeroDataManager:GetHeroByUuid(uuid)
                    if heroData ~= nil then
                        power = HeroUtils.GetHeroPower(heroData) - power
                    end
                    if power > 0 then
                        GoToUtil.ShowPower({power = power})
                    end
                end
            end 
            t.reward ={}
            t.reward = t.heroes
            DataCenter.RewardManager:ShowCommonReward(t)
            UIUtil.ShowTipsId(120120)
        else
            DataCenter.RewardManager:DealWithHeroOrPoster(t)
        end
        if t.buyLimit then
            DataCenter.CommonShopManager:UpdateOneGoodsInfo(nil, t.buyLimit, true)
        end
        if t.goodsId then
            EventManager:GetInstance():Broadcast(EventId.OnBuyCommonGoodsSucc, t.goodsId)
        end
    end
end

BuyCommonShopGoodsMessage.OnCreate = OnCreate
BuyCommonShopGoodsMessage.HandleMessage = HandleMessage

return BuyCommonShopGoodsMessage
