---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by guqu.
--- DateTime: 2020/9/14 11:11
---
local PushAlHelpUpdateMessage = BaseClass("PushAlHelpUpdateMessage", SFSBaseMessage)
local base = SFSBaseMessage
local Localization = CS.GameEntry.Localization
local function OnCreate(self)
    base.OnCreate(self)
end

local function HandleMessage(self, t)
    base.HandleMessage(self, t)
    if t["senderId"]~=nil and t["senderId"]~="" then
        local sender = t["senderId"]
        local type = t["helpType"]
        local freeType = t["queueType"]
        if sender == LuaEntry.Player.uid then
            
            if t["updateTime"]~=nil then
                local uuid = t["queueId"]
                local startT = t["startTime"]
                local finishTime = t["updateTime"]
                if type == AllianceHelpType.Queue then
                    DataCenter.QueueDataManager:AllianceHelpAddSpeed(uuid,finishTime,startT)
                    EventManager:GetInstance():Broadcast(EventId.AddSpeedSuccess,freeType)
                elseif type == AllianceHelpType.Building then
                    DataCenter.BuildManager:AllianceHelpAddSpeed(uuid,finishTime,startT)
                    EventManager:GetInstance():Broadcast(EventId.AddBuildSpeedSuccess, uuid)
                elseif type == AllianceHelpType.FIX_BUILDING then
                    DataCenter.BuildManager:AllianceHelpFixAddSpeed(uuid,finishTime,startT)
                    local signal = SFSObject.New()
                    signal:PutLong("bUuid", uuid)
                    signal:PutLong("startTime", startT)
                    signal:PutLong("endTime", finishTime)
                    EventManager:GetInstance():Broadcast(EventId.AddBuildFixSpeedSuccess,signal)
                end
            end
            
            if t["helpName"]~=nil then
                local playerHead = nil
                if t["pic"] and t['uid'] then
                    local hasMonthCard = nil
                    if t["monthCardEndTime"] then
                        --hasMonthCard = self:GetHeadBgImg(t["monthCardEndTime"])
                        hasMonthCard = self:GetHeadBgImg(t["headSkinId"], t["headSkinET"], t["monthCardEndTime"])
                    end
                    playerHead = {
                        uid = t["uid"],
                        pic = t["pic"],
                        picVer = t["picVer"],
                        HeadBg = hasMonthCard,
                    }
                end

                local tempReduceSec = ""
                if t.reduceSec then
                    local tempM = math.modf(t.reduceSec/60)
                    local tempS = math.floor(t.reduceSec%60)
                    if tempM > 0 then
                        tempReduceSec = tempReduceSec .. tempM .. Localization:GetString("100165")-- "m"
                    end
                    if tempS > 0 then
                        tempReduceSec = tempReduceSec .. tempS .. Localization:GetString("372115")-- "s"
                    end
                end
                --t.reduceSec and UITimeManager:GetInstance():MilliSecondToFmtStringSpecial(t["reduceSec"] * 1000)--[[math.floor(t["reduceSec"]/1000)]] or 0
                local helpName = t["helpName"]
                if type == AllianceHelpType.Building then
                    local itemId = t["itemId"]
                    local level = t["level"]
                    SoundUtil.PlayEffect(SoundAssets.Music_Effect_AlHelp_otherHelpMe)
                    UIUtil.ShowTips(Localization:GetString("390122", helpName,
                            level, Localization:GetString(GetTableData(DataCenter.BuildTemplateManager:GetTableName(), itemId + level,"name")), "", tempReduceSec), nil, playerHead)
                elseif type == AllianceHelpType.FIX_BUILDING then
                    local itemId = t["itemId"]
                    local level = t["level"]
                    local name = Localization:GetString(GetTableData(DataCenter.BuildTemplateManager:GetTableName(), itemId + level,"name")).."("..Localization:GetString("104202")..")"
                    SoundUtil.PlayEffect(SoundAssets.Music_Effect_AlHelp_otherHelpMe)
                    UIUtil.ShowTips(Localization:GetString("390122", helpName, level, name, "", tempReduceSec), nil, playerHead)
                elseif type == AllianceHelpType.Queue then
                    if freeType == NewQueueType.Science then
                        local itemId = t["itemId"]
                        local science = DataCenter.ScienceManager:GetScienceTemplate(tonumber(itemId))
                        if science~=nil then
                            SoundUtil.PlayEffect(SoundAssets.Music_Effect_AlHelp_otherHelpMe)
                            UIUtil.ShowTips(Localization:GetString("390121", helpName, Localization:GetString(science.name),tempReduceSec), nil, playerHead)
                        end
                    elseif freeType == NewQueueType.Hospital then
                        --local random = t["random"]
                        SoundUtil.PlayEffect(SoundAssets.Music_Effect_AlHelp_otherHelpMe)
                        UIUtil.ShowTips(Localization:GetString("390879",helpName, tempReduceSec), nil, playerHead)
                        --if random~=nil and random>0 then
                        --end
                    end
                end
            end

        end
        DataCenter.AllianceHelpDataManager:RefreshAllianceHelp(t)
        DataCenter.AllianceHelpDataManager:UpdateHelpInfoList(t)
        EventManager:GetInstance():Broadcast(EventId.AllianceHelpSever)
        EventManager:GetInstance():Broadcast(EventId.UpdateAllianceGiftNum)

        local nowCount = t.nowCount or 0
        local maxCount = t.maxCount or 0
        if nowCount >= maxCount then
            DataCenter.AllianceHelpDataManager:SetHelpNum(DataCenter.AllianceHelpDataManager:GetHelpNum() - 1)
        end
        local myAllianceCenterUuid = DataCenter.BuildManager:GetFunbuildByItemID(BuildingTypes.FUND_BUILD_ALLIANCE_CENTER)
        if myAllianceCenterUuid then
            EventManager:GetInstance():Broadcast(EventId.AllianceMemberNeedHelp, myAllianceCenterUuid.uuid)
        end
    end
end

local function GetHeadBgImg(self, headSkinId, headSkinET, endTime)
    --local headBgImg = nil
    --
    local serverTimeS = UITimeManager:GetInstance():GetServerSeconds()
    --if endTime and endTime > serverTimeS then
    --    headBgImg = "Common_playerbg_golloes"
    --end
    local headBgImg = DataCenter.DecorationDataManager:GetHeadFrame(headSkinId, headSkinET, endTime and endTime > serverTimeS)
    return headBgImg

    --
    --if headBgImg and headBgImg ~= "" then
    --    return string.format(LoadPath.CommonNewPath,headBgImg)
    --end
end

PushAlHelpUpdateMessage.OnCreate = OnCreate
PushAlHelpUpdateMessage.HandleMessage = HandleMessage
PushAlHelpUpdateMessage.GetHeadBgImg = GetHeadBgImg

return PushAlHelpUpdateMessage