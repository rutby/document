---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2023/5/16 10:45
---
local AllianceActMineBloodManager = BaseClass("AllianceActMineBloodManager", Singleton)
local ResourceManager = CS.GameEntry.Resource
local AllianceActMineBloodTip = require "Scene.AllianceActMineBloodManager.AllianceActMineBloodTip"
local function __init(self)
    self.allTips = {} --所有标签
    self.OnCreateTips = {}
    self:AddListener()
end

local function __delete(self)
    self:RemoveListener()
    self:RemoveAllEffect()
    self.allTips = nil
    self.OnCreateTips = nil
end

local function AddListener(self)
    EventManager:GetInstance():AddListener(EventId.ShowActAllianceBuildAttackHeadUI, self.ShowHeadUISignal)
    EventManager:GetInstance():AddListener(EventId.HideActAllianceBuildAttackHeadUI, self.HideHeadUISignal)
    EventManager:GetInstance():AddListener(EventId.ChangeCameraLod, self.ChangeCameraLodSignal)
    EventManager:GetInstance():AddListener(EventId.PveLevelEnter, self.RemoveAllTips)
    EventManager:GetInstance():AddListener(EventId.OnEnterWorld, self.OnEnterWorld)
    EventManager:GetInstance():AddListener(EventId.OnBeforeEnterCity, self.OnEnterCity)
end

local function RemoveListener(self)
    EventManager:GetInstance():RemoveListener(EventId.ShowActAllianceBuildAttackHeadUI, self.ShowHeadUISignal)
    EventManager:GetInstance():RemoveListener(EventId.HideActAllianceBuildAttackHeadUI, self.HideHeadUISignal)
    EventManager:GetInstance():RemoveListener(EventId.ChangeCameraLod, self.ChangeCameraLodSignal)
    EventManager:GetInstance():RemoveListener(EventId.PveLevelEnter, self.RemoveAllTips)
    EventManager:GetInstance():RemoveListener(EventId.OnEnterWorld, self.OnEnterWorld)
    EventManager:GetInstance():RemoveListener(EventId.OnBeforeEnterCity, self.OnEnterCity)
end

local function ChangeCameraLodSignal(lod)
    AllianceActMineBloodManager:GetInstance():UpdateLod(lod)
end

local function UpdateLod(self, lod)
    if self.lodCache ~= lod then
        self.lodCache = lod
    end
end

local function RemoveOneEffect(self,uuid)
    local temp = self.allTips[uuid]
    if temp ~= nil then
        local request = temp.request
        temp:OnDestroy()
        request:Destroy()
        self.allTips[uuid] = nil
    end
    temp = self.OnCreateTips[uuid]
    if temp ~= nil then
        temp:Destroy()
        self.OnCreateTips[uuid] = nil
    end
end

local function RemoveAllTips(data)
    AllianceActMineBloodManager:GetInstance():RemoveAllEffect()
end

local function OnEnterWorld(data)
end
local function OnEnterCity(data)
    AllianceActMineBloodManager:GetInstance():RemoveAllEffect()
end


local function RemoveAllEffect(self)
    for k,v in pairs(self.allTips) do
        local request = v.request
        v:OnDestroy()
        request:Destroy()
    end
    self.allTips = {}
    for k,v in pairs(self.OnCreateTips) do
        v:Destroy()
    end
    self.OnCreateTips = {}
end

local function HideHeadUISignal(uuid)
    AllianceActMineBloodManager:GetInstance():RemoveOneEffect(tonumber(uuid))
end

local function ShowHeadUISignal(data)
    local str = data
    if str ~= nil then
        local strArr = string.split(str, ";")
        if #strArr >=3 then
            local uuid = tonumber(strArr[1])
            local hp = tonumber(strArr[2])
            local hpMax = tonumber(strArr[3])
            AllianceActMineBloodManager:GetInstance():CheckShowBlood(uuid,hpMax, hp)
        end
    end
end

local function CheckShowBlood(self,bUuid, initHealth, curHealth)
    if SceneUtils.GetIsInWorld() == false then
        return
    end
    if self.allTips[bUuid] == nil and self.OnCreateTips[bUuid] == nil then
        if self.lodCache ~= nil and self.lodCache > 3 then
            return
        end
        local request = ResourceManager:InstantiateAsync(UIAssets.AllianceMineBloodTip)
        self.OnCreateTips[bUuid] = request
        request:completed('+', function()
            self.OnCreateTips[bUuid] = nil
            if request.isError then
                return
            end
            local info = DataCenter.WorldPointManager:GetPointInfoByUuid(bUuid)
            if info == nil then
                request:Destroy()
                return
            end
            request.gameObject:SetActive(true)
            request.gameObject.transform:SetParent(CS.SceneManager.World.BuildBubbleNode)
            request.gameObject.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
            local labelUI = AllianceActMineBloodTip.New()
            labelUI:OnCreate(request)
            self.allTips[bUuid] = labelUI
            self.allTips[bUuid]:ShowBloodInfo(info,initHealth, curHealth)
        end)
    else
        if self.allTips[bUuid] ~= nil then
            self.allTips[bUuid]:SetHP(curHealth, initHealth)
        end
    end
end



AllianceActMineBloodManager.__init = __init
AllianceActMineBloodManager.__delete = __delete
AllianceActMineBloodManager.AddListener = AddListener
AllianceActMineBloodManager.RemoveListener = RemoveListener
AllianceActMineBloodManager.RemoveOneEffect = RemoveOneEffect
AllianceActMineBloodManager.UpdateLod = UpdateLod
AllianceActMineBloodManager.ChangeCameraLodSignal = ChangeCameraLodSignal
AllianceActMineBloodManager.RemoveAllEffect  = RemoveAllEffect
AllianceActMineBloodManager.RemoveAllTips = RemoveAllTips
AllianceActMineBloodManager.OnEnterWorld = OnEnterWorld
AllianceActMineBloodManager.OnEnterCity = OnEnterCity
AllianceActMineBloodManager.HideHeadUISignal =HideHeadUISignal
AllianceActMineBloodManager.ShowHeadUISignal = ShowHeadUISignal
AllianceActMineBloodManager.CheckShowBlood =CheckShowBlood
return AllianceActMineBloodManager