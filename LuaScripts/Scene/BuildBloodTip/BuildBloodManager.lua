---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2021/8/3 14:18
---
local BuildBloodManager = BaseClass("BuildBloodManager", Singleton)
local BuildBloodTip = require "Scene.BuildBloodTip.BuildBloodTip"
local AllianceCitySoldierTips = require "Scene.BuildBloodTip.AllianceCitySoldierTips"
local ResourceManager = CS.GameEntry.Resource
local function __init(self)
    self.allBloodSlider = {} --所有建筑特效
    self.tempInstance= {}
    self:AddListener()
end

local function __delete(self)
    self.allBloodSlider = nil
    self.tempInstance= nil
    self:RemoveListener()
end

local function AddListener(self)
    EventManager:GetInstance():AddListener(EventId.PveLevelEnter, self.RemoveAllTips)
    EventManager:GetInstance():AddListener(EventId.OnEnterWorld, self.OnEnterWorld)
    EventManager:GetInstance():AddListener(EventId.OnEnterCity, self.OnEnterCity)
end

local function RemoveListener(self)
    EventManager:GetInstance():RemoveListener(EventId.PveLevelEnter, self.RemoveAllTips)
    EventManager:GetInstance():RemoveListener(EventId.OnEnterWorld, self.OnEnterWorld)
    EventManager:GetInstance():RemoveListener(EventId.OnEnterCity, self.OnEnterCity)
end

local function RemoveAllTips(data)
    BuildBloodManager:GetInstance():RemoveAllEffect()
end

local function OnEnterWorld(data)
end
local function OnEnterCity(data)
    BuildBloodManager:GetInstance():RemoveAllEffect()
end

local function ShowCityBlood(self,message)
    if message["mainBuildUuid"]~=nil then
        local bUuid = message["mainBuildUuid"]
        local info = DataCenter.WorldPointManager:GetBuildDataByUuid(bUuid)
        if info~=nil then
            if info~=nil then
                local pointId = info.mainIndex
                local startBlood = message["oldDurability"]
                local targetBlood = message["nowDurability"]
                local maxBlood = message["maxDurability"]
                local tileSize = WorldBuildUtil.GetBuildTile(info.mainIndex)
                self:ShowOneBloodEffect(bUuid,pointId,startBlood,targetBlood,maxBlood,tileSize)
            end
        end
    end
end

local function ShowAllianceBuildBlood(self,message)
    if message["uuid"]~=nil then
        local bUuid = message["uuid"]
        local info = DataCenter.WorldPointManager:GetPointInfoByUuid(bUuid)
        if info~=nil then
            if info.PointType == WorldPointType.WORLD_ALLIANCE_BUILD then
                local allianceBuildPointInfo = PBController.ParsePbFromBytes(info.extraInfo, "protobuf.AllianceBuildingPointInfo")
                if allianceBuildPointInfo ~= nil then
                    local mineID = allianceBuildPointInfo["buildId"]
                    local template = DataCenter.AllianceMineManager:GetAllianceMineTemplate(mineID)
                    if template ~= nil then
                        local tileSize = template.resSize
                        local startBlood = message["oldDurability"]
                        local targetBlood = message["nowDurability"]
                        local maxBlood = template.resDurable
                        self:ShowOneBloodEffect(bUuid,info.mainIndex,startBlood,targetBlood,maxBlood,tileSize)
                    end
                end
            end
        end
    end
end

local function ShowBuildBlood(self,message)
    if message["uuid"]~=nil then
        local bUuid = message["uuid"]
        local info = DataCenter.WorldPointManager:GetBuildDataByUuid(bUuid)
        if info~=nil then
            if info~=nil then
                local pointId = info.mainIndex
                local startBlood = message["oldDurability"]
                local targetBlood = message["nowDurability"]
                local maxBlood = message["maxDurability"]
                local tileSize = WorldBuildUtil.GetBuildTile(info.mainIndex)
                self:ShowOneBloodEffect(bUuid,pointId,startBlood,targetBlood,maxBlood,tileSize)
            end
        end
    end
end

local function ShowOneBloodEffect(self,bUuid,pointId,startBlood,targetBlood,maxBlood,tiles)
    if SceneUtils.GetIsInWorld() == false then
        return
    end
    if self.tempInstance[bUuid] ~= nil or self.allBloodSlider[bUuid]~=nil then
        return
    end
    local request = ResourceManager:InstantiateAsync(UIAssets.SceneBuildBloodTip)
    self.tempInstance[bUuid] = request
    request:completed('+', function()
        if request.isError then
            self.tempInstance[bUuid] =nil
            return
        end
        request.gameObject:SetActive(true)
        request.gameObject.transform:SetParent(CS.SceneManager.World.BuildBubbleNode)
        request.gameObject.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)

        local buildBloodTip = BuildBloodTip.New()
        buildBloodTip:OnCreate(request)
        local param = {}
        param.pointId= pointId
        param.startValue = startBlood
        param.targetValue = targetBlood
        param.maxValue = maxBlood
        param.bUuid =bUuid
        param.tiles = tiles
        param.request = request
        buildBloodTip:StartShowBlood(param)
        self.allBloodSlider[bUuid] = buildBloodTip
    end)
end


local function RemoveOneEffect(self,bUuid)
    
    local temp = self.allBloodSlider[bUuid]
    if temp ~= nil then
        local request = temp.request
        temp:OnDestroy()
        request:Destroy()
        self.allBloodSlider[bUuid] = nil
    end
    if self.tempInstance[bUuid]~=nil then
        self.tempInstance[bUuid]:Destroy()
    end
    self.tempInstance[bUuid] =nil
end

local function RemoveAllEffect(self)
    for k,v in pairs(self.allBloodSlider) do
        local request = v.request
        v:OnDestroy()
        request:Destroy()
    end
    self.allBloodSlider = {}
    for k,v in pairs(self.tempInstance) do
        v:Destroy()
    end
    self.tempInstance = {}
end

BuildBloodManager.__init = __init
BuildBloodManager.__delete = __delete
BuildBloodManager.RemoveOneEffect = RemoveOneEffect
BuildBloodManager.ShowOneBloodEffect =ShowOneBloodEffect
BuildBloodManager.ShowCityBlood =ShowCityBlood
BuildBloodManager.ShowBuildBlood =ShowBuildBlood
BuildBloodManager.AddListener = AddListener
BuildBloodManager.RemoveListener = RemoveListener
BuildBloodManager.RemoveAllEffect = RemoveAllEffect
BuildBloodManager.RemoveAllTips = RemoveAllTips
BuildBloodManager.OnEnterWorld = OnEnterWorld
BuildBloodManager.OnEnterCity = OnEnterCity
BuildBloodManager.ShowAllianceBuildBlood =ShowAllianceBuildBlood
return BuildBloodManager