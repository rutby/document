---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2021/8/17 14:23

local TroopHeadUI = BaseClass("TroopHeadUI")
local UIEventTrigger = CS.UIEventTrigger
local back_obj_path = "scaleNode"
local transform_Panel_path="scaleNode/Transform"
local back_bg_path = "scaleNode/Transform/back"
local head_state_path = "scaleNode/Transform/back/circle"
local head_bg_path = "scaleNode/Transform/back/headbg"
local head_icon_path = "scaleNode/Transform/back/circle/headicon"
local hp_spr_path = "scaleNode/Transform/back/hpBg/hp"
local hp_red_slider_path = "scaleNode/Transform/back/hpBg/hpRed"
local anger_obj_path = "scaleNode/Transform/back/angerBg"
local anger_spr_path = "scaleNode/Transform/back/angerBg/anger"
local car_anger_obj_path = "scaleNode/Transform/back/carAngerBg"
local car_anger_spr_path = "scaleNode/Transform/back/carAngerBg/carAnger"
local attack_name_obj_path = "scaleNode/Transform/back/attackNameBg"
local attack_name_path = "scaleNode/Transform/back/attackNameBg/attack_name"
local name_bg_path ="scaleNode/Transform/NameBg"
local solider_num_path = "scaleNode/Transform/NameBg/num"
local player_name_path = "scaleNode/Transform/NameBg/name"
local eden_point_path = "scaleNode/Transform/NameBg/edenObj/edenPoint"
local eden_event_trigger_path = "scaleNode/Transform/NameBg/edenObj/edenBtn"
local eden_obj_path = "scaleNode/Transform/NameBg/edenObj"
local eden_slider_path = "scaleNode/Transform/NameBg/edenObj/Slider"
local fill_path = "scaleNode/Transform/NameBg/edenObj/Slider/FillArea/Fill"

local right_path = "scaleNode/Transform/NameBg/Right"
local status_path = "scaleNode/Transform/NameBg/Right/Status"

local select_obj_path = "selectObj"
local troop_select_path = "selectObj/TroopSelect"
local anger_effect_path = "scaleNode/Transform/back/angerBg/VFX_xuetiaoman"
local Localization = CS.GameEntry.Localization
local NormalPos = Vector3.New(0,0,0)
local AttackPos =  Vector3.New(0.69,0,0)
local effect1_path="Assets/Main/Prefabs/March/WorldTroopGlow.prefab"
local ResourceManager = CS.GameEntry.Resource

local StatusCount = 3

--创建
local function OnCreate(self,go)
    if go ~= nil then
        self.request = go
        self.gameObject = go.gameObject
        self.transform = go.gameObject.transform
    end
    self:ComponentDefine()
end

-- 销毁
local function OnDestroy(self)
    self:DeleteTimer()
	self:SetHP(1,1)
    self:ComponentDestroy()
end
local function Hit(self)
    --self.animator:Play("V_worldTroopHeadUI_doudong")
    --self.animator:PlayQueued("V_worldTroopHeadUI_bianse")
end

local function ComponentDefine(self)
	self.effectList={}
    self.back_obj = self.transform:Find(back_obj_path).gameObject
    self.select_obj = self.transform:Find(select_obj_path).gameObject
    self.back_bg = self.transform:Find(back_bg_path):GetComponent(typeof(CS.UnityEngine.UI.Image))
    self.name_bg = self.transform:Find(name_bg_path):GetComponent(typeof(CS.UnityEngine.UI.Image))
    self.head_state = self.transform:Find(head_state_path):GetComponent(typeof(CS.UnityEngine.UI.Image))
    self.head_bg = self.transform:Find(head_bg_path):GetComponent(typeof(CS.UnityEngine.UI.Image))
    self.head_icon = self.transform:Find(head_icon_path):GetComponent(typeof(CS.UnityEngine.UI.Image))
    self.hp_slider = self.transform:Find(hp_spr_path):GetComponent(typeof(CS.UnityEngine.UI.Image))
    self.hp_red_slider = self.transform:Find(hp_red_slider_path):GetComponent(typeof(CS.UnityEngine.UI.Image))
    self.hp_spr = self.transform:Find(hp_spr_path):GetComponent(typeof(CS.UnityEngine.UI.Image))
    self.anger_slider = self.transform:Find(anger_spr_path):GetComponent(typeof(CS.UnityEngine.UI.Image))
    self.anger_spr = self.transform:Find(anger_spr_path):GetComponent(typeof(CS.UnityEngine.UI.Image))
    self.anger_obj = self.transform:Find(anger_obj_path).gameObject
    self.car_anger_slider = self.transform:Find(car_anger_spr_path):GetComponent(typeof(CS.UnityEngine.UI.Image))
    self.car_anger_spr = self.transform:Find(car_anger_spr_path):GetComponent(typeof(CS.UnityEngine.UI.Image))
    self.car_anger_obj = self.transform:Find(car_anger_obj_path).gameObject
    self.solider_num = self.transform:Find(solider_num_path):GetComponent(typeof(CS.TextMeshProUGUIEx))
    self.player_name = self.transform:Find(player_name_path):GetComponent(typeof(CS.TextMeshProUGUIEx))
    self.attack_name_obj = self.transform:Find(attack_name_obj_path).gameObject
    self.attack_name = self.transform:Find(attack_name_path):GetComponent(typeof(CS.TextMeshProUGUIEx))
    self.eden_obj = self.transform:Find(eden_obj_path).gameObject
    self.slider = self.transform:Find(eden_slider_path):GetComponent(typeof(CS.UnityEngine.UI.Slider))
    self.eden_event_trigger = self.transform:Find(eden_event_trigger_path):GetComponent(typeof(UIEventTrigger))
    self.eden_event_trigger.onPointerClick = function()
        self:OnEdenClick()
    end
    self.eden_point = self.transform:Find(eden_point_path):GetComponent(typeof(CS.TextMeshProUGUIEx))
    self.fill_img = self.transform:Find(fill_path):GetComponent(typeof(CS.UnityEngine.UI.Image)) 
    self.troop_select = self.transform:Find(troop_select_path):GetComponent(typeof(CS.UnityEngine.SpriteRenderer))
    self.transform_Panel = self.transform:Find(transform_Panel_path).gameObject
    --self.anger_effect = self.transform:Find(anger_effect_path).gameObject
    self.collider = self.transform:Find(back_bg_path):GetComponent(typeof(UIEventTrigger))
    self.collider.onPointerClick = function()
        self:OnClick()
    end
    --self.anger_effect:SetActive(false)
    self.hasCarAnger = false
	self.grayMaterial = self.back_bg.material
    self.normalMaterial = self.head_state.material
	self.animator= self.back_obj:GetComponent(typeof(CS.SimpleAnimation))
    self.cacheSoldierNum = -1
    self.cacheHpImg = ""
    self.cacheBloodHp = -1
    self.curTxtColor = nil
    self.cacheName = ""
    self.cacheEdenSliderImg = ""
    self.right_go = self.transform:Find(right_path).gameObject
    self.status_images = {}
    for i = 1, StatusCount do
        self.status_images[i] = self.transform:Find(status_path .. i):GetComponent(typeof(CS.UnityEngine.UI.Image))
        self.status_images[i].gameObject:SetActive(false)
    end
    self.timer_action = function(temp)
        self:CheckEdenPoint()
    end
    self.isUpdate = false
end

local function ComponentDestroy(self)
    self.grayMaterial = nil
    self.normalMaterial = nil
    self.back_obj = nil
    self.back_bg = nil
    self.select_obj = nil
    self.name_bg = nil
    self.head_state = nil
    self.head_icon = nil
    self.hp_spr = nil
    self.anger_spr = nil
    self.solider_num = nil
    self.player_name = nil
    self.anger_slider= nil
    self.hp_slider = nil
    self.attack_name_obj = nil
    self.attack_name = nil
    self.troop_select = nil
	self.transform_Panel=nil
    self.isUpdate = false
	for k, v in pairs(self.effectList) do
		v:Destroy()
	end
	self.effectList=nil
    self.right_go = nil
    self.status_images = nil
    if self.eden_event_trigger~=nil then
        self.eden_event_trigger.onPointerClick =nil
    end
    if self.collider~=nil then
        self.collider.onPointerClick =nil
    end
end

local function DeleteTimer(self)
    if self.timer ~= nil then
        self.timer:Stop()
        self.timer = nil
    end
end

local function AddTimer(self)
    if self.timer == nil then
        self.timer = TimerManager:GetInstance():GetTimer(1, self.timer_action, self, false,false,false)
    end

    self.timer:Start()
end

local function SetTransformPositon(self,pos)
	self.transform_Panel.transform.localPosition =pos
end
local function ShowAnger(self)
    if self.hasCarAnger then
        self.car_anger_obj.gameObject:SetActive(true)
    else
        self.anger_obj.gameObject:SetActive(true)
    end
end


local function ShowUseSkill(self)
    self.animator:Play("V_worldTroopHeadUI_fangda")
    self.animator:PlayQueued("V_worldTroopHeadUI_suoxiao")
    self.doSkill = true
    self:CreateUseSkillEffect(effect1_path,self.transform_Panel.transform)
end
local function CreateUseSkillEffect(self,path,p)
	if self.effectList[path]~=nil and self.effectList[path].gameObject~=nil then
		self.effectList[path].gameObject:SetActive(false)
		self.effectList[path].gameObject:SetActive(true)
	else
		local request = ResourceManager:InstantiateAsync(path)
		self.effectList[path] = request
		request:completed('+', function()
				if request.isError then
					return
				end
				request.gameObject:SetActive(true)
				request.gameObject.transform:SetParent(p)
				request.gameObject.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
				request.gameObject.transform:Set_localPosition(ResetPosition.x, ResetPosition.y, ResetPosition.z)
				TimerManager:GetInstance():DelayInvoke(function()
                    if request~=nil then
                        if request.gameObject~=nil then
                            request.gameObject:SetActive(false)
                        end
                    end
					end, 1.2)
			end)
	end

end
local function ShowExploreInfo(self, pointIndex, soliderNum, hp, hpMax)
    local data = DataCenter.WorldPointManager:GetExplorePointInfoByIndex(pointIndex)
    if data ~= nil then
        local name = DataCenter.DetectEventTemplateManager:GetRealName(data.eventId)
        self:SetName(name)
        self.head_bg.material = self.normalMaterial
        self.head_icon.material = self.normalMaterial

        if self.hasCarAnger then
            self.car_anger_obj.gameObject:SetActive(true)
        else
            self.anger_obj.gameObject:SetActive(true)
        end
        local maxAnger = LuaEntry.DataConfig:TryGetNum("battle_config", "k12")
        self:SetAnger(0, maxAnger)
        --self.back_obj.gameObject.transform.localPosition = AttackPos
        self.select_obj.gameObject:SetActive(false)
        self.name_bg.gameObject:SetActive(false)
        self.attack_name_obj:SetActive(true)

        --self.head_state:LoadSprite("Assets/Main/Sprites/UI/UIWorldTroop/zhuangtai3.png")
        self.player_name:Set_color(WorldWhiteColor.r,WorldWhiteColor.g,WorldWhiteColor.b,WorldWhiteColor.a)
        self.attack_name:Set_color(WorldWhiteColor.r,WorldWhiteColor.g,WorldWhiteColor.b,WorldWhiteColor.a)
        self.solider_num:Set_color(WorldWhiteColor.r,WorldWhiteColor.g,WorldWhiteColor.b,WorldWhiteColor.a)
        self.troop_select.color = WorldWhiteColor
        
        self:SetSoldierNum(soliderNum)
        self:SetHP(hp, hpMax)
        local icon = LoadPath.HeroIconsSmallPath..template.headIcon
        self.head_icon:LoadSprite(icon)
    end
end
local function ShowInBattleMarch(self,marchInfo,isBattle)
	if isBattle then
        if self.hasCarAnger then
            self.car_anger_obj.gameObject:SetActive(true)
            self.anger_obj.gameObject:SetActive(false)
        else
            self.anger_obj.gameObject:SetActive(true)
            self.car_anger_obj.gameObject:SetActive(false)
        end
		--self.back_obj.gameObject.transform.localPosition = AttackPos
		self.select_obj.gameObject:SetActive(false)
		self.name_bg.gameObject:SetActive(false)
		self.attack_name_obj:SetActive(true)
	else
		self.anger_obj.gameObject:SetActive(false)
        self.anger_obj.gameObject:SetActive(false)
		--self.back_obj.gameObject.transform.localPosition = NormalPos
		self.select_obj.gameObject:SetActive(true)
		self.name_bg.gameObject:SetActive(true)
        self.attack_name_obj:SetActive(false)
	end
end
local function ShowMarchInfo(self,marchInfo,isInBattle,isCreate,parent)
    if parent ~= nil then
        self.transform:SetParent(parent, false)
    end
    self.marchUuid = marchInfo.uuid
    self.marchOwnerUid = marchInfo.ownerUid
    self.eden_point_num = -1
    if isCreate== true then
        self.eden_point.text = ""
        self.useEdenPoint = false
        if marchInfo:GetMarchType() == NewMarchType.NORMAL and LuaEntry.Player.serverType == ServerType.EDEN_SERVER then
            local ownerUid = marchInfo.ownerUid
            if ownerUid~=nil and ownerUid~="" then
                self.useEdenPoint = true
                SFSNetwork.SendMessage(MsgDefines.GetEdenMarchSignalPoint,ownerUid,LuaEntry.Player:GetCurWorldId(),marchInfo.serverId)
            end
            self.eden_obj:SetActive(true)
        else
            self.eden_obj:SetActive(false)
        end
        if marchInfo:GetMarchType()== NewMarchType.NORMAL or marchInfo:GetMarchType() == NewMarchType.ASSEMBLY_MARCH or marchInfo:GetMarchType() == NewMarchType.SCOUT or marchInfo:GetMarchType() == NewMarchType.EXPLORE
                or marchInfo:GetMarchType() == NewMarchType.RESOURCE_HELP or marchInfo:GetMarchType() == NewMarchType.GOLLOES_EXPLORE or marchInfo:GetMarchType()== NewMarchType.GOLLOES_TRADE or marchInfo:GetMarchType()== NewMarchType.DIRECT_MOVE_MARCH then
            self:SetName(marchInfo.ownerName, marchInfo.allianceAbbr,marchInfo.srcServer,marchInfo.serverId)
        elseif marchInfo:GetMarchType() == NewMarchType.MONSTER or marchInfo:GetMarchType() == NewMarchType.BOSS then
            local nameStr = DataCenter.MonsterTemplateManager:GetTableValue( marchInfo.monsterId, "name")
            local name = Localization:GetString(nameStr)
            self:SetName(name)
        end
        if marchInfo:GetIsBroken() and marchInfo:IsMasstroops()==false then
            self.head_bg.material = self.grayMaterial
            self.head_icon.material = self.grayMaterial
        else
            self.head_bg.material = self.normalMaterial
            self.head_icon.material = self.normalMaterial
        end
        self:SetHeadCircle(marchInfo)
        if marchInfo:GetMarchType() == NewMarchType.SCOUT or marchInfo:GetMarchType()== NewMarchType.RESOURCE_HELP
                or marchInfo:GetMarchType() == NewMarchType.GOLLOES_EXPLORE or marchInfo:GetMarchType() == NewMarchType.GOLLOES_TRADE then
            self:SetHP(1, 1)
        else
            if isCreate == true then
                self:SetHP(marchInfo:GetHP(), marchInfo:GetMaxHP())
            end
        end
        if marchInfo:GetMarchType() == NewMarchType.SCOUT then
            self.head_bg:LoadSprite("Assets/Main/Sprites/UI/UIHeroAdvance/ui_quality_circle_green.png")
            self.head_icon:LoadSprite("Assets/Main/Sprites/HeroIconsSmall/hero_icon_investigate_icon.png")
        elseif marchInfo:GetMarchType() == NewMarchType.RESOURCE_HELP then
            self.head_bg:LoadSprite("Assets/Main/Sprites/UI/UIHeroAdvance/ui_quality_circle_purple.png")
            self.head_icon:LoadSprite("Assets/Main/Sprites/HeroIconsSmall/round_hero_icon_1003.png")
        elseif marchInfo:GetMarchType() == NewMarchType.GOLLOES_EXPLORE then
            self.head_bg:LoadSprite("Assets/Main/Sprites/UI/UIHeroAdvance/ui_quality_circle_purple.png")
            self.head_icon:LoadSprite("Assets/Main/Sprites/HeroIconsSmall/hero_icon_golloes_trader.png")
        elseif marchInfo:GetMarchType() == NewMarchType.GOLLOES_TRADE then
            self.head_bg:LoadSprite("Assets/Main/Sprites/UI/UIHeroAdvance/ui_quality_circle_purple.png")
            self.head_icon:LoadSprite("Assets/Main/Sprites/HeroIconsSmall/hero_icon_golloes_trader.png")
        elseif marchInfo:GetMarchType() == NewMarchType.MONSTER or marchInfo:GetMarchType() == NewMarchType.BOSS then
            local pic = DataCenter.MonsterTemplateManager:GetTableValue( marchInfo.monsterId, "pic")
            if pic~=nil then
                --self.head_bg:LoadSprite("Assets/Main/Sprites/UI/UIHeroAdvance/ui_quality_gray.png")
                local icon = LoadPath.HeroIconsSmallPath..pic
                self.head_icon:LoadSprite(icon)
            end
        else
            local armyInfo = marchInfo:GetFirstArmyInfo()
            if armyInfo~=nil and armyInfo.HeroInfos~=nil then
                local heroData = armyInfo.HeroInfos[1]
                if heroData~=nil then
                    local rarity = tonumber(GetTableData(HeroUtils.GetHeroXmlName(), heroData.heroId, "rarity"))
                    local isReachMax = heroData:GetIsAllSKillReachMax()
                    if isReachMax~=nil and isReachMax == true then
                        if rarity ~= HeroUtils.RarityType.S then
                            isReachMax = false
                        end
                    else
                        isReachMax = false
                    end
                    self.head_bg:LoadSprite(HeroUtils.GetCircleQualityIconPath(rarity,isReachMax))
                    local icon = HeroUtils.GetHeroIconRoundPath(heroData.heroId)
                    self.head_icon:LoadSprite(icon)
                end
            end
            self.hasCarAnger = false
            --if armyInfo~=nil and armyInfo.Suits~=nil and armyInfo.Suits.Count>0 then
            --    local dic = armyInfo.Suits
            --    for k,v in pairs(dic) do
            --        if self.hasCarAnger ==false then
            --            if v.skillInfos~=nil and v.skillInfos.Count>0 then
            --                self.hasCarAnger = true
            --            end
            --        end
            --    end
            --end
            
        end
    end
    --部队数量：侦查不显示；咕噜显示固定值；资源援助不显示
    if marchInfo:GetMarchType() == NewMarchType.SCOUT or marchInfo:GetMarchType() == NewMarchType.RESOURCE_HELP then
        self.solider_num.text = ""
    elseif marchInfo:GetMarchType() == NewMarchType.GOLLOES_EXPLORE then
        local strCost = LuaEntry.DataConfig:TryGetStr("golloes_dispatch_para", "k2")
        local golloesCostTb = string.split(strCost, ";")
        self.solider_num.text = golloesCostTb[GolloesType.Explorer]
    elseif marchInfo:GetMarchType() == NewMarchType.GOLLOES_TRADE then
        local strCost = LuaEntry.DataConfig:TryGetStr("golloes_dispatch_para", "k2")
        local golloesCostTb = string.split(strCost, ";")
        self.solider_num.text = golloesCostTb[GolloesType.Trader]
    else
        self:SetSoldierNum(marchInfo:GetSoliderNum())
    end
    if isInBattle then
        if marchInfo:IsMasstroops()==false then
            if self.hasCarAnger ==true then
                local maxAnger = LuaEntry.DataConfig:TryGetNum("formation_skill", "k2")
                self.car_anger_obj.gameObject:SetActive(true)
                self.anger_obj.gameObject:SetActive(false)
                if isCreate==true then
                    self:SetCarAnger(0,maxAnger)
                end
            else
                local maxAnger = LuaEntry.DataConfig:TryGetNum("battle_config", "k12")
                self.anger_obj.gameObject:SetActive(true)
                self.car_anger_obj.gameObject:SetActive(false)
                if isCreate==true then
                    self:SetAnger(0,maxAnger)
                end
            end
           
            --self.back_obj.gameObject.transform.localPosition = AttackPos
            self.name_bg.gameObject:SetActive(false)
            self.attack_name_obj:SetActive(true)
        else
            self.car_anger_obj.gameObject:SetActive(false)
            self.anger_obj.gameObject:SetActive(false)
            self.name_bg.gameObject:SetActive(true)
            self.attack_name_obj:SetActive(false)
        end
        self:SetSelectRotation(marchInfo.uuid)
        self.select_obj.gameObject:SetActive(false)
    else
        self.car_anger_obj.gameObject:SetActive(false)
        self.anger_obj.gameObject:SetActive(false)
        --self.back_obj.gameObject.transform.localPosition = NormalPos
        self.select_obj.gameObject:SetActive(true)
        self.name_bg.gameObject:SetActive(true)
        self.attack_name_obj:SetActive(false)
        self:SetSelectRotation(marchInfo.uuid)
        if marchInfo:GetIsBroken() and marchInfo:IsMasstroops()==false then
            self.head_bg.material = self.grayMaterial
            self.head_icon.material = self.grayMaterial
        else
            self.head_bg.material = self.normalMaterial
            self.head_icon.material = self.normalMaterial
        end
    end
    
    local statusIds = DataCenter.FormStatusManager:GetMarchStatusIds(self.marchUuid)
    for i = 1, StatusCount do
        local id = statusIds[i] or 0
        local template = DataCenter.FormStatusManager:GetTemplate(id)
        if template then
            self.status_images[i].gameObject:SetActive(true)
            self.status_images[i]:LoadSprite(template:GetIcon())
        else
            self.status_images[i].gameObject:SetActive(false)
        end
    end
end

local function SetSelectRotation(self,marchUuid)
    local troop = WorldTroopManager:GetInstance():GetTroop(marchUuid)
    if troop~=nil then
        local rotation = troop:GetRotation()
        local qua = rotation.eulerAngles
        self.troop_select.gameObject.transform.localRotation = Quaternion.Euler(0, 0, -qua.y)
    end
end

local function SetName(self,name,allianceAbbr,srcServer,serverId)
    self.name_bg.gameObject:SetActive(true)
    local newName = ""
    if allianceAbbr~=nil and allianceAbbr~="" then
        newName = "["..allianceAbbr.."]"..name
    else
        newName = name
    end
    if srcServer~=nil and srcServer~=LuaEntry.Player:GetSelfServerId() then
        newName = "#"..srcServer.." "..newName
    end
    if newName~=self.cacheName then
        self.player_name.text = newName
        self.attack_name.text = newName
        self.cacheName = newName
        CS.UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(self.name_bg.rectTransform)
        local height = 100
        if self.useEdenPoint then
            height = 120
        end
        self.name_bg.rectTransform:Set_sizeDelta_y(height)
        --local nameWidth = self.player_name:GetWidth()
        --local x = math.max(nameWidth + 1, 1.93)
        --
        --local size = self.name_bg.size
        --size.x = x
        --self.name_bg.size = size
        --
        --local pos = self.right_go.transform.localPosition
        --pos.x = x
        --self.right_go.transform.localPosition = pos
    end
    
end

local function SetEdenPoint(self,uid,worldId,points)
    if self.useEdenPoint == true and self.marchOwnerUid == uid then
        local marchInfo = DataCenter.WorldMarchDataManager:GetMarch(self.marchUuid)
        if marchInfo~=nil and marchInfo.worldId == worldId then
            self:UpdateEdenPoint(points)
            if uid == LuaEntry.Player.uid then
                self.isUpdate = true
                self.checkEdenPointList = points
                self:AddTimer()
            else
                self.isUpdate = false
                self:DeleteTimer()
            end
        end
    end
end

local function CheckEdenPoint(self)
    if self.isUpdate == true and self.checkEdenPointList~=nil then
        self:UpdateEdenPoint(self.checkEdenPointList)
    end
end 
local function UpdateEdenPoint(self,points)
    local marchInfo = DataCenter.WorldMarchDataManager:GetMarch(self.marchUuid)
    if marchInfo~=nil then
        local worldPos = marchInfo:GetMarchCurPos()
        local minDistance = IntMaxValue
        for k,v in pairs(points) do
            local dis = Vector3.Distance(worldPos,SceneUtils.TileIndexToWorld(v,ForceChangeScene.World))
            if dis<minDistance then
                minDistance = dis
            end
        end
        local max = LuaEntry.DataConfig:TryGetNum("eden_signal","k1")
        local dec = LuaEntry.DataConfig:TryGetNum("eden_signal","k4")
        local decPercent = LuaEntry.DataConfig:TryGetNum("eden_signal","k2")
        local tempNum = max - math.max(((minDistance/2)-dec),0)*decPercent
        if tempNum<0 then
            tempNum =0
        end
        if tempNum~=self.eden_point_num then
            self.eden_point_num = tempNum
            self.eden_point.text = toInt(self.eden_point_num)
            local percent = (self.eden_point_num/max)
            self:RefreshSlider(percent)
        end
        
    end
end

local function SetHeadCircle(self,marchInfo)
    local selfAllianceId = LuaEntry.Player.allianceId
    local curTxtColor = nil
    if marchInfo:GetMarchType() == NewMarchType.MONSTER or marchInfo:GetMarchType() == NewMarchType.BOSS then
        --self.head_state:LoadSprite("Assets/Main/Sprites/UI/UIWorldTroop/zhuangtai3.png")
        curTxtColor = WorldWhiteColor
        self.troop_select.color = WorldWhiteColor
    elseif marchInfo.ownerUid == LuaEntry.Player.uid then
        --self.head_state:LoadSprite("Assets/Main/Sprites/UI/UIWorldTroop/zhuangtai1.png")
        curTxtColor = WorldGreenColor
        self.troop_select.color = WorldGreenColor
    elseif selfAllianceId~=nil and selfAllianceId~="" and selfAllianceId == marchInfo.allianceUid then
        --self.head_state:LoadSprite("Assets/Main/Sprites/UI/UIWorldTroop/zhuangtai4.png")
        curTxtColor = WorldBlueColor
        self.troop_select.color = WorldBlueColor
    else
        --self.head_state:LoadSprite("Assets/Main/Sprites/UI/UIWorldTroop/zhuangtai2.png")
        local isCrossServer = false
        if marchInfo.srcServer~=nil and marchInfo.srcServer ~= LuaEntry.Player:GetSelfServerId() then
            isCrossServer = true
        end
        if isCrossServer ==true then
            curTxtColor = WorldRedColor
            self.troop_select.color = WorldRedColor
        elseif DataCenter.WorldNewsDataManager:GetIsAttackerByUid(marchInfo.ownerUid)==true then
            curTxtColor = WorldRedColor
            self.troop_select.color = WorldRedColor
        elseif DataCenter.GloryManager:GetIsFightServer(marchInfo.srcServer) == true then
            curTxtColor = WorldRedColor
            self.troop_select.color = WorldRedColor
        elseif LuaEntry.Player.serverType == ServerType.EDEN_SERVER then
            if marchInfo.allianceUid~=nil and marchInfo.allianceUid~="" and DataCenter.GloryManager:IsSameCampByAllianceId(marchInfo.allianceUid) ==true then
                curTxtColor = WorldYellowColor
                self.troop_select.color = WorldYellowColor
            else
                curTxtColor = WorldRedColor
                self.troop_select.color = WorldRedColor
            end
        else
            local fightAllianceId = DataCenter.AllianceCompeteDataManager:GetFightAllianceId()
            if fightAllianceId~=nil and fightAllianceId~="" and fightAllianceId == marchInfo.allianceUid then
                curTxtColor = WorldRedColor
                self.troop_select.color = WorldRedColor
            else
                curTxtColor = WorldWhiteColor
                self.troop_select.color = WorldWhiteColor
            end
        end
    end
    if curTxtColor~=self.curTxtColor then
        self.player_name:Set_color(curTxtColor.r,curTxtColor.g,curTxtColor.b,curTxtColor.a)
        self.attack_name:Set_color(curTxtColor.r,curTxtColor.g,curTxtColor.b,curTxtColor.a)
        self.solider_num:Set_color(curTxtColor.r,curTxtColor.g,curTxtColor.b,curTxtColor.a)
        self.curTxtColor = curTxtColor
    end
end

local function SetHP(self,hp,maxhp)
    self.hp_red_slider.fillAmount = math.min((self.cacheBloodHp/math.max(maxhp,1)),1)
    local percent =  hp/math.max(maxhp,1)
    self.hp_spr.gameObject:SetActive(true)
    local spr = ""
    if percent<0.3 then
        spr ="Assets/Main/Sprites/UI/UIWorldBattle/UIWorldBattle_pro_player_red.png"
    elseif percent>=0.3 and percent<0.7 then
        spr ="Assets/Main/Sprites/UI/UIWorldBattle/UIWorldBattle_pro_player_yellow.png"
    elseif percent>=0.7 then
        spr ="Assets/Main/Sprites/UI/UIWorldBattle/UIWorldBattle_pro_player_green.png"
    end
    if self.cacheHpImg~=spr then
        self.hp_spr:LoadSprite(spr)
        self.cacheHpImg =spr
    end
    self.cacheBloodHp = hp
    self.hp_slider.fillAmount = math.min((hp/math.max(maxhp,1)),1)
end

local function SetAnger(self,anger,maxAnger)
    if self.hasCarAnger ==false then
        if maxAnger~=nil and maxAnger>0 and anger >= maxAnger then
            --self.anger_effect:SetActive(false)
            --self.anger_effect:SetActive(true)
        end
        self.anger_slider.fillAmount = math.min((anger/math.max(maxAnger,1)),1)
    end
end

local function SetCarAnger(self,anger,maxAnger)
    if self.hasCarAnger ==true then
        if maxAnger~=nil and maxAnger>0 and anger >= maxAnger then
            --self.anger_effect:SetActive(false)
            --self.anger_effect:SetActive(true)
        end
        self.car_anger_slider.fillAmount = math.min((anger/math.max(maxAnger,1)),1)
    end
end

local function SetSoldierNum(self,num)
    if self.cacheSoldierNum ~= num then
        self.solider_num.text = ""
        self.solider_num.text = string.GetFormattedSeperatorNum(num)
        self.cacheSoldierNum = num
    end
end

local function SetSelectCircle(self,value)
    self.select_obj.gameObject:SetActive(value)
    self.name_bg.gameObject:SetActive(value)
    self.attack_name_obj:SetActive(value ==false)
end

local function ShowBattleRedName(self)
    if self.curTxtColor ~=  WorldRedColor then
        self.curTxtColor =  WorldRedColor
        self.player_name:Set_color(WorldRedColor.r,WorldRedColor.g,WorldRedColor.b,WorldRedColor.a)
        self.attack_name:Set_color(WorldRedColor.r,WorldRedColor.g,WorldRedColor.b,WorldRedColor.a)
        self.solider_num:Set_color(WorldRedColor.r,WorldRedColor.g,WorldRedColor.b,WorldRedColor.a)
        self.troop_select.color = WorldRedColor
    end
end
local function SetForWasteland(self, gameObject)
    --local rotation = gameObject.transform.rotation
    --local qua = rotation.eulerAngles
    --self.troop_select.gameObject.transform.localRotation = Quaternion.Euler(0, 0, -qua.y)
    local icon = LoadPath.HeroIconsSmallPath.."hero_icon_1006"
    self.head_icon:LoadSprite(icon)
    local heroName = Localization:GetString("151006")
    self:SetName(heroName)
    self.name_bg.gameObject:SetActive(false)
    self:SetHP(1, 1)
end

local function OnClick(self)
    if self.marchUuid~=nil and self.marchUuid~=0 then
        UIUtil.OnClickWorldTroop(self.marchUuid)
    end
end

local function OnEdenClick(self)
    if self.eden_point_num~=nil and self.eden_point_num>=0 and self.marchOwnerUid == LuaEntry.Player.uid then
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIGuideEdenWarTips,{anim = true, playEffect = false},3,self.eden_point_num)
    end
end

local function RefreshSlider(self,value)
    if value >= 0 and value <= 1 then
        self.slider.value = value
        local img = "Assets/Main/Sprites/UI/Common/New/Common_pro_green.png"
        if value<0.3 then
            img = "Assets/Main/Sprites/UI/Common/New/Common_pro_red.png"
        elseif value>=0.3 and value<0.8 then
            img = "Assets/Main/Sprites/UI/Common/New/Common_pro_yellow.png"
        end
        if img~= self.cacheEdenSliderImg then
            self.fill_img:LoadSprite(img)
            self.cacheEdenSliderImg = img
        end
    end
end
TroopHeadUI.SetForWasteland = SetForWasteland
TroopHeadUI.OnCreate = OnCreate
TroopHeadUI.OnDestroy = OnDestroy
TroopHeadUI.ComponentDefine = ComponentDefine
TroopHeadUI.ComponentDestroy = ComponentDestroy
TroopHeadUI.ShowMarchInfo =ShowMarchInfo
TroopHeadUI.SetName = SetName
TroopHeadUI.SetHeadCircle = SetHeadCircle
TroopHeadUI.SetHP = SetHP
TroopHeadUI.SetAnger =SetAnger
TroopHeadUI.SetSoldierNum = SetSoldierNum
TroopHeadUI.SetSelectRotation = SetSelectRotation
TroopHeadUI.ShowExploreInfo = ShowExploreInfo
TroopHeadUI.ShowInBattleMarch=ShowInBattleMarch
TroopHeadUI.SetTransformPositon=SetTransformPositon
TroopHeadUI.ShowAnger=ShowAnger
TroopHeadUI.ShowUseSkill=ShowUseSkill
TroopHeadUI.CreateUseSkillEffect=CreateUseSkillEffect
TroopHeadUI.Hit=Hit
TroopHeadUI.SetSelectCircle =SetSelectCircle
TroopHeadUI.ShowBattleRedName = ShowBattleRedName
TroopHeadUI.OnClick =OnClick
TroopHeadUI.SetCarAnger = SetCarAnger
TroopHeadUI.SetEdenPoint = SetEdenPoint
TroopHeadUI.CheckEdenPoint = CheckEdenPoint
TroopHeadUI.UpdateEdenPoint = UpdateEdenPoint
TroopHeadUI.AddTimer =AddTimer
TroopHeadUI.DeleteTimer = DeleteTimer
TroopHeadUI.OnEdenClick = OnEdenClick
TroopHeadUI.RefreshSlider = RefreshSlider
return TroopHeadUI