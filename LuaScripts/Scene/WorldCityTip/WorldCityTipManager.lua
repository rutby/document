---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2023/7/19 21:55
---
local WorldCityTipManager = BaseClass("WorldCityTipManager", Singleton)
local ResourceManager = CS.GameEntry.Resource
local AlliancePassTip = require "Scene.WorldCityTip.AlliancePassTip"
local StrongHoldTip = require "Scene.WorldCityTip.StrongHoldTip"
local EdenAllianceCityTip = require "Scene.WorldCityTip.EdenAllianceCityTip"
local function __init(self)
    self.allPassTips = {}
    self.OnCreatePassTips ={}
    self.allStrongHoldTips = {}
    self.OnCreateStrongHoldTips ={}
    self.tipDict = {} -- <cityId: int, { tip: AllianceCityTip, req: InstanceRequest }>
    self.notShowTipFlag = {}--<cityId: int,value:true>
    self.lodCache = 0
    self:AddListener()
end

local function __delete(self)
    self:RemoveListener()
    self:RemoveAllTips()
end

local function AddListener(self)
    EventManager:GetInstance():AddListener(EventId.ChangeCameraLod, self.ChangeCameraLodSignal)
    EventManager:GetInstance():AddListener(EventId.OnEnterWorld, self.OnEnterWorld)
    EventManager:GetInstance():AddListener(EventId.OnEnterCity, self.OnEnterCity)
    EventManager:GetInstance():AddListener(EventId.OnEnterCrossServer, self.RemoveAllTips)
    EventManager:GetInstance():AddListener(EventId.OnQuitCrossServer, self.RemoveAllTips)
    EventManager:GetInstance():AddListener(EventId.StrongHoldOwnerInfoReceived,self.ShowStrongHold)
    EventManager:GetInstance():AddListener(EventId.StrongHoldOwnerInfoChanged,self.ShowStrongHold)
    EventManager:GetInstance():AddListener(EventId.WorldPassOwnerInfoReceived,self.ShowWorldPass)
    EventManager:GetInstance():AddListener(EventId.WorldPassOwnerInfoChanged,self.ShowWorldPass)
    EventManager:GetInstance():AddListener(EventId.DeclareWar, self.AllianceCityRefreshDeclare)
    EventManager:GetInstance():AddListener(EventId.WorldCityOwnerInfoReceived,self.AllianceCityNameChange)
    EventManager:GetInstance():AddListener(EventId.WorldCityOwnerInfoChanged,self.AllianceCityNameChange)
    EventManager:GetInstance():AddListener(EventId.AllianceCityInView, self.AllianceCityInViewSignal)
    EventManager:GetInstance():AddListener(EventId.AllianceCityOutView, self.AllianceCityOutViewSignal)
end

local function RemoveListener(self)
    EventManager:GetInstance():RemoveListener(EventId.ChangeCameraLod, self.ChangeCameraLodSignal)
    EventManager:GetInstance():RemoveListener(EventId.OnEnterWorld, self.OnEnterWorld)
    EventManager:GetInstance():RemoveListener(EventId.OnEnterCity, self.OnEnterCity)
    EventManager:GetInstance():RemoveListener(EventId.OnEnterCrossServer, self.RemoveAllTips)
    EventManager:GetInstance():RemoveListener(EventId.OnQuitCrossServer, self.RemoveAllTips)
    EventManager:GetInstance():RemoveListener(EventId.StrongHoldOwnerInfoReceived,self.ShowStrongHold)
    EventManager:GetInstance():RemoveListener(EventId.StrongHoldOwnerInfoChanged,self.ShowStrongHold)
    EventManager:GetInstance():RemoveListener(EventId.WorldPassOwnerInfoReceived,self.ShowWorldPass)
    EventManager:GetInstance():RemoveListener(EventId.WorldPassOwnerInfoChanged,self.ShowWorldPass)
    EventManager:GetInstance():RemoveListener(EventId.DeclareWar, self.AllianceCityRefreshDeclare)
    EventManager:GetInstance():RemoveListener(EventId.WorldCityOwnerInfoReceived,self.AllianceCityNameChange)
    EventManager:GetInstance():RemoveListener(EventId.WorldCityOwnerInfoChanged, self.AllianceCityNameChange)
    EventManager:GetInstance():RemoveListener(EventId.AllianceCityInView, self.AllianceCityInViewSignal)
    EventManager:GetInstance():RemoveListener(EventId.AllianceCityOutView, self.AllianceCityOutViewSignal)
end

local function ChangeCameraLodSignal(lod)
    WorldCityTipManager:GetInstance():UpdateLod(lod)
end

local function RemoveAllTips(data)
    WorldCityTipManager:GetInstance():RemoveAllTip()
end
local function OnEnterWorld(data)
    WorldCityTipManager:GetInstance():TryShowWorldPass()
    WorldCityTipManager:GetInstance():TryShowStrongHold()
end
local function OnEnterCity(data)
    WorldCityTipManager:GetInstance():RemoveAllTip()
end
local function RemoveAllTip(self)
    if self.allPassTips~=nil then
        for k,v in pairs(self.allPassTips) do
            local request = v.request
            v:OnDestroy()
            request:Destroy()
        end
        self.allPassTips = {}
    end
    if self.OnCreatePassTips~=nil then
        for k,v in pairs(self.OnCreatePassTips) do
            v:Destroy()
        end
        self.OnCreatePassTips = {}
    end
    if self.allStrongHoldTips~=nil then
        for k,v in pairs(self.allStrongHoldTips) do
            local request = v.request
            v:OnDestroy()
            request:Destroy()
        end
        self.allStrongHoldTips = {}
    end
    if self.OnCreateStrongHoldTips~=nil then
        for k,v in pairs(self.OnCreateStrongHoldTips) do
            v:Destroy()
        end
        self.OnCreateStrongHoldTips ={}
    end
    if self.tipDict ~= nil then
        for _, t in pairs(self.tipDict) do
            if t.tip ~= nil then
                t.tip:OnDestroy()
            end
            if t.req ~= nil then
                t.req:Destroy()
            end
        end
        self.tipDict = {}
    end
end


local function ShowWorldPass(data)
    WorldCityTipManager:GetInstance():TryShowWorldPass()
end
local function ShowStrongHold(data)
    WorldCityTipManager:GetInstance():TryShowStrongHold()
end
local function TryShowWorldPass(self)
    if SceneUtils.GetIsInWorld() == false then
        return
    end
    if LuaEntry.Player.serverType ~= ServerType.EDEN_SERVER then
        return
    end
    local dic = DataCenter.AllianceCityTemplateManager:GetAlliancePass()
    if dic~=nil then
        for k,v in pairs(dic) do
            self:CreatePassTip(v)
        end
    end
end
local function TryShowStrongHold(self)
    if SceneUtils.GetIsInWorld() == false then
        return
    end
    if LuaEntry.Player.serverType ~= ServerType.EDEN_SERVER then
        return
    end
    local dic = DataCenter.AllianceCityTemplateManager:GetStrongHold()
    if dic~=nil then
        for k,v in pairs(dic) do
            self:CreateStrongHoldTip(v)
        end
    end
end

local function CreatePassTip(self,checkTemplate)
    if LuaEntry.Player.serverType == ServerType.DRAGON_BATTLE_FIGHT_SERVER then
        return
    end
    local id = checkTemplate.id
    if self.allPassTips[id] ==nil and self.OnCreatePassTips[id] == nil and self.notShowTipFlag[id] ==nil then
        local request = ResourceManager:InstantiateAsync(UIAssets.AlliancePassTip)
        self.OnCreatePassTips[id] = request
        request:completed('+', function()
            if request.isError then
                return
            end
            if request.gameObject ==nil then
                self.OnCreatePassTips[id] = nil
                return
            end
            self.OnCreatePassTips[id] = nil
            request.gameObject:SetActive(true)
            request.gameObject.transform:SetParent(CS.SceneManager.World.DynamicObjNode)
            request.gameObject.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)

            local template = checkTemplate
            local tip = AlliancePassTip.New()
            tip:OnCreate(request)
            tip:SetData(template)
            tip:SetLod(self.lodCache)
            self.allPassTips[id] = tip
        end)
    elseif self.allPassTips[id]~=nil then
        self.allPassTips[id]:SetAllianceColor(id)
        self.allPassTips[id]:SetName(id)
    end
end
local function DestroyPassTip(self, id)
    local temp = self.allPassTips[id]
    if temp ~= nil then
        local request = temp.request
        temp:OnDestroy()
        request:Destroy()
        self.allPassTips[id] = nil
    end
    temp = self.OnCreatePassTips[id]
    if temp ~= nil then
        temp:Destroy()
        self.OnCreatePassTips[id] = nil
    end
end
local function CreateStrongHoldTip(self,checkTemplate)
    if LuaEntry.Player.serverType == ServerType.DRAGON_BATTLE_FIGHT_SERVER then
        return
    end
    local id = checkTemplate.id
    if self.allStrongHoldTips[id] ==nil and self.OnCreateStrongHoldTips[id] == nil and self.notShowTipFlag[id] ==nil then
        local request = ResourceManager:InstantiateAsync(UIAssets.AlliancePassTip)
        self.OnCreateStrongHoldTips[id] = request
        request:completed('+', function()
            if request.isError then
                return
            end
            if request.gameObject ==nil then
                self.OnCreateStrongHoldTips[id] = nil
                return
            end
            self.OnCreateStrongHoldTips[id] = nil
            request.gameObject:SetActive(true)
            request.gameObject.transform:SetParent(CS.SceneManager.World.DynamicObjNode)
            request.gameObject.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)

            local template = checkTemplate
            local tip = StrongHoldTip.New()
            tip:OnCreate(request)
            tip:SetData(template)
            tip:SetLod(self.lodCache)
            self.allStrongHoldTips[id] = tip
        end)
    elseif self.allStrongHoldTips[id]~=nil then
        self.allStrongHoldTips[id]:SetAllianceColor(id)
        self.allStrongHoldTips[id]:SetName(id)
        self.allStrongHoldTips[id]:CheckCityDeclare()
    end
end
local function DestroyStrongHoldTip(self, id)
    local temp = self.allStrongHoldTips[id]
    if temp ~= nil then
        local request = temp.request
        temp:OnDestroy()
        request:Destroy()
        self.allStrongHoldTips[id] = nil
    end
    temp = self.OnCreateStrongHoldTips[id]
    if temp ~= nil then
        temp:Destroy()
        self.OnCreateStrongHoldTips[id] = nil
    end
end

local function AllianceCityNameChange(data)
    WorldCityTipManager:GetInstance():RefreshAllianceCityName()
end

local function RefreshAllianceCityName(self)
    for k,v in pairs(self.tipDict) do
        if v.tip~=nil then
            v.tip:SetName(k)
            v.tip:SetAllianceColor(k)
        end
    end
end

local function AllianceCityInViewSignal(id)
    WorldCityTipManager:GetInstance():ShowTip(id, true)
end

local function AllianceCityOutViewSignal(id)
    WorldCityTipManager:GetInstance():ShowTip(id, false)
end
local function SetCanShowFlag(self,id,canShow,worldCityType)
    if canShow then
        if self.notShowTipFlag ~= nil and self.notShowTipFlag[id]~=nil then
            self.notShowTipFlag[id] = nil
            if worldCityType == WorldCityType.AllianceCity then
                WorldCityTipManager:GetInstance():ShowTip(id, true)
            elseif worldCityType == WorldCityType.AlliancePass then
                local template = DataCenter.AllianceCityTemplateManager:GetTemplate(id)
                if template then
                    WorldCityTipManager:GetInstance():CreatePassTip(template)
                end
            elseif worldCityType == WorldCityType.StrongHold then
                local template = DataCenter.AllianceCityTemplateManager:GetTemplate(id)
                if template then
                    WorldCityTipManager:GetInstance():CreateStrongHoldTip(template)
                end
            end
            
        end
    else
        if self.notShowTipFlag ~= nil and self.notShowTipFlag[id]==nil then
            self.notShowTipFlag[id] = true
            if worldCityType == WorldCityType.AllianceCity then
                WorldCityTipManager:GetInstance():ShowTip(id, false)
            elseif worldCityType == WorldCityType.AlliancePass then
                WorldCityTipManager:GetInstance():DestroyPassTip(id)
            elseif worldCityType == WorldCityType.StrongHold then
                WorldCityTipManager:GetInstance():DestroyStrongHoldTip(id)
            end
        end
    end
end

local function ShowTip(self, id, show)
    if show and self.tipDict[id] == nil and self.notShowTipFlag[id] == nil then
        self:CreateTip(id)
    elseif not show and self.tipDict[id] ~= nil then
        self:DestroyTip(id)
    end
end

local function CreateTip(self, id)
    if LuaEntry.Player.serverType == ServerType.DRAGON_BATTLE_FIGHT_SERVER then
        return
    end
    if LuaEntry.Player.serverType ~= ServerType.EDEN_SERVER then
        return
    end
    local checkTemplate = DataCenter.AllianceCityTemplateManager:GetTemplate(id)
    if checkTemplate == nil then
        return
    end
    local request = ResourceManager:InstantiateAsync(UIAssets.EdenAllianceCityTip)
    request:completed('+', function()
        if request.isError then
            return
        end
        if request.gameObject ==nil then
            self.tipDict[id] = nil
            return
        end
        request.gameObject:SetActive(true)
        request.gameObject.transform:SetParent(CS.SceneManager.World.DynamicObjNode)
        request.gameObject.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)

        local template = DataCenter.AllianceCityTemplateManager:GetTemplate(id)
        local tip = EdenAllianceCityTip.New()
        tip:OnCreate(request)
        tip:SetLod(self.lodCache)
        tip:SetData(template)
        self.tipDict[id] = { tip = tip, req = request }
    end)
    self.tipDict[id] = { tip = nil, req = request }
end

local function DestroyTip(self, id)
    local t = self.tipDict[id]
    if t ~= nil then
        if t.tip ~= nil then
            t.tip:OnDestroy()
        end
        if t.req ~= nil then
            t.req:Destroy()
        end
    end
    self.tipDict[id] = nil
end

local function AllianceCityRefreshDeclare(data)
    WorldCityTipManager:GetInstance():RefreshDeclare()
end

local function RefreshDeclare(self)
    for k,v in pairs(self.allPassTips) do
        v:CheckCityDeclare()
    end
    for k,v in pairs(self.allStrongHoldTips) do
        v:CheckCityDeclare()
    end
    for k,v in pairs(self.tipDict) do
        if v.tip~=nil then
            v.tip:CheckCityDeclare()
        end
    end
end

local function UpdateTipLod(self)
    for k,v in pairs(self.allPassTips) do
        v:SetLod(self.lodCache)
    end
    for k,v in pairs(self.allStrongHoldTips) do
        v:SetLod(self.lodCache)
    end
    for k,v in pairs(self.tipDict) do
        if v.tip~=nil then
            v.tip:SetLod(self.lodCache)
        end
    end
end

local function UpdateLod(self, lod)
    if self.lodCache ~=lod then
        self.lodCache =lod
        self:UpdateTipLod()
    end
end

WorldCityTipManager.OnEnterWorld = OnEnterWorld
WorldCityTipManager.OnEnterCity = OnEnterCity
WorldCityTipManager.__init = __init
WorldCityTipManager.__delete = __delete
WorldCityTipManager.AddListener = AddListener
WorldCityTipManager.RemoveListener = RemoveListener
WorldCityTipManager.UpdateLod = UpdateLod
WorldCityTipManager.ChangeCameraLodSignal = ChangeCameraLodSignal
WorldCityTipManager.RemoveAllTips =RemoveAllTips
WorldCityTipManager.RemoveAllTip = RemoveAllTip
WorldCityTipManager.ShowWorldPass = ShowWorldPass
WorldCityTipManager.ShowStrongHold = ShowStrongHold
WorldCityTipManager.TryShowWorldPass = TryShowWorldPass
WorldCityTipManager.TryShowStrongHold =TryShowStrongHold
WorldCityTipManager.CreatePassTip = CreatePassTip
WorldCityTipManager.DestroyPassTip = DestroyPassTip
WorldCityTipManager.CreateStrongHoldTip = CreateStrongHoldTip
WorldCityTipManager.DestroyStrongHoldTip =DestroyStrongHoldTip
WorldCityTipManager.AllianceCityRefreshDeclare =AllianceCityRefreshDeclare
WorldCityTipManager.RefreshDeclare = RefreshDeclare
WorldCityTipManager.UpdateTipLod = UpdateTipLod
WorldCityTipManager.AllianceCityNameChange = AllianceCityNameChange
WorldCityTipManager.RefreshAllianceCityName =RefreshAllianceCityName
WorldCityTipManager.AllianceCityInViewSignal =AllianceCityInViewSignal
WorldCityTipManager.AllianceCityOutViewSignal =AllianceCityOutViewSignal
WorldCityTipManager.SetCanShowFlag =SetCanShowFlag
WorldCityTipManager.ShowTip =ShowTip
WorldCityTipManager.CreateTip =CreateTip
WorldCityTipManager.DestroyTip =DestroyTip
return WorldCityTipManager