---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 24/4/2024 上午11:54
---
local WorldMonsterBloodTipManager = BaseClass("WorldMonsterBloodTipManager", Singleton)
local MonsterHeadUI = require "Scene.WorldMonsterBloodTip.WorldMonsterBloodTip"
local ResourceManager = CS.GameEntry.Resource
local Localization = CS.GameEntry.Localization

local function __init(self)
    self.marchHeadTopUIList = {}
    self.isOnCreateList = {}
    self.cacheBattleHeadList = {}
    self:AddListener()
end

local function __delete(self)
    self:RemoveListener()
    self.marchHeadTopUIList = nil
    self.isOnCreateList = nil
    self.cacheBattleHeadList = nil
end
local function AddListener(self)
    EventManager:GetInstance():AddListener(EventId.ShowMonsterHeadInBattle, self.ShowTroopHeadInBattle)
    EventManager:GetInstance():AddListener(EventId.ShowMonsterBattleValue, self.ShowTroopBattleSignal)
    EventManager:GetInstance():AddListener(EventId.HideMonsterHead, self.HideTroopHead)
    EventManager:GetInstance():AddListener(EventId.ChangeCameraLod, self.ChangeCameraLodSignal)
end

local function RemoveListener(self)
    EventManager:GetInstance():RemoveListener(EventId.ShowMonsterHeadInBattle, self.ShowTroopHeadInBattle)
    EventManager:GetInstance():RemoveListener(EventId.ShowMonsterBattleValue, self.ShowTroopBattleSignal)
    EventManager:GetInstance():RemoveListener(EventId.HideMonsterHead, self.HideTroopHead)
    EventManager:GetInstance():RemoveListener(EventId.ChangeCameraLod, self.ChangeCameraLodSignal)
end

local function ChangeCameraLodSignal(lod)
    WorldMonsterBloodTipManager:GetInstance():UpdateLod(lod)
end

local function InitConfig(self)
    self.maxAnger = LuaEntry.DataConfig:TryGetNum("battle_config", "k12")
    self.maxCarAnger = LuaEntry.DataConfig:TryGetNum("formation_skill", "k2")
end
local function UpdateLod(self, lod)
    if self.lodCache ~=lod then
        self.lodCache =lod
        if self.lodCache>=1 and self.lodCache<=3 then
            self:CreateCacheBattleHeadList()
        end
    end
end

local function RemoveAllEffect(self)
    for k,v in pairs(self.marchHeadTopUIList) do
        local request = v.request
        v:ComponentDestroy()
        request:Destroy()
    end
    self.marchHeadTopUIList = {}
    for k,v in pairs(self.isOnCreateList) do
        v:Destroy()
    end
    self.isOnCreateLists = {}
end

local function CreateCacheBattleHeadList(self)
    if self.cacheBattleHeadList~=nil then
        for k,v in pairs(self.cacheBattleHeadList) do
            self:ShowHeadUI(k,true)
        end
        self.cacheBattleHeadList = {}
    end
end
local function ShowTroopHeadInBattle(uuid)
    WorldMonsterBloodTipManager:GetInstance():ShowHeadUI(uuid,true)
end

local function HideTroopHead(uuid)
    WorldMonsterBloodTipManager:GetInstance():HideHeadUI(uuid)
end

local function ShowTroopBattleSignal(data)
    local str = data
    if str~=nil then
        local strArr = string.split(str,";")
        if #strArr>3 then
            local marchUuid = tonumber(strArr[1])
            local anger = tonumber(strArr[2])
            local hp = tonumber(strArr[3])
            local hpMax = tonumber(strArr[4])
            local carAnger = 0
            if #strArr>4 then
                carAnger = tonumber(strArr[5])
            end
            WorldMonsterBloodTipManager:GetInstance():UpdateBattleHeadUI(marchUuid,anger,hp,hpMax,carAnger)
        end
    end
end

local function ShowHeadUI(self,marchUuid,isBattle)
    if self.showHead ==false then
        return
    end
    local troop = DataCenter.WorldPointManager:GetObjectByUuid(marchUuid)
    if troop~=nil then
        self:ShowMonsterBlood(troop,marchUuid,isBattle)
    end
end

local function ShowMonsterBlood(self,troop,marchUuid,isBattle)
    if self.showHead ==false then
        return
    end
    local transform = troop:GetTransform()
    local info = DataCenter.WorldPointManager:GetPointInfoByUuid(marchUuid)
    if info~=nil then
        if self.marchHeadTopUIList[marchUuid] == nil and self.isOnCreateList[marchUuid]==nil then
            if isBattle then
                local request = ResourceManager:InstantiateAsync(UIAssets.WorldTroopMonsterPro)
                self.isOnCreateList[marchUuid] = request
                request:completed('+', function()
                    self.isOnCreateList[marchUuid] =nil
                    if request.isError then
                        return
                    end

                    request.gameObject:SetActive(true)
                    if transform==nil then
                        request:Destroy()
                    end
                    request.gameObject.transform:SetParent(transform)
                    request.gameObject.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
                    request.gameObject.transform:Set_localPosition(ResetPosition.x, ResetPosition.y, ResetPosition.z)
                    local tileUI = MonsterHeadUI.New()
                    tileUI:OnCreate(request)
                    self.marchHeadTopUIList[marchUuid] = tileUI
                    self.marchHeadTopUIList[marchUuid]:ShowMarchInfo(info,true)
                end)
            end
        else
            if self.marchHeadTopUIList[marchUuid]~=nil then
                if isBattle then
                    self.marchHeadTopUIList[marchUuid]:ShowMarchInfo(info,false)
                else
                    self:HideHeadUI(marchUuid)
                end

            end
        end
    end
end

local function HideHeadUI(self,marchUuid)
    if self.marchHeadTopUIList[marchUuid]~=nil or self.isOnCreateList[marchUuid]~=nil then
        local headUI = self.marchHeadTopUIList[marchUuid]
        if headUI~=nil then
            local request = headUI.request
            headUI:OnDestroy()
            if request~=nil then
                request:Destroy()
            end
            self.marchHeadTopUIList[marchUuid] = nil
        end
        local temp = self.isOnCreateList[marchUuid]
        if temp ~= nil then
            temp:Destroy()
            self.isOnCreateList[marchUuid] = nil
        end
    end
end

local function UpdateBattleHeadUI(self,marchUuid,anger,hp,hpMax,carAnger)
    if self.lodCache~=nil and self.lodCache>3 then
        return
    end
    if self.showHead ==false then
        return
    end
    if self.marchHeadTopUIList[marchUuid]~=nil then
        local headUI = self.marchHeadTopUIList[marchUuid]
        headUI:SetAnger(anger,self.maxAnger)
        headUI:SetCarAnger(carAnger,self.maxCarAnger)
        headUI:SetHP(hp,hpMax)
    end
end



WorldMonsterBloodTipManager.__init = __init
WorldMonsterBloodTipManager.__delete = __delete
WorldMonsterBloodTipManager.AddListener =AddListener
WorldMonsterBloodTipManager.RemoveListener =RemoveListener
WorldMonsterBloodTipManager.ShowTroopHeadInBattle =ShowTroopHeadInBattle
WorldMonsterBloodTipManager.HideTroopHead =HideTroopHead
WorldMonsterBloodTipManager.ShowTroopBattleSignal =ShowTroopBattleSignal
WorldMonsterBloodTipManager.ShowHeadUI =ShowHeadUI
WorldMonsterBloodTipManager.HideHeadUI =HideHeadUI
WorldMonsterBloodTipManager.UpdateBattleHeadUI= UpdateBattleHeadUI
WorldMonsterBloodTipManager.ShowMonsterBlood =ShowMonsterBlood
WorldMonsterBloodTipManager.ChangeCameraLodSignal = ChangeCameraLodSignal
WorldMonsterBloodTipManager.UpdateLod = UpdateLod
WorldMonsterBloodTipManager.CreateCacheBattleHeadList = CreateCacheBattleHeadList
WorldMonsterBloodTipManager.RemoveAllEffect = RemoveAllEffect
WorldMonsterBloodTipManager.InitConfig = InitConfig
return WorldMonsterBloodTipManager