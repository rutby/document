---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1022.
--- DateTime: 2023/4/12 12:26
---特效管理类，可以放到场景中就是管理场景特效，放到人物中，就是管理人物自身特效
local SU_ModuleBase = require "Scene.PVEBattleLevel.SubModule.SU_ModuleBase"
local VFXManager = BaseClass("VFXManager",SU_ModuleBase)
local VFXBase = require("Scene.PVEBattleLevel.VFX.VFXBase")
local TimerPauseVFX = require("Scene.PVEBattleLevel.VFX.TimerPauseVFX")
local WeaponTrackVFX = require("Scene.PVEBattleLevel.VFX.WeaponTrackVFX")
local ShieldVFX = require("Scene.PVEBattleLevel.VFX.ShieldVFX")

VFXType = {
    Normal = 1,
    TimerPause = 2,
    WeaponTrack = 3,
    Shield = 4,
}

function VFXManager:Init()
    self.m_particles = {}
    self.m_effectCompleteHandler = BindCallback(self,self.OnVFXComplete)
end

function VFXManager:UnInit()
    self:Destroy()
end

function VFXManager:OnUpdate(deltaTime)
    for _,effect in ipairs(self.m_particles) do
        effect:OnUpdate(deltaTime)
    end
end

function VFXManager:CreateVFX(vfxId,parent)
    local id = Time.time
    local vfx
    local type = tonumber(GetTableData(TableName.PveVFX,vfxId,"type"))
    if type == VFXType.TimerPause then
        vfx = TimerPauseVFX.New(id,vfxId,self.m_effectCompleteHandler)
    elseif type == VFXType.WeaponTrack then
        vfx = WeaponTrackVFX.New(id,vfxId,self.m_effectCompleteHandler)
    elseif type == VFXType.Shield then
        vfx = ShieldVFX.New(id,vfxId,self.m_effectCompleteHandler)
    else
        vfx = VFXBase.New(id,vfxId,self.m_effectCompleteHandler)
    end
    vfx:SetParent(parent)
    vfx:Create()
    --self.m_particles[id] = vfx
    table.insert(self.m_particles,vfx)

    return vfx
end

function VFXManager:RemoveVFX(vfx)
    if vfx == nil then
        return
    end
    --local id = vfx:GetId()
    vfx:Destroy()
    --self.m_particles[id] = nil
    table.removebyvalue(self.m_particles,vfx)
end

function VFXManager:OnVFXComplete(vfx)
    self:RemoveVFX(vfx)
end

function VFXManager:DestroyParticles()
	-- 这里Init函数可能还没调用到，就Destroy了
	if self.m_particles then
	    for k,v in ipairs(self.m_particles) do
	        v:Destroy()
	        self.m_particles[k] = nil
	    end
	end
    self.m_particles = {}
end

function VFXManager:Destroy()
    self:DestroyParticles()
end

return VFXManager