---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1022.
--- DateTime: 2023/3/20 14:32
---美女角色
local CharacterBaseInfo = require("DataCenter.Survival.Character.CharacterBaseInfo")
local CharacterBase = require("Scene.PVEBattleLevel.Character.CharacterBase")
local LadyRole = BaseClass("LadyRole",CharacterBase)

local Anim =
{
    Idle = "Idle",
    Run = "Run",
    Attack = "Attack",
    Build = "Build"
}

local State = {
    Normal = "Normal",
    Plant = "Plant",
}

function LadyRole:__init(battleLevel,objId)
    local info = CharacterBaseInfo.New()
    info:SetTemplate({ attack = 1,defence = 1,attackRange = 1,attackSpeed = 1,moveSpeed = 1})

    CharacterBase.__init(self,battleLevel,objId,info)

    self.targetRotation = Quaternion.New()
end

function LadyRole:__assetCreateComplete()
    CharacterBase.__assetCreateComplete(self)
    
    self.m_gameObject.name = "LadyRole"

    if self.spawnPos ~= nil then
        self:SetPosition(self.spawnPos)
    end
    
    self.m_state = State.Normal
end

function LadyRole:InitSpawnPos(pos)
    self.spawnPos = pos
end

function LadyRole:OnUpdate(deltaTime)
    if self.m_isPause then
        return
    end

    CharacterBase.OnUpdate(self,deltaTime)
end

local PlayerFlashMoveDistance
function LadyRole:MoveToBuild(bUuid,callback)
    --先去最近的储物箱
    local buildData = DataCenter.BuildManager:GetNearestBuildByType(BuildingTypes.Survival_Cabinet, self:GetPosition())
    if buildData ~= nil then
        self:DoMove(buildData,function(value)
            if value == true then
                if callback ~= nil then
                    callback()
                end
            else
                self.delayTimer = TimerManager:GetInstance():DelayInvoke(function()
                    self:StopDelayTimer()
                    self:MoveToTargetBuild(bUuid,callback)
                end,1)
            end
        end)
    else
        if callback ~= nil then
            callback()
        end
    end
    
end

function LadyRole:MoveToTargetBuild(bUuid,callback)
    local buildData = DataCenter.BuildManager:GetBuildingDataByUuid(bUuid)
    if buildData ~= nil then
        self:DoMove(buildData,function(value)
            if value == true then
                if callback ~= nil then
                    callback()
                end
            else
                self:ShowProgress(bUuid,callback)
            end
        end)
    else
        if callback ~= nil then
            callback()
        end
    end
end

function LadyRole:DoMove(buildData,callback)
    local pt = buildData:GetCenterIndex()
    local buildPos = SceneUtils.TileIndexToWorld(pt)
    local circleRange = 1.3
    local buildDesTemplate = DataCenter.BuildTemplateManager:GetBuildingDesTemplate(buildData.itemId)
    if buildDesTemplate ~= nil then
        circleRange = (BuildingUtils.GetCircleRange(buildDesTemplate.tiles) + 1)
    end
    local playerPos = self:GetPosition()
    local dis = Vector3.Distance(buildPos,playerPos)
    local _dir = buildPos - playerPos
    _dir = Vector3.Normalize(_dir) * circleRange
    _dir.y = 0
    local targetPos = buildPos - _dir

    if PlayerFlashMoveDistance == nil then
        PlayerFlashMoveDistance = LuaEntry.DataConfig:TryGetNum("npc_performance_radius", "k8") --玩家瞬移检测距离
    end

    self.m_state = State.Plant

    if dis < PlayerFlashMoveDistance and not self.m_isPause then
        self.buildCallback = callback
        self:MovePath(targetPos,function()
            self.buildCallback = nil
            callback()
        end)
    else
        self:SetPosition(targetPos)
        self.targetRotation:Set(Quaternion.FastLookRotation(Vector3.Normalize(_dir), Vector3.up))
        self:SetRotation(self.targetRotation)
        callback()
    end
end

function LadyRole:ShowProgress(bUuid,callback)
    local totalTime = 3
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIPrograssBar, { anim = true }, {objId = bUuid,totalTime = totalTime})
    self.delayTimer = TimerManager:GetInstance():DelayInvoke(function()
        UIManager:GetInstance():DestroyWindow(UIWindowNames.UIPrograssBar)
        self.m_state = State.Normal
        self:StopDelayTimer()
        self:MovePath(self.spawnPos)
        if callback ~= nil then
            callback()
        end
    end,totalTime)
end

function LadyRole:SetAllCharacterActionState(actionState)
    CharacterBase.SetAllCharacterActionState(self,actionState)
    if self.m_isPause then
        if self.buildCallback ~= nil then
            self.buildCallback(true)
            self.buildCallback = nil
            self:StopDelayTimer()
        end
    end
end

function LadyRole:IsNormalState()
    return self.m_state == State.Normal
end

function LadyRole:GetMoveSpeed()
    return 5
end

function LadyRole:GetAnimatorPath()
    return "Model"
end

function LadyRole:GetDefaultAnimName()
    return Anim.Idle
end

function LadyRole:GetMoveAnimName()
    return Anim.Run
end

function LadyRole:GetType()
    return CharacterType.Npc
end

function LadyRole:GetPrefabName()
    return "Quinn_woman_pve"
end

function LadyRole:PrefabPath()
    return string.format("Assets/Main/Prefabs/PVELevel/%s.prefab", self:GetPrefabName())
end

function LadyRole:StopDelayTimer()
    if self.delayTimer ~= nil then
        self.delayTimer:Stop()
        self.delayTimer = nil
    end
end

function LadyRole:Destroy()
    self.buildCallback = nil
    self:StopDelayTimer()
    CharacterBase.Destroy(self)
end

return LadyRole