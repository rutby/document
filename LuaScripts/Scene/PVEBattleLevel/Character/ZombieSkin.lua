---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1022.
--- DateTime: 2023/4/25 16:47
---
local ZombieSkin = BaseClass("ZombieSkin")
local Resource = CS.GameEntry.Resource

--目前怪物用的主角资源，所以这里都是主角配置
--等以后用到怪物自己资源时，这里需要对应修改
local prefabPath = "Assets/_Art_LastDay/Models/Soldier/LastDayActor/prefab/%s.prefab"
local weaponPath = "Assets/_Art_LastDay/Models/Soldier/%s.prefab"
local rootBonePath = "Model/To_unity/DeformationSystem/Root"
local partRoot = "Model/To_unity"
local weaponRoot = "Model/To_unity/DeformationSystem/Root/guadian_R"

--对应aps_pve_part_zombie里的部件字段
local SkinPart = {
    Hat = "hat",
    Head = "head",
    Cloth = "cloth",
    Trousers = "pants",
    Shoe = "shoes",
    Weapon = "weapon",
}

function ZombieSkin:__init(transform,partId,layer)
    self.m_transform = transform:Find(partRoot)
    self.rootBoneTransform = transform:Find(rootBonePath)
    self.weaponRootTransform = transform:Find(weaponRoot) or transform:Find(weaponRootSimple)
    self.m_layer = layer
    self.m_parts = {}
    
    self:__initPart(partId)
end

function ZombieSkin:__initPart(partId)
    local partTemplate = DataCenter.PveZombieTemplateManager:GetPartTemplate(partId)

    if partTemplate == nil then
        Logger.LogError("ZombieSkin Error: not found zombie part template, id = "..tostring(partId))
        return
    end

    for _,partType in pairs(SkinPart) do
        local model = partTemplate[partType]
        if not string.IsNullOrEmpty(model) then
            local path = string.format(prefabPath,model)
            if partType == SkinPart.Weapon then
                path = string.format(weaponPath,model)
            end
            self:AddPart(partType,path)
        end
    end
end

function ZombieSkin:AddPart(partType,path)
    local currentEquip = self.m_parts[partType]
    if currentEquip ~= nil then
        return
    end

    local req = Resource:InstantiateAsync(path)
    req:completed("+", function()
        local gameObject = req.gameObject
        local transform = gameObject.transform

        if partType == SkinPart.Weapon then
            --武器不用绑定骨骼直接挂
            transform:SetParent(self.weaponRootTransform)
        else
            transform:SetParent(self.m_transform)
        end
        transform:Set_localPosition(0,0,0)
        transform.localRotation = Quaternion.identity
        transform:Set_localScale(1,1,1)

        gameObject.layer = self.m_layer
        self:SetLayer(transform)
        
        if partType ~= SkinPart.Weapon then
            self:BindBones(gameObject)
        end
    end)

    self.m_parts[partType] = req
end

function ZombieSkin:BindBones(part)
    if part == nil then
        return
    end

    local renderer = part:GetComponentInChildren(typeof(CS.UnityEngine.SkinnedMeshRenderer))
    if renderer == nil then
        return
    end

    local bones = renderer.bones
    local newBones = {}
    local bone
    for i = 0, bones.Length - 1 do
        bone = bones[i]
        if bone ~= nil then
            local t = self:FindBoneByName(self.rootBoneTransform,bone.name)
            table.insert(newBones,t)
        end
    end
    renderer.bones = newBones
end

function ZombieSkin:FindBoneByName(transform,name)
    if transform == nil or string.IsNullOrEmpty(name) then
        return nil
    end

    if transform.name == name then
        return transform
    end

    local target = nil
    local t = nil
    for i = 0, transform.childCount - 1 do
        t = self:FindBoneByName(transform:GetChild(i),name)
        if t ~= nil then
            target = t
            break
        end
    end

    return target
end

function ZombieSkin:SetLayer(transform)
    local rendererList = transform:GetComponentsInChildren(typeof(CS.UnityEngine.Renderer))
    local t
    local gameObject
    for i = 0, rendererList.Length - 1 do
        t = rendererList[i]
        gameObject = t.gameObject
        gameObject.layer = self.m_layer
    end
end

function ZombieSkin:RemovePaths()
    if self.m_parts ~= nil then
        for _,part in pairs(self.m_parts) do
            part:Destroy()
        end
        self.m_parts = nil
    end
end

function ZombieSkin:Destroy()
    self:RemovePaths()
    self.m_transform = nil
    self.rootBoneTransform = nil
    self.weaponRootTransform = nil
end

return ZombieSkin