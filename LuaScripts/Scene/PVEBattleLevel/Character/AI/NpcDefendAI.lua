---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1022.
--- DateTime: 2023/8/29 17:17
---NPC塔防AI
local NpcBaseAI = require("Scene.PVEBattleLevel.Character.AI.NpcBaseAI")
local NpcDefendAI = BaseClass("NpcDefendAI",NpcBaseAI)
local CharacterStateType = require("Scene.PVEBattleLevel.Character.State.CharacterStateType")
local Vector3_Distance2D = Vector3.Distance2D_XZ

local StateType = {
    FindTargetState = "FindTargetState",
    CheckAttackState = "CheckAttackState",
    AttackState = "AttackState"
}

function NpcDefendAI:__initState()
    self.m_states:AddState(StateType.FindTargetState,nil,self.FindTarget_Update,nil)
    self.m_states:AddState(StateType.CheckAttackState,nil,self.CheckAttack_Update,nil)
    self.m_states:AddState(StateType.AttackState,self.Attack_Enter,nil,nil)
end

function NpcDefendAI:Start()
    NpcBaseAI.Start(self)

    self.chaseRadius = self.m_owner:GetChaseRadius()
    self.attackRadius = self.m_owner:GetAttackRange()
    
    self.m_states:SetState(StateType.FindTargetState)

    --正常应该在AI结束后调用，但是此AI没有结束时机，而外部需要统一处理，所以启动的时候调用
    self:TriggerCallBack()
end

function NpcDefendAI:FindTarget_Update(deltaTime)
    self.m_target = self:SearchEnemyTarget()
    if self.m_target then
        self.m_states:SetState(StateType.CheckAttackState)
    end
end

function NpcDefendAI:CheckAttack_Update(deltaTime)
    if self.m_target and self.m_target:GetCurBlood() > 0 then
        local dis = Vector3.Distance(self.m_owner:GetPosition(),self.m_target:GetPosition()) - self.m_target:GetModelRadius()
        if dis <= self.attackRadius then
            self.m_states:SetState(StateType.AttackState)
        end
    else
        self.m_states:SetState(StateType.FindTargetState)
    end
end

function NpcDefendAI:Attack_Enter()
    if self.m_target and self.m_target:GetCurBlood() > 0 then
        self.m_owner:Attack(self.m_target)
    else
        self.m_states:SetState(StateType.FindTargetState)
    end
    self.m_owner:StopAttack() --取消循环攻击，变成单次攻击，支持不同攻击动画
end

function NpcDefendAI:OnStateComplete(type,data)
    if type == CharacterStateType.Attack then
        self.m_states:SetState(StateType.CheckAttackState)
    end
end

function NpcDefendAI:SearchEnemyTarget()
    local list = self.m_owner.battleLevel:GetRoleMgr().zombies
    local ownerPosition = self.m_owner:GetPosition()
    local minDis = IntMaxValue
    local target = nil
    for _, v in pairs(list) do
        if not v:IsDead() then
            local enemyPos = v:GetPosition()
            local dist = Vector3_Distance2D(enemyPos, ownerPosition) - v:GetModelRadius() - self.m_owner:GetModelRadius()
            --敌人在玩家搜寻范围内
            if dist < self.chaseRadius then
                --找出来距离英雄自己最近的敌人
                if dist < minDis and self.m_owner:SightRayCast(v:GetTransform()) then
                    minDis = dist
                    target = v
                end
            end
        end
    end
    
    return target
end

function NpcDefendAI:Destroy()
    NpcBaseAI.Destroy(self)
    self.m_target = nil
end

return NpcDefendAI