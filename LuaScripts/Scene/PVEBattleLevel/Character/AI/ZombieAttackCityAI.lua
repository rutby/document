---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1022.
--- DateTime: 2022/10/17 21:43
---丧尸攻城AI，会攻击障碍物
local ZombieBaseAI = require("Scene.PVEBattleLevel.Character.AI.ZombieBaseAI")
local ZombieAI = require("Scene.PVEBattleLevel.Character.AI.ZombieAI")
local ZombieAttackCityAI = BaseClass("ZombieAttackCityAI",ZombieAI)

function ZombieAttackCityAI:__init(owner)
    ZombieAI.__init(self,owner)
    self.currentPathIndex = 2
    self.isMoveToPath = false
end

function ZombieAttackCityAI:MoveToPath()
    local paths = self.m_owner.path
    if self.currentPathIndex > #paths then
        return
    end
    
    self.isMoveToPath = true
    
    self.pathPos = paths[self.currentPathIndex]
    self.m_owner:MovePath(self.pathPos)
    
end

function ZombieAttackCityAI:CheckMovePathComplete()
    if self.isMoveToPath and self.pathPos ~= nil then
        local dis = Vector3.Distance(self.m_owner:GetPosition(),self.pathPos)
        if dis <= self.chaseRadius then
            --到达目的地了
            self:MovePathComplete()
        end
    end
    if self.currentPathIndex > #self.m_owner.path then
        self.battleLevel:ZombieToDead(self.m_owner)
    end
end

function ZombieAttackCityAI:MovePathComplete()
    self.isMoveToPath = false
    self.currentPathIndex = self.currentPathIndex + 1
    self.pathPos = nil
    self.battleLevel.Net:SendZombieUpdate(self.m_owner,true)
end

function ZombieAttackCityAI:FindTarget_Update(deltaTime)
    self.m_target = self:SearchEnemyTarget()

    if self.m_target == nil then
        self:MoveToPath()
        self:CheckMovePathComplete()
    end
    if self.m_target ~= nil then
        self.m_states:SetState(ZombieBaseAI.StateType.MoveState)
    end
end

function ZombieAttackCityAI:Move_Update(deltaTime)
    ZombieAI.Move_Update(self,deltaTime)
    if self.m_states:CurrentStateEqual(ZombieBaseAI.StateType.MoveState) then
        --说明还在追击状态
        self:ChooseNearestRoleTarget()
        --检测是否追出范围了
        self:CheckOutChaseRadius()
    end
    if self.m_target == nil then
        self.m_states:SetState(ZombieBaseAI.StateType.FindTargetState)
    end
end

function ZombieAttackCityAI:Move_Exit()
    self.battleLevel.Net:SendZombieUpdate(self.m_owner,true)
end

function ZombieAttackCityAI:AttackTarget_Update(deltaTime)
    ZombieAI.AttackTarget_Update(self,deltaTime)
    if self.m_states:CurrentStateEqual(ZombieAI.StateType.AttackState) then
        --说明还在攻击状态
        self:ChooseNearestRoleTarget()
    end
end

function ZombieAttackCityAI:ChooseNearestRoleTarget()
    if not self.m_target.isPlayer then
        --当前目标不是玩家
        local newTarget = self.battleLevel.RoleMgr:SearchEnemyTarget(self.m_owner:GetPosition(),self.chaseRadius,self.m_owner:GetType())
        if newTarget then
            local newDis = Vector3.Distance(self.m_owner:GetPosition(),newTarget:GetPosition()) - newTarget:GetModelRadius()
            local dis = Vector3.Distance(self.m_owner:GetPosition(),self.m_target:GetPosition()) - self.m_target:GetModelRadius()
            if newDis < dis then
                self.m_target = newTarget --切换更近的玩家目标
            end
        end
    end
end

function ZombieAttackCityAI:SearchEnemyTarget()
    local target = ZombieBaseAI.SearchEnemyTarget(self)
    if target == nil then
        target = self.battleLevel.ObjMgr:SearchInteractiveTarget(self.m_owner:GetPosition(),self.chaseRadius)
    end
    return target
end
--检测是否超出范围
function ZombieAttackCityAI:CheckOutChaseRadius()
    if self.m_target.isPlayer then
        local dis = Vector3.Distance(self.m_owner:GetPosition(),self.m_target:GetPosition()) - self.m_target:GetModelRadius()
        if dis > self.chaseRadius then
            self.m_target = nil
        end
    end
end
--攻城的丧尸死追玩家
function ZombieAttackCityAI:CheckDisengageDistance(dis)
    return false
end
--攻城的丧尸死追玩家
function ZombieAttackCityAI:CheckMoveRange(ownerPos)
    return false
end

--ZombieAI里有巡逻逻辑，这里取消掉，攻城的丧尸不巡逻
function ZombieAttackCityAI:CanPatrol()
    return false
end
--是否需要警觉
function ZombieAttackCityAI:CanVigilance()
    return false
end
--攻城的丧尸不能暂停AI
function ZombieAttackCityAI:CanPause()
    return false
end

return ZombieAttackCityAI