---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1022.
--- DateTime: 2022/10/31 14:44
---猎物AI，用于鹿
local ZombieBaseAI = require("Scene.PVEBattleLevel.Character.AI.ZombieBaseAI")
local PreyAI = BaseClass("PreyAI",ZombieBaseAI)
local CharacterStateType = require("Scene.PVEBattleLevel.Character.State.CharacterStateType")

function PreyAI:Move_Enter()
    self.m_agent = self.m_owner:GetNavmeshAgent()
    self.m_checkTime = 0
    self:Move(true)
end

function PreyAI:Move_Update(deltaTime)
    self.m_checkTime = self.m_checkTime + deltaTime
    if self.m_checkTime < 0.2 then
        return
    end
    self.m_checkTime = 0

    if self.m_agent ~= nil then
        --没有速度了，再随机个位置
        local velocityX,velocityY,velocityZ = self.m_agent:Get_velocity()
        local isVelocityZero = self.m_agent:IsVelocityZero()
        if isVelocityZero or (math.abs(velocityX) < 0.05 and math.abs(velocityY) < 0.05 and math.abs(velocityZ) < 0.05) then
            --Logger.LogError("没有速度了，再随机个位置")
            self:Move(true)
        end
    end
end

function PreyAI:Move_Exit()
    self.m_checkTime = 0
    self.m_agent = nil
end

function PreyAI:OnStateComplete(type,data)
    if type == CharacterStateType.MoveByPath then
        self:Move()
    end
end

function PreyAI:Move(ignoreChaseRadius)
    if self.m_target ~= nil and not self.m_target:IsDie() then
        local ownerPos = self.m_owner:GetPosition()
        local dis = Vector3.Distance(ownerPos,self.m_target:GetPosition())
        if ignoreChaseRadius or dis <= self.chaseRadius then
            local template = self.battleLevel:GetLevelTemplate()
            local x = math.floor(ownerPos.x)
            local z = math.floor(ownerPos.z)
            x = math.random( x - 8,x + 8)
            z = math.random( z - 8, z + 8)
            local worldMinPos = SceneUtils.TileToWorld(Vector2.New(template.minX,template.minY))
            local worldMaxPos = SceneUtils.TileToWorld(Vector2.New(template.maxX,template.maxY))
            x = math.max(x,worldMinPos.x)
            x = math.min(x,worldMaxPos.x)
            z = math.max(z,worldMinPos.z)
            z = math.min(z,worldMaxPos.z)
            local pos = Vector3.New(x,0,z)
            self.m_owner:MovePath(pos)
            return
        end
    end

    self.m_states:SetState(ZombieBaseAI.StateType.FindTargetState)
end

function PreyAI:Destroy()
    ZombieBaseAI.Destroy(self)
    self.m_agent = nil
end

return PreyAI