---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2023/6/13 21:22
---

local MistressDailyRewardBubble = BaseClass("MistressDailyRewardBubble")
local prefab_path = "Assets/Main/Prefabs/UI/Survival/MistressDailyRewardBubble.prefab"
local triggerL_path = "Go/Trigger"
local icon_path = "Go/Bg/Icon"

function MistressDailyRewardBubble:__init(gameObject, mistressId)
    self.m_itemObj = gameObject
    self.mistressId = mistressId
    self.componentInit = false
    self.zoom = 0
    self.maxZoom = DataCenter.BattleLevel:GetCamera():GetZoomMax(ViewMode.SLG)
    self.initZoom = DataCenter.BattleLevel:GetCamera():GetBubbleInitSLGZoom()
    self.initRPGZoom = DataCenter.BattleLevel:GetCamera():GetInitZoom(ViewMode.RPG)
    self.showMinZoom = -1
    self.showMaxZoom = -1
    local k6 = LuaEntry.DataConfig:TryGetStr("camera_fragment", "k6")
    if (not string.IsNullOrEmpty(k6)) then
        local config = string.string2array_i(k6, ';')
        if table.count(config) == 2 then
            self.showMinZoom = config[1]
            self.showMaxZoom = config[2]
        end
    end
    --self.on_ViewChange = function() self:ResetPositionAndScale() end
    self:LoadResource()
    self:AddListener()
end

function MistressDailyRewardBubble:__delete()
    self.gameObject = nil
    self.mistressId = nil
    self.componentInit = false
    self.m_gameObject = nil
    self.componentInit = false
    if (self.req_eventEffect ~= nil) then
        self.req_eventEffect:Destroy()
        self.req_eventEffect = nil
    end
    self:RemoveListener()
end

function MistressDailyRewardBubble:AddListener()
    --EventManager:GetInstance():AddListener(EventId.SU_ChangeViewHeight, self.on_ViewChange)
end

function MistressDailyRewardBubble:RemoveListener()
    --EventManager:GetInstance():RemoveListener(EventId.SU_ChangeViewHeight, self.on_ViewChange)
end

function MistressDailyRewardBubble:Refresh()
    if not self.componentInit then
        return
    end
end

function MistressDailyRewardBubble:LoadResource()
    if self.req_eventEffect ~= nil then
        return
    end
    self.req_eventEffect = CommonUtil.LoadResAsync(prefab_path,
            function(req)
                self.m_gameObject = req.gameObject
                self.m_gameObject.name = "MistressDailyRewardBubble" .. tostring(self.mistressId)
                local transform = self.m_gameObject.transform
                --local _dyNode = DataCenter.BattleLevel:GetDynamicObjNode()
                transform:SetParent(self.m_itemObj.transform)
                --local x,y,z = self.m_itemObj.transform:Get_position()
                --transform:Set_localPosition(ResetPosition)
                self:InitComponent()
                self:ResetPositionAndScale()
            end)
end

function MistressDailyRewardBubble:InitComponent()
    self.componentInit = true
    self.trigger = self.m_gameObject.transform:Find(triggerL_path):GetComponent(typeof(CS.TouchObjectEventTrigger))
    self.trigger.onPointerClick = function()
        self:OnClick()
    end
    self.icon = self.m_gameObject.transform:Find(icon_path):GetComponent(typeof(CS.SpriteMeshRenderer))
    local effectId = DataCenter.SU_MistressEffectManager:GetEffectIdByMistressId(self.mistressId)
    local iconPath = DataCenter.SU_MistressEffectManager:GetItemIconByEffectId(effectId)
    self.icon:LoadSprite(iconPath)
    self:Refresh()
end

function MistressDailyRewardBubble:SetRotation(rotation)
    if not IsNull(self.m_gameObject) then
        self.m_gameObject.transform.rotation = rotation
    end
end

function MistressDailyRewardBubble:OnClick()
    local effectId = DataCenter.SU_MistressEffectManager:GetEffectIdByMistressId(self.mistressId)
    if effectId then
        local npcId = DataCenter.SU_MistressEffectManager:GetNpcIdByMistressId(self.mistressId)
        local girlEntity = DataCenter.BattleLevel:GetRoleMgr():GetCityNpc(npcId)
        if girlEntity then
            local pos = girlEntity:GetPosition() + Vector3.New(0, 2, 0)
            local screenPos = DataCenter.BattleLevel:WorldToScreenPoint(pos)
            DataCenter.SU_MistressEffectManager:SetTempPos(screenPos)
        end

        DataCenter.SU_MistressEffectManager:Use(effectId)
    end
end

function MistressDailyRewardBubble:ResetPositionAndScale()
    if DataCenter.BattleLevel == nil or not DataCenter.BattleLevel:IsInBattleLevel() or self.m_gameObject == nil then
        return
    end
    local isSLG = DataCenter.BattleLevel:GetViewMode() == ViewMode.SLG
    local zoom = 1
    if isSLG then
        zoom = DataCenter.BattleLevel:GetCamera():GetZoom()
    end
    local pos = self.m_itemObj.transform.position
    if math.abs(zoom - self.zoom) > 0.1 then
        self.zoom = zoom
        if isSLG then
            if self.showMinZoom ~= nil and self.showMinZoom ~= -1 and self.showMaxZoom ~= -1 then
                self.m_gameObject:SetActive(self.showMinZoom < zoom and zoom < self.showMaxZoom)
            end
            local tempZoom = math.min(zoom, self.maxZoom)
            local x, y, z = self.m_itemObj.transform:Get_localScale()
            local scale = tempZoom / self.initZoom / x * 4.8 * 0.537
            self.m_gameObject.transform:Set_localScale(scale, scale, scale)

            pos.y = pos.y + tempZoom / self.initZoom * 5.1
            --self.m_gameObject.transform.position = pos
            self.m_gameObject.transform:Set_localPosition(0, 2.25, 0)
        else
            local offsetScale = zoom / self.initRPGZoom
            if offsetScale < 0.75  then
                offsetScale = 0.75
            elseif offsetScale > 1  then
                offsetScale = 1
            end
            --offsetScale = offsetScale * offsetScale
            self.m_gameObject.transform:Set_localScale(ResetScale.x * offsetScale, ResetScale.y * offsetScale, ResetScale.z * offsetScale)
            self.m_gameObject.transform.position = pos
        end
    end
end

function MistressDailyRewardBubble:OnUpdate()
    self:ResetPositionAndScale()
end

return MistressDailyRewardBubble