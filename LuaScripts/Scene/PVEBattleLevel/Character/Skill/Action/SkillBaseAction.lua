---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1022.
--- DateTime: 2023/1/6 15:25
---
local SkillBaseAction = BaseClass("SkillBaseAction")
local SkillEnum = require("Scene.PVEBattleLevel.Character.Skill.SkillEnum")
local FanRange = require "Scene.PVEBattleLevel.Character.Skill.Range.FanRange"
local RoundRange = require "Scene.PVEBattleLevel.Character.Skill.Range.RoundRange"
local RectangleRange = require "Scene.PVEBattleLevel.Character.Skill.Range.RectangleRange"

function SkillBaseAction:__init(owner,actionId,completeHandler)
    self.m_owner = owner
    self.m_actionId = actionId
    self.m_OnComplete = completeHandler
    self.m_template = DataCenter.PveSkillTemplateManager:GetSkillActionTemplate(actionId)
end

function SkillBaseAction:SetData(data)
    self.m_data = data
end

function SkillBaseAction:OnUpdate(deltaTime)
 
end

function SkillBaseAction:Start()
    
end

function SkillBaseAction:Complete()
    if self.m_OnComplete ~= nil then
        self.m_OnComplete()
    end
end


function SkillBaseAction:CreateRangeObject()
    local rangeObj
    if self.m_template.attackType == SkillEnum.AttackType.Fan then
        local para1 = string.split(self.m_template.para1,";")
        local radius = tonumber(para1[1])
        local angle = tonumber(para1[2])
        local x,y,z= self.m_owner:GetTransform():Get_localEulerAngles()
        rangeObj = FanRange.New(self.m_owner:GetPosition(),radius,angle,y)
    elseif self.m_template.attackType == SkillEnum.AttackType.Rectangle then
        local para1 = string.split(self.m_template.para1,";")
        local width = tonumber(para1[1])
        local height = tonumber(para1[2])
        local x,y,z= self.m_owner:GetTransform():Get_localEulerAngles()
        rangeObj = RectangleRange.New(self.m_owner:GetPosition(),width,height,y)
    elseif self.m_template.attackType == SkillEnum.AttackType.Round then
        local radius = tonumber(self.m_template.para1)
        rangeObj = RoundRange.New(self.m_owner:GetPosition(),radius)
    end
    return rangeObj
end

function SkillBaseAction:Destroy()
    self.m_owner = nil
    self.m_OnComplete = nil
    self.m_template = nil
    self.m_data = nil
end

return SkillBaseAction