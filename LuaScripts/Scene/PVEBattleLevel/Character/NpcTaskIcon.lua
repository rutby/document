---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1022.
--- DateTime: 2023/5/11 18:20
---
local NpcTaskIcon = BaseClass("NpcTaskIcon")

local assetPath = "Assets/Main/Prefabs/NpcTaskIcon.prefab"

function NpcTaskIcon:__init(parent)
    self.m_parent = parent
    self.m_isActive = nil
    self.zoom = 0
    self.maxZoom = DataCenter.BattleLevel:GetCamera():GetZoomMax(ViewMode.SLG)
    self.initZoom = DataCenter.BattleLevel:GetCamera():GetBubbleInitSLGZoom()
    self.initRPGZoom = DataCenter.BattleLevel:GetCamera():GetInitZoom(ViewMode.RPG)
    self:__loadAsset()
end

function NpcTaskIcon:__loadAsset()
    self.m_req = CommonUtil.LoadResAsync(assetPath,function(req)
        local gameObject = req.gameObject
        local transform = gameObject.transform
        
        transform:SetParent(self.m_parent)
        transform:Set_localPosition(0,2.21,0)
        
        self.completeIcon = transform:Find("complete").gameObject
        self.noCompleteIcon = transform:Find("noComplete").gameObject
        self.m_transform = transform

        if self.m_isActive ~= nil then
            self:UpdateIconActive()
        end
    end)
end

function NpcTaskIcon:SetRotation(rotation)
    if not IsNull(self.m_transform) then
        self.m_transform.rotation = rotation
    end
end

function NpcTaskIcon:SetComplete(value)
    if self.m_isActive == value then
        return
    end
    self.m_isActive = value
    self:UpdateIconActive()
end

function NpcTaskIcon:UpdateIconActive()
    if not IsNull(self.completeIcon) then
        self.completeIcon:SetActive(self.m_isActive)
    end
    if not IsNull(self.noCompleteIcon) then
        self.noCompleteIcon:SetActive(not self.m_isActive)
    end
end

function NpcTaskIcon:Destroy()
    self.m_req:Destroy()
    self.m_req = nil
    self.m_transform = nil
    self.completeIcon = nil
    self.noCompleteIcon = nil
end

function NpcTaskIcon:OnUpdate(objId)
    if self.m_transform == nil then
        return
    end
    local zoom = DataCenter.BattleLevel:GetCamera():GetZoom()
    if DataCenter.BattleLevel:GetViewMode() == ViewMode.SLG then
        if math.abs(zoom - self.zoom) > 0.1 then
            self.zoom = zoom
            local tempZoom = math.min(zoom, self.maxZoom)
            local x, y, z = self.m_parent:Get_localScale()
            local scale = tempZoom / self.initZoom / x * 5.37
            self.m_transform:Set_localScale(scale, scale, scale)
        end
    else
        if math.abs(zoom - self.zoom) > 0.1 then
            self.zoom = zoom
            local offsetScale = zoom / self.initRPGZoom
            if offsetScale < 0.75  then
                offsetScale = 0.75
            elseif offsetScale > 1  then
                offsetScale = 1
            end
            --offsetScale = offsetScale * offsetScale
            self.m_transform:Set_localScale(ResetScale.x * offsetScale, ResetScale.y * offsetScale, ResetScale.z * offsetScale)
        end
    end
    
    local characterDialog = DataCenter.CharacterDialogManager:GetCharacterDialogByObjId(objId)
    local showDialog = characterDialog ~= nil and characterDialog:IsShow()
    local showTalk = false
    if DataCenter.GuideManager:InGuide() then
        local template = DataCenter.GuideManager:GetCurTemplate()
        if template ~= nil and (template.type == GuideType.ShowTalk or template.type == GuideType.PlayMovie) then
            showTalk = true
        end
    end
    self.m_transform.gameObject:SetActive(not showDialog and not showTalk)
end

return NpcTaskIcon