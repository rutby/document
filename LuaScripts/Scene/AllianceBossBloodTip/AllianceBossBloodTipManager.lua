---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2022/4/25 14:44
---
local AllianceBossBloodTipManager = BaseClass("AllianceBossBloodTipManager", Singleton)
local AllianceBossBloodTip = require "Scene.AllianceBossBloodTip.AllianceBossBloodTip"
local ResourceManager = CS.GameEntry.Resource
local Localization = CS.GameEntry.Localization

local function __init(self)
    self.marchHeadTopUIList = {}
    self.isOnCreateList = {}
    self.tempHideUuid = {}
    self.cacheBloodTip = {}
    self:AddListener()
    self.isViewOpen = false
end

local function __delete(self)
    self:RemoveListener()
    self:RemoveAllTip()
    self.isViewOpen = nil
    self.tempHideUuid = nil
    self.marchHeadTopUIList = nil
    self.isOnCreateList = nil
    self.cacheBloodTip = nil
end
local function AddListener(self)
    EventManager:GetInstance():AddListener(EventId.ShowAllianceBossHeadInBattle, self.ShowTroopHeadInBattle)
    EventManager:GetInstance():AddListener(EventId.ShowAllianceBossBattleValue, self.ShowTroopBattleSignal)
    EventManager:GetInstance():AddListener(EventId.HideAllianceBossHead, self.HideTroopHead)
    EventManager:GetInstance():AddListener(EventId.ChangeCameraLod, self.ChangeCameraLodSignal)
    EventManager:GetInstance():AddListener(EventId.PveLevelEnter, self.RemoveAllTips)
    EventManager:GetInstance():AddListener(EventId.OnEnterWorld, self.OnEnterWorld)
    EventManager:GetInstance():AddListener(EventId.OnEnterCity, self.OnEnterCity)
end

local function RemoveListener(self)
    EventManager:GetInstance():RemoveListener(EventId.ShowAllianceBossHeadInBattle, self.ShowTroopHeadInBattle)
    EventManager:GetInstance():RemoveListener(EventId.ShowAllianceBossBattleValue, self.ShowTroopBattleSignal)
    EventManager:GetInstance():RemoveListener(EventId.HideAllianceBossHead, self.HideTroopHead)
    EventManager:GetInstance():RemoveListener(EventId.ChangeCameraLod, self.ChangeCameraLodSignal)
    EventManager:GetInstance():RemoveListener(EventId.PveLevelEnter, self.RemoveAllTips)
    EventManager:GetInstance():RemoveListener(EventId.OnEnterWorld, self.OnEnterWorld)
    EventManager:GetInstance():RemoveListener(EventId.OnEnterCity, self.OnEnterCity)
end

local function ChangeCameraLodSignal(lod)
    AllianceBossBloodTipManager:GetInstance():UpdateLod(lod)
end

local function UpdateLod(self, lod)
    if self.lodCache ~=lod then
        self.lodCache =lod
    end
end

local function SetViewOpen(self,uuid)
    if self.isViewOpen ==false then
        self.isViewOpen = true
        if self.marchHeadTopUIList[uuid]~=nil or self.isOnCreateList[uuid]~=nil then
            self:HideHeadUI(uuid)
            self.tempHideUuid[uuid] = 1
        end
    end
end
local function SetViewClose(self)
    if self.isViewOpen == true then
        self.isViewOpen = false
        for k,v in pairs(self.tempHideUuid) do
            self:ShowHeadUI(k)
        end
    end
    self.tempHideUuid = {}
end

local function AddToBloodCacheList(self,uuid)
    local oneData = {}
    oneData.uuid = uuid
    oneData.curBlood =-1
    oneData.maxBlood = 0
    self.cacheBloodTip[uuid] = oneData
end

local function RemoveFormBloodCacheList(self,uuid)
    if self.cacheBloodTip[uuid]~=nil then
        self.cacheBloodTip[uuid] = nil
    end
end

local function RefreshToBloodCacheList(self,uuid,anger,hp,hpMax)
    if self.cacheBloodTip[uuid]~=nil then
        local data = self.cacheBloodTip[uuid]
        data.curBlood = hp
        data.maxBlood = hpMax
    end
end
local function GetBloodCacheByUuid(self,uuid)
    return self.cacheBloodTip[uuid]
end

local function ShowTroopBattleSignal(data)
    local str = data
    if str~=nil then
        local strArr = string.split(str,";")
        if #strArr>3 then
            local marchUuid = tonumber(strArr[1])
            local anger = tonumber(strArr[2])
            local hp = tonumber(strArr[3])
            local hpMax = tonumber(strArr[4])
            AllianceBossBloodTipManager:GetInstance():UpdateBattleHeadUI(marchUuid,anger,hp,hpMax)
            AllianceBossBloodTipManager:GetInstance():RefreshToBloodCacheList(marchUuid,anger,hp,hpMax)
        end
    end
end

local function HideTroopHead(uuid)
    AllianceBossBloodTipManager:GetInstance():RemoveFormBloodCacheList(uuid)
    AllianceBossBloodTipManager:GetInstance():HideHeadUI(uuid)
end


local function ShowTroopHeadInBattle(uuid)
    AllianceBossBloodTipManager:GetInstance():ShowHeadUI(uuid)
end

local function ShowHeadUI(self,marchUuid)
    if SceneUtils.GetIsInWorld() == false then
        return
    end
    local troop = DataCenter.WorldPointManager:GetObjectByUuid(marchUuid)
    if troop~=nil then
        if troop.monsterInfo~=nil then
            if troop.monsterInfo.belongUid == LuaEntry.Player.uid then
                --  self:ShowAllianceBossBlood(troop,marchUuid)
                self:AddToBloodCacheList(marchUuid)
            end
        end
    end
end
local function ShowAllianceBossBlood(self,troop,marchUuid)
    local transform = troop:GetTransform()
    local info = DataCenter.WorldPointManager:GetPointInfoByUuid(marchUuid)
    if info~=nil then
        if self.marchHeadTopUIList[marchUuid] == nil and self.isOnCreateList[marchUuid]==nil then
            if self.isViewOpen == true then
                self.tempHideUuid[marchUuid] = 1
                return
            end
            local request = ResourceManager:InstantiateAsync(UIAssets.AllianceBossBloodTip)
            self.isOnCreateList[marchUuid] = request
            request:completed('+', function()
                self.isOnCreateList[marchUuid] =nil
                if request.isError then
                    return
                end

                request.gameObject:SetActive(true)
                if transform==nil then
                    request:Destroy()
                end
                request.gameObject.transform:SetParent(transform)
                request.gameObject.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
                request.gameObject.transform:Set_localPosition(ResetPosition.x, ResetPosition.y, ResetPosition.z)
                local tileUI = AllianceBossBloodTip.New()
                tileUI:OnCreate(request)
                self.marchHeadTopUIList[marchUuid] = tileUI
                self.marchHeadTopUIList[marchUuid]:ShowMarchInfo(info)
            end)
        else
            if self.marchHeadTopUIList[marchUuid]~=nil then
                self.marchHeadTopUIList[marchUuid]:ShowMarchInfo(info)
            end
        end
    end
end

local function UpdateBattleHeadUI(self,marchUuid,anger,hp,hpMax)
    if SceneUtils.GetIsInWorld() == false then
        return
    end
    if self.lodCache~=nil and self.lodCache>3 then
        return
    end
    if self.marchHeadTopUIList[marchUuid]~=nil then
        local headUI = self.marchHeadTopUIList[marchUuid]
        headUI:RefreshSoldierData()
    end
end

local function HideHeadUI(self,marchUuid)
    
    -- local targetinfo = CS.SceneManager.World:GetMarch(marchUuid)
    -- if targetinfo == nil or targetinfo.ownerUid == nil or targetinfo.ownerUid ~= LuaEntry.Player.uid then
    --     return
    -- end

    if self.marchHeadTopUIList[marchUuid]~=nil or self.isOnCreateList[marchUuid]~=nil then
        local headUI = self.marchHeadTopUIList[marchUuid]
        if headUI~=nil then
            local request = headUI.request
            headUI:OnDestroy()
            if request~=nil then
                request:Destroy()
            end
            self.marchHeadTopUIList[marchUuid] = nil
        end
        local temp = self.isOnCreateList[marchUuid]
        if temp ~= nil then
            temp:Destroy()
            self.isOnCreateList[marchUuid] = nil
        end
        self.tempHideUuid[marchUuid] = nil
    end
end
local function RemoveAllTips(data)
    AllianceBossBloodTipManager:GetInstance():RemoveAllTip()
end
local function OnEnterWorld(data)
end
local function OnEnterCity(data)
    AllianceBossBloodTipManager:GetInstance():RemoveAllTip()
end
local function RemoveAllTip(self)
    self.buffList ={}
    if self.marchHeadTopUIList~=nil then
        for k,v in pairs(self.marchHeadTopUIList) do
            local request = v.request
            v:OnDestroy()
            request:Destroy()
        end
        self.marchHeadTopUIList = {}
    end
    if self.isOnCreateList~=nil then
        for k,v in pairs(self.isOnCreateList) do
            v:Destroy()
        end
        self.isOnCreateList = {}
    end
    self.tempHideUuid = {}
end


AllianceBossBloodTipManager.__init = __init
AllianceBossBloodTipManager.__delete = __delete
AllianceBossBloodTipManager.AddListener =AddListener
AllianceBossBloodTipManager.RemoveListener =RemoveListener
AllianceBossBloodTipManager.ShowTroopHeadInBattle =ShowTroopHeadInBattle
AllianceBossBloodTipManager.HideTroopHead =HideTroopHead
AllianceBossBloodTipManager.ShowTroopBattleSignal =ShowTroopBattleSignal
AllianceBossBloodTipManager.ShowHeadUI =ShowHeadUI
AllianceBossBloodTipManager.HideHeadUI =HideHeadUI
AllianceBossBloodTipManager.UpdateBattleHeadUI =UpdateBattleHeadUI
AllianceBossBloodTipManager.ChangeCameraLodSignal = ChangeCameraLodSignal
AllianceBossBloodTipManager.UpdateLod = UpdateLod
AllianceBossBloodTipManager.ShowAllianceBossBlood = ShowAllianceBossBlood
AllianceBossBloodTipManager.SetViewOpen =SetViewOpen
AllianceBossBloodTipManager.SetViewClose =SetViewClose
AllianceBossBloodTipManager.RemoveAllTip = RemoveAllTip
AllianceBossBloodTipManager.OnEnterCity = OnEnterCity
AllianceBossBloodTipManager.RemoveAllTips = RemoveAllTips
AllianceBossBloodTipManager.OnEnterWorld = OnEnterWorld
AllianceBossBloodTipManager.AddToBloodCacheList= AddToBloodCacheList
AllianceBossBloodTipManager.GetBloodCacheByUuid = GetBloodCacheByUuid
AllianceBossBloodTipManager.RefreshToBloodCacheList = RefreshToBloodCacheList
AllianceBossBloodTipManager.RemoveFormBloodCacheList = RemoveFormBloodCacheList
return AllianceBossBloodTipManager