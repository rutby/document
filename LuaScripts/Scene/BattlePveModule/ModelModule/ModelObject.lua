---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by mac.
--- DateTime: 3/24/22 6:02 PM
---
--[[
    这个是模型的实体类
]]
local ModelObject = BaseClass("ModelObject")
local Buff = require "Scene.BattlePveModule.SkillModule.Buff"
local WeaponObject = require "Scene.BattlePveModule.ModelModule.WeaponObject"
local MonsterHeadUI = require "Scene.TroopHeadUI.MonsterHeadUI"
local Const= require "Scene.BattlePveModule.Const"
local BloodBar = require "Scene.BattlePveModule.UI.BloodBar"

local Resource = CS.GameEntry.Resource
local TextMeshProType = typeof(CS.TMPro.TextMeshPro)
local SimpleAnimationType = typeof(CS.SimpleAnimation)
local TypeOfParticleSystem = typeof(CS.UnityEngine.ParticleSystem)
local Animator = typeof(CS.UnityEngine.Animator)
--[[
 这个是模拟PVP的模式.在这个里面我们只知道heroId,所以使用heroId.来做映射
]]

function ModelObject:__init(modelType, standIndex, heroId, power,heroLv,quality,rarity,targetLv,heroUuid,rankId)
    self.m_modelType = modelType
    self.m_heroId = heroId
    self.m_heroPower = power
    self.m_heroLv = heroLv
    self.m_quality = quality
    self.m_rarity = rarity
    self.m_targetLv = targetLv
    self.m_rankId = rankId
    self.m_gameObject = nil
    self.m_req = nil
    self.m_standIndex = standIndex  -- 站位
    self.m_buffList = {}
    self.m_objBloodBar = nil -- 血条实体
    self.m_bloodUI = nil --血条组件
    self:InstantiateObj()
    self.m_maxHp = 0
    self.m_curHp = 0
    self.m_detailReportPlayerInfo = nil  -- 这个是为了映射战报里的index,
    -- 武器管理类
    self.m_objWeapon = WeaponObject.New()
    -- 墓碑
    self.m_reqMubei = {}
    self.m_req_addHp = {}
    self.m_req_upgrade = {}
    self.m_req_hit = {}
    self.isCreateFinish = false
    self.showWeak = false
    self.heroUuid = heroUuid
end

function ModelObject:IsPlayer()
    return self.m_modelType == Const.CampType.Player
end

function ModelObject:IsCreateFinish()
    return self.isCreateFinish
end
function ModelObject:IsDead()
    return self.m_curHp <= 0
end

function ModelObject:GetHeroId()
    return self.m_heroId
end

function ModelObject:GetTransform()
    if (self.m_gameObject == nil) then
        return nil
    end
    return self.m_gameObject.transform
end

function ModelObject:GetGameObject()
    return self.m_gameObject
end

-- index映射
function ModelObject:SetDetailReportPlayerInfo(value)
    for _, v in pairs(value) do
        if (v.uuid == self.m_armyCombatUnit:GetMarchId()) then
            self.m_detailReportPlayerInfo = v;
            return
        end
    end
end

-- 设置ArmyCombatUnit
function ModelObject:SetArmyCombatUnit(value)
    self.m_armyCombatUnit = value
end

function ModelObject:GetTriggerIndex()
    if (self.m_detailReportPlayerInfo ~= nil) then
        return self.m_detailReportPlayerInfo.index
    end
    return 0
end

-- 血条
function ModelObject:SetBloodVisible( visible )
    if (self.m_bloodUI ~= nil) then
        self.m_bloodUI:SetActive(visible)
    end
end

function ModelObject:SetCurHp( value )
    if (self.m_bloodUI ~= nil) then
        self.m_bloodUI:SetHp(value, self.m_maxHp)
    end
end

function ModelObject:SetHpFactor(maxHpPercent)
    if self.m_bloodUI ~= nil then
        self.m_bloodUI:SetHpFactor(maxHpPercent)
    end
end

-- 开始战斗准备
function ModelObject:BattleInit()
    -- 获取初始化血量
    --self.m_maxHp = self.m_armyCombatUnit:GetInitHealth()
    --self.m_curHp = self.m_armyCombatUnit:GetInitHealth()
    -- 显示血条节点
    if (self.m_bloodUI ~= nil) then
        self.m_bloodUI:StopUpdate()
        self.m_bloodUI:ShowHpObject()
    end
    self:SetCurHp(self.m_curHp)
    -- 显示血条   
    self:SetBloodVisible(true)
end

function ModelObject:AddBuff( buffItem )
    local _buff = Buff.New()
    _buff:SetData(buffItem)
    self.m_buffList[#self.m_buffList+1] = _buff
end

function ModelObject:DoActionBuff()
    for k, v in pairs(self.m_buffList) do
        TimerManager:GetInstance():DelayInvoke(function()
            v:DoAction()
        end, 0.3*k*PveActorMgr:GetInstance():GetSpeed())
    end
end

function ModelObject:GetModelResPath()
    local model = GetTableData(HeroUtils.GetHeroXmlName(),self.m_heroId, "prefab_low")
    local str_side = ""
    return "Assets/Main/Prefabs/PVE/DyHeroes/" .. model .. str_side .. ".prefab"
end

-- 获取站位的世界坐标
function ModelObject:GetStandWorldPos()
    return PveActorMgr:GetInstance():GetStandPosByIndex(self.m_modelType, self.m_standIndex) or Vector3.New(0, 0, 0)
end

function ModelObject:GetTargetStandWorldPos()
    local targetType = self.m_modelType == Const.CampType.Player and Const.CampType.Target or Const.CampType.Player
    return PveActorMgr:GetInstance():GetStandPosByIndex(targetType, self.m_standIndex) or Vector3.New(0, 0, 0)
end

function ModelObject:InstantiateObj()
    local _prefabPath = self:GetModelResPath()
    self.m_req = Resource:InstantiateAsync(_prefabPath)
    self.m_req:completed('+', function(req)
        local _go = req.gameObject
        if (_go == nil) then
            return
        end
        self.m_gameObject = _go
        self:UpdatePos(self.m_standIndex)
        self:InitComponent()
        self.isCreateFinish = true
        PveActorMgr:GetInstance():CheckPlayRound()
    end)
end

function ModelObject:UpdatePos(index)
    if self.m_gameObject ~= nil then
        self.m_standIndex = index
        local parent = PveActorMgr:GetInstance():GetStandObj(self.m_modelType, self.m_standIndex)
        if (parent ~= nil) then
            self.m_gameObject.transform:SetParent(parent)
        end
        self.m_gameObject.transform.localPosition = ResetPosition
        self.m_gameObject.transform.localRotation = Quaternion.Euler(0, 180,0)
        self.m_gameObject.transform:Set_localScale(1,1,1)
        local _obj= self.m_gameObject.transform:Find("A_Hero_low")
        if _obj~=nil then
            --_obj.gameObject.transform.localRotation = Quaternion.Euler(0, 180,0);
            _obj.gameObject.transform:Set_localScale(1,1,1)
        end
    end
end

function ModelObject:InitComponent()
    -- 产生血条
    self:CreateBloodBar()
    -- 获取动画
    self.m_animator = self:GetTransform():GetComponentInChildren(Animator)
    if (self.m_animator == nil) then
        Logger.LogError("该英雄没有动画管理器")
    end
    -- 加载武器
    self.m_objWeapon:AddWeapon(self, Const.WeaponType.Gun)
    -- 播放待机动画
    self:PlayIdle()
end

function ModelObject:PlayIdle()
    self:PlayAnimation(Const.AniName.Idle)
    self.m_objWeapon:StopAttack()
end

function ModelObject:PlayAttack()
	if (self.m_curHp <= 0) then
		self:PlayDead()
	else
		self.m_objWeapon:ToAttack()
		self:PlayAnimation(Const.AniName.Attack)
        if self.m_modelType ~= Const.CampType.Player then
            --if PveActorMgr:GetInstance():GetSpeedOffset()==4 then
            --    SoundUtil.PlayEffect(SoundAssets.Music_Effect_self_attack_high)
            --elseif PveActorMgr:GetInstance():GetSpeedOffset()==2 then
            --    SoundUtil.PlayEffect(SoundAssets.Music_Effect_self_attack_mid)
            --else
            --end
        --else
        --    if PveActorMgr:GetInstance():GetSpeedOffset() == 4 then
        --        SoundUtil.PlayEffect(SoundAssets.Music_Effect_other_attack_high)
        --    elseif PveActorMgr:GetInstance():GetSpeedOffset()==2 then
        --        SoundUtil.PlayEffect(SoundAssets.Music_Effect_other_attack_mid)
        --    else
        --        SoundUtil.PlayEffect(SoundAssets.Music_Effect_other_attack_low)
        --    end
        --    
        end
	end
    
end

function ModelObject:PlayStopFire()
    if (self.m_curHp <= 0) then
        self:PlayDead()
    else
        self:PlayIdle()
    end
end
function ModelObject:PlayAnimation( aniname )
    if (self.m_animator ~= nil) then
        self.m_animator:SetTrigger(aniname)
        self.m_animator.speed = 1.0 * PveActorMgr:GetInstance():GetSpeedOffset()
    end
end

function ModelObject:Destroy()
    -- 血条
    if (self.m_animator ~= nil) then
        self.m_animator.speed = 1.0
    end
    if (self.m_bloodUI ~= nil) then
        self.m_bloodUI:Destroy()
        self.m_bloodUI  = nil
    end
    -- 卸载武器
    if (self.m_objWeapon ~= nil) then
        self.m_objWeapon:Destroy()
    end
    -- 删除墓碑
    for _, v in pairs(self.m_reqMubei) do
        v:Destroy()
    end
    if (self.m_reqBlood ~= nil) then
        self.m_reqBlood:Destroy()
        self.m_reqBlood = nil
    end
    -- 卸载升级特效
    for _, v in pairs(self.m_req_upgrade) do
        v:Destroy()
    end
    -- 加血特效
    for _, v in pairs(self.m_req_addHp) do
        v:Destroy()
    end
    if self.m_req_hit~=nil then
        for _, v in pairs(self.m_req_hit) do
            v:Destroy()
        end
    end
    --if (self.m_req_addHp ~= nil) then
    --    self.m_req_addHp:Destroy()
    --end
    if (self.m_req ~= nil) then
        self.m_req:Destroy()
    end
end

-- 攻击处理 这个地方不同的英雄会有不同的表现处理,不作用技能的表现
function ModelObject:BeginAttack()
    self:PlayAttack()
end
local util = require "Common.Tools.cjson.util"
-- 受击飘字
function ModelObject:RecvHit( value, flytext )
    flytext = flytext == nil and true or false
    local triggerIdx = self:GetTriggerIndex()
    --local path = util.GetPersistentDataPath()
    --local name = path.."/".."data_pve_model.txt"
    --local strMsg = "index: " .. tostring(triggerIdx) .. "  Hp变化 " .. tostring(value) .. " 变化前: " .. tostring(self.m_curHp) 
    
    local oldValue = self.m_curHp
    self.m_curHp = self.m_curHp + value
    self.m_curHp = Mathf.Clamp(self.m_curHp, 0, self.m_maxHp)
    --strMsg = strMsg .. "  变化后 " .. tostring(self.m_curHp) .. "\n"
    --util.file_save(name,strMsg)
    self:SetCurHp(self.m_curHp)
    
    -- 通知主界面的血条
    if (self.m_modelType == Const.CampType.Player) then
        PveActorMgr:GetInstance():AddAtkTotalHp(self.m_curHp-oldValue)
    else
        PveActorMgr:GetInstance():AddDefTotalHp(self.m_curHp-oldValue)
    end
    
    -- 死亡
    if (self.m_curHp <= 0) then
        if (PveActorMgr:GetInstance():IsFinalRound()== true) and self.showWeak ==false then
            if PveActorMgr:GetInstance():GetBattleResult() == Const.Result.Win then
                if self.m_modelType == Const.CampType.Target then
                    self:ShowMuBei()
                    self.showWeak = true
                    return
                end
            else
                if self.m_modelType == Const.CampType.Player then
                    self:ShowMuBei()
                    self.showWeak = true
                    return
                end
            end
        end
        self:PlayDead()
        if (not PveActorMgr:GetInstance():IsStopPlay()) and  self.showWeak ==false and PveActorMgr:GetInstance():IsFinalRound()== false then
            local _str= CS.GameEntry.Localization:GetString("400076")
            self:FlyText(_str)
            self.showWeak = true
        end
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_pve_hero_weak)
        
    elseif oldValue <= 0 and self.m_curHp > 0 then -- 死后复活
        self.showWeak = false
        self.m_gameObject:SetActive(true)
        if (self.m_objWeapon ~= nil) then
            self.m_objWeapon:SetActive(true)
        end
        self:PlayAnimation(Const.AniName.Idle)
        self.m_objWeapon:StopAttack()
        self:SetBloodVisible(true)
        if (self.m_objMubei ~= nil) then
            self.m_objMubei:SetActive(false)
        end
    end
    if (not PveActorMgr:GetInstance():IsStopPlay() and flytext) then
        local _strtext = ""
        if (value < 0) then -- 表示失血
            _strtext = "<color=#FF0000>" .. tostring(value) .. "</color>"
        elseif value > 0 then  -- 表示加血
            _strtext = "<color=#008B00>" .. tostring(value) .. "</color>"
        end
        if (self.m_curHp > 0) then
            self:FlyText(_strtext)
        end
        
    end
    
end

function ModelObject:PlayDead()
    self:SetBloodVisible(false)
    self:PlayAnimation(Const.AniName.Weaken)
    if (self.m_objWeapon ~= nil) then
        self.m_objWeapon:SetActive(false)
    end
end

-- 飘字节点
function ModelObject:GetFlyNode()
    return self.m_gameObject
end

--function ModelObject:FlyText(value)
--    local flyTextInst = Resource:InstantiateAsync(UIAssets.FlyText)
--    flyTextInst:completed('+', function(req)
--        local flyNode = self:GetFlyNode()
--        if flyNode then
--            local req_trans = req.gameObject.transform
--            local _go = req.gameObject
--            _go.transform.rotation = PveActorMgr:GetInstance():GetCameraRotation()
--            req_trans.position = flyNode.transform.position + Vector3.New(0, 3, 0)
--            local num = req_trans:Find("num"):GetComponent(TextMeshProType)
--            num.text = value
--            CS.UnityEngine.GameObject.Destroy(req.gameObject, 0.8);
--        end
--    end)
--end

function ModelObject:FlyText(value)
    local pathText = "Assets/Main/Prefabs/CityScene/FlyText_UI.prefab"
    local flyTextInst = Resource:InstantiateAsync(pathText)
    flyTextInst:completed('+', function(req)
        TimerManager:GetInstance():DelayInvoke(function()
            if (flyTextInst ~= nil) then
                flyTextInst:Destroy()
            end
        end, 2*PveActorMgr:GetInstance():GetSpeed())
        local _go = req.gameObject
        if (_go == nil) then
            return
        end
        local flyNode = self:GetFlyNode()
        if flyNode then
            
            local CanvasNormal = UIManager:GetInstance():GetLayer(UILayer["Background"]["Name"]).gameObject
            _go.transform:SetParent(CanvasNormal.transform)
            -- 获取对应位置在屏幕上的坐标位置
            local _modelPos = self:GetTransform().position + Vector3.New(0, 1.5,0)
            local _screenPos = DataCenter.BattleLevel.pveCamera:WorldToScreenPoint(_modelPos)
            _go.transform.position = Vector3.New(_screenPos.x, _screenPos.y, 0)
            _go.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
            -- 设置数字
            local num = _go.transform:Find("objRoot/num"):GetComponent(typeof(CS.UnityEngine.UI.Text))
            num.text = value
            
            --local req_trans = req.gameObject.transform
            --local _go = req.gameObject
            --_go.transform.rotation = PveActorMgr:GetInstance():GetCameraRotation()
            --req_trans.position = flyNode.transform.position + Vector3.New(0, 3, 0)
            --local num = req_trans:Find("num"):GetComponent(TextMeshProType)
            --num.text = value
            --CS.UnityEngine.GameObject.Destroy(req.gameObject, 0.8);
        end
    end)
end

-- 播放升级
function ModelObject:PlayEffectUpgrade()
    local _effect_path = "Assets/_Art/Effect/prefab/scene/xinshou/VFX_pve_upgrade.prefab"
    self.m_req_upgrade[#self.m_req_upgrade+1] = Resource:InstantiateAsync(_effect_path)
    self.m_req_upgrade[#self.m_req_upgrade]:completed('+', function(req)
        local req_trans = req.gameObject.transform
        req.gameObject.transform:SetParent(self:GetTransform())
        req_trans.localPosition = Vector3.New(0, 0.62, 0)
    end)
end

function ModelObject:PlayEffectDeBuff()
    local _effect_path = "Assets/_Art/Effect/prefab/scene/xinshou/VFX_pve_debuff.prefab"
    self.m_req_upgrade[#self.m_req_upgrade+1] = Resource:InstantiateAsync(_effect_path)
    self.m_req_upgrade[#self.m_req_upgrade]:completed('+', function(req)
        local req_trans = req.gameObject.transform
        req.gameObject.transform:SetParent(self:GetTransform())
        req_trans.localPosition = Vector3.New(0, 0.62, 0)
    end)
end
function ModelObject:DelayHideShield(time)
    if (self.m_effect_shield == nil) then
        return
    end
    if (self.m_delayShield ~= nil) then
        self.m_delayShield:Stop()
        self.m_delayShield = nil
    end
    self.m_delayShield = TimerManager:GetInstance():DelayInvoke(function()
        self.m_effect_shield:Stop()
    end, time*PveActorMgr:GetInstance():GetSpeed())
end
function ModelObject:ShowShield(time)
    if (self.m_effect_shield ~= nil) then
        self.m_effect_shield:Simulate(0)
        self.m_effect_shield:Play()
        self:DelayHideShield(time)
        return
    end
    local e_path = "Assets/_Art/Effect/prefab/PVE/VFX_pve_hudun.prefab"
    self.m_req_hit[#self.m_req_hit+1] = Resource:InstantiateAsync(e_path)
    self.m_req_hit[#self.m_req_hit]:completed('+', function(req)
        local _go = req.gameObject
        if (_go == nil) then
            return
        end
        local req_trans = req.gameObject.transform
        self.m_effect_shield = req_trans:GetComponent(TypeOfParticleSystem)
        req.gameObject.transform:SetParent(self:GetTransform())
        req_trans.localPosition = Vector3.New(0, 0, 0)
        self:DelayHideShield(time)
    end)
end
function ModelObject:DelayHideHitEffect()
    if (self.m_effect_hit == nil) then
        return
    end
    if (self.m_delayHit ~= nil) then
        self.m_delayHit:Stop()
        self.m_delayHit = nil
    end
    self.m_delayHit = TimerManager:GetInstance():DelayInvoke(function()
        self.m_effect_hit:Stop()
    end, 1)
end
--[[
    播放爆炸后的效果。1.爆炸后的受击效果
]]
function ModelObject:ShowHitEffect()
    if (self.m_effect_hit ~= nil) then
        self.m_effect_hit:Simulate(0)
        self.m_effect_hit:Play()
        self:DelayHideHitEffect()
        return
    end
    local e_path = "Assets/_Art/Effect/prefab/scene/xinshou/VFX_pve_q_jiaohu_guai_ui.prefab"
    self.m_req_hit[#self.m_req_hit+1] = Resource:InstantiateAsync(e_path)
    self.m_req_hit[#self.m_req_hit]:completed('+', function(req)
        local _go = req.gameObject
        if (_go == nil) then
            return
        end
        self.m_effect_hit = _go.transform:GetComponent(TypeOfParticleSystem)
        local CanvasNormal = UIManager:GetInstance():GetLayer(UILayer["Normal"]["Name"]).gameObject
        _go.transform:SetParent(CanvasNormal.transform)
        -- 获取对应位置在屏幕上的坐标位置
        local _modelPos = self:GetTransform().position + Vector3.New(0, 0.38,0)
        local _screenPos = DataCenter.BattleLevel.pveCamera:WorldToScreenPoint(_modelPos)
        _go.transform.position = Vector3.New(_screenPos.x, _screenPos.y, 0)
        _go.transform:Set_localScale(ResetScale.x*1.2, ResetScale.y*1.2, ResetScale.z*1.2)
        self:DelayHideHitEffect()
    end)
end

-- 播放加血
function ModelObject:PlayEffectAddHp()
    if (self.m_particle_addHp ~= nil) then
        self.m_particle_addHp:Simulate(0)
        self.m_particle_addHp:Play()
        return
    end
    local _effect_path = "Assets/_Art/Effect/prefab/scene/xinshou/VFX_pve_zhiliao.prefab"
    self.m_req_addHp[#self.m_req_addHp+1]= Resource:InstantiateAsync(_effect_path)
    self.m_req_addHp[#self.m_req_addHp]:completed('+', function(req)
        local req_trans = req.gameObject.transform
        req.gameObject.transform:SetParent(self:GetTransform())
        req_trans.localPosition = Vector3.New(0, 0.09, 0)
        -- 获取句柄
        self.m_particle_addHp = req_trans:GetComponent(TypeOfParticleSystem)
    end)
end

-- 血条
function ModelObject:CreateBloodBar()
    if (self.m_reqBlood ~= nil) then
        return
    end
    local path_prefab = "Assets/Main/Prefabs/PVE/UI/Pve_UI_HeroBlood.prefab"
    self.m_reqBlood = Resource:InstantiateAsync(path_prefab)
    self.m_reqBlood:completed('+', function(req)
        local _go = req.gameObject
        if (_go == nil) then
            return
        end
        self.m_bloodUI = BloodBar.New(self, _go)
        _go.transform:Set_localScale(ResetScale.x*0.8, ResetScale.y*0.8, ResetScale.z*0.8)
        self:InitBloodCom()
        self:SetPlayerShowLevelOrPower()
    end)
end

function ModelObject:SetPlayerShowLevelOrPower()
    if (self.m_bloodUI ~= nil) then
        self.m_bloodUI:SetPlayerShowLevelOrPower()
    end
end

function ModelObject:SetHeroLv(heroLv)
    self.m_heroLv = heroLv
    if self.m_bloodUI ~= nil then
        self.m_bloodUI:SetHeroLv(self.m_heroLv,self.m_targetLv)
    end
end

function ModelObject:InitBloodCom()
    if (self.m_bloodUI ~= nil) then
        self.m_bloodUI:SetHeroLv(self.m_heroLv,self.m_targetLv)
        self.m_bloodUI:SetHeroRankLv(self.m_rankId)
        self.m_bloodUI:SetHeroStar(self.m_quality,self.m_rarity)
        self.m_bloodUI:SetPower(self.m_heroPower) -- 进来后默认设置战力
    end
end

function ModelObject:GetHeroPower()
    return self.m_heroPower or 0
end

function ModelObject:SetBarForGuide(showArrow)
    if (self.m_bloodUI ~= nil) then
        self.m_bloodUI:SetBarForGuide(self.m_heroPower,showArrow)
    end
end

function ModelObject:HideBarForGuide()
    if (self.m_bloodUI ~= nil) then
        self.m_bloodUI:HideBarForGuide()
    end
end
function ModelObject:SetHeroPower( value )
    self.m_heroPower = value
    if (self.m_bloodUI ~= nil) then
        self.m_bloodUI:SetPower(self.m_heroPower)
    end
    --self:InitBloodCom()
end

-- 设置血量和伤害系数
function ModelObject:SetHeroHp( maxHp )
    self.m_curHp = maxHp
    self.m_maxHp = maxHp
end

function ModelObject:GetCurHp()
    return self.m_curHp
end

function ModelObject:GetMaxHp()
    return self.m_maxHp
end

--[[
    墓碑
]]
function ModelObject:ShowMuBei()
    if self.m_gameObject~=nil then
        self.m_gameObject:SetActive(false)
    end
    self:SetBloodVisible(false)
    if (self.m_objWeapon ~= nil) then
        self.m_objWeapon:SetActive(false)
    end
    if (self.m_objMubei ~= nil) then
        self.m_objMubei:SetActive(true)
        return
    end
    local _prefabPath = "Assets/Main/Prefabs/PVE/Obj_A_build_th_mb.prefab"
    self.m_reqMubei[#self.m_reqMubei+1] = Resource:InstantiateAsync(_prefabPath)
    self.m_reqMubei[#self.m_reqMubei]:completed('+', function(req)
        local _go = req.gameObject
        if (_go == nil) then
            return
        end
        _go.transform.position = self:GetTransform().position
        _go.transform.rotation = ResetEulerAngles
        self.m_objMubei = _go
    end)
end

return ModelObject