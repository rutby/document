---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by mac.
--- DateTime: 3/24/22 5:51 PM
---
--[[
    这个是PVE模式下的模型管理器,用来创建英雄/怪物的模型
]]

local Const= require "Scene.BattlePveModule.Const"
local PveHeroModelMgr = BaseClass("PveHeroModelMgr")
local ModelObject = require "Scene.BattlePveModule.ModelModule.ModelObject"

function PveHeroModelMgr:__init()
    self.m_modelList = {}
    self.soundNum = 0
end

function PveHeroModelMgr:AddToModelList( modelType, model )
    if (self.m_modelList[modelType] == nil) then
        self.m_modelList[modelType] = {}
    end
    self.m_modelList[modelType][#self.m_modelList[modelType]+1] = model
end

-- 播放经验加成
function PveHeroModelMgr:PlayUpgradeEffect()
    for _, v in pairs(self.m_modelList) do
        for _, v1 in pairs(v) do
            v1:PlayEffectUpgrade()
        end
    end
end

function PveHeroModelMgr:CreateModel( modelType , standIndex, heroId, power,heroLv,quality,rarity,targetLv,heroUuid,rankId)
    local obj = ModelObject.New(modelType, standIndex, heroId, power, heroLv,quality,rarity,targetLv,heroUuid,rankId)
    if (obj == nil) then
        print("PVE创建英雄模型失败")
        return
    end
    self:AddToModelList(modelType, obj)
end

function PveHeroModelMgr:GetCreateModelOK()
    local isOk = false
    local _p_list = self.m_modelList[Const.CampType.Player]
    local _t_list = self.m_modelList[Const.CampType.Target]
    if _p_list~=nil and _t_list~=nil then
        for k,v in pairs(_p_list) do
            if v ==nil or v:IsCreateFinish()==false then
                return false
            end
        end
        for k,v in pairs(_t_list) do
            if v ==nil or v:IsCreateFinish()==false then
                return false
            end
        end
        isOk = true
    end
    return isOk
end

function PveHeroModelMgr:Destroy()
    for _, v in pairs(self.m_modelList) do
        for _, v1 in pairs(v) do
            v1:Destroy()
        end
    end
    self.soundNum = 0
    self.m_modelList = {}
end

-- 战斗准备
function PveHeroModelMgr:HeroesBattleInit()
    for ctype, v in pairs(self.m_modelList) do
        for _, v1 in pairs(v) do
            v1:BattleInit()
        end
    end
end
function PveHeroModelMgr:SetBarForGuide()
    for ctype, v in pairs(self.m_modelList) do
        for _, v1 in pairs(v) do
            if ctype == Const.CampType.Target and _ == 1 then
                v1:SetBarForGuide(true)
            else
                v1:SetBarForGuide()
            end
        end
    end
end

function PveHeroModelMgr:HideBarForGuide()
    for ctype, v in pairs(self.m_modelList) do
        for _, v1 in pairs(v) do
            v1:HideBarForGuide()
        end
    end
end
-- 根据triggerIndex找到对应的Obj
function PveHeroModelMgr:GetModelObjByTriggerIndex( index )
    for _ , v in pairs(self.m_modelList) do
        for _, v1 in pairs(v) do
            if (v1:GetTriggerIndex() == index) then
                return v1;
            end
        end
    end
    return nil
end

-- 删除模型
function PveHeroModelMgr:RemoveModelObj( modelType, index )
    local hero_list = self.m_modelList[modelType] or {}
    local newList = {}
    for i = 1, #hero_list do
        local modelObj = hero_list[i]
        if index == i then
            if (modelObj ~= nil) then
                modelObj:Destroy()
            end
        else
            local idx = #newList + 1
            modelObj:UpdatePos(idx)
            newList[idx] = modelObj
        end
    end
    self.m_modelList[modelType] = newList
end

-- 进行索引映射,将战报中的index对应到真实的ModelObject
function PveHeroModelMgr:SetModelDetailReportPlayerInfo( s_list, t_list )
    if (s_list == nil or t_list == nil) then
        return
    end
    local _p_list = self.m_modelList[Const.CampType.Player] or {}
    for _, model in pairs(_p_list) do
        model:SetDetailReportPlayerInfo(s_list)
    end
    local _t_list = self.m_modelList[Const.CampType.Target] or {}
    for _, model in pairs(_t_list) do
        model:SetDetailReportPlayerInfo(t_list)
    end
end


-- 进行索引映射,将战报中的index对应到真实的ModelObject
function PveHeroModelMgr:SetModelArmyCombatUnit( s_list, t_list )
    if (s_list == nil or t_list == nil) then
        return
    end
    if (table.count(s_list) ~= table.count(self.m_modelList[Const.CampType.Player]) or
            table.count(t_list) ~= table.count(self.m_modelList[Const.CampType.Target]) ) then
        Logger.LogError("[PVE] 详细战报中人物对应不上")
        return
    end
    for k, v in pairs(s_list) do
        self.m_modelList[Const.CampType.Player][k]:SetArmyCombatUnit(v)
    end
    for k, v in pairs(t_list) do
        self.m_modelList[Const.CampType.Target][k]:SetArmyCombatUnit(v)
    end
end

-- 返回对应阵营的列表
function PveHeroModelMgr:GetModelListByCamp( value )
    return self.m_modelList[value] or {}
end

function PveHeroModelMgr:GetModelObjByHeroId( campType, heroId )
    local _modelList = self.m_modelList[campType] or {}
    for _, v in pairs(_modelList) do
        if (v:GetHeroId() == heroId) then
            return v
        end
    end
    return nil
end

------------------------------------ 战斗部分 -------------------------------
-- 所有英雄执行一次当前回合的buff
function PveHeroModelMgr:DoAllBuff()
    for _, v in pairs(self.m_modelList) do
        for _, v1 in pairs(v) do
            v1:DoActionBuff()
        end
    end
end

-- 所有人开始播放战斗特效
function PveHeroModelMgr:PlayAllHeroesFireEffect()
    for _, v in pairs(self.m_modelList) do
        for _, v1 in pairs(v) do
            v1:PlayAttack()
        end
    end
    if PveActorMgr:GetInstance():GetSpeedOffset()==4 then
        local num = self.soundNum%2
        if num <=0 then
            SoundUtil.PlayEffect(SoundAssets.Music_Effect_self_attack_low)
        end
    else
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_self_attack_low)
    end
    self.soundNum = self.soundNum+1
end

-- 停止开火
function PveHeroModelMgr:StopAllHeroesFireEffect()
    for _, v in pairs(self.m_modelList) do
        for _, v1 in pairs(v) do
            v1:PlayStopFire()
        end
    end
end



------------------------------------------ 新版 ------------------------------------------
function PveHeroModelMgr:SetHeroHp(sTotalHp, tTotalHp)
    -- 设置双方血量和伤害系数
    local function SetData(modelType, totalHp)
        -- 玩家
        local _pModel = self.m_modelList[modelType] or {}
        local _pTotalPower = 0
        for _, v in pairs(_pModel) do
            _pTotalPower = _pTotalPower + v:GetHeroPower()
        end
        -- 计算系数,最后一个收尾,防止小数的问题
        local _totalHp = 0
        local _modelCnt = table.count(_pModel)
        for k, v in pairs(_pModel) do
            local hp = 0
            if (k == _modelCnt) then
                hp = totalHp - _totalHp
            else
                local ratio = v:GetHeroPower()/math.max(_pTotalPower,1)
                ratio = Mathf.DecimalFormat(ratio)
                hp = Mathf.Floor(totalHp*ratio)
                _totalHp = _totalHp + hp
            end
            v:SetHeroHp(hp)
        end
    end
    -- 玩家
    SetData(Const.CampType.Player, sTotalHp)
    -- 对方
    SetData(Const.CampType.Target, tTotalHp)
end

function PveHeroModelMgr:SetHeroHpFactor(modelType, maxHpPercent)
    local _pModel = self.m_modelList[modelType] or {}
    for _, v in pairs(_pModel) do
        v:SetHpFactor(maxHpPercent)
    end
end

function PveHeroModelMgr:SetHeroLv(heroId, heroLv)
    for _, v in pairs(self.m_modelList[Const.CampType.Player] or {}) do
        if v:GetHeroId() == heroId then
            v:SetHeroLv(heroLv)
        end
    end
end

return PveHeroModelMgr



