---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1022.
--- DateTime: 2023/10/11 15:05
---
local PveReportBuff = BaseClass("PveReportBuff")
--local VFXBase = require("Scene.PVEBattleLevel.VFX.VFXBase")
local Const = require "Scene.BattlePveModule.Const"
local Localization = CS.GameEntry.Localization

local EffectPath = {
    Shield = "Eff_PVE_hudun",        --护盾
    Buff = "Eff_PVE_buff",        --增益
    DeBuff = "Eff_PVE_debuff"        --减益
}

function PveReportBuff:__init(owner,skillBuff)
    self.m_owner = owner
    self.m_buff = skillBuff
    self.m_timeComplete = false

    local type = skillBuff:GetType()
    local effectPath
    local effectDest
    local completeTime = 2
    if type == eMailDetailActionType.SHIELD then
        --护盾
        effectPath = EffectPath.Shield
        local param = skillBuff:GetParam()
        if param ~= nil and param > 0 then
            completeTime = param
        end
    elseif type == eMailDetailActionType.ADD_ANGER then
        --怒气
        local val = skillBuff:GetDamage()
        effectDest = Localization:GetString("400020") .. "+" .. val
        effectPath = EffectPath.Buff

        local info = {}
        info.heroId = owner:GetHeroId()
        info.addAnger = val
        if owner.info:GetCampType() == Const.CampType.Player then
            EventManager:GetInstance():Broadcast(EventId.PveHeroAngerUpdate, info)
        end
    else
        completeTime = skillBuff:GetBuffTime()
        --加BUFF
        if skillBuff:GetTriggerIndex() == skillBuff:GetTargetIndex() then
            effectPath = EffectPath.Buff
        else
            effectPath = EffectPath.DeBuff
        end
    end

    if not string.IsNullOrEmpty(effectPath) then
        self:__loadEffect(effectPath)
    end

    if not string.IsNullOrEmpty(effectDest) then
        self:__showText(effectDest)
    end

    self.m_timer = TimerManager:GetInstance():DelayInvoke(function()
        self:__complete()
    end,completeTime)
end

function PveReportBuff:__loadEffect(effectPath)
    --if effectPath == EffectPath.Shield then
    --    self.m_shieldVfx = self.m_owner:CreateVFX("4001")
    --else
    --    --self.m_vfx = VFXBase.New()
    --    --self.m_vfx:SetParent(self.m_owner:GetTransform())
    --    --self.m_vfx:CreateByPrefabName(effectPath)
    --end
end

function PveReportBuff:__showText(effectDest)
    if DataCenter.BattleLevel.showHp then
        DataCenter.BattleLevel:FlyText(effectDest, self.m_owner:GetPosition())
    end
end

function PveReportBuff:__complete()
    self.m_timeComplete = true
    if self.m_shieldVfx ~= nil and self.m_shieldVfx.PlayEnd ~= nil then
        self.m_shieldVfx:PlayEnd()
    end
    self:DestroyVFX()
end

function PveReportBuff:CheckComplete()
    return self.m_timeComplete
end

function PveReportBuff:DestroyVFX()
    --if self.m_vfx ~= nil then
    --    self.m_vfx:Destroy()
    --    self.m_vfx = nil
    --end
    self.m_shieldVfx = nil
end

function PveReportBuff:Destroy()
    if self.m_timer then
        self.m_timer:Stop()
        self.m_timer = nil
    end

    self:DestroyVFX()
end

return PveReportBuff
