---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1022.
--- DateTime: 2023/9/14 14:52
---单条回合战报数据
local PveReportItem = BaseClass("PveReportItem")

function PveReportItem:__init(data,buffTime)
    self.m_damage = 0
    self.m_skillTarget = {}
    self:__parseData(data,buffTime)
end

function PveReportItem:__parseData(data,buffTime)
    self.m_type = data["type"]
    self.m_roundIndex = data["round"]
    self.m_triggerIndex = data["triggerIndex"]
    self.m_targetIndex = data["targetIndex"]
    self.m_skillId = data["skillId"]
    self.m_heroId = data["heroId"]
    self.m_targetHealth = data["health"] --health是对方的血量
    self.m_damage = data["value"] or 0
    self.m_param = data["param"]
    self.m_skillLevel = data["skillLevel"]
    self.m_buffTime = buffTime or 0
end

function PveReportItem:GetHealth()
    return self.m_health
end

function PveReportItem:GetDamage()
    return self.m_damage
end

function PveReportItem:GetType()
    return self.m_type
end

function PveReportItem:GetRoundIndex()
    return self.m_roundIndex
end

function PveReportItem:GetTriggerIndex()
    return self.m_triggerIndex
end

function PveReportItem:GetSkillId()
    return self.m_skillId
end

function PveReportItem:GetTargetIndex()
    return self.m_targetIndex
end

function PveReportItem:GetHeroId()
    return self.m_heroId
end

function PveReportItem:GetTargetHealth()
    return self.m_targetHealth
end

function PveReportItem:GetParam()
    return self.m_param
end

function PveReportItem:GetSkillLevel()
    return self.m_skillLevel
end

function PveReportItem:GetBuffTime()
    return self.m_buffTime
end

function PveReportItem:IsSubActionItem()
    if (self.m_type ~= eMailDetailActionType.ATTACK and self.m_type ~= eMailDetailActionType.RECOVER_DAMAGE) or self.m_skillId == 0 or self.m_skillId == 100000 then
        return false
    end
    return true
end

function PveReportItem:IsBelongThisSkill(item)
    local roundType = self:GetType()
    if (roundType ~= eMailDetailActionType.USE_SKILL) then -- 不是技能发起,直接忽略
        return false
    end
    if (item:GetType() ~= eMailDetailActionType.ATTACK and item:GetType() ~= eMailDetailActionType.RECOVER_DAMAGE) then -- 待检测的不是攻击类型直接跳过
        return false
    end
    -- 需要检测atkid, skillid,
    if (self:GetTriggerIndex() == item:GetTriggerIndex() and
            self:GetSkillId() == item:GetSkillId() and
            self:GetHeroId() == item:GetHeroId()) then
        return true
    end
    return false
end

function PveReportItem:IsSubSkill(skillId)
    local roundType = self:GetType()
    if (roundType ~= eMailDetailActionType.USE_SKILL) then -- 不是技能发起,直接忽略
        return false
    end
    local _skillId = self:GetSkillId()
    local _attached_skill = GetTableData(TableName.SkillTab, _skillId, "attached_skill")
    local _tab_attached_skill = string.split(_attached_skill, ";")
    for _, v in pairs(_tab_attached_skill) do
        if (tonumber(v) == skillId) then
            return true
        end
    end
    return false
end

function PveReportItem:AddSkillTarget(item)
    table.insert(self.m_skillTarget,item)
end

function PveReportItem:GetSkillTarget()
    return self.m_skillTarget
end

function PveReportItem:IsBuff()
    if self.m_skillId ~= 0 and self.m_skillId ~= 100000 and
            (self.m_type == eMailDetailActionType.SHIELD or
                    self.m_type == eMailDetailActionType.ADD_EFFECT or
                    self.m_type == eMailDetailActionType.ADD_ANGER)
    then
        return true
    end
    return false
end
--技能攻击特效
function PveReportItem:GetSkillEffectPath()
    local effectPath =  GetTableData(TableName.SkillTab, self:GetSkillId(), "effect_path")

    if string.IsNullOrEmpty(effectPath) then
        for i, subSkill in ipairs(self.m_skillTarget) do
            if subSkill:GetType() == eMailDetailActionType.ATTACK then
                effectPath = subSkill:GetSkillEffectPath()

                if not string.IsNullOrEmpty(effectPath) then
                    break
                end
            end
        end
    end
    return effectPath
end

return PveReportItem