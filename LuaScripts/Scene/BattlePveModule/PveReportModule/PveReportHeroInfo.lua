---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1022.
--- DateTime: 2023/9/19 21:20
---回合制英雄数据
local PveReportHeroInfo = BaseClass("PveReportHeroInfo")
local Const = require "Scene.BattlePveModule.Const"

function PveReportHeroInfo:__init(campType,standIndex,heroId,power,heroUuid)
    self.m_campType = campType
    self.m_heroId = heroId
    self.m_standIndex = standIndex
    self.m_power = power
    self.m_heroUuid = heroUuid

    --Logger.LogError(string.format("addHero heroId = %s,campType = %s,standIndex = %s,power = %s",
    --        heroId,campType,standIndex,power))

    self.m_template = DataCenter.PveHeroTemplateManager:GetTemplate(self.m_heroId)
    self.m_attackRange = self.m_template.attack_range_stage  --攻击距离
    self.m_moveSpeed = self.m_template.moveSpeed_stage    --移动速度
    self.m_attackSpeed = 1 / (self.m_template.attackSpeed_stage / 1000)  --攻击速度
    self.m_attackDelay = self.m_template.attackDelay / 1000 --攻击前摇
    self.m_attackDuration = self.m_template.attackSpeed_stage / 1000 --攻击间隔
    self.m_skillDelay = self.m_template.skillDelay / 1000 -- 技能前摇
    self.m_skillDuration = self.m_template.skillSpeed_stage / 1000 -- 技能间隔
    self.m_skillAnim = self.m_template.skill_animations_stage

    ----测试数据
    --self.m_attackSpeed = self.m_template.attackSpeed

    self.m_maxHealth = 0       --分配的生命值
    self.m_currentHealth = 0

    self.m_powerRatio = 0 --在总战力中的占比

    self.m_lastAttackTime = 0       --上一次攻击时间，用于计算每次攻击时长
end

function PveReportHeroInfo:__delete()
    self.m_template = nil
end

function PveReportHeroInfo:SetHeroPower(power)
    self.m_power = toInt(power)
end

function PveReportHeroInfo:SetPowerRatio(ratio)
    self.m_powerRatio = ratio
end

function PveReportHeroInfo:SetAttackTime(time)
    self.m_lastAttackTime = time
end

function PveReportHeroInfo:SetStandIndex(index)
    self.m_standIndex = index
end

function PveReportHeroInfo:InitHealth(value)
    value = toInt(value)
    self.m_maxHealth = value
    self.m_currentHealth = value
end

function PveReportHeroInfo:SetHealth(value)
    value = toInt(value)
    self.m_currentHealth = Mathf.Clamp(value,0,self.m_maxHealth)
    if self:GetCampType() == Const.CampType.Player then
        EventManager:GetInstance():Broadcast(EventId.PveHeroHpUpdate, self)
    end
end

function PveReportHeroInfo:SetMaxHealth(value)
    if value < self.m_maxHealth then
        return
    end
    self.m_maxHealth = value
end

function PveReportHeroInfo:GetHealth()
    return self.m_currentHealth
end
--兼容接口
function PveReportHeroInfo:GetCurBlood()
    return self.m_currentHealth
end
--兼容接口
function PveReportHeroInfo:GetMaxBlood()
    return self.m_maxHealth
end

function PveReportHeroInfo:IsDead()
    return self.m_currentHealth <= 0
end

function PveReportHeroInfo:GetPower()
    return self.m_power
end

function PveReportHeroInfo:GetHeroId()
    return self.m_heroId
end

function PveReportHeroInfo:GetMoveSpeed()
    return self.m_moveSpeed
end

function PveReportHeroInfo:GetAttackSpeed()
    return self.m_attackSpeed
end

function PveReportHeroInfo:GetAttackDelay()
    return self.m_attackDelay
end

function PveReportHeroInfo:GetAttackDuration()
    return self.m_attackDuration
end

function PveReportHeroInfo:GetSkillDelay()
    return self.m_skillDelay
end

function PveReportHeroInfo:GetSkillDuration()
    return self.m_skillDuration
end

function PveReportHeroInfo:GetAttackRange()
    return self.m_attackRange
end

function PveReportHeroInfo:GetLastAttackTime()
    return self.m_lastAttackTime
end

function PveReportHeroInfo:GetPowerRatio()
    return self.m_powerRatio
end
--站位
function PveReportHeroInfo:GetStandIndex()
    return self.m_standIndex
end

function PveReportHeroInfo:GetCampType()
    return self.m_campType
end

function PveReportHeroInfo:GetModel()
    return self.m_template.model
end

function PveReportHeroInfo:GetPartId()
    return self.m_template.part
end

function PveReportHeroInfo:GetAnimation()
    return self.m_template.animation
end

function PveReportHeroInfo:GetMoveRangeStage()
    return self.m_template.move_range_stage
end

function PveReportHeroInfo:GetAttackCdStage()
    return self.m_template.attack_cd_stage
end

function PveReportHeroInfo:GetFarPartId()
    return self.m_template.part_far
end

function PveReportHeroInfo:GetFarAnimation()
    return self.m_template.animations_far
end

function PveReportHeroInfo:GetFarSkillAnim()
    return self.m_template.skill_animations_stage_far
end

function PveReportHeroInfo:GetFarAttackRange()
    return self.m_template.attack_range_stage_far
end

function PveReportHeroInfo:IsBoss()
    return self.m_template.boss ~= nil and self.m_template.boss == 1
end

function PveReportHeroInfo:GetMoveAnimSpeed()
    return 1
end

function PveReportHeroInfo:GetSkillAnim()
    return self.m_skillAnim
end

function PveReportHeroInfo:GetHeroUuid()
    return self.m_heroUuid
end

return PveReportHeroInfo