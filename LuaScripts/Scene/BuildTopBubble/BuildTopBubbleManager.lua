---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- DateTime: 2021/7/30 19:33
---
---@class BuildTopBubbleManager : Singleton
---@field GetInstance fun():BuildTopBubbleManager
local BuildTopBubbleManager = BaseClass("BuildTopBubbleManager", Singleton)
local ResourceManager = CS.GameEntry.Resource

local function __init(self)
    self.allEffect = {}
    self.OnCreateEffect ={}
    self.needRefreshBuildList = {}
    self.timer = nil
    self:AddListener()
end

local function __delete(self)
    for k,v in pairs(self.allEffect) do
        local request = v.request
        v.script:OnDestroy()
        request:Destroy()
    end
    for k,v in pairs(self.OnCreateEffect) do
        if v~=nil then
            v.request:Destroy()
        end
    end
    self.allEffect = nil
    self.OnCreateEffect = nil
    self.needRefreshBuildList = nil
    self:DeleteTimer()
    self:RemoveListener()
end

local function AddListener(self)
    --EventManager:GetInstance():AddListener(EventId.WORLD_BUILD_OUT_VIEW, self.BuildOutViewSignal) -- 监听主基地出视野
    --EventManager:GetInstance():AddListener(EventId.CheckDomeOpen, self.CheckDomeOpen) -- 监听主基地建筑进入视野

    EventManager:GetInstance():AddListener(EventId.WorldBuildTopBubblePlot, self.TriggerPlotBubble)
end

local function RemoveListener(self)
    --EventManager:GetInstance():RemoveListener(EventId.WORLD_BUILD_OUT_VIEW, self.BuildOutViewSignal)
    --EventManager:GetInstance():RemoveListener(EventId.CheckDomeOpen, self.CheckDomeOpen)

    EventManager:GetInstance():RemoveListener(EventId.WorldBuildTopBubblePlot, self.TriggerPlotBubble)
end

local function BuildOutViewSignal(uuid)
    BuildTopBubbleManager:GetInstance():RemoveOneEffect(tonumber(uuid))
end
local function CheckDomeOpen(uuid)
    BuildTopBubbleManager:GetInstance():CheckShowEffect(tonumber(uuid))
end
local function RefreshTopBubble(uuid)
    BuildTopBubbleManager:GetInstance():CheckShowEffect(tonumber(uuid))
end

local function ShowBubbleEffect(self,bUuid,posIndex,bubbleType,bubbleParam)
 
    self:RemoveOneEffect(bUuid)

    local bubbleData = WorldBuildTopBubbleTypeData[bubbleType]
    local modelName = bubbleData.assert
    local scriptPath = bubbleData.script

    local request = ResourceManager:InstantiateAsync(modelName)
    local par = {}
    par.request = request
    par.bubbleType = bubbleType
    par.bubbleParam = bubbleParam

    self.OnCreateEffect[bUuid] = par
    request:completed('+', function()
        self.OnCreateEffect[bUuid] =nil
        if request.isError then
            return
        end
        request.gameObject:SetActive(true)
        request.gameObject.transform:SetParent(CS.SceneManager.World.DynamicObjNode)
        request.gameObject.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
        local sz = WorldBuildUtil.GetBuildTile(posIndex)
        if sz == nil or sz <= 1 then
            sz =1
        end
        request.gameObject.transform.position = BuildingUtils.GetBuildModelCenterVec(posIndex, sz) + Vector3.New(0, 3, 0)

        local script = require(scriptPath)
        local effect = script.New()
        effect:OnCreate(request)
        effect:ReInit(bubbleParam, bUuid)
        par.script = effect
        self.allEffect[bUuid] = par
    end)
end

local function RemoveOneEffect(self,bUuid)
    local temp = self.allEffect[bUuid]
    if temp ~= nil then
        local request = temp.request
        temp.script:OnDestroy()
        request:Destroy()
        self.allEffect[bUuid] = nil
    end
    if self.OnCreateEffect[bUuid]~=nil then
        local request = self.OnCreateEffect[bUuid].request
        request:Destroy()
        self.OnCreateEffect[bUuid] = nil
    end
end

local function CheckShowEffect(self,bUuid)
    local info = DataCenter.WorldPointManager:GetBuildDataByUuid(bUuid)
    if info == nil then
        return
    end
    if info.destroyStartTime > 0 then
        self:RemoveOneEffect(bUuid)
        return
    end

    local buildLevelTemplate = DataCenter.BuildTemplateManager:GetBuildingLevelTemplate(info.itemId,info.level)
    local buildTemplate = DataCenter.BuildTemplateManager:GetBuildingDesTemplate(info.itemId)
    if buildLevelTemplate == nil or buildTemplate == nil then
        return
    end
    
    local bubbleType = WorldBuildTopBubbleType.None
    local bubbleParam = nil
    if info.itemId == BuildingTypes.FUN_BUILD_MAIN then
        if bubbleType == WorldBuildTopBubbleType.None then
            local detectData = DataCenter.RadarCenterDataManager:GetHelperEventDataByBuildUid(bUuid)
            if detectData and detectData.state == DetectEventState.DETECT_EVENT_STATE_NOT_FINISH then
                bubbleType = WorldBuildTopBubbleType.HelperDetect
                bubbleParam = detectData
            end
        end
    end

    if bubbleType ~= WorldBuildTopBubbleType.None then
        self:ShowBubbleEffect(bUuid, info.mainIndex, bubbleType, bubbleParam)
    else
        self:RemoveOneEffect(bUuid)
    end
end

local function TimeRefresh(self)
    local curTime = UITimeManager:GetInstance():GetServerTime()
    local refreshListCount = 0
    
    for uuid,time in pairs(self.needRefreshBuildList) do
        if curTime < time then
            refreshListCount = refreshListCount + 1
        else
            self:CheckShowEffect(tonumber(uuid))
            self.needRefreshBuildList[uuid] = nil
        end
    end

    if refreshListCount == 0 then
        self:DeleteTimer()
    end
end

local function AddTimer(self)
    if self.timer == nil then
        self.timer = TimerManager:GetInstance():GetTimer(1, self.TimeRefresh , self, false,false,false)
    end
    self.timer:Start()
end

local function DeleteTimer(self)
    if self.timer ~= nil then
        self.timer:Stop()
        self.timer = nil
    end
end

local function AddNeedRefreshBuildUuidTime(self, uuid, delayTime)
    local curTime = UITimeManager:GetInstance():GetServerTime()
    local refreshTime = curTime + delayTime * 1000
    self.needRefreshBuildList[uuid] = refreshTime

    if self.timer == nil then
        self:AddTimer()
    end
end

local function TriggerPlotBubble(data)
    local theWorld = CS.SceneManager.World
    if theWorld == nil then
        return
    end
    
    local bUuid = tonumber(data.bUuid)
	BuildTopBubbleManager:GetInstance():CheckShowEffect(bUuid)
    BuildTopBubbleManager:GetInstance():AddNeedRefreshBuildUuidTime(bUuid, 3)
end

BuildTopBubbleManager.__init = __init
BuildTopBubbleManager.__delete = __delete
BuildTopBubbleManager.AddListener = AddListener
BuildTopBubbleManager.RemoveListener = RemoveListener
BuildTopBubbleManager.BuildOutViewSignal = BuildOutViewSignal
BuildTopBubbleManager.CheckDomeOpen = CheckDomeOpen
BuildTopBubbleManager.RefreshTopBubble = RefreshTopBubble
BuildTopBubbleManager.TriggerPlotBubble = TriggerPlotBubble
BuildTopBubbleManager.RemoveOneEffect = RemoveOneEffect
BuildTopBubbleManager.CheckShowEffect = CheckShowEffect
BuildTopBubbleManager.ShowBubbleEffect = ShowBubbleEffect
BuildTopBubbleManager.TimeRefresh = TimeRefresh
BuildTopBubbleManager.AddTimer = AddTimer
BuildTopBubbleManager.DeleteTimer = DeleteTimer
BuildTopBubbleManager.AddNeedRefreshBuildUuidTime = AddNeedRefreshBuildUuidTime

return BuildTopBubbleManager