---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 27/3/2024 下午2:21
---

local base = WorldTroopStateBase
local WorldTroopStateAttack = BaseClass("WorldTroopStateAttack",WorldTroopStateBase)

local Const = require"Scene.WorldTroopManager.Const"
function WorldTroopStateAttack:__init(worldTroop,stateMachine)
    base.__init(self,worldTroop,stateMachine)
end

function WorldTroopStateAttack:__delete()
    base.__delete(self)
end
function WorldTroopStateAttack:OnStateEnter()
    if self.worldTroop == nil then
        return
    end
    self.script = self.worldTroop:GetMoveMono()
    self.targetPos = self.worldTroop:GetMarchTargetPos()
    self.worldTroop:SetRotationRoot()
    local normalized = Vector3.Normalize(self.worldTroop:GetDefenderPosition() - self.worldTroop:GetPosition())
    if normalized.x == 0 and normalized.y ==0 and normalized.z == 0 then
    else
        self.worldTroop:SetRotation(Quaternion.LookRotation(normalized,Vector3.up))
    end
    EventManager:GetInstance():Broadcast(EventId.HideTroopName,self.worldTroop:GetMarchUUID())
    EventManager:GetInstance():Broadcast(EventId.ShowTroopHeadInBattle,self.worldTroop:GetMarchUUID())
    self:StartMove()
    WorldTroopManager:GetInstance():UpdateListRemove(self.worldTroop:GetMarchUUID())
    self:OnTroopChange()
end

function WorldTroopStateAttack:OnStateLeave()
    if self.script ~=nil then
        self.script:StopMove()
    end

end

function WorldTroopStateAttack:OnStateUpdate()

end

function WorldTroopStateAttack:OnTroopChange()
    if self.worldTroop == nil then
        return
    end
    if self.worldTroop:IsBattle() == false then
        self:ChangeState(Const.WorldTroopState.AttackEnd)
    else
        local targetPos = self.worldTroop:GetMarchTargetPos()
        if targetPos~= self.targetPos then
            self.worldTroop:RemoveAttack()
            self:StartMove()
            return
        end
        local moveSpeed = self.worldTroop:GetSpeed()
        if self.moveSpeed ==nil then
            self.moveSpeed = 0
        end
        if math.abs(moveSpeed-self.moveSpeed)>0.1 then
            self:StartMove()
            return
        end

    end
end


function WorldTroopStateAttack:StartMove()
    if self.script ==nil then
        return
    end
    self.targetPos = self.worldTroop:GetMarchTargetPos()
    local strPath = self.worldTroop:GetPathStr()
    self.moveSpeed = self.worldTroop:GetSpeed()
    local blackEndTime = self.worldTroop:GetMarchBlackEndTime()
    local blackStartTime = self.worldTroop:GetMarchBlackStartTime()
    local startTime = self.worldTroop:GetMarchStartTime()
    local trans = self.worldTroop:GetModelTrans()
    if trans == nil then
        local errorStr = "marchUuid:"..self.worldTroop:GetMarchUUID().."status:"..self.worldTroop:GetMarchStatus().."targetType:"..self.worldTroop:GetMarchTargetType().."marchType"..self.worldTroop.marchType
        local now = UITimeManager:GetInstance():GetServerSeconds()
        local errorMsgStr = "MarchMove Error:"..errorStr
        CommonUtil.SendErrorMessageToServer(now, now, errorMsgStr)
    else
        self.script:StartMove(trans,self.targetPos,strPath,self.moveSpeed,blackStartTime,blackEndTime,startTime,0)
    end
    self.worldTroop:PlayAnim(Const.WorldTroopAnim.Anim_Attack)
end

return WorldTroopStateAttack