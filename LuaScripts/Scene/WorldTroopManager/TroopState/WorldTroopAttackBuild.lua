---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 27/3/2024 下午2:22
---
local base = WorldTroopStateBase
local WorldTroopAttackBuild = BaseClass("WorldTroopAttackBuild",WorldTroopStateBase)
local Const = require"Scene.WorldTroopManager.Const"

function WorldTroopAttackBuild:__init(worldTroop,stateMachine)
    base.__init(self,worldTroop,stateMachine)
end

function WorldTroopAttackBuild:__delete()
    base.__delete(self)
end

function WorldTroopAttackBuild:OnStateEnter()
    if self.worldTroop == nil then
        return
    end
    self.startTime = self.worldTroop:GetMarchStartTime()
    self.endTime = self.worldTroop:GetMarchEndTime()
    self.worldTroop:SetRotationRoot()
    local normalized = Vector3.Normalize(self.worldTroop:GetDefenderPosition() - self.worldTroop:GetPosition())
    if normalized.x == 0 and normalized.y == 0 and normalized.z == 0 then
    else
        self.worldTroop:SetRotation(Quaternion.LookRotation(normalized, Vector3.up))
    end

    EventManager:GetInstance():Broadcast(EventId.ShowTroopAtkBuildIcon, self.worldTroop:GetMarchUUID())
    WorldTroopManager:GetInstance():AddToUpdateList(self.worldTroop:GetMarchUUID())
    self:OnTroopChange()
end

function WorldTroopAttackBuild:OnStateLeave()

end

function WorldTroopAttackBuild:OnStateUpdate()
    if self.worldTroop == nil then
        return
    end
    local curTime = UITimeManager:GetInstance():GetServerTime()
    if curTime < self.endTime then
        if self.lastAttackTime ==nil or curTime-self.lastAttackTime >=1000 then
            self.worldTroop:ShowAttack()
            self.lastAttackTime = curTime
        end
    end
end

function WorldTroopAttackBuild:OnTroopChange()
    if self.worldTroop == nil then
        return
    end
    if self.worldTroop:IsBattle() == false then
        if self.worldTroop:GetMarchStatus() == MarchStatus.CHASING
                or self.worldTroop:GetMarchStatus() == MarchStatus.MOVING then
            self:ChangeState(Const.WorldTroopState.Move)
        elseif self.worldTroop:GetMarchStatus()~=MarchStatus.DESTROY_WAIT then
            self:ChangeState(Const.WorldTroopState.Idle)
        end
    else
        self:ChangeState(Const.WorldTroopState.AttackBegin)
    end
end



return WorldTroopAttackBuild