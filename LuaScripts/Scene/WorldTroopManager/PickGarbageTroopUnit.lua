---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 28/3/2024 上午10:24
---
local Const = require"Scene.WorldTroopManager.Const"
local ResourceManager = CS.GameEntry.Resource
local PickGarbageTroopUnit = BaseClass("PickGarbageTroopUnit")
local State = 
{
    Birth =1,
    Attack =2,
    Back =3,
    Destroy =4,
    MovetoGarbage =5,
    PickGarbage = 6,
    PickGarbageSuccess =7,
    PickGarbageFailed = 8,
    BackFromGarbage =9,
    ToCarrier =10,
}
function PickGarbageTroopUnit:__init(worldTroop)
    self.owner = worldTroop
    self.instance = nil
    self.anim = nil
    self.gameObject =nil
    self.transform = nil
    self.state = nil
    self.birthDest = nil
    self.pickDest = nil
    self.garbageObjectPos =nil
    self.stateTime =0
end

function PickGarbageTroopUnit:__delete()
    self.owner = nil
end
function PickGarbageTroopUnit:Destroy()
    if self.instance~=nil then
        self.instance:Destroy()
    end
    self.instance = nil
    self.anim = nil
    self.gameObject =nil
    self.transform = nil
    self.state = nil
end

function PickGarbageTroopUnit:CreateInstance(onComplete,parent)
    local prefabPath = Const.WorldTroopJunkman
    self.instance = ResourceManager:InstantiateAsync(prefabPath)
    self.instance:completed('+',function()
        if self.instance.isError or self.instance.gameObject == nil then
            return
        end
        self.gameObject = self.instance.gameObject
        self.transform = self.gameObject.transform
        self.transform:SetParent(parent)
        self.transform.localRotation = Quaternion.identity
        self.anim = self.gameObject:GetComponentInChildren(typeof(CS.SimpleAnimation))
        self.state = nil
        onComplete()
    end)
end

function PickGarbageTroopUnit:Update()
    if self.instance~=nil or self.instance.isDone ==false or self.gameObject == nil then
        return
    end
    if self.state == State.Birth then
        self:LookAt(self.pickDest)
    end
end
function PickGarbageTroopUnit:BirthThenAttack(birthDest)
    self.birthDest = birthDest
    self.state = State.Birth
    self.anim:Play(Const.WorldTroopAnim.Anim_Birth)
    self.anim:PlayQueued(Const.WorldTroopAnim.Anim_Attack)
    self.stateTime = 1
    local animState = self.anim:GetState(Const.WorldTroopAnim.Anim_Birth)
    if animState~=nil then
        self.stateTime = animState.length
    end
end
function PickGarbageTroopUnit:LootAt(target)
    local moveVec = target-self.gameObject.transform.position
    local moveDir = Vector3.Normalize(moveVec)
    local rotation = Quaternion.LookRotation(moveDir,Vector3.up)
    self.gameObject.transform.rotation = rotation
end
function PickGarbageTroopUnit:BirthThenMoveToGarbage(birthDest,pickDest,garbageObjectPos)
    if self.anim~=nil then
        
    end
end
return PickGarbageTroopUnit
