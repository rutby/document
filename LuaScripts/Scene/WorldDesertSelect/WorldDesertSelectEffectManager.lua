---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 24224.
--- DateTime: 2022/12/23 16:30
---
local WorldDesertSelectEffectManager = BaseClass("WorldDesertSelectEffectManager", Singleton)
local ResourceManager = CS.GameEntry.Resource
local WaitTime = 2.5
local function __init(self)
    self:AddListener()
end

local function __delete(self)
    self:RemoveListener()
    self:RemoveAllEffect()
end

local function AddListener(self)
    EventManager:GetInstance():AddListener(EventId.PveLevelEnter, self.RemoveAllTips)
    EventManager:GetInstance():AddListener(EventId.OnEnterWorld, self.OnEnterWorld)
    EventManager:GetInstance():AddListener(EventId.OnEnterCity, self.OnEnterCity)
    
end

local function RemoveListener(self)
    EventManager:GetInstance():RemoveListener(EventId.PveLevelEnter, self.RemoveAllTips)
    EventManager:GetInstance():RemoveListener(EventId.OnEnterWorld, self.OnEnterWorld)
    EventManager:GetInstance():RemoveListener(EventId.OnEnterCity, self.OnEnterCity)
end

local function RemoveAllTips(data)
    WorldDesertSelectEffectManager:GetInstance():RemoveAllEffect()
end
local function OnEnterWorld(data)
end
local function OnEnterCity(data)
    WorldDesertSelectEffectManager:GetInstance():RemoveAllEffect()
end

local function ShowPos(self,pointId)
    if self.effectInstance~=nil then
        if self.effectInstance.gameObject~=nil then
            self.effectInstance.gameObject:SetActive(true)
            local posV3 = SceneUtils.TileIndexToWorld(pointId,ForceChangeScene.World)
            self.effectInstance.gameObject.transform.position = posV3
        end
    else
        local request = ResourceManager:InstantiateAsync("Assets/Main/Prefabs/Building/BuildBlock.prefab")
        self.effectInstance = request
        local pointIndex = pointId
        request:completed('+', function()
            if request.isError then
                self.effectInstance = nil
                return
            end
            request.gameObject:SetActive(true)
            request.gameObject.transform:SetParent(CS.SceneManager.World.DynamicObjNode)
            request.gameObject.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
            local posV3 = SceneUtils.TileIndexToWorld(pointIndex,ForceChangeScene.World)
            request.gameObject.transform.position = posV3
        end)
    end
end

local function HidePos(self)
    if self.effectInstance~=nil then
        if self.effectInstance.gameObject~=nil then
            self.effectInstance.gameObject:SetActive(false)
        end
        
    end
end
local function RemoveEffect(self)
    if self.effectInstance ~= nil then
        self.effectInstance:Destroy()
        self.effectInstance = nil
    end
end

local function RemoveAllEffect(self)
    if self.timer ~= nil then
        self.timer:Stop()
        self.timer = nil
    end
    if self.alBuildTimer ~= nil then
        self.alBuildTimer:Stop()
        self.alBuildTimer= nil
    end
    self:RemoveEffect()
    self:RemoveWarnEffect()
    self:RemoveAlBuildWarnEffect()
end

local function RemoveWarnEffect(self)
    if self.effectWarnInstance~=nil then
        self.effectWarnInstance:Destroy()
        self.effectWarnInstance = nil
    end
end

local function RemoveAlBuildWarnEffect(self)
    if self.effectAlBuildWarnInstance~=nil then
        self.effectAlBuildWarnInstance:Destroy()
        self.effectAlBuildWarnInstance = nil
    end
end
local function ShowAlBuildWarnPos(self,pointId)
    if self.effectAlBuildWarnInstance~=nil then
        if self.effectAlBuildWarnInstance.gameObject~=nil then
            self.effectAlBuildWarnInstance.gameObject:SetActive(true)
            local posV3 = SceneUtils.TileIndexToWorld(pointId,ForceChangeScene.World)
            self.effectAlBuildWarnInstance.gameObject.transform.position = posV3
            if self.alBuildTimer ~= nil then
                self.alBuildTimer:Stop()
                self.alBuildTimer = nil
            end
            self.alBuildTimer = TimerManager:GetInstance():DelayInvoke(function()
                self.alBuildTimer = nil
                self:RemoveAlBuildWarnEffect()
            end, WaitTime)
        end
    else
        local request = ResourceManager:InstantiateAsync("Assets/Main/Prefabs/CityScene/WorldDesertEffectAllianceBuild.prefab")
        self.effectAlBuildWarnInstance = request
        local pointIndex = pointId
        request:completed('+', function()
            if request.isError then
                self.effectAlBuildWarnInstance = nil
                return
            end
            request.gameObject:SetActive(true)
            request.gameObject.transform:SetParent(CS.SceneManager.World.DynamicObjNode)
            request.gameObject.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
            local posV3 = SceneUtils.TileIndexToWorld(pointIndex,ForceChangeScene.World)
            request.gameObject.transform.position = posV3
            if self.alBuildTimer ~= nil then
                self.alBuildTimer:Stop()
                self.alBuildTimer = nil
            end
            self.alBuildTimer = TimerManager:GetInstance():DelayInvoke(function()
                self.alBuildTimer = nil
                self:RemoveAlBuildWarnEffect()
            end, WaitTime)
        end)
    end
end

local function ShowWarnPos(self,pointId)
    if self.effectWarnInstance~=nil then
        if self.effectWarnInstance.gameObject~=nil then
            self.effectWarnInstance.gameObject:SetActive(true)
            local posV3 = SceneUtils.TileIndexToWorld(pointId,ForceChangeScene.World)
            self.effectWarnInstance.gameObject.transform.position = posV3
            if self.timer ~= nil then
                self.timer:Stop()
                self.timer = nil
            end
            self.timer = TimerManager:GetInstance():DelayInvoke(function()
                self.timer = nil
                self:RemoveWarnEffect()
            end, WaitTime)
        end
    else
        local request = ResourceManager:InstantiateAsync("Assets/Main/Prefabs/CityScene/WorldDesertEffectSelf.prefab")
        self.effectWarnInstance = request
        local pointIndex = pointId
        request:completed('+', function()
            if request.isError then
                self.effectWarnInstance = nil
                return
            end
            request.gameObject:SetActive(true)
            request.gameObject.transform:SetParent(CS.SceneManager.World.DynamicObjNode)
            request.gameObject.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
            local posV3 = SceneUtils.TileIndexToWorld(pointIndex,ForceChangeScene.World)
            request.gameObject.transform.position = posV3
            if self.timer ~= nil then
                self.timer:Stop()
                self.timer = nil
            end
            self.timer = TimerManager:GetInstance():DelayInvoke(function()
                self.timer = nil
                self:RemoveWarnEffect()
            end, WaitTime)
        end)
    end
end

WorldDesertSelectEffectManager.OnEnterWorld = OnEnterWorld
WorldDesertSelectEffectManager.OnEnterCity = OnEnterCity
WorldDesertSelectEffectManager.__init = __init
WorldDesertSelectEffectManager.__delete = __delete
WorldDesertSelectEffectManager.AddListener = AddListener
WorldDesertSelectEffectManager.RemoveListener = RemoveListener
WorldDesertSelectEffectManager.RemoveEffect = RemoveEffect
WorldDesertSelectEffectManager.ShowPos = ShowPos
WorldDesertSelectEffectManager.HidePos = HidePos
WorldDesertSelectEffectManager.RemoveAllTips =RemoveAllTips
WorldDesertSelectEffectManager.RemoveWarnEffect =RemoveWarnEffect
WorldDesertSelectEffectManager.RemoveAllEffect =RemoveAllEffect
WorldDesertSelectEffectManager.ShowWarnPos =ShowWarnPos
WorldDesertSelectEffectManager.ShowAlBuildWarnPos = ShowAlBuildWarnPos
WorldDesertSelectEffectManager.RemoveAlBuildWarnEffect =RemoveAlBuildWarnEffect
return WorldDesertSelectEffectManager