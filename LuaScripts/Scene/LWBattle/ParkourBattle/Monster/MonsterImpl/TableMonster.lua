---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by w.
--- DateTime: 2023/1/9 20:12
---
local base = require "Scene.LWBattle.ParkourBattle.Monster.MonsterImpl.ColliderMonsterBase"
---@class Scene.LWBattle.ParkourBattle.Monster.MonsterImpl.TableMonster : Scene.LWBattle.ParkourBattle.Monster.MonsterImp.ColliderMonsterBase
local TableMonster = BaseClass("TableMonster",base)
local TriggerEnum = require("Scene.LWBattle.ParkourBattle.TriggerEvent.TriggerEnum")

function TableMonster:Init(logic,mgr,guid,x,y,monsterMeta)
    base.Init(self,logic,mgr,guid,x,y,monsterMeta)
    if self.deathEvent ~= nil and self.deathEvent ~= 0 then
        self.triggerMeta = DataCenter.LWTriggerItemTemplateManager:GetTemplate(self.deathEvent)
    end
    self:PreSelectHeroUuid()
    self.delayAnim = nil
    self.hitLength = nil
end

function TableMonster:DestroyData()
    self.preSelectHeroUuid=nil
    self.triggerMeta=nil
    if self.delayAnim then
        self.delayAnim:Stop()
        self.delayAnim = nil
    end
    self.anim = nil
    base.DestroyData(self)
end

function TableMonster:PreSelectHeroUuid()
    if self.preSelectHeroUuid then
        return
    end
    if not self.triggerMeta then
        return
    end

    local triggerType = self.triggerMeta.type
    self.triggerType = triggerType
    if triggerType == TriggerEnum.EventType.AddSingleHeroSkill
            or triggerType == TriggerEnum.EventType.AddSingleHeroBuff
            or triggerType == TriggerEnum.EventType.ReplaceSingleHeroNormalAttack then

        local heroes = DataCenter.LWBattleManager.logic.team.teamInitUnitIds
        if heroes then
            self.preSelectHeroUuid = heroes[math.random(#heroes)]
        end
    elseif triggerType == TriggerEnum.EventType.ReplaceHeroIdNormalAttack then
        local para = self.triggerMeta.para
        if not string.IsNullOrEmpty(para) then
            local paraList = string.split(para, "|")
            if #paraList == 2 then
                self.preSelectHeroUuid = tonumber(paraList[1]) or 0
            end
        end
    elseif triggerType == TriggerEnum.EventType.ReplaceHeroIdAppearance then
        local para = self.triggerMeta.para
        if not string.IsNullOrEmpty(para) then
            local paraList = string.split(para, "|")
            if #paraList == 2 then
                self.preSelectHeroUuid = tonumber(paraList[1]) or 0
            end
        end
    elseif triggerType == TriggerEnum.EventType.ThreeChoices then
        local triggerCount = self.triggerMeta.paraArray and #self.triggerMeta.paraArray or 0
        local heroes = DataCenter.LWBattleManager.logic.team.teamInitUnitIds
        if triggerCount > 0 and heroes then
            self.preSelectHeroUuid = {}
            for i = 1, triggerCount do
                table.insert(self.preSelectHeroUuid, heroes[math.random(#heroes)])
            end
        end
    end
end

function TableMonster:OnLoadComplete()
    base.OnLoadComplete(self)
    --hp
    local hpTrans = self.transform:Find("HpText")
    if hpTrans then
        self.hpText = hpTrans:GetComponent(typeof(CS.SuperTextMesh))
        self.hpText.text = math.ceil(self.curBlood)
    end
end

function TableMonster:ComponentDefine()
    base.ComponentDefine(self)

    if not self.anim then
        self.anim = self.gameObject:GetComponentInChildren(typeof(CS.SimpleAnimation), true)
    end
end

function TableMonster:BeAttack(hurt,hitPoint,hitDir,whiteTime,stiffTime,dir)
    base.BeAttack(self,hurt,hitPoint,hitDir,whiteTime,stiffTime,dir)
    if hurt ~= 0 and self.hpText then
        self.hpText.text = math.ceil(self.curBlood)
    end
end


function TableMonster:AfterBeAttack(hurt,hitPoint,hitDir,whiteTime,stiffTime,hitBackDistance,hitEff,skill,deathEff)
    base.AfterBeAttack(self, hurt,hitPoint,hitDir,whiteTime,stiffTime,hitBackDistance,hitEff,skill,deathEff)


    if self.heroEffectMeta then
        local hit_action = self.heroEffectMeta.hit_action
        
        --受击动作
        if not string.IsNullOrEmpty(hit_action) then
            if self.hitLength == nil then
                self.hitLength = self:GetAnimLength(hit_action)
                
            end
            if self.hitLength > 0 then
                self:RewindAndPlaySimpleAnim(hit_action)

                if self.delayAnim == nil then
                    self.delayAnim = TimerManager:GetInstance():DelayInvoke(function()
                        self.delayAnim = nil

                        self:PlaySimpleAnim("Default")
                    end, self.hitLength)
                else
                    self.delayAnim:Reset()
                end
            end
        end
    end
end


return TableMonster

