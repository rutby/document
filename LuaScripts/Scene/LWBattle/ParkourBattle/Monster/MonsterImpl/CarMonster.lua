---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by wsf.
--- DateTime: 2024/1/16 6:41 PM
---

local base = require "Scene.LWBattle.ParkourBattle.Monster.MonsterImpl.CommonAIMonster"
---@class Scene.LWBattle.ParkourBattle.Monster.MonsterImpl.CarMonster : Scene.LWBattle.ParkourBattle.Monster.MonsterImpl.CommonAIMonster
local CarMonster = BaseClass("CarMonster", base)

local CarIdleState = require("Scene.LWBattle.ParkourBattle.Monster.MonsterImpl.FSM.Car.CarIdleState")
local RunState = require("Scene.LWBattle.BarrageBattle.ZombieState.ZombieStateRun")
local AttackState = require("Scene.LWBattle.BarrageBattle.ZombieState.ZombieStateAttack")
local DieState = require("Scene.LWBattle.ParkourBattle.Monster.MonsterImpl.FSM.CommonAI.DieState")
local ZombieStateHardControl = require"Scene.LWBattle.BarrageBattle.ZombieState.ZombieStateHardControl"
local FSM=require("Framework.Common.FSM")
local Collider = require("Scene.LWBattle.ParkourBattle.Monster.MonsterImpl.Component.ColliderComponent")
local Const = require("Scene.LWBattle.Const")
local LWBattleRVOAgent = CS.LWBattleRVOAgent

--卡车类怪物，直线运动，带碰撞
function CarMonster:Init(logic, mgr, guid, x, y, monsterMeta)
    base.Init(self, logic, mgr, guid, x, y, monsterMeta)

    self.colliderComponent = Collider.New()
    self.dontCollid = {}
    self.collidCnt = monsterMeta.collide_count
end

function CarMonster:OnLoadComplete()
    --base.OnLoadComplete(self)

    local pos = self.transform.position
    self.sid = self.mgr.logic.rvoMgr:AddAgent(pos,self.gameObject,99,self.monsterMeta.collide_radius)
    self.agent= self.transform:GetComponent(typeof(LWBattleRVOAgent))
    self.gameObject.name = "Zombie_" .. tostring(self.sid)
    self:InitSkills()
    self:InitFsm()
    if self.monsterMeta.monster_type == Const.MonsterType.Boss then
        self:InitHpBar()
    end

    if self.logic.battleType and self.logic.battleType == Const.ParkourBattleType.Defense then
        self.transform:Set_localEulerAngles(0, 180, 0)
    end

    self.colliderComponent:InitCollider(self.transform, 10, LayerMask.GetMask("Member"))
    self.colliderComponent:SetOnCollide(function (collderCnt, colliderComponentArray )
        if collderCnt>0 then
            self:OnCollision(collderCnt, colliderComponentArray )
        end
    end)
end

function CarMonster:InitFsm()
    self.fsm=FSM.New()---@type Framework.Common.FSM

    self.fsm:AddState(ZombieState.Idle,CarIdleState.New(self))
    self.fsm:AddState(ZombieState.Run,RunState.New(self))
    self.fsm:AddState(ZombieState.Attack,AttackState.New(self))
    self.fsm:AddState(ZombieState.Die,DieState.New(self))
    self.fsm:AddState(ZombieState.HardControl,ZombieStateHardControl.New(self))
    self.fsm:ChangeState(ZombieState.Idle)
    
end

function CarMonster:OnUpdate()
    base.OnUpdate(self)


    if self.colliderComponent then
        self.colliderComponent:CollisionDetect()
    end

end

function CarMonster:OnCollision(collderCnt, colliderComponentArray )
    for i = 0, collderCnt-1, 1 do
        self:Attack(colliderComponentArray[i])
    end
end

function CarMonster:Attack(otherObj)
    local trigger = otherObj:GetComponent(typeof(CS.CitySpaceManTrigger))
    if trigger~=nil and trigger.ObjectId~=0 and self.dontCollid[trigger.ObjectId] == nil then
        base.DoColliderEffect(self)
        self.dontCollid[trigger.ObjectId] = 1
        local tar = DataCenter.LWBattleManager.logic:GetUnit(trigger.ObjectId)
        --只能碰真伤
        if tar and (tar.curBlood or 0 )> 0 and #self.monsterMeta.collide_damage==3 and self.monsterMeta.collide_damage[1] == 2 then
            self:CollidEffect(tar)

            self.battleMgr:DealDamage(
                    self,
                    tar,
                    {},
                    1,
                    tar:GetPosition(),
                    nil,
                    0.2,
                    nil,nil,nil,nil,
                    self.monsterMeta.collide_damage[2], -- ex type
                    self.monsterMeta.collide_damage[3]  -- exvalue
            )
            self.collidCnt = self.collidCnt - 1
            if self.collidCnt == 0 then
                self:Death()
            end
        end
    end
end

--受击效果处理
function CarMonster:BeAttackEffect(stiffTime, dir)

    if dir and self.meta.ignore_hit_back==0 then--击退
        if self.curBlood>0 then
            self.fsm:ChangeState(ZombieState.HardControl,HardControlType.Imprison,0.5)
        end
        if dir.x then
            --卡车只能有z方向位移
            dir.x = 0
        end
        self.transform:DOMove(self.transform.position+dir, 0.5)
            :SetEase(CS.DG.Tweening.Ease.OutCirc)
    elseif stiffTime>0 and self.meta.ignore_hit_stiff==0 then--硬直
        if self.curBlood>0 then
            self.fsm:ChangeState(ZombieState.HardControl,HardControlType.Stiff,stiffTime)
        end
    end
end


function CarMonster:OnBuffAdded(buff)
    if self.fsm and self.fsm:GetStateIndex() == ZombieState.Idle then
        self.agent.speed = self.meta.move_speed * (1 + self:GetProperty(HeroEffectDefine.BattleHeroMoveSpeed))
    end
    
    base.OnBuffAdded(self, buff)
end

function CarMonster:DestroyView()
    base.DestroyView(self)
    if self.colliderComponent then
        self.colliderComponent:Destroy()
        self.colliderComponent = nil
    end
end


function CarMonster:DestroyData()
    self.dontCollid=nil
    self.collidCnt=nil
    base.DestroyData(self)
end

function CarMonster:CollidEffect(tar)
    self.battleMgr:ShowEffectObj(
            Const.ParkourCollidEffectPath, tar:GetPosition(),nil,1,nil
    )
end

return CarMonster