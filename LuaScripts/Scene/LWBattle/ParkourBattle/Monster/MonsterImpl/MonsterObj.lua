---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by w.
--- DateTime: 2023/1/2 18:01
---
local base = require("Scene.LWBattle.ParkourBattle.ParkourUnit")
---@class Scene.LWBattle.ParkourBattle.Monster.MonsterImpl.MonsterObj : Scene.LWBattle.ParkourBattle.ParkourUnit
local MonsterObj = BaseClass("MonsterObj",base)
local Resource = CS.GameEntry.Resource
local Const = require("Scene.LWBattle.Const")

function MonsterObj:Init(logic,mgr,guid,x,y,monsterMeta)
    base.Init(self,logic)
    self.mgr = mgr
    self.battleMgr = mgr.logic
    self.guid = guid
    self.x = x
    self.metaY = y  --配置里的y
    self.y = y      --真实的y，跑酷塔防模式怪物会移动
    self.curWorldPos=Vector3.New(x,0, self.y)--在预制体实例化之前，坐标必须先初始化
    self.monsterMeta = monsterMeta
    self.meta = monsterMeta
    if monsterMeta.monster_effect then
        self.heroEffectMeta=DataCenter.PveHeroEffectTemplateManager:GetTemplate(monsterMeta.monster_effect)
    end
    --最终生命50014=英雄50006*(1+75050)
    self.curBlood = PveUtil.GetPveMonsterHp(self.meta.id)
    self.maxBlood = self.curBlood
    
    self.type = Const.ParkourUnitType.Monster
    self.unitType = self.monsterMeta.monster_type == Const.MonsterType.Junk and UnitType.Junk or UnitType.Zombie
    self:ProcessBuff(monsterMeta)
end

function MonsterObj:ModifyPosY(y)
    --用于修正塔防模式怪物初始化位置
    self.y = y
    if self.curWorldPos and self.curWorldPos.z then
        self.curWorldPos.z = y   --在预制体实例化之前，修改坐标数据
    end
end

---重置怪物血量
function MonsterObj:ResetHp(hp,meta)
    self.overwriteMeta = meta
    self.maxBlood = hp
    self.curBlood = hp
end

function MonsterObj:Load()
    local path
    if DataCenter.LWBattleManager.qualityLevel <= EnumQualityLevel.Low then
        path = self.monsterMeta.asset_low
        if string.IsNullOrEmpty(path) then
            path = self.monsterMeta.asset
        end
    else
        path = self.monsterMeta.asset
    end
    self.req = Resource:InstantiateAsync(path)
    self.req:completed('+', function(req)
        self.gameObject = req.gameObject
        self.gameObject.layer = LayerMask.NameToLayer("Zombie")
        self.transform = self.gameObject.transform
        self.transform:Set_position(self.x, 0, self.y)
        if self.meta.model_size then
            self.transform.localScale=Vector3.one*self.meta.model_size
        else
            self.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
        end
        self:ComponentDefine()
        self:OnLoadComplete()
        if DataCenter.LWBattleManager:UseNewDetect() then
            self.trigger:RefreshSize()
        end
    end)
end

function MonsterObj:ComponentDefine()
    base.ComponentDefine(self)
    if PVE_RAGDOLL then
        self.ragdoll = self.gameObject:GetComponentInChildren(typeof(CS.FIMSpace.FProceduralAnimation.RagdollAnimator), true)
        self:DisableRagdoll()
    end
end

function MonsterObj:OnLoadComplete()
    
end


function MonsterObj:OnUpdate()
    base.OnUpdate(self)
end

function MonsterObj:BeAttack(hurt,hitPoint,hitDir,whiteTime,stiffTime,hitBackDistance,hitEff)
    base.BeAttack(self,hurt,hitPoint,hitDir,whiteTime,stiffTime,hitBackDistance,hitEff)
    if(hurt > 0 ) then

        --扣护盾
        hurt = self:ReduceShieldValue(hurt)
        
        self.curBlood = math.max(self.curBlood - hurt, 0)
        if self.curBlood <= 0 then
            DataCenter.LWBattleManager.logic:OnMonsterDeath(self)
            self:TriggerEvent(self.deathEvent, self.preSelectHeroUuid)
            self:Death()
        end
    end
end

function MonsterObj:Death()
    self.mgr:RemoveMonster(self.guid)
end

function MonsterObj:DestroyView()
    base.DestroyView(self)
    self.collider = nil
    if self.req then
        self.req:Destroy()
        self.req = nil
        self.gameObject = nil
        self.transform = nil
    end
end

function MonsterObj:DestroyData()
    self.mgr=nil
    self.battleMgr=nil
    self.x=nil
    self.metaY=nil
    self.y=nil
    self.monsterMeta=nil
    self.type=nil
    self.overwriteMeta=nil
    base.DestroyData(self)
end




function MonsterObj:ProcessBuff(monsterMeta)
    -- 预处理 buff_item
    self.deathEvent = tonumber(monsterMeta.death_trigger_item)
end


function MonsterObj:TriggerEvent(eventId,extra)
    if eventId and eventId ~= 0 then
        ---@type DataCenter.LWTriggerItem.LWTriggerItemTemplate
        local meta = DataCenter.LWTriggerItemTemplateManager:GetTemplate(eventId)
        if meta then
            DataCenter.LWBattleManager.logic.triggerEventMgr:Trigger(meta.type, meta, extra)
        end
    end
end


function MonsterObj:GetRawProperty(type)
    if self.overwriteMeta then
        return self.overwriteMeta.property[type] or 0
    end
    return self.monsterMeta.property[type] or 0
end


function MonsterObj:DoColliderEffect()
    if self.monsterMeta.crash_shake then
        local strs = string.split(self.monsterMeta.crash_shake, "|")
        local hitShakeParam = {}
        hitShakeParam.duration=tonumber(strs[1])
        hitShakeParam.strength=Vector3.New(tonumber(strs[2]),tonumber(strs[3]),tonumber(strs[4]))
        hitShakeParam.vibrato=tonumber(strs[5])
        DataCenter.LWBattleManager:ShakeCameraWithParam(hitShakeParam)
    end
end

function MonsterObj:EnableRagdoll()
    if PVE_RAGDOLL then
        if self.ragdoll then
            self.ragdoll.enabled = true
        end
    end
end

function MonsterObj:DisableRagdoll()
    if PVE_RAGDOLL then
        if self.ragdoll then
            self.ragdoll.enabled = false
        end
    end
end

return MonsterObj
