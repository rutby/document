---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by w.
--- DateTime: 2023/1/7 16:02
---
---@class Scene.LWBattle.ParkourBattle.TriggerEvent.TriggerEventManager
local TriggerEventManager = BaseClass("TriggerEventManager")
local TriggerEnum = require("Scene.LWBattle.ParkourBattle.TriggerEvent.TriggerEnum")
local AddBuffTriggerEvent = require("Scene.LWBattle.ParkourBattle.TriggerEvent.Impl.AddBuffTriggerEvent")
local AddSkillTriggerEvent = require("Scene.LWBattle.ParkourBattle.TriggerEvent.Impl.AddSkillTriggerEvent")
local AddHeroTriggerEvent   =require("Scene.LWBattle.ParkourBattle.TriggerEvent.Impl.AddHeroTriggerEvent")
local RemoveHeroTriggerEvent=require("Scene.LWBattle.ParkourBattle.TriggerEvent.Impl.RemoveHeroTriggerEvent")
local SaveHeroTriggerEvent=require("Scene.LWBattle.ParkourBattle.TriggerEvent.Impl.SaveHeroTriggerEvent")
local SaveWorkerTriggerEvent=require("Scene.LWBattle.ParkourBattle.TriggerEvent.Impl.SaveWorkerTriggerEvent")
local GetGoodsTriggerEvent=require("Scene.LWBattle.ParkourBattle.TriggerEvent.Impl.GetGoodsTriggerEvent")
local AddSingleHeroBuffTriggerEvent = require("Scene.LWBattle.ParkourBattle.TriggerEvent.Impl.AddSingleHeroBuffTriggerEvent")
local AddSingleHeroSkillTriggerEvent = require("Scene.LWBattle.ParkourBattle.TriggerEvent.Impl.AddSingleHeroSkillTriggerEvent")
local ReplaceSingleHeroNormalAttackTriggerEvent = require("Scene.LWBattle.ParkourBattle.TriggerEvent.Impl.ReplaceSingleHeroNormalAttackTriggerEvent")
local ThreeChoicesTriggerEvent = require("Scene.LWBattle.ParkourBattle.TriggerEvent.Impl.ThreeChoicesTriggerEvent")
local AddSingleHeroIdBuffTriggerEvent = require("Scene.LWBattle.ParkourBattle.TriggerEvent.Impl.AddSingleHeroIdBuffTriggerEvent")
local AddTrialHeroTriggerEvent = require("Scene.LWBattle.ParkourBattle.TriggerEvent.Impl.AddTrialHeroTriggerEvent")
local ReplaceHeroIdNormalAttackTriggerEvent = require("Scene.LWBattle.ParkourBattle.TriggerEvent.Impl.ReplaceHeroIdNormalAttackTriggerEvent")
local ReplaceHeroIdAppearanceTriggerEvent = require("Scene.LWBattle.ParkourBattle.TriggerEvent.Impl.ReplaceHeroIdAppearanceTriggerEvent")
local StageEffectAttackSpeedTriggerEvent = require("Scene.LWBattle.ParkourBattle.TriggerEvent.Impl.StageEffectAttackSpeedTriggerEvent")
local StageEffectDamageTriggerEvent = require("Scene.LWBattle.ParkourBattle.TriggerEvent.Impl.StageEffectDamageTriggerEvent")
local StageEffectCriticalRateTriggerEvent = require("Scene.LWBattle.ParkourBattle.TriggerEvent.Impl.StageEffectCriticalRateTriggerEvent")
local StageEffectCriticalDamageTriggerEvent = require("Scene.LWBattle.ParkourBattle.TriggerEvent.Impl.StageEffectCriticalDamageTriggerEvent")

function TriggerEventManager:__init()
    --Todo 在这里注册自己的类型和构造器
    self:Register(TriggerEnum.EventType.AddBuff, AddBuffTriggerEvent.New)
    self:Register(TriggerEnum.EventType.AddSkill, AddSkillTriggerEvent.New)
    self:Register(TriggerEnum.EventType.AddHero, AddHeroTriggerEvent.New)
    self:Register(TriggerEnum.EventType.RemoveHero, RemoveHeroTriggerEvent.New)
    self:Register(TriggerEnum.EventType.SaveHero, SaveHeroTriggerEvent.New)
    self:Register(TriggerEnum.EventType.SaveWorker, SaveWorkerTriggerEvent.New)
    self:Register(TriggerEnum.EventType.GetGoods, GetGoodsTriggerEvent.New)
    self:Register(TriggerEnum.EventType.AddSingleHeroBuff, AddSingleHeroBuffTriggerEvent.New)
    self:Register(TriggerEnum.EventType.AddSingleHeroSkill, AddSingleHeroSkillTriggerEvent.New)
    self:Register(TriggerEnum.EventType.ReplaceSingleHeroNormalAttack, ReplaceSingleHeroNormalAttackTriggerEvent.New)
    self:Register(TriggerEnum.EventType.ThreeChoices, ThreeChoicesTriggerEvent.New)
    self:Register(TriggerEnum.EventType.AddSingleHeroIdBuff, AddSingleHeroIdBuffTriggerEvent.New)
    self:Register(TriggerEnum.EventType.AddTrialHero, AddTrialHeroTriggerEvent.New)
    self:Register(TriggerEnum.EventType.ReplaceHeroIdNormalAttack, ReplaceHeroIdNormalAttackTriggerEvent.New)
    self:Register(TriggerEnum.EventType.ReplaceHeroIdAppearance, ReplaceHeroIdAppearanceTriggerEvent.New)
    self:Register(TriggerEnum.EventType.StageEffectAttackSpeed, StageEffectAttackSpeedTriggerEvent.New)
    self:Register(TriggerEnum.EventType.StageEffectDamage, StageEffectDamageTriggerEvent.New)
    self:Register(TriggerEnum.EventType.StageEffectCriticalRate, StageEffectCriticalRateTriggerEvent.New)
    self:Register(TriggerEnum.EventType.StageEffectCriticalDamage, StageEffectCriticalDamageTriggerEvent.New)
end

function TriggerEventManager:__delete()
    self.factory = nil
end

function TriggerEventManager:Register(type,func)
    if not self.factory then
        self.factory = {}
    end
    if self.factory[type] then
        Logger.LogError(type.." already register")
        return 
    end
    self.factory[type] = func
end

function TriggerEventManager:Trigger(type,param,extra)
    if not self.factory[type] then
        Logger.LogError(type.." not register")
        return nil
    end
    local e = self.factory[type];
    local obj = e()
    obj:Execute(param,extra)
    return obj
end


return TriggerEventManager