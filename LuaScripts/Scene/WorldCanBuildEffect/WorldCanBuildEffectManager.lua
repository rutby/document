---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2021/10/13 18:10
---
local WorldCanBuildEffectManager = BaseClass("WorldCanBuildEffectManager", Singleton)
local ResourceManager = CS.GameEntry.Resource
local WorldCanBuildEffect = require "Scene.WorldCanBuildEffect.WorldCanBuildEffect"
local function __init(self)
    self.allEffect = nil --所有建筑特效
    self.OnCreateEffect =nil
    self:AddListener()
end
local function AddListener(self)
    EventManager:GetInstance():AddListener(EventId.ShowCanBuildEffect, self.ShowEffectSignal)
    EventManager:GetInstance():AddListener(EventId.HideCanBuildEffect, self.HideEffectSignal)
end

local function RemoveListener(self)
    EventManager:GetInstance():RemoveListener(EventId.ShowCanBuildEffect, self.ShowEffectSignal)
    EventManager:GetInstance():RemoveListener(EventId.HideCanBuildEffect, self.HideEffectSignal)
end

local function ShowEffectSignal(data)
    WorldCanBuildEffectManager:GetInstance():ShowEffect()
end

local function HideEffectSignal(data)
    WorldCanBuildEffectManager:GetInstance():RemoveEffect()
end
local function __delete(self)
    self:RemoveListener()
    if self.allEffect~=nil then
        local request = self.allEffect.request
        self.allEffect.script:OnDestroy()
        request:Destroy()
    end
    self.allEffect = nil
end

local function ShowEffect(self)
    if self.allEffect ==nil and self.OnCreateEffect==nil then
        local request = ResourceManager:InstantiateAsync(UIAssets.WorldCanBuildEffect)
        local par = {}
        par.request = request
        self.OnCreateEffect = request
        request:completed('+', function()
            self.OnCreateEffect =nil
            if request.isError then
                return
            end
            request.gameObject:SetActive(true)
            request.gameObject.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)

            local effect = WorldCanBuildEffect.New()
            effect:OnCreate(request)
            effect:ReInit()
            par.script = effect
            self.allEffect = par
        end)
    else
        if self.allEffect~=nil then
            self.allEffect.script:ReInit()
        end
    end

end


local function RemoveEffect(self)
    if self.allEffect~=nil then
        local request = self.allEffect.request
        self.allEffect.script:OnDestroy()
        request:Destroy()
    end
    self.allEffect = nil
end




WorldCanBuildEffectManager.__init = __init
WorldCanBuildEffectManager.__delete = __delete
WorldCanBuildEffectManager.ShowEffectSignal = ShowEffectSignal
WorldCanBuildEffectManager.HideEffectSignal = HideEffectSignal
WorldCanBuildEffectManager.RemoveEffect =RemoveEffect
WorldCanBuildEffectManager.AddListener =AddListener
WorldCanBuildEffectManager.RemoveListener =RemoveListener
WorldCanBuildEffectManager.ShowEffect = ShowEffect
return WorldCanBuildEffectManager