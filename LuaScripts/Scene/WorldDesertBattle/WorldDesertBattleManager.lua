---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2023/1/4 15:00
---
local WorldDesertBattleManager = BaseClass("WorldDesertBattleManager", Singleton)
local ResourceManager = CS.GameEntry.Resource
local WorldDesertHeadUI = require "Scene.WorldDesertBattle.WorldDesertHeadUI"
local WorldDesertBlood = require "Scene.WorldDesertBattle.WorldDesertBlood"
local function __init(self)
    self.allTips = {} --所有标签
    self.OnCreateTips = {}
    self.UuidToPoint = {}
    self.lodCache = 1
    self:AddListener()
end

local function __delete(self)
    self:RemoveListener()
    self:RemoveAllEffect()
    self.allTips = nil
    self.OnCreateTips = nil
    self.UuidToPoint = nil
end

local function AddListener(self)
    EventManager:GetInstance():AddListener(EventId.ShowDesertAttackHeadUI, self.ShowDesertAttackHeadUISignal)
    EventManager:GetInstance():AddListener(EventId.HideDesertAttackHeadUI, self.HideDesertAttackHeadUISignal)
    EventManager:GetInstance():AddListener(EventId.DesertOutView, self.HideDesertSignal)
    EventManager:GetInstance():AddListener(EventId.ChangeCameraLod, self.ChangeCameraLodSignal)
    EventManager:GetInstance():AddListener(EventId.PveLevelEnter, self.RemoveAllTips)
    EventManager:GetInstance():AddListener(EventId.OnEnterWorld, self.OnEnterWorld)
    EventManager:GetInstance():AddListener(EventId.OnBeforeEnterCity, self.OnEnterCity)
end

local function RemoveListener(self)
    EventManager:GetInstance():RemoveListener(EventId.ShowDesertAttackHeadUI, self.ShowDesertAttackHeadUISignal)
    EventManager:GetInstance():RemoveListener(EventId.HideDesertAttackHeadUI, self.HideDesertAttackHeadUISignal)
    EventManager:GetInstance():RemoveListener(EventId.DesertOutView, self.HideDesertSignal)
    EventManager:GetInstance():RemoveListener(EventId.ChangeCameraLod, self.ChangeCameraLodSignal)
    EventManager:GetInstance():RemoveListener(EventId.PveLevelEnter, self.RemoveAllTips)
    EventManager:GetInstance():RemoveListener(EventId.OnEnterWorld, self.OnEnterWorld)
    EventManager:GetInstance():RemoveListener(EventId.OnBeforeEnterCity, self.OnEnterCity)
end

local function ChangeCameraLodSignal(lod)
    WorldDesertBattleManager:GetInstance():UpdateLod(lod)
end

local function UpdateLod(self, lod)
    if self.lodCache ~= lod then
        self.lodCache = lod
    end
end

local function RemoveOneEffectByUuid(self,uuid)
    local point = self.UuidToPoint[uuid]
    if point~=nil then
        self:RemoveOneEffect(point)
        self.UuidToPoint[uuid] =nil
    end
end
local function RemoveOneEffect(self, point)
    local temp = self.allTips[point]
    if temp ~= nil then
        local request = temp.request
        temp:OnDestroy()
        request:Destroy()
        self.allTips[point] = nil
    end
    temp = self.OnCreateTips[point]
    if temp ~= nil then
        temp:Destroy()
        self.OnCreateTips[point] = nil
    end
end

local function RemoveAllTips(data)
    WorldDesertBattleManager:GetInstance():RemoveAllEffect()
end

local function OnEnterWorld(data)
end
local function OnEnterCity(data)
    WorldDesertBattleManager:GetInstance():RemoveAllEffect()
end


local function RemoveAllEffect(self)
    for k,v in pairs(self.allTips) do
        local request = v.request
        v:OnDestroy()
        request:Destroy()
    end
    self.allTips = {}
    for k,v in pairs(self.OnCreateTips) do
        v:Destroy()
    end
    self.OnCreateTips = {}
    self.UuidToPoint = {}
end

local function HideDesertAttackHeadUISignal(pointId)
    WorldDesertBattleManager:GetInstance():RemoveOneEffect(tonumber(pointId))
end

local function HideDesertSignal(data)
    WorldDesertBattleManager:GetInstance():RemoveOneEffectByUuid(tonumber(data))
end

local function ShowDesertAttackHeadUISignal(data)
    local str = data
    if str ~= nil then
        local strArr = string.split(str, ";")
        if #strArr ==3 then
            local pointId = tonumber(strArr[1])
            local hp = tonumber(strArr[2])
            local hpMax = tonumber(strArr[3])
            WorldDesertBattleManager:GetInstance():CheckShowDesertBlood(pointId,hpMax, hp)
        elseif #strArr ==4 then
            local pointId = tonumber(strArr[1])
            local hp = tonumber(strArr[2])
            local hpMax = tonumber(strArr[3])
            local marchUuid = tonumber(strArr[4])
            WorldDesertBattleManager:GetInstance():CheckShowDesertHeadEffect(pointId,hpMax, hp,marchUuid)
        end
    end
end

local function CheckShowDesertHeadEffect(self,pointIndex, initHealth, curHealth,marchUuid)
    if SceneUtils.GetIsInWorld() == false then
        return
    end
    if self.allTips[pointIndex] == nil and self.OnCreateTips[pointIndex] == nil then
        if self.lodCache ~= nil and self.lodCache > 3 then
            return
        end
        local worldTileInfo = CS.SceneManager.World:GetWorldTileInfo(pointIndex)
        if worldTileInfo~=nil then
            local desertInfo = worldTileInfo:GetWorldDesertInfo()
            if desertInfo~=nil then
                local uuid = desertInfo.uuid
                if self.UuidToPoint~=nil then
                    self.UuidToPoint[uuid] = pointIndex
                end
            end
        end
        local request = ResourceManager:InstantiateAsync(UIAssets.WorldDesertHeadUI)
        self.OnCreateTips[pointIndex] = request
        request:completed('+', function()
            self.OnCreateTips[pointIndex] = nil
            if request.isError then
                return
            end
            request.gameObject:SetActive(true)
            request.gameObject.transform:SetParent(CS.SceneManager.World.BuildBubbleNode)
            request.gameObject.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
            local labelUI = WorldDesertHeadUI.New()
            labelUI:OnCreate(request)
            self.allTips[pointIndex] = labelUI
            self.allTips[pointIndex]:InitInfo(pointIndex,initHealth, curHealth,marchUuid)
        end)
    else
        if self.allTips[pointIndex] ~= nil then
            self.allTips[pointIndex]:SetHP(curHealth, initHealth)
        end
    end
end

local function CheckShowDesertBlood(self,pointIndex, initHealth, curHealth)
    if SceneUtils.GetIsInWorld() == false then
        return
    end
    if self.allTips[pointIndex] == nil and self.OnCreateTips[pointIndex] == nil then
        if self.lodCache ~= nil and self.lodCache > 3 then
            return
        end
        local request = ResourceManager:InstantiateAsync(UIAssets.WorldDesertBloodPro)
        self.OnCreateTips[pointIndex] = request
        request:completed('+', function()
            self.OnCreateTips[pointIndex] = nil
            if request.isError then
                return
            end
            request.gameObject:SetActive(true)
            request.gameObject.transform:SetParent(CS.SceneManager.World.BuildBubbleNode)
            request.gameObject.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
            local labelUI = WorldDesertBlood.New()
            labelUI:OnCreate(request)
            self.allTips[pointIndex] = labelUI
            self.allTips[pointIndex]:ShowBloodInfo(pointIndex,initHealth, curHealth)
        end)
    else
        if self.allTips[pointIndex] ~= nil then
            self.allTips[pointIndex]:SetHP(curHealth, initHealth)
        end
    end
end



WorldDesertBattleManager.__init = __init
WorldDesertBattleManager.__delete = __delete
WorldDesertBattleManager.AddListener = AddListener
WorldDesertBattleManager.RemoveListener = RemoveListener
WorldDesertBattleManager.RemoveOneEffect = RemoveOneEffect
WorldDesertBattleManager.HideDesertAttackHeadUISignal = HideDesertAttackHeadUISignal
WorldDesertBattleManager.RemoveOneEffectByUuid = RemoveOneEffectByUuid
WorldDesertBattleManager.HideDesertSignal = HideDesertSignal
WorldDesertBattleManager.ShowDesertAttackHeadUISignal =ShowDesertAttackHeadUISignal
WorldDesertBattleManager.CheckShowDesertHeadEffect =CheckShowDesertHeadEffect
WorldDesertBattleManager.CheckShowDesertBlood =CheckShowDesertBlood
WorldDesertBattleManager.UpdateLod = UpdateLod
WorldDesertBattleManager.ChangeCameraLodSignal = ChangeCameraLodSignal
WorldDesertBattleManager.RemoveAllEffect  = RemoveAllEffect
WorldDesertBattleManager.RemoveAllTips = RemoveAllTips
WorldDesertBattleManager.OnEnterWorld = OnEnterWorld
WorldDesertBattleManager.OnEnterCity = OnEnterCity
return WorldDesertBattleManager
