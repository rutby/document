---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2021/8/2 12:12
---

local DetectEventInfo = BaseClass("DetectEventInfo")

local function __init(self)
    self.uuid = ""          --事件uuid
    self.eventId = 0        --事件的配置id
    self.pointId = 0        --事件对应世界坐标
    self.state = 0          --事件状态  0 未完成  1已完成未领奖励 2已领奖
    self.startTime = 0      --事件开始时间 单位ms
    self.endTime = 0        --事件结束时间 单位ms
    self.rewardList = {}    --通用奖励数组
    self.helpInfo = nil
    self.completeByHelper = nil
end

local function __delete(self)
    self.uuid = nil
    self.eventId = nil
    self.pointId = nil
    self.state = nil
    self.startTime = nil
    self.endTime = nil
    self.rewardList = nil
    self.helpInfo = nil
    self.completeByHelper = nil
end

local function ParseData(self, message)
    if message == nil then
        return
    end
    if message["uuid"] ~= nil then
        self.uuid = message["uuid"]
    end
    if message["eventId"] ~= nil then
        self.eventId = message["eventId"]
    end
    if message["pointId"] ~= nil then
        self.pointId = message["pointId"]
    end
    if message["state"] ~= nil then
        self.state = message["state"]
    end
    if message["startTime"] ~= nil then
        self.startTime = message["startTime"]
    end
    if message["endTime"] ~= nil then
        self.endTime = message["endTime"]
    end
    if message["reward"] ~= nil then
        self.rewardList = DataCenter.RewardManager:ReturnRewardParamForView(message["reward"])

        for k, v in pairs(self.rewardList) do
            if v.rewardType == RewardType.MONEY then
                table.remove(self.rewardList, k)
                table.insert(self.rewardList, 1, v)
                break
            end
        end
        for k, v in pairs(self.rewardList) do
            if v.rewardType == RewardType.GOLD then
                table.remove(self.rewardList, k)
                table.insert(self.rewardList, 1, v)
                break
            end
        end

        --table.walk(self.rewardList, function (k, v)
        --    if v.rewardType == RewardType.GOLD then
        --        table.insert(gold, v)
        --    elseif v.rewardType == RewardType.MONEY then
        --        table.insert(money, v)
        --    end
        --end)
        
        
        --table.sort(self.rewardList,function(a,b)
        --    local function GetRankOrder(rewardType)
        --        if rewardType == RewardType.GOLD then
        --            return 1
        --        elseif rewardType == RewardType.MONEY then
        --            return 2
        --        end
        --        return 3
        --    end
        --    return GetRankOrder(a.rewardType) < GetRankOrder(b.rewardType)
        --end)
    end
    
    if message["helpInfo"] ~= nil then
        self.helpInfo = message["helpInfo"]
    end
    if message["completeByHelper"] ~= nil then
        self.completeByHelper = message["completeByHelper"]
    end
end

local function SetDetectEventInfoState(self, state)
    self.state = state
end

DetectEventInfo.__init = __init
DetectEventInfo.__delete = __delete
DetectEventInfo.ParseData = ParseData
DetectEventInfo.SetDetectEventInfoState = SetDetectEventInfoState

return DetectEventInfo

