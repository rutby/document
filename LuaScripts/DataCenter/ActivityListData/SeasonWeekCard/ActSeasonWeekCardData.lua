---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zzl.
--- DateTime: 
---
local ActSeasonWeekCardData = BaseClass("ActSeasonWeekCardData")
local ActSeasonWeekCardInfo = require "DataCenter.ActivityListData.SeasonWeekCard.ActSeasonWeekCardInfo"

local function __init(self)
    self.list = {}
    self.isShow = true
end

local function __delete(self)
    self.list = nil
end

local function SetActivityId(self,id)
    self.list[tonumber(id)] = {}
end


local function GetInfoByActId(self,activityId)
    if self.list[activityId] then
        return self.list[activityId]
    end
    return nil
end

local function ParseActivityData(self, actsMessage)
    if actsMessage ==nil then
        return
    end
    if self.list[actsMessage["activityId"]] then
        local info = ActSeasonWeekCardInfo.New()
        info:ParseActInfo(actsMessage)
        self.list[actsMessage["activityId"]] = info
    end
    EventManager:GetInstance():Broadcast(EventId.OnRefreshSeasonCard)
end

--购买
local function PushCardUpdate(self,message)
    if message ==nil then
        return
    end
    if self.list[message["activityId"]] then
        self.list[message["activityId"]]:ParseActInfo(message)
        EventManager:GetInstance():Broadcast(EventId.SeasonWeekCardBuy)
    end
end

--领取奖励
local function ReceiveRewardHandle(self,message)
    if message ==nil then
        return
    end
    if message["reward"] ~= nil then
        for k,v in pairs(message["reward"]) do
            DataCenter.RewardManager:AddOneReward(v)
        end
    end
    DataCenter.RewardManager:ShowCommonReward(message)
    if self.list[message["activityId"]] and next(self.list[message["activityId"]]) then
        self.list[message["activityId"]]:UpdateTime(message)
        EventManager:GetInstance():Broadcast(EventId.SeasonWeekCardReward,message["type"])
        EventManager:GetInstance():Broadcast(EventId.RefreshActivityRedDot)
    end
end

--获取红点数量
local function GetActRed(self,id)
    if self.list[id] and next(self.list[id]) then
        return self.list[id]:GetActRed()
    end
    return 0
end
    
ActSeasonWeekCardData.__init = __init
ActSeasonWeekCardData.__delete = __delete
ActSeasonWeekCardData.SetActivityId = SetActivityId
ActSeasonWeekCardData.ParseActivityData = ParseActivityData
ActSeasonWeekCardData.GetInfoByActId = GetInfoByActId
ActSeasonWeekCardData.PushCardUpdate = PushCardUpdate
ActSeasonWeekCardData.ReceiveRewardHandle = ReceiveRewardHandle
ActSeasonWeekCardData.GetActRed = GetActRed
return ActSeasonWeekCardData
