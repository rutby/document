---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2022/4/15 17:30
---
local ActivityPuzzleData = BaseClass("ActivityPuzzleData")

local function __init(self)
    self.puzzleInfo = {}
    self.lastRecoverTime = 0
    --self.stageInfo = {}
    self.currentTask = {}
    self.taskNum = 0
    self.taskMaxNum = 1
    self.puzzleBossNum = 0
    self.puzzleBossExpireTime = 0
    self.bossCount = 0
    self.totalBlockNum = 0
    self.dmgRateArr = {}
end

local function __delete(self)

end

local function ParseData(self, message)
    if message == nil then
        return
    end
    if message["puzzleInfo"] ~= nil then
        self.puzzleInfo = DeepCopy(message["puzzleInfo"])
        local blockArr = {}
        self.totalBlockNum = message["puzzleInfo"]["totalBlockNum"] or 0
        local index = 1
        while index <= self.totalBlockNum do
            table.insert(blockArr, index)
            index = index + 1
        end
        self.puzzleInfo.blockArr = blockArr
    end
    if message["currentTask"] ~= nil then
        self.currentTask = DeepCopy(message["currentTask"])
    end
    self.lastRecoverTime = 0
    if message["lastRecoverTime"] ~= nil then
        self.lastRecoverTime = message["lastRecoverTime"]
    end
    if message["taskNum"] ~= nil then
        self.taskNum = message["taskNum"]
    end
    if message["taskMaxNum"] ~= nil then
        self.taskMaxNum = message["taskMaxNum"]
    end
    if message["puzzleBossNum"] ~= nil then
        self.puzzleBossNum = message["puzzleBossNum"]
    end
    if message["dmgRateArr"] ~= nil then
        self.dmgRateArr = {}
        table.walk(message["dmgRateArr"], function (_, v)
            self.dmgRateArr[v.id] = v.dmgRate
        end)
    end
    if message["puzzleBossExpireTime"] ~= nil then
        self.puzzleBossExpireTime = message["puzzleBossExpireTime"]
    end
    if message["bossCount"] ~= nil then
        self.bossCount = message["bossCount"]
    end
end

local function IsOver(self)
    return self.lastRecoverTime == 0
end

local function UpdateCurrentTaskState(self, message)
    if message ~= nil and self.currentTask ~= nil then
        if message["taskId"] ~= nil and message["taskId"] == self.currentTask["taskId"] then
            self.currentTask.state = message.state
        end
    end
end

local function GetUnReceivedRewardNum(self)
    local result = 0
    if self.totalBlockNum ~= nil and self.totalBlockNum >= MaxPuzzlePerStage then
        result = result + 1
    end
    --local result = 0
    --if self.puzzleInfo ~= nil then
    --    if self.puzzleInfo.rewardState == PuzzleStageRewardState.PuzzleStageRewardState_UnGet then
    --        if table.count(self.puzzleInfo) == MaxPuzzlePerStage then
    --            result = result + 1
    --        end
    --    end
    --end
    if self.currentTask ~= nil then
        if self.currentTask.state == PuzzleTaskState.PuzzleTaskState_Complete then
            result = result + 1
        end
    end
    return result
end

local function GetUnCreatePuzzleMonsterNum(self)
    local result = self.bossCount
    if self:CanCreatePuzzleBoss() then
        result = result + self.puzzleBossNum
    end
    return result
end

local function CanCreatePuzzleBoss(self)
    local now = UITimeManager:GetInstance():GetServerTime()
    --当前时间小于puzzleBossExpireTime 并且puzzleBossNum > 0 时表示可以召唤boss
    if now < self.puzzleBossExpireTime and self.puzzleBossNum > 0 then
        return true
    end
    return false
end

ActivityPuzzleData.__init = __init
ActivityPuzzleData.__delete = __delete
ActivityPuzzleData.ParseData = ParseData
ActivityPuzzleData.IsOver = IsOver
ActivityPuzzleData.UpdateCurrentTaskState = UpdateCurrentTaskState
ActivityPuzzleData.GetUnReceivedRewardNum = GetUnReceivedRewardNum
ActivityPuzzleData.CanCreatePuzzleBoss = CanCreatePuzzleBoss
ActivityPuzzleData.GetUnCreatePuzzleMonsterNum = GetUnCreatePuzzleMonsterNum

return ActivityPuzzleData
