---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2022/11/4 11:38
---DailyActivityManager.lua

local DailyActivityManager = BaseClass("DailyActivityManager");
local ActivityOverviewTemplate = require "DataCenter.TaskData.ActivityOverviewTemplate"
local Localization = CS.GameEntry.Localization

local function __init(self)
    self.cacheDisplayedLv = nil
    self.templateDict = {}
    self.activityOverviewList = {}
    self.newUnlockedOverviewList = nil
    self:InitTemplates()
    self:AddListener()
end

local function __delete(self)
    self.cacheDisplayedLv = nil
    self.templateDict = nil
    self.activityOverviewList = nil
    self.newUnlockedOverviewList = nil
    self:RemoveListener()
end

local function AddListener(self)
    EventManager:GetInstance():AddListener(EventId.BuildLevelUp, self.TryUpdateNewUnlockedOverview)
    EventManager:GetInstance():AddListener(EventId.OnUnlockActivityViewClose, self.DelayOpenDailyActivity)
end

local function RemoveListener(self)
    EventManager:GetInstance():RemoveListener(EventId.BuildLevelUp, self.TryUpdateNewUnlockedOverview)
    EventManager:GetInstance():RemoveListener(EventId.OnUnlockActivityViewClose, self.DelayOpenDailyActivity)
end

local function Startup(self)
    self:InitActivityOverviewList()
    self:InitNewUnlockedOverview()
end

local function CheckSwitchNew(self)
    return LuaEntry.DataConfig:CheckSwitch("activity_showlist_unlock_new")
end

local function InitTemplates(self)
    self.templateDict = {}
    LocalController:instance():visitTable(TableName.ActivityOverview, function(id, lineData)
        local template = ActivityOverviewTemplate.New()
        template:InitData(lineData)
        self.templateDict[id] = template
    end)
end

local function InitActivityOverviewList(self)
    self.activityOverviewList = {}
    for _, template in pairs(self.templateDict) do
        if template:GetUnlockLv() > 0 then
            -- 填负数不显示 -- 扬骋 2023/9/25
            table.insert(self.activityOverviewList, template)
        end
    end
    table.sort(self.activityOverviewList, function(a, b)
        -- 用 unlockLv 代替 order 做排序 -- 扬骋 2023/9/25
        local unlockLvA = a:GetUnlockLv()
        local unlockLvB = b:GetUnlockLv()
        return unlockLvA < unlockLvB
        
        --if a.order ~= b.order then
        --    return a.order < b.order
        --else
        --    return false
        --end
    end)

    if not self.cacheDisplayedLv then
        local strK = "DailyActivityUnlockDisplay_" .. LuaEntry.Player.uid
        self.cacheDisplayedLv = CS.GameEntry.Setting:GetInt(strK, 0)
    end
end

local function GetTemplate(self, id)
    return self.templateDict[tonumber(id)]
end

local function GetActivityOverviewList(self)
    return self.activityOverviewList
end


local function CheckIfShowActivityOverview(self)
    local isSwitchOn = LuaEntry.DataConfig:CheckSwitch("activity_daily_showlist")
    if not isSwitchOn then
        return false
    end

    for i, v in ipairs(self.activityOverviewList) do
        if self:CheckIfActIsOpen(v) then
            return true
        end
    end
end

local function CheckIfActIsOpen(self, overviewInfo)
    local unlockStory = overviewInfo:GetUnlockStory()
    local unlockLv = overviewInfo:GetUnlockLv()
    if LuaEntry.DataConfig:CheckSwitch("push_map") and unlockStory ~= nil then
        -- 推图关
        if DataCenter.StoryManager:GetLevelState(unlockStory.mapId, unlockStory.level) == StoryLevelState.Finished then
            return true
        else
            local pveTemplate = DataCenter.StoryManager:GetPveTemplate(unlockStory.mapId, unlockStory.level)
            local lockDesc = Localization:GetString("373167", pveTemplate.para2)
            return false, lockDesc
        end
    else
        -- 大本等级
        local mainLv = DataCenter.BuildManager.MainLv or 0
        if mainLv >= unlockLv then
            return true
        else
            local lockDesc = Localization:GetString("372224", unlockLv)
            return false, lockDesc
        end
    end
    return true
end

local function GetOverviewTotalRedCount(self)
    local total = 0
    for i, v in ipairs(self.activityOverviewList) do
        if self:CheckIfActIsOpen(v) then
            local tempCount = self:GetOverviewRedCount(v)
            total = total + tempCount
        end
    end
    return total
end

local function GetOverviewRedCount(self, overviewInfo)
    local hasRed = self:GetOverviewDesc(overviewInfo)
    if not hasRed then
        return 0
    else
        return 1
    end
end


local function JumpToActOverview(self, type)
    if OverviewToActType[type] then
        local actList = DataCenter.ActivityListDataManager:GetActivityDataByType(OverviewToActType[type])
        if actList and #actList > 0 then
            local tempId = tonumber(actList[1].id)
            if OverviewTypeToDailyActivity[type] then
                UIManager:GetInstance():OpenWindow(UIWindowNames.UIDailyActivity, { anim = true, hideTop = true}, type)
            else
                UIManager:GetInstance():OpenWindow(UIWindowNames.UIActivityCenterTable, { anim = true, UIMainAnim = UIMainAnimType.AllHide, hideTop = true }, tempId)
            end
            DataCenter.GuideManager:CheckDoTriggerGuide(GuideTriggerType.OpenActivityPanel,tostring(tempId))
        end
    else
        if type == 4 then
            UIManager:GetInstance():OpenWindow(UIWindowNames.UIChampionBattleMain, { anim = true, hideTop = true})
        elseif type == 10 then
            UIManager:GetInstance():OpenWindow(UIWindowNames.UITaskMain, HideBlurPanelAnim, TaskType.Daily)
        elseif type == 11 then
            UIManager:GetInstance():OpenWindow(UIWindowNames.UIDetectEvent)
        end
    end
    --UIManager:GetInstance():OpenWindow(UIWindowNames.UIChampionBattleMain)
end

--原本用来更新红点逻辑；当天未进入过相关活动界面要有红点；
--现在红点逻辑不再检查是否进入过活动；
local function UpdateActViewHistory(self, type)
    local serverSec = UITimeManager:GetInstance():GetServerSeconds()
    local strK = LuaEntry.Player.uid .. "ActivityOverviewTime_" .. type
    self:TryInitActViewTimeDic()
    self.actViewTimeDic[type] = serverSec
    CS.GameEntry.Setting:SetInt(strK, serverSec)

    EventManager:GetInstance():Broadcast(EventId.OnOneActivityOverviewRedChange, type)
end

local function TryInitActViewTimeDic(self)
    if not self.actViewTimeDic then
        self.actViewTimeDic = {}
        for i, v in ipairs(self.activityOverviewList) do
            local strK = LuaEntry.Player.uid .. "ActivityOverviewTime_" .. v.type
            local lastTimeS = CS.GameEntry.Setting:GetInt(strK, 0)
            self.actViewTimeDic[v.type] = lastTimeS
        end
    end
end

--按模块数据是否可以显示红点，描述
local function GetOverviewDesc(self, overviewInfo)
    if OverviewToActType[overviewInfo.type] then
        local actList = DataCenter.ActivityListDataManager:GetActivityDataByType(OverviewToActType[overviewInfo.type])
        local data = nil
        if #actList > 0 then
            local tempId = actList[1].id
            if OverviewToActType[overviewInfo.type] == EnumActivity.RallyBossAct.Type then
                tempId = EnumActivity.RallyBossAct.ActId
            end
            data = DataCenter.ActivityListDataManager:GetActivityDataById(tempId)
        end
        if not data then
            local commonTip = ""
            if overviewInfo.type == ActivityOverviewType.Arena then
                --检查是不是伊甸园赛季
                local seasonId = DataCenter.SeasonDataManager:GetSeasonId()
                if seasonId == 5 then
                    if LuaEntry.Player.serverType ~= ServerType.EDEN_SERVER then
                        commonTip = Localization:GetString("111262")
                    end
                end
            end
            return false, 0, 0, "", commonTip
        else
            if overviewInfo.type == 2 then
                --local maxTimes = tonumber(data.para1 or 0)
                local killedNum = DataCenter.MonsterManager:GetKillBossNum()
                --local killAddNum = LuaEntry.Effect:GetGameEffect(EffectDefine.AUTO_RALLY_REWARD_NUM_ADD)
                local redCount = DataCenter.AllianceBaseDataManager:CheckIfShowAutoRallyRed()
                local maxTimes = DataCenter.MonsterManager:GetMaxKillBossNum()
                --maxTimes = math.floor(maxTimes+killAddNum)
                local killed = math.max(0, killedNum)
                killed = math.floor(math.min(maxTimes, killedNum))
                return redCount > 0, killed, math.floor(maxTimes), Localization:GetString("372368")
            elseif overviewInfo.type == 5 then
                local caveInfo = DataCenter.MineCaveManager:GetMineCaveInfo()
                local tempTimes = 0
                if caveInfo then
                    tempTimes = caveInfo.fightNum
                end
                local maxTimes = LuaEntry.DataConfig:TryGetNum("mine_cave", "k3")
                local addNum = LuaEntry.Effect:GetGameEffect(EffectDefine.REFRESH_MINE_CAVE_REFRESH_TIME_ADD)
                maxTimes = math.floor(maxTimes+addNum)
                local remainTimes = math.floor(math.max(0, maxTimes - tempTimes))
                --local hasRed = DataCenter.MineCaveManager:GetRedCount()
                local canAttack, redCount = DataCenter.MineCaveManager:CheckIfCanAttack()
                local canClaim, claimCount = DataCenter.MineCaveManager:CheckIfHasReward()
                local hasRed = canAttack or canClaim
                return hasRed, tempTimes, maxTimes, Localization:GetString("372372")
            elseif overviewInfo.type == 6 then
                local puzzleData = DataCenter.ActivityPuzzleDataManager:GetPuzzleData()
                if puzzleData == nil then
                    return false, 0, 0
                end
                local redCount = DataCenter.ActivityListDataManager:GetActivityRedDotCount(data.id)
                return redCount > 0, puzzleData.taskMaxNum - puzzleData.taskNum, puzzleData.taskMaxNum, Localization:GetString("372371")
            elseif overviewInfo.type == 8 then
                local freeTimes = DataCenter.ArenaManager:GetChallengeRedCount()
                local maxChallengeTimes = LuaEntry.DataConfig:TryGetNum("arena","k2")
                return freeTimes > 0, maxChallengeTimes - freeTimes, maxChallengeTimes, Localization:GetString("372370")
            end
        end
    else
        if overviewInfo.type == 4 then
            local isOpenByServer = DataCenter.ActChampionBattleManager:GetEntranceOpenState()
            local championBattleInfo = DataCenter.ActChampionBattleManager:GetChampionBattleInfo()
            if not isOpenByServer then
                return false, 0, 0, "", Localization:GetString("302037")
            else
                if championBattleInfo then
                    local curIndexState = championBattleInfo:GetCurState()
                    if curIndexState == Activity_ChampionBattle_Stage_State.SingUp then
                        if championBattleInfo.hasSingUp == 1 then
                            return false, 0, 0, "", Localization:GetString("302039")
                        elseif championBattleInfo.hasSingUp == 0 then
                            return true, 0, 0, "", Localization:GetString("302038")
                        elseif championBattleInfo.hasSingUp == -1 then
                            return false, 0, 0, "", Localization:GetString("302037")
                        end
                    else
                        if championBattleInfo.hasSingUp == 1 then
                            return false, 0, 0, "", Localization:GetString("302039")
                        else
                            return false, 0, 0, "", Localization:GetString("302037")
                        end
                    end
                end
            end
        elseif overviewInfo.type == 10 then			--每日任务
            local dailyNum = DataCenter.DailyTaskManager:GetRedNum()
            local showRed = (dailyNum > 0)
            local curValue = DataCenter.DailyTaskManager:GetCurValue()
            local maxValue = DataCenter.DailyTaskManager:GetDailyMaxValue()
            return showRed, curValue, maxValue, Localization:GetString("372366")
        elseif overviewInfo.type == 11 then
            return false, 0, 0, Localization:GetString("373182")
        end
    end

    return false, 0, 0, "", ""
end

local function InitNewUnlockedOverview(self)
    self.newUnlockedOverviewList = {}
    local mainLv = DataCenter.BuildManager.MainLv
    
    for i, v in ipairs(self.activityOverviewList) do
        --MK_活动New测试
        local unlockLv = v:GetUnlockLv()
        if unlockLv == mainLv and unlockLv > self.cacheDisplayedLv then
            self:AddOneNewUnlockedOverview(v)
        end
    end
    EventManager:GetInstance():Broadcast(EventId.OnDailyActivityNewStatusChange) 
end

local function TryUpdateNewUnlockedOverview(buildInfo)
    local self = DataCenter.DailyActivityManager
    local buildData = DataCenter.BuildManager:GetBuildingDataByUuid(buildInfo.uuid)
    if buildData and buildData.itemId == BuildingTypes.FUN_BUILD_MAIN and self.cacheDisplayedLv < buildInfo.newLevel then
        self:UpdateNewOverviewList(buildInfo.newLevel)
    end
end

local function UpdateNewOverviewList(self, mainLv)
    if not mainLv then
        mainLv = DataCenter.BuildManager.MainLv
    end

    for i, v in ipairs(self.activityOverviewList) do
        local unlockLv = v:GetUnlockLv()
        if unlockLv == mainLv then
            self:AddOneNewUnlockedOverview(v)
            self:TryRequestActivityInfo(v)
        end
    end
    EventManager:GetInstance():Broadcast(EventId.OnDailyActivityNewStatusChange)
end

local function AddOneNewUnlockedOverview(self, overviewTemplate)
    for i, v in ipairs(self.newUnlockedOverviewList) do
        if v.id == overviewTemplate.id then
            return
        end
    end
    table.insert(self.newUnlockedOverviewList, overviewTemplate)
end


local function CheckIfAlreadyDisplayed(self, lv)
    if not self.cacheDisplayedLv then
        local strK = "DailyActivityUnlockDisplay_" .. LuaEntry.Player.uid
        self.cacheDisplayedLv = CS.GameEntry.Setting:GetInt(strK, 0)
    end
    return self.cacheDisplayedLv >= lv
end

local function RemoveOneOverviewFromNew(self, id)
    for i, v in ipairs(self.newUnlockedOverviewList) do
        if v.id == id then
            table.remove(self.newUnlockedOverviewList, i)
            break
        end
    end
    EventManager:GetInstance():Broadcast(EventId.OnDailyActivityNewStatusChange)
end

local function ResetNewStatus(self)
    local lv = DataCenter.BuildManager.MainLv
    local strK = "DailyActivityUnlockDisplay_" .. LuaEntry.Player.uid
    --MK_活动New测试
    CS.GameEntry.Setting:SetInt(strK, lv)
    self.cacheDisplayedLv = lv
    self.newUnlockedOverviewList = {}
    EventManager:GetInstance():Broadcast(EventId.OnDailyActivityNewStatusChange)
end

local function GetOverviewNewStatus(self)
    if not self.newUnlockedOverviewList then
        self:InitNewUnlockedOverview()
    end
    if #self.newUnlockedOverviewList > 0 then
        return true, self.newUnlockedOverviewList
    else
        return false
    end
end

local function CheckIfOverviewHasNew(self, id)
    if not self.newUnlockedOverviewList then
        return false
    end
    for i, v in ipairs(self.newUnlockedOverviewList) do
        if v.id == id then
            return true
        end
    end
    return false
end

local function OpenDailyActivityView(self,type)
    local hasNew, overviewList = DataCenter.DailyActivityManager:GetOverviewNewStatus()
    if hasNew then
        for i, v in ipairs(overviewList) do
            local tempIcon = string.format(LoadPath.DailyActivityUnlock, v.unlock_image)
            UIUtil.ShowUnlockWindow(Localization:GetString("372459"), tempIcon, Localization:GetString(v.activityName), UnlockWindowType.Activity)
        end
    else
        self:TryOpenDailyActivity(type)
    end
end

local function TryOpenDailyActivity(self, type)
    if self:CheckSwitchNew() then
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIEveryDay, { anim = true, UIMainAnim = UIMainAnimType.AllHide }, type)
    else
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIActivityOverview, { anim = true, UIMainAnim = UIMainAnimType.AllHide }, type)
    end
end

local function DelayOpenDailyActivity(self)
    TimerManager:GetInstance():DelayInvoke(function()
        DataCenter.DailyActivityManager:TryOpenDailyActivity(nil)
    end, 0.3)
end

local function TryRequestActivityInfo(self, overviewTemplate)
    if overviewTemplate.type == ActivityOverviewType.RallyBossAct then
        
    elseif overviewTemplate.type == ActivityOverviewType.ChampionBattle then
        SFSNetwork.SendMessage(MsgDefines.ACT_CHAMPIONBATTLE_DATA_REFRESH)
    elseif overviewTemplate.type == ActivityOverviewType.MineCave then
        SFSNetwork.SendMessage(MsgDefines.GetMineCaveInfo)
    elseif overviewTemplate.type == ActivityOverviewType.Puzzle then
        local puzzleList = DataCenter.ActivityListDataManager:GetActivityDataByType(ActivityEnum.ActivityType.Puzzle)
        if puzzleList and #puzzleList > 0 then
            DataCenter.ActivityPuzzleDataManager:SendMessageGetInfo(tostring(puzzleList[1].id))
        end
    elseif overviewTemplate.type == ActivityOverviewType.Arena then
        SFSNetwork.SendMessage(MsgDefines.GetArenaInfo, 0)
    elseif overviewTemplate.type == ActivityOverviewType.EverydayTask then
    end
    EventManager:GetInstance():Broadcast(EventId.RefreshActivityRedDot)
end

DailyActivityManager.__init = __init
DailyActivityManager.__delete = __delete
DailyActivityManager.AddListener = AddListener
DailyActivityManager.RemoveListener = RemoveListener

DailyActivityManager.CheckSwitchNew = CheckSwitchNew
DailyActivityManager.InitTemplates = InitTemplates
DailyActivityManager.InitActivityOverviewList = InitActivityOverviewList
DailyActivityManager.TryUpdateNewUnlockedOverview = TryUpdateNewUnlockedOverview
DailyActivityManager.InitNewUnlockedOverview = InitNewUnlockedOverview
DailyActivityManager.UpdateNewOverviewList = UpdateNewOverviewList
DailyActivityManager.AddOneNewUnlockedOverview = AddOneNewUnlockedOverview
DailyActivityManager.CheckIfAlreadyDisplayed = CheckIfAlreadyDisplayed
DailyActivityManager.ResetNewStatus = ResetNewStatus
DailyActivityManager.GetOverviewNewStatus = GetOverviewNewStatus
DailyActivityManager.CheckIfOverviewHasNew = CheckIfOverviewHasNew
DailyActivityManager.RemoveOneOverviewFromNew = RemoveOneOverviewFromNew
DailyActivityManager.Startup = Startup
DailyActivityManager.OpenDailyActivityView = OpenDailyActivityView
DailyActivityManager.TryRequestActivityInfo = TryRequestActivityInfo
DailyActivityManager.TryOpenDailyActivity = TryOpenDailyActivity
DailyActivityManager.DelayOpenDailyActivity = DelayOpenDailyActivity
DailyActivityManager.GetTemplate = GetTemplate
DailyActivityManager.GetActivityOverviewList = GetActivityOverviewList
DailyActivityManager.CheckIfShowActivityOverview = CheckIfShowActivityOverview
DailyActivityManager.CheckIfActIsOpen = CheckIfActIsOpen
DailyActivityManager.GetOverviewTotalRedCount = GetOverviewTotalRedCount
DailyActivityManager.GetOverviewRedCount = GetOverviewRedCount
DailyActivityManager.JumpToActOverview = JumpToActOverview
DailyActivityManager.UpdateActViewHistory = UpdateActViewHistory
DailyActivityManager.TryInitActViewTimeDic = TryInitActViewTimeDic
DailyActivityManager.GetOverviewDesc = GetOverviewDesc

return DailyActivityManager