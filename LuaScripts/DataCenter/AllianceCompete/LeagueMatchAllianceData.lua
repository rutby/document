---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2023/2/27 16:31
---LeagueMatchAllianceData.lua

local LeagueMatchAllianceData = BaseClass("LeagueMatchAllianceData")

local function __init(self)
    self.allianceId = ""--string
    self.serverId = 0--int     联盟所属服
    self.abbr = ""--str     联盟简称
    self.name = ""--str     联盟全称
    self.group = ""--string  组id  生成规则  服务器分组id_rankType_序号
    self.rankType = 1--int     段位
    self.position = 0--int     抽签位置 从 1开始到16
    self.roundResult = ""--string  每周对决结果记录 分号分隔  1;0  代表第一周胜利 第二周失败 剩余周未出结果
    self.fake = 0--int     是否是假联盟  1代表假  该位置轮空
    self.upOrDown = 0--int     0 段位没变 1升 2降
    self.icon="1;1;1;1"--联盟旗帜（背景；背景色；前景；前景色）
    self.country =""
    self.fightPower = 0
    self.leaderName = ""
    
    self.winTimes = 0
end

local function __delete(self)
    self.allianceId = nil
    self.serverId = nil
    self.abbr = nil
    self.name = nil
    self.group = nil
    self.rankType = nil
    self.position = nil
    self.roundResult = nil
    self.fake = nil
    self.upOrDown = nil
    self.country = nil
    self.icon = nil
    self.fightPower = nil
    self.leaderName = ""

    self.winTimes = nil
end
local function ParseData(self,message)
    if message ==nil then
        return
    end
    if message.allianceId then
        self.allianceId = message.allianceId
    end
    if message.serverId then
        self.serverId = message.serverId
    end
    if message.abbr then
        self.abbr = message.abbr
    end
    if message.name then
        self.name = message.name
    end
    if message.group then
        self.group = message.group
    end
    if message.rankType then
        self.rankType = message.rankType
    end
    if message.position then
        self.position = message.position
    end
    if message.roundResult then
        self.roundResult = message.roundResult
        self:SetWinTimes(self.roundResult)
    end
    if message.fake then
        self.fake = message.fake
    end
    if message.upOrDown then
        self.upOrDown = message.upOrDown
    end
    if message["country"]~=nil then
        self.country = message["country"]
    end
    if message["icon"]~=nil then
        self.icon = string.IsNullOrEmpty(message["icon"]) and "1;1;1;1" or message["icon"]
    end
    if message["fightpower"]~=nil then
        self.fightPower = message["fightpower"]
    end
    if message["learderName"]~=nil then
        self.leaderName = message["learderName"]
    end
end

local function SetWinTimes(self, strResult)
    self.winTimes = 0
    local arr = string.split(strResult, ";")
    for i, v in ipairs(arr) do
        if v == "1" then
            self.winTimes = self.winTimes + 1
        end
    end
end

local function GetCountryFlagPath(self)
    local template = self:GetCountryFlagTemplate()
    local img = template:GetNationFlagPath()
    return img
end

local function GetCountryFlagTemplate(self)
    local country = string.IsNullOrEmpty(self.country) and DefaultNation or self.country
    local temp = DataCenter.NationTemplateManager:GetNationTemplate(country)
    return temp
end

LeagueMatchAllianceData.__init = __init
LeagueMatchAllianceData.__delete = __delete
LeagueMatchAllianceData.ParseData = ParseData
LeagueMatchAllianceData.SetWinTimes = SetWinTimes
LeagueMatchAllianceData.GetCountryFlagTemplate = GetCountryFlagTemplate
LeagueMatchAllianceData.GetCountryFlagPath = GetCountryFlagPath
return LeagueMatchAllianceData