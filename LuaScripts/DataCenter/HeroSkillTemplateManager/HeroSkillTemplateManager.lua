---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2022/6/9 12:10
---
---@class HeroSkillTemplateManager
local HeroSkillTemplateManager = BaseClass("HeroSkillTemplateManager")
local Resource = CS.GameEntry.Resource
local Setting = CS.GameEntry.Setting
local Localization = CS.GameEntry.Localization

local function __init(self)
    self.dataDict = {}
    self.skillEnhanceEffectDict = {}
end

local function __delete(self)
    self.dataDict = nil
    self.skillEnhanceEffectDict = nil
end

---@return HeroSkillTemplate
local function GetTemplate(self, id)
    if table.containsKey(self.dataDict, id) then
        return self.dataDict[id]
    end

    local lineData = LocalController:instance():getLine(LuaEntry.Player:GetABTestTableName(TableName.LW_Hero_Skill), id)
    if lineData == nil then
        Logger.LogError("HeroSkillTemplateManager GetTemplate lineData is nil id:" .. id)
        return nil
    end

    local skillTemplateData = HeroSkillTemplate.New()
    skillTemplateData:InitConfig(lineData)
    self.dataDict[id] = skillTemplateData

    return skillTemplateData
end

--- 根据技能id获取最大等级的技能
---@param id number
---@return HeroSkillTemplate
local function GetMaxStarSkillBySkillId(self,id)
    local skillTemplate = self:GetTemplate(id)
    if skillTemplate == nil then
        return id
    end

    local maxStar = skillTemplate.maxStar
    local groupId = skillTemplate.group
    local maxLevelSkillId = groupId + maxStar
    local template = self:GetTemplate(maxLevelSkillId)
    if template then
        return template.id
    else
        return id
    end
end

--- 根据技能id和星级获取需要的军阶
---@param groupId number
---@param star number
local function GetNeedRankByStar(self,groupId,star)
    local skillTemplate = self:GetTemplate(groupId+star)
    if skillTemplate == nil then
        return 0
    end
    return skillTemplate.needRank
end

--判断一个技能是否是大招
local function IsUltimate(self,skillId)
    return DataCenter.HeroTemplateManager:IsUltimate(skillId)
end

--获取一个技能的位置
local function GetSlotIndex(self,skillId)
    return DataCenter.HeroTemplateManager:GetSlotIndex(skillId)
end

local function GetSkillEnhanceEffectByGroup(self, groupId)
    if self.skillEnhanceEffectDict[groupId] then
        return self.skillEnhanceEffectDict[groupId]
    end

    local skillEnhanceEffect = {}
    local skillTemplate = self:GetTemplate(groupId)
    if skillTemplate == nil then
        return skillEnhanceEffect
    end

    local tempDict = {}
    for i = 1, skillTemplate.maxStar+1 do
        local template = self:GetTemplate(groupId + (i-1))
        if template == nil then
            break
        end

        local enhanceEffectKey = template.enhanceEffectKey
        if string.IsNullOrEmpty(enhanceEffectKey) then
            goto continue
        end
        local enhanceEffectParams = template.enhanceEffectParams
        local resultValue = Localization:GetString(enhanceEffectKey,SafeUnpack(enhanceEffectParams))
        tempDict[template.star] = resultValue
        ::continue::
    end

    for k, v in pairs(tempDict) do
        table.insert(skillEnhanceEffect, {star = k, effect = v})
    end
    table.sort(skillEnhanceEffect, function(a, b)
        return a.star < b.star
    end)

    self.skillEnhanceEffectDict[groupId] = skillEnhanceEffect
    return skillEnhanceEffect
end

local function SkillGroupHasNewEnhanceEffect(self, groupId)
    local skillEnhanceEffect = self:GetSkillEnhanceEffectByGroup(groupId)
    return not table.IsNullOrEmpty(skillEnhanceEffect)
end

local function GetSkillGroupMaxLevel(self, groupId)
    local skillTemplate = self:GetTemplate(groupId)
    if skillTemplate == nil then
        return 0
    end
    local maxStarId = groupId + skillTemplate.maxStar
    local maxStarSkillTemplate = self:GetTemplate(maxStarId)
    if maxStarSkillTemplate == nil then
        return 0
    end
    return maxStarSkillTemplate.maxLevel
end

HeroSkillTemplateManager.__init = __init
HeroSkillTemplateManager.__delete = __delete
HeroSkillTemplateManager.GetTemplate = GetTemplate
HeroSkillTemplateManager.GetMaxStarSkillBySkillId = GetMaxStarSkillBySkillId
HeroSkillTemplateManager.GetNeedRankByStar = GetNeedRankByStar
HeroSkillTemplateManager.IsUltimate = IsUltimate
HeroSkillTemplateManager.GetSlotIndex = GetSlotIndex
HeroSkillTemplateManager.GetSkillEnhanceEffectByGroup = GetSkillEnhanceEffectByGroup
HeroSkillTemplateManager.SkillGroupHasNewEnhanceEffect = SkillGroupHasNewEnhanceEffect
HeroSkillTemplateManager.GetSkillGroupMaxLevel = GetSkillGroupMaxLevel

return HeroSkillTemplateManager