---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2023/3/9 12:24
---

local MasteryData = BaseClass("MasteryData")
local MasteryPlanData = require "DataCenter.Mastery.MasteryPlanData"

local function __init(self)
    self.inited = false
    self.level = 0 -- 专精等级
    self.exp = 0 -- 当前经验
    self.needExp = 0 -- 升级经验
    self.extraPageNum = 0  --额外页数
    self.plans = {} -- 方案
    self.planIndex = 0 -- 当前方案 index
    self.skillCdTimeDict = {} -- Dict<skill, endTime>
    self.pageName = {} --方案名称  Dict<planIndex, name>
end

local function ParseServerData(self, serverData)
    self.inited = true
    if serverData.level then
        self.level = serverData.level
    end
    if serverData.exp then
        self.exp = serverData.exp
    end
    if serverData.needExp then
        self.needExp = serverData.needExp
    end
    if serverData.newDesertTalentPages then
        self.plans = {}
        for _, v in ipairs(serverData.newDesertTalentPages) do
            local plan = MasteryPlanData.New()
            plan:ParseServerData(v)
            self.plans[plan.index] = plan
        end
        self.needExp = serverData.needExp
    end
    
    --当前方案
    if serverData.usePage then
        self.planIndex = serverData.usePage
    end
    if serverData.talentSkill then
        for _, v in ipairs(serverData.talentSkill) do
            self.skillCdTimeDict[v.skillId] = v.cdTime
        end
    end

    if serverData.pageName then
        self.pageName = serverData.pageName
    end
    if serverData.extraPageNum then
        self.extraPageNum = serverData.extraPageNum
    end
end

local function GetPlan(self, index)
    if self.plans[index] == nil then
        self.plans[index] = MasteryPlanData.New()
    end
    return self.plans[index]
end

local function GetCurPlan(self)
    return self:GetPlan(self.planIndex)
end

local function SetSkillCdTime(self, skill, cdTime)
    self.skillCdTimeDict[tostring(skill)] = cdTime
end

local function GetSkillCdTime(self, skill)
    return self.skillCdTimeDict[tostring(skill)] or 0
end

--获取方案名称
local function GetPageName(self,index)
    if self.pageName[tostring(index)] then
        return self.pageName[tostring(index)]
    end
    return ""
end
--方案名称更新
local function SetPageName(self,message)
    if message["1"] then
        self.pageName["1"] = message["1"]
    end
    if message["2"] then
        self.pageName["2"] = message["2"]
    end
    if message["3"] then
        self.pageName["3"] = message["3"]
    end
end

local function RefreshExtraPageNum(self,serverData)
    if serverData.extraPageNum then
        self.extraPageNum = serverData.extraPageNum
        --有页数解锁时更新下可使用点数
        self:UpdateOtherPage()
    end
end

local function UpdateOtherPage(self)
    local firstPlan = self:GetCurPlan()
    local totalPoint = firstPlan.restPoint + firstPlan:GetUsePoint()
    for _, plan in pairs(self.plans) do
        if plan ~= firstPlan then
            plan.restPoint = totalPoint - plan:GetUsePoint()
        end
    end
end

MasteryData.__init = __init

MasteryData.ParseServerData = ParseServerData
MasteryData.GetPlan = GetPlan
MasteryData.GetCurPlan = GetCurPlan
MasteryData.SetSkillCdTime = SetSkillCdTime
MasteryData.GetSkillCdTime = GetSkillCdTime
MasteryData.GetPageName = GetPageName
MasteryData.SetPageName = SetPageName
MasteryData.RefreshExtraPageNum = RefreshExtraPageNum
MasteryData.UpdateOtherPage = UpdateOtherPage

return MasteryData