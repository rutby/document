---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zzl.
--- DateTime: 
---
--[[
跳转赛季地块
]]

local ResLackItemBase = require "DataCenter.ResLackTips.ResLackItemBase"
local ResLackItem_SeasonMasteryDesert = BaseClass("ResLackItem_SeasonMasteryDesert", ResLackItemBase)

function ResLackItem_SeasonMasteryDesert:CheckIsOk( _resType, _needCnt )
    local dic = DataCenter.DesertDataManager:GetAllMyDesert()
    --找自己的最高等级地
    if dic and next(dic) then
        local list = {}
        for i ,v in pairs(dic) do
            local data = {}
            local tilePos = SceneUtils.IndexToTilePos(v.pointId)
            local distance = math.ceil(SceneUtils.TileDistance(tilePos, SceneUtils.IndexToTilePos(LuaEntry.Player:GetMainWorldPos(),ForceChangeScene.World)))
            data.dis = distance
            data.level = v.level
            data.pointId = v.pointId
            table.insert(list,data)
        end
        table.sort(list,function(a,b)
            if a.level > b.level then
                return true
            elseif a.level == b.level then
                return a.dis < b.dis
            end
            return false
        end)
        self.pointIndex = list[1].pointId
        return true
    else
        if SceneUtils.GetIsInCity() then
            return true
        end
        if CS.SceneManager.World.GetDesertPointList ~= nil then
            local desertMap = CS.SceneManager.World:GetDesertPointList()
            if desertMap ~= nil and desertMap.Count > 0 then
                local disList= {}
                local pointList = {}
                for k,v in pairs(desertMap) do
                    local pi = v:GetWorldDesertInfo()
                    --local desertLv = GetTableData(TableName.Desert, pi.desertId, "desert_level")
                    local typeNew = pi:GetPlayerType()
                    if typeNew == CS.PlayerType.PlayerNone then
                        table.insert(pointList,pi)
                    end
                end
                if next(pointList) then
                    for i = 1,table.count(pointList) do
                        local tilePos = SceneUtils.IndexToTilePos(pointList[i].pointIndex)
                        local distance = math.ceil(SceneUtils.TileDistance(tilePos, SceneUtils.IndexToTilePos(LuaEntry.Player:GetMainWorldPos(),ForceChangeScene.World)))
                        if distance > 1 then
                            local param = {}
                            param.data = pointList[i]
                            param.distance = distance
                            table.insert(disList,param)
                        end
                    end
                end
                if next(disList) then
                    table.sort(disList,function(a,b)
                        if a.distance < b.distance then
                            return true
                        end
                        return false
                    end)
                    self.pointIndex = disList[1].data.pointIndex
                    return true
                end
            end
        end
    end
    return false
end

function ResLackItem_SeasonMasteryDesert:TodoAction()
    GoToUtil.CloseAllWindows()
    if SceneUtils.GetIsInCity() then
        EventManager:GetInstance():Broadcast(EventId.MainToWorldBtn)
    else
        local worldPos = SceneUtils.TileIndexToWorld(self.pointIndex, ForceChangeScene.World)
        GoToUtil.GotoWorldPos(worldPos, CS.SceneManager.World.InitZoom,LookAtFocusTime,function()
            local ownerUid = ""
            local isAlliance = 0
            local desertId = 0
            local uuid = 0
            local desertData = DataCenter.DesertDataManager:GetDesertDataByPoint(self.pointIndex)
            if desertData~=nil then
                desertId = desertData.desertId
                ownerUid = LuaEntry.Player.uid
                isAlliance =1
                uuid = desertData.uuid
            else
                local worldTileInfo = CS.SceneManager.World:GetWorldTileInfo(self.pointIndex)
                if worldTileInfo~=nil then
                    local desertInfo = worldTileInfo:GetWorldDesertInfo()
                    if desertInfo~=nil then
                        ownerUid = desertInfo.ownerUid
                        local allianceId = desertInfo.allianceId
                        if allianceId ~= "" and allianceId == LuaEntry.Player.allianceId then
                            isAlliance = 1
                        end
                        desertId = desertInfo.desertId
                        uuid =desertInfo.uuid
                    end
                end
            end
            UIManager:GetInstance():OpenWindow(UIWindowNames.UIWorldPoint,{anim = true,playEffect = false,UIMainAnim = UIMainAnimType.LeftRightBottomHide},uuid, self.pointIndex,ownerUid, WorldPointUIType.Desert, isAlliance,0,nil,desertId)
        end)
    end
end

return ResLackItem_SeasonMasteryDesert
