---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhangliheng.
--- DateTime: 7/29/21 12:00 PM
---

local SkillInfo = BaseClass('SkillInfo')


local function __init(self, hero, skillId, unlockHeroLv, level)
    self.heroData = hero
    self.skillId = skillId
    self.type2 = tonumber(GetTableData(TableName.SkillTab, skillId, 'type2'))
    self.unlockHeroLv = unlockHeroLv
    self.level = level
end

local function __delete(self)
    self.hero = nil
    self.skillId = nil
    self.unlockHeroLv = nil
    self.level = nil
end

local function UpdateSkillInfo(self,message)
    if message == nil then
        return
    end

    if message['skillId'] ~= nil then
        self.skillId = message['skillId']
        self.skillTemplateData = DataCenter.HeroSkillTemplateManager:GetTemplate(self.skillId)
    end

    if message['level'] ~= nil then
        if not self.prevLevel then
            self.prevLevel = self.level
        end
        self.level = message['level']
    end

    if message["heroUuid"] ~= nil then
        self.heroUuid = message["heroUuid"]
    end

    if message["slot"] ~= nil then
        self.slotIndex = message["slot"]
    end

    if message["state"] ~= nil then
        self.isUnlocked = message["state"] == 1
    end

    if message["uuid"] ~= nil then
        self.uuid = message["uuid"]
    end

    self.star = 0
    if message["star"] ~= nil then
        self.star = message["star"]
    end
end

local function CreateFromTemplate(self,templateId,unlocked,level,star)
    if templateId == nil or templateId < 0 then
        return
    end

    self.skillId = templateId
    self.skillTemplateData = DataCenter.HeroSkillTemplateManager:GetTemplate(self.skillId)
    if unlocked == nil then
        unlocked = false
    end
    self.isUnlocked = unlocked
    self.level = 1
    if level ~= nil then
        self.level = level
    end
    self.star = star or 0
end

local function SetLevel(self, level)
    self.level = level
end

local function GetLevel(self)
    return self.level    
end

local function GetLevelLimit(self)
    if self.heroData == nil then
        return false
    end
    local index = self:GetIndex()
    local needLv = HeroUtils.GetSkillUnlockLv(self.heroData.heroId, index)
    return self.heroData.level >= needLv
end

local function GetStarLimit(self)
    if self.heroData == nil then
        return false
    end
    local curRankId = self.heroData:GetCurMilitaryRankId()
    local index = self:GetIndex()
    return HeroUtils.GetSkillUnlock(curRankId, self.heroData.rarity, index)
end

local function GetIndex(self)
    if self.heroData == nil then
        return nil
    end
    local skillIds = HeroUtils.GetHeroSkillList(self.heroData.heroId, self.heroData:GetCurMilitaryRankId())
    return table.indexof(skillIds, self.skillId)
end

local function IsUnlock(self)
    return self:GetLevelLimit() and self:GetStarLimit()
end

local function GetAllDamage(self)
    return self.skillTemplateData:GetSkillEffects(self.level or 1)
end

SkillInfo.__init = __init
SkillInfo.__delete = __delete
SkillInfo.UpdateSkillInfo = UpdateSkillInfo
SkillInfo.CreateFromTemplate = CreateFromTemplate
SkillInfo.SetLevel = SetLevel
SkillInfo.GetLevel = GetLevel
SkillInfo.GetLevelLimit = GetLevelLimit
SkillInfo.GetStarLimit = GetStarLimit
SkillInfo.GetIndex = GetIndex
SkillInfo.IsUnlock = IsUnlock
SkillInfo.GetAllDamage = GetAllDamage

return SkillInfo