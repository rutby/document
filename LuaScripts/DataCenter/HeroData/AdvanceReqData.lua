---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhangliheng.
--- DateTime: 9/9/21 4:36 PM
---


local AdvanceReqData = DataClass('AdvanceReqData')

local function __init(self, configQuality)
    local advanceConfig = HeroAdvanceController:GetInstance():GetAdvanceConfigByQuality(configQuality)
    local consume1Str = advanceConfig and tostring(advanceConfig["consume1"]) or ""--同英雄
    local consume2Str = advanceConfig and tostring(advanceConfig["consume2"]) or ""--同阵营
    self.conditions = {}
    local addCondition = function(consumeStr, type)
        if string.IsNullOrEmpty(consumeStr) then
            return
        end
        local vec = string.split(consumeStr,';')
        if vec ~= nil and table.count(vec) == 2 then
            local quality = tonumber(vec[1])
            local num = tonumber(vec[2])
            local condition = {}
            condition['requireType'] = type
            condition['requireQuality'] = quality
            condition['requireNum'] = num
            --table.insert(self.conditions, condition)
            self.conditions[type] = condition
        end
    end
    addCondition(consume1Str, HeroAdvanceConsumeType.ConsumeType_Same_Hero)
    addCondition(consume2Str, HeroAdvanceConsumeType.ConsumeType_Same_Camp)
end

local function __delete(self)
    self.conditions = {}
end

local function GetConditionByType(self, type)
    local condition = self.conditions[type]
    if condition ~= nil then
        return condition.requireQuality, condition.requireNum
    end
    --for _, v in ipairs(self.conditions) do
    --    if v.requireType == type then
    --        return v.requireQuality, v.requireNum
    --    end
    --end
    return nil, nil
end

local function GetTotalNeedNum(self)
    local result = 0
    table.walk(self.conditions, function (_, v)
        result = result + v.requireNum
    end)
    return result
end

function AdvanceReqData:GetCondition()
    return self.conditions
end

AdvanceReqData.__init   = __init
AdvanceReqData.__delete = __delete
AdvanceReqData.GetConditionByType = GetConditionByType
AdvanceReqData.GetTotalNeedNum = GetTotalNeedNum
return AdvanceReqData