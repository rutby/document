---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2023/3/24 18:10
---

local CrossWormPlunderData = BaseClass("CrossWormPlunderData")

local function __init(self)
    self.resDict = {} -- Dict<resourceType, count>
    self.itemDict = {} -- Dict<itemId, count>
end

local function ParseServerData(self, serverData)
    self.resDict = {}
    if serverData.plunderRes then
        for _, v in ipairs(serverData.plunderRes) do
            self.resDict[tonumber(v.type)] = tonumber(v.value)
        end
    end
    self.itemDict = {}
    if serverData.plunderItem then
        for _, v in ipairs(serverData.plunderItem) do
            self.itemDict[tonumber(v.itemId)] = tonumber(v.value)
        end
    end
end

local function GetRewardList(self)
    local rewardList = {}
    for resourceType, count in pairs(self.resDict) do
        local reward = {}
        reward.rewardType = ResTypeToReward[resourceType]
        reward.count = count
        reward.order = 10000000 + resourceType
        reward.color = resourceType == ResourceType.Gold and ItemColor.PURPLE or ItemColor.GREEN
        table.insert(rewardList, reward)
    end
    for itemId, count in pairs(self.itemDict) do
        local reward = {}
        reward.rewardType = RewardType.GOODS
        reward.itemId = itemId
        reward.count = count
        reward.order = 30000000 + itemId
        local itemTemplate = DataCenter.ItemTemplateManager:GetItemTemplate(itemId)
        reward.color = itemTemplate and itemTemplate.color or ItemColor.GREEN
        table.insert(rewardList, reward)
    end
    table.sort(rewardList, function(rewardA, rewardB)
        return rewardA.order < rewardB.order
    end)
    return rewardList
end

local function GetPreviewList(self)
    local list = {}
    table.insert(list, {
        icon = DataCenter.ResourceManager:GetResourceIconByType(ResourceType.Electricity),
        count = self.resDict[ResourceType.Electricity] or 0
    })
    table.insert(list, {
        icon = DataCenter.ResourceManager:GetResourceIconByType(ResourceType.Money),
        count = self.resDict[ResourceType.Money] or 0
    })
    return list
end

local function IsEmpty(self)
    for _, count in pairs(self.resDict) do
        if count > 0 then
            return false
        end
    end
    for _, count in pairs(self.itemDict) do
        if count > 0 then
            return false
        end
    end
    return true
end

CrossWormPlunderData.__init = __init
CrossWormPlunderData.__delete = __delete

CrossWormPlunderData.ParseServerData = ParseServerData
CrossWormPlunderData.GetRewardList = GetRewardList
CrossWormPlunderData.GetPreviewList = GetPreviewList
CrossWormPlunderData.IsEmpty = IsEmpty

return CrossWormPlunderData