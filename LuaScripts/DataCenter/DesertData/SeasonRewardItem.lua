---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 24224.
--- DateTime: 2022/11/25 18:01
---
local SeasonRewardItem = BaseClass("SeasonRewardItem")
local function __init(self)
    self.index = -1
    self.type = -1
    self.name = ""
    self.bg_pic = ""
    self.bg_pic_words_color = ""
    self.condition = ""
    self.condition_des = ""
    self.allianceList = {}
    self.packagesList = {}
    self.selfPackageId  = nil
    self.topRank = 1
end

local function __delete(self)
    self.index = nil
    self.type = nil
    self.name = nil
    self.bg_pic = nil
    self.bg_pic_words_color = nil
    self.condition = nil
    self.condition_des = nil
    self.allianceList = nil
    self.packagesList = nil
    self.selfPackageId = nil
    self.topRank = 1
end

local function UpdateData(self,message,index)
    self.index = index
    local stage = message["stage"]    -- 1;1 2;1 3;1 3;2
    if stage then
        local stages = string.split(stage, ";")
        if #stages >= 2 then
            self.stageType = tonumber(stages[1])
            self.subStageType = tonumber(stages[2])
        end
    end
    self.type = message["type"]
    self.name = message["name"]
    self.bg_pic = message["bg_pic"]
    self.bg_pic_words_color = message["bg_pic_words_color"]
    self.condition = message["condition"]
    local arr = string.split(self.condition,";")
    if #arr>=2 then
        local rank = tonumber(arr[2])
        if rank~=nil then
            self.topRank = rank
        end
    end
    self.condition_des = message["condition_des"]
    self.allianceList = {}
    if message["alliances"] ~= nil then
        local alliances = message["alliances"]
        for k,v in pairs(alliances) do
            local oneData = {}
            oneData.allianceName = v["name"]
            oneData.allianceAbbr = v["abbr"]
            oneData.allianceId = v["allianceId"]
            table.insert(self.allianceList,oneData)
        end
    end
    self.packagesList = {}
    self.selfPackageId  = nil
    if message["packages"]~=nil then
        local packages = message["packages"]
        for k,v in pairs(packages) do
            local oneData = {}
            oneData.packageId = v["packageId"]
            oneData.numRest = v["numRest"]
            oneData.numTotal = v["numTotal"]
            oneData.diamonds = v["diamonds"]
            oneData.giftTitle = v["giftTitle"]
            oneData.gift_pic = v["gift_pic"]
            oneData.order = v["order"]
            oneData.rewardInfo = DataCenter.RewardManager:ReturnRewardParamForView(v["rewardInfo"])
            oneData.selfStatus = v["selfStatus"] --0无奖励，1可领取，2已领取
            if oneData.selfStatus ==1 or oneData.selfStatus ==2 then
                self.selfPackageId = oneData.packageId
            end
            if oneData.packageId~=nil then
                self.packagesList[oneData.packageId] = oneData
            end
        end
    end
end

local function ReceiveSelfReward(self)
    if self.selfPackageId~=nil and self.packagesList[self.selfPackageId]~=nil then
        self.packagesList[self.selfPackageId].selfStatus = 2
    end
end

local function SetPackageRestNum(self,packageId,restNum)
    if self.packagesList[packageId]~=nil then
        self.packagesList[packageId].numRest = restNum
    end
end

local function GetSelfRewardData(self)
    if self.selfPackageId~=nil then
        return self.packagesList[self.selfPackageId] 
    end
end

local function GetSelfPackageId(self)
    return self.selfPackageId
end
SeasonRewardItem.__init = __init
SeasonRewardItem.__delete = __delete
SeasonRewardItem.UpdateData = UpdateData
SeasonRewardItem.ReceiveSelfReward = ReceiveSelfReward
SeasonRewardItem.SetPackageRestNum = SetPackageRestNum
SeasonRewardItem.GetSelfRewardData =GetSelfRewardData
SeasonRewardItem.GetSelfPackageId =GetSelfPackageId
return SeasonRewardItem