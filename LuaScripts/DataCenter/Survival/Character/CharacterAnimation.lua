---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1022.
--- DateTime: 2023/4/11 15:35
---人物动画数据
local CharacterAnimation = BaseClass("CharacterAnimation")
local Iterator = require("Util.Iterator")

function CharacterAnimation:__init(animationId)
    self.m_template = DataCenter.PveAnimationTemplateManager:GetTemplate(animationId)
    self.m_iterators = {}
    self.m_attackIntervalTime = LuaEntry.DataConfig:TryGetNum("Continuous_attack_action_time", "k1")
    self.m_attackTime = 0
end

function CharacterAnimation:GetIterator(type)
    local iterator = self.m_iterators[type]
    if iterator == nil then
        iterator = Iterator.New(self.m_template:GetAnimArray(type))
        self.m_iterators[type] = iterator
    end
    return iterator
end
--正序获取动画
function CharacterAnimation:GetAnimName(type)
    local iterator = self:GetIterator(type)
    if type == AnimationType.Attack and self:CheckComboAttackOutTime() then
        --连续攻击超时
        iterator:ResetToTop()
    end
    
    self.m_attackTime = 0
    
    local animName = nil
    if iterator ~= nil then
        animName = iterator:GetNext()
    end
    return animName
end
--随机获取动画
function CharacterAnimation:GetRandomAnimName(type)
    local iterator = self:GetIterator(type)
    local animName = nil
    if iterator ~= nil then
        animName = iterator:GetRandom()
    end
    return animName
end

function CharacterAnimation:UpdateAttackTime()
    self.m_attackTime = Time.time
end
--检测连续攻击是否超时
function CharacterAnimation:CheckComboAttackOutTime()
    return self.m_attackTime ~= 0 and Time.time - self.m_attackTime > self.m_attackIntervalTime
end

function CharacterAnimation:__delete()
    self.m_template = nil
    self.m_iterators = nil
end

return CharacterAnimation