---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by admin.
--- DateTime: 2024/3/28 20:22
---

local HeroEquipPromoteTemplateManager = BaseClass("HeroEquipPromoteTemplateManager")
local HeroEquipPromoteTemplate = require "DataCenter.HeroEquipManager.HeroEquipPromoteTemplate"

function HeroEquipPromoteTemplateManager:__init()
    self.allTemplate = {}
    self.isInit = false
end

function HeroEquipPromoteTemplateManager:__delete()
    self.allTemplate = {}
    self.isInit = false
end

function HeroEquipPromoteTemplateManager:InitAllTemplate()
    if self.isInit then
        return
    end
    self.isInit = true
    self.allTemplate = {}
    LocalController:instance():visitTable(TableName.EquipPromote, function(_, lineData)
        local template = HeroEquipPromoteTemplate.New()
        template:InitData(lineData)
        self.allTemplate[tonumber(template.level)] = template
    end)
end

function HeroEquipPromoteTemplateManager:GetTemplate(level)
    if not self.isInit then
        self:InitAllTemplate()
    end
    return self.allTemplate[tonumber(level)]
end

function HeroEquipPromoteTemplateManager:GetAllTemplate()
    if not self.isInit then
        self:InitAllTemplate()
    end
    return self.allTemplate or {}
end

function HeroEquipPromoteTemplateManager:IsMaxPromote(promote)
    local maxPromote = 0
    for k, v in pairs(self:GetAllTemplate()) do
        if k > maxPromote then
            maxPromote = k
        end
    end
    return promote >= maxPromote
end

function HeroEquipPromoteTemplateManager:GetCostRes(promote)
    local result = {}
    local template = self:GetTemplate(promote)
    if template ~= nil then
        for k,v in pairs(template.costResource) do
            table.insert(result, v)
        end
        for k,v in pairs(template.costGoods) do
            table.insert(result, v)
        end
    end
    return result
end

function HeroEquipPromoteTemplateManager:IsEnoughRes(promote)
    local enough = true
    local lack = {}
    for k, param in pairs(self:GetCostRes(promote)) do
        local resType = param['resType']
        local itemId = param['itemId']
        if resType ~= nil then
            local resNum = LuaEntry.Resource:GetCntByResType(resType)
            if resNum < param.num then
                lack.type = ResLackType.Res
                lack.id = resType
                lack.targetNum = param.num
                enough = false
                break
            end
        elseif itemId ~= nil then
            local itemNum = DataCenter.ItemData:GetItemCount(itemId)
            if itemNum < param.num then
                lack.type = ResLackType.Item
                lack.id = itemId
                lack.targetNum = param.num
                enough = false
                break
            end
        end
    end
    
    return enough, lack
end

return HeroEquipPromoteTemplateManager