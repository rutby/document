---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2023/4/26 14:18
---

local ActChampionGroupInfo = BaseClass("ActChampionGroupInfo")

local function __init(self)
    self.strongestData = nil
    self.phase = 0
    self.group = 0
    self.leftMembers = {}
    self.rightMembers = {}
end

local function __delete(self)
    self.strongestData = nil
    self.phase = 0
    self.group = 0
    self.leftMembers = {}
    self.rightMembers = {}
end

local function ParseServerData(self, message)
    if message ~= nil then
        self.strongestData = message["groupData"] or message
        self.phase = self.strongestData["phase"]
        self.group = self.strongestData["group"]
        if self.strongestData["topEightMembers"] ~= nil and #self.strongestData["topEightMembers"] > 0 then
            self.topEightMembers = self.strongestData["topEightMembers"]

            self.leftMembers = {}
            self.rightMembers = {}
            if self.topEightMembers ~= nil then
                for i = 1, #self.topEightMembers do
                    local member = self.topEightMembers[i]
                    if member ~= nil then
                        if i % 2 == 0 then
                            table.insert(self.leftMembers , member)
                        else
                            table.insert(self.rightMembers , member)
                        end
                    end
                end
            end
            table.sort(self.leftMembers,function (member1,member2)
                return tonumber(member1.score) > tonumber(member2.score)
            end)
            table.sort(self.rightMembers,function (member1,member2)
                return tonumber(member1.score) > tonumber(member2.score)
            end)
        end

        if self.strongestData["topTwoGroup"] ~= nil and #self.strongestData["topTwoGroup"] > 0 then
            self.topTwoGroup = self.strongestData["topTwoGroup"]
        end
        if self.strongestData["topFourGroup"] ~= nil and #self.strongestData["topFourGroup"] > 0 then
            self.topFourGroup = self.strongestData["topFourGroup"]
        end
        if self.strongestData["topEightGroup"] ~= nil and #self.strongestData["topEightGroup"] > 0 then
            self.topEightGroup = self.strongestData["topEightGroup"]
        end
        if self.strongestData["nextRoundST"] ~= nil then
            self.strongestNextRoundST = self.strongestData["nextRoundST"]
        end
        --标识=1：8进4  2：4进2   3：决赛----self.strongestData["strongestType"]==nil时，服务器没有传此值，认为已决出冠军
        self.strongestType = ChampionBattlePosterType.Strongest_Two
        if self.strongestData["strongestType"] ~= nil then
            self.strongestType = self.strongestData["strongestType"]
        end
    end
end

--争霸赛阶段--通过uid查找返回的某个8强玩家信息
local function GetPlayerMsgByUid(self, uid)
    local onePlayerMsg = nil
    if uid == nil or uid == "" then
        return onePlayerMsg
    end
    if self.topEightMembers ~= nil then
        for i = 1, #self.topEightMembers do
            local onePlayerData = self.topEightMembers[i]
            if onePlayerData ~= nil then
                if tostring(uid) == tostring(onePlayerData["uid"]) then
                    onePlayerMsg = onePlayerData
                    return onePlayerMsg
                end
            end
        end
    end
    return onePlayerMsg
end

ActChampionGroupInfo.__init = __init
ActChampionGroupInfo.__delete = __delete
ActChampionGroupInfo.ParseServerData = ParseServerData
ActChampionGroupInfo.GetPlayerMsgByUid = GetPlayerMsgByUid

return ActChampionGroupInfo