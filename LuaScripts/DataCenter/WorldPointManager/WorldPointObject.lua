---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 18/3/2024 下午2:10
---
local base64 = require "Framework.Common.base64"
local WorldPointObject = BaseClass("WorldPointObject")
function WorldPointObject:__init()
    self.pointIndex = 0
    self.isVisible = true
    self.gameObject = nil
    self.instance = nil
    self.oldInstance = {}
    self.troopDestinationInst = nil
    self.troopDestination = nil
    self.touchObject = nil
    self.adjuster = nil
    self.pointType = WorldPointType.Other
    
    self.desertTileInst = nil
    self.desertPlayerType = PlayerType.PlayerNone
    self.hasAssistance = false
    self.desertUuid = 0
    self.isFireDesertEffect = false
    self.isFireDesertMine = false
    self.isFireDesertLevel = false
    self.desertId = 0
    self.isRedDesert = false
    self.isYellowDesert = false
    self.desertMineId = 0
    
end

function WorldPointObject:__delete() 
    self.pointIndex = 0
    self.isVisible = true
    self.gameObject = nil
    self.instance = nil
    self.oldInstance = {}
    self.troopDestinationInst = nil
    self.troopDestination = nil
    self.touchObject = nil
    self.adjuster = nil
    self.pointType = WorldPointType.Other

    self.desertTileInst = nil
    self.desertPlayerType = PlayerType.PlayerNone
    self.hasAssistance = false
    self.desertUuid = 0
    self.isFireDesertEffect = false
    self.isFireDesertMine = false
    self.isFireDesertLevel = false
    self.desertId = 0
    self.isRedDesert = false
    self.isYellowDesert = false
    self.desertMineId = 0
    
end
function WorldPointObject:InitData(pointIndex,pType)
    self.pointIndex = pointIndex
    self.pointType = pType
    self.desertUuid = 0
    self.oldInstance = {}
end
function WorldPointObject:GetPointType()
    return self.pointType
end
function WorldPointObject:CreateGameObject()
    self.UpdateMarchSignal = function(msg) self:UpdateSelfMarch(msg) end
    EventManager:GetInstance():AddListener(EventId.MarchItemUpdateSelf, self.UpdateMarchSignal)
end
function WorldPointObject:UpdateGameObject()
    self:CheckShowDesertTile()
end
function WorldPointObject:UpdateSelfMarch(msg)
    
end
function WorldPointObject:Destroy()
    EventManager:GetInstance():RemoveListener(EventId.MarchItemUpdateSelf, self.UpdateMarchSignal)
    if self.touchObject~=nil then
        self.touchObject.onPointerClick = nil
    end
    self:DestroyTroopDestinationSignal()
    self:DestroyDesertTile()
    self:ClearOldObject()
    if self.instance~=nil then
        self.instance:Destroy()
        self.instance = nil
        self.gameObject = nil
    end
end
function WorldPointObject:ClearOldObject()
    if self.oldInstance~=nil then
        for k,v in pairs(self.oldInstance) do
            if v~=nil then
                v:Destroy()
            end
        end
    end
    self.oldInstance = {}
end
function WorldPointObject:AddOldObject()
    if self.instance ~=nil then
        table.insert(self.oldInstance,self.instance)
    end
end
function WorldPointObject:SetAutoAdjustLod()
    if self.gameObject == nil then
        return
    end
    self.adjuster = self.gameObject:GetOrAddComponent(typeof(CS.AutoAdjustLod))
    if self.adjuster~=nil then
        if self.pointType == WorldPointType.EXPLORE_POINT then
            self.adjuster:SetLodType(LodType.Explore)
        elseif self.pointType == WorldPointType.SAMPLE_POINT then
            self.adjuster:SetLodType(LodType.Sample)
        elseif self.pointType == WorldPointType.GARBAGE then
            self.adjuster:SetLodType(LodType.Garbage)
        elseif self.pointType == WorldPointType.MONSTER_REWARD then
            self.adjuster:SetLodType(LodType.MonsterReward)
        elseif self.pointType == WorldPointType.SAMPLE_POINT_NEW then
            self.adjuster:SetLodType(LodType.Sample)
        elseif self.pointType == WorldPointType.DETECT_EVENT_PVE then
            self.adjuster:SetLodType(LodType.RadarPve)
        elseif self.pointType == WorldPointType.NPC_CITY then
            self.adjuster:SetLodType(LodType.NPCCity)
        elseif self.pointType == WorldPointType.HERO_DISPATCH then
            if self.desertPlayerType == CS.PlayerType.PlayerOther then
                self.adjuster:SetLodType(LodType.DisPatchTask)
            else
                self.adjuster:SetLodType(LodType.DisPatchTaskEnemy)
            end
        elseif self.pointType == WorldPointType.WorldMonster then
            self.adjuster:SetNoOptimizeActivate(false)
            self.adjuster:SetLodType(LodType.Monster)
        end
    end
end
function WorldPointObject:SetClickEvent()
    if self.gameObject~=nil then
        self.touchObject = self.gameObject:GetComponentInChildren(typeof(CS.TouchObjectEventTrigger),true)
        if self.touchObject then
            self.touchObject.onPointerClick = function()
                UIUtil.OnClickWorld(self.pointIndex, ClickWorldType.Collider)
            end
        end
    end
end

function WorldPointObject:ShowTroopDestinationSignal()
    
end
function WorldPointObject:HideTroopDestinationSignal()
    
end
function WorldPointObject:CreateTroopDestinationSignal()
    
end
function WorldPointObject:DestroyTroopDestinationSignal()
    
end
function WorldPointObject:CheckShowDesertTile()
    
end

function WorldPointObject:CreateDesertTile()
    
end
function WorldPointObject:DestroyDesertTile()
    
end
function WorldPointObject:CheckShowTroopDestination()
    
end
function WorldPointObject:GetTransform()
    if self.gameObject~=nil then
        return self.gameObject.transform
    end
    return nil
end
return WorldPointObject