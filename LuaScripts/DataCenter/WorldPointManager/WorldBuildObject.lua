---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 19/3/2024 上午11:25
---
local base = WorldPointObject
local WorldBuildObject = BaseClass("WorldBuildObject",WorldPointObject)
function WorldBuildObject:__init()
    base.__init(self)
    self.bUuid = nil
    self.isDoFoldingUp = false
    self.foldUpTime = 0
    self.startTime = 0
    self.startPos = nil
    self.endPos = nil
    self.bloodNum = 0
    self.spriteRenderer = nil
    self.playerHeadObj = nil
    self.playerHead = nil
    self.needFireOutView = false --建筑着火/大本保护罩子/大本名字/自己的建筑
    self._destroyStartTime = -1
    self._buildFireEndTime = -1
    self._positionId = ""
    self.seasonIcon = nil
    self.cityLabels = {}
    self.skinId = 0
    self.titleNameSkinId = 0
end

function WorldBuildObject:__delete()
    self.bUuid = nil
    self.isDoFoldingUp = false
    self.foldUpTime = 0
    self.startTime = 0
    self.startPos = nil
    self.endPos = nil
    self.bloodNum = 0
    self.spriteRenderer = nil
    self.playerHeadObj = nil
    self.playerHead = nil
    self.needFireOutView = false --建筑着火/大本保护罩子/大本名字/自己的建筑
    self._destroyStartTime = -1
    self._buildFireEndTime = -1
    self._positionId = ""
    self.seasonIcon = nil
    self.cityLabels = {}
    self.skinId = 0
    self.titleNameSkinId = 0
    base.__delete(self)
end

function WorldBuildObject:CreateGameObject()
    base.CreateGameObject(self)
    local info = DataCenter.WorldPointManager:GetPointInfo(self.pointIndex)
    if info~=nil then
        local bi = info.buildInfo
        if bi~=nil then
            self.skinId = 0
            self.titleNameSkinId = 0
            local model = ""
            self.bUuid = bi.uuid
            if bi.skins~=nil then
                local curTime = UITimeManager:GetInstance():GetServerTime()
                for k,v in pairs(bi.skins) do
                    if v.type == SkinType.BASE_SKIN and v.skinET>curTime then
                        self.skinId = v.skinId
                    elseif v.type == SkinType.TITLE_NAME and v.skinET>curTime then
                        self.titleNameSkinId = v.skinId
                    end
                end
            end
            if self.skinId>0 then
                local template = DataCenter.DecorationTemplateManager:GetTemplate(self.skinId)
                if template ~= nil and  template:IsDefault()==false then
                    model = template.model_world
                end
            end
            if model == nil or model == "" then
                local buildTemplate = DataCenter.BuildTemplateManager:GetBuildingLevelTemplate(bi.buildId, bi.level)
                if buildTemplate ~= nil then
                    model = buildTemplate.model_world
                end
            end
            if model~=nil and model~="" then
                self:AddOldObject()
                self.instance = CS.GameEntry.Resource:InstantiateAsync("Assets/Main/Prefabs/Building/"..model..".prefab")
                self.instance:completed('+',function()
                    self:ClearOldObject()
                    self.gameObject = self.instance.gameObject
                    if self.gameObject~=nil then
                        self.gameObject.transform:SetParent(CS.SceneManager.World.DynamicObjNode)
                        self.gameObject.transform.position = SceneUtils.TileIndexToWorld(self.pointIndex,ForceChangeScene.World)
                        self.cityLabels = self.gameObject:GetComponentsInChildren(typeof(CS.UIWorldLabel),true)
                        self:UpdateCityLabel(info)
                        self.gameObject:SetActive(self.isVisible)
                        if self.isVisible then
                            if bi.ownerUid == LuaEntry.Player.uid then
                                EventManager:GetInstance():Broadcast(EventId.WORLD_BUILD_IN_VIEW,self.bUuid)
                            end
                            self.needFireOutView = true
                        end
                        self._destroyStartTime = bi.destroyStartTime
                        self._buildFireEndTime = bi.fireEndTime
                        if bi.buildId == BuildingTypes.FUN_BUILD_MAIN then
                            local curTime = UITimeManager:GetInstance():GetServerTime()
                            if curTime<self._buildFireEndTime then
                                EventManager:GetInstance():Broadcast(EventId.ShowIsOnFire,self.bUuid)
                            end
                            self.needFireOutView = true
                            if bi.positionId~=nil and bi.positionId~="" then
                                self._positionId = bi.positionId
                                EventManager:GetInstance():Broadcast(EventId.CheckShowGovPos,self.bUuid)
                            end
                            EventManager:GetInstance():Broadcast(EventId.CheckDomeOpen,self.bUuid)
                            self.spriteRenderer = self.gameObject.transform:Find("Icon/Sprite/Icon"):GetComponentInChildren(typeof(CS.UnityEngine.SpriteRenderer), true)
                            self.spriteRendererH = self.gameObject.transform:Find("Icon/Sprite/IconH"):GetComponentInChildren(typeof(CS.UnityEngine.SpriteRenderer), true)
                            self.playerHeadObj = self.gameObject.transform:Find("Icon/Sprite/head")
                            if self.playerHeadObj~=nil then
                                self.playerHead = self.playerHeadObj.gameObject.transform:Find("headIcon"):GetComponentInChildren(typeof(CS.UIPlayerHead), true)
                            end
                            self:SetIconSprite(info)
                            self:SetPlayerHead(info)
                        else
                            self.seasonIcon = self.gameObject.transform:Find("iconGo/icon"):GetComponentInChildren(typeof(CS.UnityEngine.SpriteRenderer),true)
                            if self.seasonIcon~=nil then
                                self:SetBuildIconColor(info)
                            end
                        end
                        self:SetAutoAdjustLod(info)
                        self:SetClickEvent()
                    end
                    self:CheckShowTroopDestination()
                end)
            end
        end
    end
end

function WorldBuildObject:Destroy()
    if self.needFireOutView == true then
        EventManager:GetInstance():Broadcast(EventId.WORLD_BUILD_OUT_VIEW,self.bUuid)
    end
    base.Destroy(self)
end

function WorldBuildObject:SetIconSprite(info)
    if info == nil then
        return
    end
    local bi = info.buildInfo
    if bi~=nil and self.spriteRenderer~=nil then
        local pType = WorldBuildUtil.GetPlayerType(info)
        if pType == PlayerType.PlayerSelf then
            self.spriteRenderer:LoadSprite("Assets/Main/Sprites/LodIcon/huojian3.png")
            self.spriteRenderer.sortingOrder = MainBuildOrder.Self

            self.spriteRendererH:LoadSprite("Assets/Main/Sprites/LodIcon/zyf_daditu_dingwei_lv.png")
            self.spriteRendererH.sortingOrder = MainBuildOrder.Self
        elseif pType == PlayerType.PlayerAlliance then
            self.spriteRenderer:LoadSprite("Assets/Main/Sprites/LodIcon/huojian4.png")
            self.spriteRenderer.sortingOrder = MainBuildOrder.Ally

            self.spriteRendererH:LoadSprite("Assets/Main/Sprites/LodIcon/zyf_daditu_dingwei_lan.png")
            self.spriteRendererH.sortingOrder = MainBuildOrder.Ally
        elseif pType == PlayerType.PlayerAllianceLeader then
            self.spriteRenderer:LoadSprite("Assets/Main/Sprites/LodIcon/huojian5.png")
            self.spriteRenderer.sortingOrder = MainBuildOrder.Leader

            self.spriteRendererH:LoadSprite("Assets/Main/Sprites/LodIcon/zyf_daditu_dingwei_zi.png")
            self.spriteRendererH.sortingOrder = MainBuildOrder.Leader
        elseif pType == PlayerType.PlayerOther then
            if LuaEntry.Player.serverType == ServerType.EDEN_SERVER then
                if DataCenter.RobotWarsManager:GetSelfCamp()>0 and DataCenter.GloryManager:IsSameCampByAllianceId(bi.allianceId) then
                    self.spriteRenderer:LoadSprite("Assets/Main/Sprites/LodIcon/huojian7.png")
                    self.spriteRenderer.sortingOrder = MainBuildOrder.Other

                    self.spriteRendererH:LoadSprite("Assets/Main/Sprites/LodIcon/zyf_daditu_dingwei_hong.png")
                    self.spriteRendererH.sortingOrder = MainBuildOrder.Other
                else
                    self.spriteRenderer:LoadSprite("Assets/Main/Sprites/LodIcon/huojian6.png")
                    self.spriteRenderer.sortingOrder = MainBuildOrder.Enemy

                    self.spriteRendererH:LoadSprite("Assets/Main/Sprites/LodIcon/zyf_daditu_dingwei_hong.png")
                    self.spriteRendererH.sortingOrder = MainBuildOrder.Enemy
                end
            elseif LuaEntry.Player.serverType == ServerType.DRAGON_BATTLE_FIGHT_SERVER or LuaEntry.Player.serverType == ServerType.CROSS_THRONE then
                self.spriteRenderer:LoadSprite("Assets/Main/Sprites/LodIcon/huojian6.png")
                self.spriteRenderer.sortingOrder = MainBuildOrder.Enemy

                self.spriteRendererH:LoadSprite("Assets/Main/Sprites/LodIcon/zyf_daditu_dingwei_hong.png")
                self.spriteRendererH.sortingOrder = MainBuildOrder.Enemy
            else
                if bi.allianceId ~= nil and bi.allianceId ~= "" then
                    local fightAllianceId = DataCenter.AllianceCompeteDataManager:GetFightAllianceId()
                    if fightAllianceId ~= nil and fightAllianceId ~= "" and fightAllianceId == bi.allianceId then
                        self.spriteRenderer:LoadSprite("Assets/Main/Sprites/LodIcon/huojian6.png")
                        self.spriteRenderer.sortingOrder = MainBuildOrder.Enemy

                        self.spriteRendererH:LoadSprite("Assets/Main/Sprites/LodIcon/zyf_daditu_dingwei_hong.png")
                        self.spriteRendererH.sortingOrder = MainBuildOrder.Enemy
                    else
                        if CrossServerUtil:GetIsCrossServer() or
                                (DataCenter.WorldNewsDataManager:GetIsAttackerByUid(bi.ownerUid) == true) or
                                (DataCenter.GloryManager:GetIsFightServer(info.srcServerId) == true) then
                            self.spriteRenderer:LoadSprite("Assets/Main/Sprites/LodIcon/huojian6.png")
                            self.spriteRenderer.sortingOrder = MainBuildOrder.Enemy

                            self.spriteRendererH:LoadSprite("Assets/Main/Sprites/LodIcon/zyf_daditu_dingwei_hong.png")
                            self.spriteRendererH.sortingOrder = MainBuildOrder.Enemy
                        else
                            self.spriteRenderer:LoadSprite("Assets/Main/Sprites/LodIcon/huojian1.png")
                            self.spriteRenderer.sortingOrder = MainBuildOrder.Other

                            self.spriteRendererH:LoadSprite("Assets/Main/Sprites/LodIcon/zyf_daditu_dingwei_bai.png")
                            self.spriteRendererH.sortingOrder = MainBuildOrder.Other
                        end
                    end
                else
                    if CrossServerUtil:GetIsCrossServer() or
                            (DataCenter.WorldNewsDataManager:GetIsAttackerByUid(bi.ownerUid) == true) or
                            (DataCenter.GloryManager:GetIsFightServer(info.srcServerId) == true) then
                        self.spriteRenderer:LoadSprite("Assets/Main/Sprites/LodIcon/huojian6.png")
                        self.spriteRenderer.sortingOrder = MainBuildOrder.Enemy

                        self.spriteRendererH:LoadSprite("Assets/Main/Sprites/LodIcon/zyf_daditu_dingwei_hong.png")
                        self.spriteRendererH.sortingOrder = MainBuildOrder.Enemy
                    else
                        self.spriteRenderer:LoadSprite("Assets/Main/Sprites/LodIcon/huojian1.png")
                        self.spriteRenderer.sortingOrder = MainBuildOrder.Other

                        self.spriteRendererH:LoadSprite("Assets/Main/Sprites/LodIcon/zyf_daditu_dingwei_bai.png")
                        self.spriteRendererH.sortingOrder = MainBuildOrder.Other
                    end
                end
            end
            
        end
    end
end

function WorldBuildObject:SetPlayerHead(info)
    if info == nil or self.playerHeadObj == nil then
        return
    end
    local bi = info.buildInfo
    if bi~=nil and bi.ownerUid == LuaEntry.Player.uid then
        if self.playerHead~=nil then
            self.playerHeadObj.gameObject:SetActive(true)
            --self.playerHead.enable = true
            self.playerHead:SetData(LuaEntry.Player.uid,LuaEntry.Player:GetPic(),LuaEntry.Player.picVer)
            return
        end
    end
    self.playerHeadObj.gameObject:SetActive(false)
end

function WorldBuildObject:SetBuildIconColor(info)
    if info == nil then
        return
    end
    local bi = info.buildInfo
    if bi~=nil and self.seasonIcon~=nil then
        local pType = WorldBuildUtil.GetPlayerType(info)
        if pType == PlayerType.PlayerSelf then
            self.seasonIcon.color =  Color.New(0.68, 0.98, 0.1, 1)
        elseif pType == PlayerType.PlayerAlliance then
            self.seasonIcon.color =  Color.New(0.06, 0.54, 0.98,1)
        elseif pType == PlayerType.PlayerAllianceLeader then
            self.seasonIcon.color =  Color.New(0.06, 0.54, 0.98,1)
        elseif pType == PlayerType.PlayerOther then
            if LuaEntry.Player.serverType == ServerType.EDEN_SERVER then
                if DataCenter.RobotWarsManager:GetSelfCamp()>0 and DataCenter.GloryManager:IsSameCampByAllianceId(bi.allianceId) then
                    self.seasonIcon.color =  Color.New(0.996, 0.913, 0.007, 1)
                else
                    self.seasonIcon.color =  Color.New(0.95,0.24,0.24,1)
                end
            elseif LuaEntry.Player.serverType == ServerType.DRAGON_BATTLE_FIGHT_SERVER or LuaEntry.Player.serverType == ServerType.CROSS_THRONE then
                self.seasonIcon.color =  Color.New(0.95,0.24,0.24,1)
            else
                if bi.allianceId ~= nil and bi.allianceId ~= "" then
                    local fightAllianceId = DataCenter.AllianceCompeteDataManager:GetFightAllianceId()
                    if fightAllianceId ~= nil and fightAllianceId ~= "" and fightAllianceId == bi.allianceId then
                        self.seasonIcon.color =  Color.New(0.95,0.24,0.24,1)
                    else
                        if CrossServerUtil:GetIsCrossServer() or
                                (DataCenter.WorldNewsDataManager:GetIsAttackerByUid(bi.ownerUid) == true) or
                                (DataCenter.GloryManager:GetIsFightServer(info.srcServerId) == true) then
                            self.seasonIcon.color =  Color.New(0.95,0.24,0.24,1)
                        else
                            self.seasonIcon.color =  Color.New(0.95,0.24,0.24,1)
                        end

                    end
                else
                    if CrossServerUtil:GetIsCrossServer() or
                            (DataCenter.WorldNewsDataManager:GetIsAttackerByUid(bi.ownerUid) == true) or
                            (DataCenter.GloryManager:GetIsFightServer(info.srcServerId) == true) then
                        self.seasonIcon.color =  Color.New(0.95,0.24,0.24,1)
                    else
                        self.seasonIcon.color =  Color.New(0.95,0.24,0.24,1)
                    end
                end
            end

        end
    end
end

function WorldBuildObject:SetAutoAdjustLod(info)
    base.SetAutoAdjustLod(self)
    if info == nil then
        return
    end
    local bi = info.buildInfo
    local lodType = LodType.None
    if bi~=nil and self.adjuster~=nil then
        local pType = WorldBuildUtil.GetPlayerType(info)
        if bi.buildId == BuildingTypes.FUN_BUILD_MAIN then
            if pType == PlayerType.PlayerSelf then
                lodType = LodType.MainSelf
            elseif pType == PlayerType.PlayerAlliance then
                lodType = LodType.MainAlly
            elseif pType == PlayerType.PlayerAllianceLeader then
                lodType = LodType.MainAlly
            else
                if LuaEntry.Player.serverType == ServerType.EDEN_SERVER then
                    if DataCenter.RobotWarsManager:GetSelfCamp()>0 and DataCenter.GloryManager:IsSameCampByAllianceId(bi.allianceId) then
                        lodType = LodType.MainOther
                    else
                        lodType = LodType.MainEnemy
                    end
                elseif LuaEntry.Player.serverType == ServerType.DRAGON_BATTLE_FIGHT_SERVER or LuaEntry.Player.serverType == ServerType.CROSS_THRONE then
                    lodType = LodType.MainEnemy
                else
                    if bi.allianceId ~= nil and bi.allianceId ~= "" then
                        local fightAllianceId = DataCenter.AllianceCompeteDataManager:GetFightAllianceId()
                        if fightAllianceId ~= nil and fightAllianceId ~= "" and fightAllianceId == bi.allianceId then
                            lodType = LodType.MainEnemy
                        else
                            if CrossServerUtil:GetIsCrossServer() or
                                    (DataCenter.WorldNewsDataManager:GetIsAttackerByUid(bi.ownerUid) == true) or
                                    (DataCenter.GloryManager:GetIsFightServer(info.srcServerId) == true) then
                                lodType = LodType.MainEnemy
                            else
                                lodType = LodType.MainOther
                            end

                        end
                    else
                        if CrossServerUtil:GetIsCrossServer() or
                                (DataCenter.WorldNewsDataManager:GetIsAttackerByUid(bi.ownerUid) == true) or
                                (DataCenter.GloryManager:GetIsFightServer(info.srcServerId) == true) then
                            lodType = LodType.MainEnemy
                        else
                            lodType = LodType.MainOther
                        end
                    end
                end

            end
        elseif bi.buildId == BuildingTypes.WORM_HOLE_CROSS or bi.buildId == BuildingTypes.APS_BUILD_WORMHOLE_SUB or BuildingUtils.IsInEdenSubwayGroup(bi.buildId)==true then
            if pType == PlayerType.PlayerSelf then
                lodType = LodType.WormHoleSelf
            elseif pType == PlayerType.PlayerAlliance then
                lodType = LodType.WormHoleAlly
            elseif pType == PlayerType.PlayerAllianceLeader then
                lodType = LodType.WormHoleAlly
            else
                if LuaEntry.Player.serverType == ServerType.EDEN_SERVER then
                    if DataCenter.RobotWarsManager:GetSelfCamp()>0 and DataCenter.GloryManager:IsSameCampByAllianceId(bi.allianceId) then
                        lodType = LodType.WormHoleOther
                    else
                        lodType = LodType.WormHoleEnemy
                    end
                elseif LuaEntry.Player.serverType == ServerType.DRAGON_BATTLE_FIGHT_SERVER or LuaEntry.Player.serverType == ServerType.CROSS_THRONE then
                    lodType = LodType.WormHoleEnemy
                else
                    if bi.allianceId ~= nil and bi.allianceId ~= "" then
                        local fightAllianceId = DataCenter.AllianceCompeteDataManager:GetFightAllianceId()
                        if fightAllianceId ~= nil and fightAllianceId ~= "" and fightAllianceId == bi.allianceId then
                            lodType = LodType.WormHoleEnemy
                        else
                            if CrossServerUtil:GetIsCrossServer() or
                                    (DataCenter.WorldNewsDataManager:GetIsAttackerByUid(bi.ownerUid) == true) or
                                    (DataCenter.GloryManager:GetIsFightServer(info.srcServerId) == true) then
                                lodType = LodType.WormHoleEnemy
                            else
                                lodType = LodType.WormHoleOther
                            end

                        end
                    else
                        if CrossServerUtil:GetIsCrossServer() or
                                (DataCenter.WorldNewsDataManager:GetIsAttackerByUid(bi.ownerUid) == true) or
                                (DataCenter.GloryManager:GetIsFightServer(info.srcServerId) == true) then
                            lodType = LodType.WormHoleEnemy
                        else
                            lodType = LodType.WormHoleOther
                        end
                    end
                end

            end
        end
        self.adjuster:SetLodType(lodType)
    end
    
end

function WorldBuildObject:UpdateCityLabel(info)
    if self.cityLabels == nil or info == nil then
        return
    end
    local bi = info.buildInfo
    if bi ~= nil then
        local pType = WorldBuildUtil.GetPlayerType(info)
        local nameStr = ""
        local isCrossServer = false
        if info.srcServerId ~= LuaEntry.Player:GetSelfServerId() then
            nameStr = nameStr .. "#" .. info.srcServerId .. " "
            isCrossServer = true
        end
        if bi.alAbbr ~= nil and bi.alAbbr ~= "" then
            nameStr = nameStr .."["..bi.alAbbr.."]"
        end
        if bi.name ~= nil and bi.name ~= "" then
            nameStr = nameStr ..bi.name
        end
        local color = nil
        if pType == PlayerType.PlayerSelf then
            color = CityLabelTextColor_Green
        elseif pType == PlayerType.PlayerAlliance then
            color = CityLabelTextColor_Blue
        elseif pType == PlayerType.PlayerAllianceLeader then
            if bi.buildId == BuildingTypes.FUN_BUILD_MAIN then
                color = CityLabelTextColor_Purple
            else
                color = CityLabelTextColor_Blue
            end
        else
            if LuaEntry.Player.serverType == ServerType.EDEN_SERVER then
                if DataCenter.RobotWarsManager:GetSelfCamp()>0 and DataCenter.GloryManager:IsSameCampByAllianceId(bi.allianceId) then
                    color = CityLabelTextColor_Yellow
                else
                    color = CityLabelTextColor_Red
                end
            elseif LuaEntry.Player.serverType == ServerType.DRAGON_BATTLE_FIGHT_SERVER or LuaEntry.Player.serverType == ServerType.CROSS_THRONE then
                color = CityLabelTextColor_Red
            else
                if bi.allianceId ~= nil and bi.allianceId ~= "" then
                    local fightAllianceId = DataCenter.AllianceCompeteDataManager:GetFightAllianceId()
                    if fightAllianceId ~= nil and fightAllianceId ~= "" and fightAllianceId == bi.allianceId then
                        color = CityLabelTextColor_Red
                    else
                        if CrossServerUtil:GetIsCrossServer() or
                                (DataCenter.WorldNewsDataManager:GetIsAttackerByUid(bi.ownerUid) == true) or
                                (DataCenter.GloryManager:GetIsFightServer(info.srcServerId) == true) then
                            color = CityLabelTextColor_Red
                        else
                            color = CityLabelTextColor_White
                        end

                    end
                else
                    if CrossServerUtil:GetIsCrossServer() or
                            (DataCenter.WorldNewsDataManager:GetIsAttackerByUid(bi.ownerUid) == true) or
                            (DataCenter.GloryManager:GetIsFightServer(info.srcServerId) == true) then
                        color = CityLabelTextColor_Red
                    else
                        color = CityLabelTextColor_White
                    end
                end
            end
        end
        local camp = 0
        if bi.allianceId ~= nil and bi.allianceId ~= "" then
            camp = DataCenter.GloryManager:GetCampByAllianceId(bi.allianceId)
        end
        if bi.buildId == BuildingTypes.FUN_BUILD_MAIN then
            for i = 0, self.cityLabels.Length-1 do
                local item = self.cityLabels[i]
                if item~=nil and item.SetBuildData~=nil then
                    item:SetBuildData(nameStr,color,bi.level,camp,self.titleNameSkinId)
                end
            end
        else
            for i = 0, self.cityLabels.Length-1 do
                local item = self.cityLabels[i]
                if item~=nil then
                    item:SetLevel(bi.level,color)
                end
            end
        end
    end
end
return WorldBuildObject