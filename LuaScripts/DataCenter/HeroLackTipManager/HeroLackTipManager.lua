---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2022/11/15 15:09
---

local HeroLackTipManager = BaseClass("HeroLackTipManager")
local HeroLackTipsItemRecruit = require "DataCenter.HeroLackTipManager.HeroLackTipsItemRecruit"
local HeroLackTipsItemDebrisExchange = require "DataCenter.HeroLackTipManager.HeroLackTipsItemDebrisExchange"
local HeroLackTipsItemFirstCharge = require "DataCenter.HeroLackTipManager.HeroLackTipsItemFirstCharge"
local HeroLackTipsItemPromotionGiftBag = require "DataCenter.HeroLackTipManager.HeroLackTipsItemPromotionGiftBag"
local HeroLackTipsItemRechargeGiftBag = require "DataCenter.HeroLackTipManager.HeroLackTipsItemRechargeGiftBag"
local HeroLackTipsItemActivity = require "DataCenter.HeroLackTipManager.HeroLackTipsItemActivity"
local HeroLackTipsItemDetectEvent = require "DataCenter.HeroLackTipManager.HeroLackTipsItemDetectEvent"
local HeroLackTipsItemVip = require "DataCenter.HeroLackTipManager.HeroLackTipsItemVip"

local typeToTypeItem = {}
typeToTypeItem[HeroLackTipsType.HeroLackTipsType_Recruit] = HeroLackTipsItemRecruit
typeToTypeItem[HeroLackTipsType.HeroLackTipsType_Debris_Exchange] = HeroLackTipsItemDebrisExchange
typeToTypeItem[HeroLackTipsType.HeroLackTipsType_First_Charge] = HeroLackTipsItemFirstCharge
typeToTypeItem[HeroLackTipsType.HeroLackTipsType_Promotion_Gift_Bag] = HeroLackTipsItemPromotionGiftBag
typeToTypeItem[HeroLackTipsType.HeroLackTipsType_Recharge_Gift_Bag] = HeroLackTipsItemRechargeGiftBag
typeToTypeItem[HeroLackTipsType.HeroLackTipsType_Activity] = HeroLackTipsItemActivity
typeToTypeItem[HeroLackTipsType.HeroLackTipsType_Detect_Event] = HeroLackTipsItemDetectEvent
typeToTypeItem[HeroLackTipsType.HeroLackTipsType_Vip] = HeroLackTipsItemVip

local function __init(self)
    self.allDic = nil
end

local function __delete(self)
    self.allDic = nil
end

local function GotoGetHero(self, heroId, needDebrisNum, onGo)
    local result = self:GetHeroLackTips(heroId, needDebrisNum)
    if result == nil or table.count(result) == 0 then
        UIUtil.ShowTipsId(143595)
        return
    end
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIHeroLackTips, {anim = true}, result, heroId, needDebrisNum, onGo)
end

local function GetHeroLackTips(self, heroId, needDebrisNum)
    local allTemplates = DataCenter.HeroLackTipTemplateManager:GetAllTemplate()
    if allTemplates == nil then
        return nil
    end
    local result = {}
    for k, v in pairs(allTemplates) do
        if v.heroId ~= heroId then
            goto continue
        end

        if not v:IsUnlock() then
            goto continue
        end
        
        local condition = typeToTypeItem[v.tips]
        if condition == nil then
            goto continue
        end
        
        local item = condition.New(v.id)
        if item and item:CheckIsOk(needDebrisNum) then
            table.insert(result, item)
        end
        
        ::continue::
    end
    
    return result
end

HeroLackTipManager.__init = __init
HeroLackTipManager.__delete = __delete
HeroLackTipManager.GotoGetHero = GotoGetHero
HeroLackTipManager.GetHeroLackTips = GetHeroLackTips

return HeroLackTipManager