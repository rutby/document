---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2022/11/15 15:27
---
local HeroLackTipsItemBase = require "DataCenter.HeroLackTipManager.HeroLackTipsItemBase"
local HeroLackTipsItemRechargeGiftBag = BaseClass("HeroLackTipsItemRechargeGiftBag", HeroLackTipsItemBase)

local function CheckIsOk(self)
    local template = DataCenter.HeroLackTipTemplateManager:GetTemplate(self.configId)
    local info = self:isGiftShow(template.para1)
    return info ~= nil
end

local function TodoAction(self)
    local template = DataCenter.HeroLackTipTemplateManager:GetTemplate(self.configId)
    local info = self:isGiftShow(template.para1)
    UIManager.Instance:DestroyWindow(UIWindowNames.UIHeroList)
    UIManager.Instance:DestroyWindow(UIWindowNames.UIHeroInfo)
    UIManager.Instance:DestroyWindow(UIWindowNames.UIHeroAdvanceSuccess)

    UIManager:GetInstance():OpenWindow(UIWindowNames.UIGiftPackage, {anim = true}, {welfareTagType = info:getType()})
end

local function isGiftShow(_, giftId)
    local tagInfos = WelfareController.getShowTagInfos()
    for _, v in ipairs(tagInfos) do
        local id = v:getID()
        if id == toInt(giftId) and v:isShow() then
            return v
        end
    end
    return nil
end


HeroLackTipsItemRechargeGiftBag.CheckIsOk = CheckIsOk
HeroLackTipsItemRechargeGiftBag.TodoAction = TodoAction
HeroLackTipsItemRechargeGiftBag.isGiftShow = isGiftShow

return HeroLackTipsItemRechargeGiftBag