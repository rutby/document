---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2023/5/25 10:11
---
local DragonBuildTemplateManager = BaseClass("DragonBuildTemplateManager");
local DragonBuildTemplate = require "DataCenter.DragonBuildData.DragonBuildTemplate"

local function __init(self)
    self.dragonBuildTemplateDic = {}--id:template
end

local function __delete(self)
    self.dragonBuildTemplateDic = {}
end

local function InitTemplates(self)
    self.dragonBuildTemplateDic = {}
    if LocalController:instance():getTable(TableName.DragonBuilding) ~= nil then
        LocalController:instance():visitTable(TableName.DragonBuilding, function(id, line)
            local template = DragonBuildTemplate.New()
            template:InitData(line)
            if template.id~=nil then
                self.dragonBuildTemplateDic[template.id] = template
            end
        end)
    end
    
end


local function GetTemplate(self, templateId)
    if self.dragonBuildTemplateDic[templateId]== nil then
        local oneTemplate = LocalController:instance():getLine(TableName.DragonBuilding,templateId)
        if oneTemplate~=nil then
            local template = DragonBuildTemplate.New()
            template:InitData(oneTemplate)
            if template.id~=nil then
                self.dragonBuildTemplateDic[template.id] = template
            end
        end
    end
    return self.dragonBuildTemplateDic[templateId]
end

DragonBuildTemplateManager.__init = __init
DragonBuildTemplateManager.__delete = __delete
DragonBuildTemplateManager.InitTemplates = InitTemplates
DragonBuildTemplateManager.GetTemplate = GetTemplate
return DragonBuildTemplateManager