---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2021/12/1 12:49
---

local AllianceCityTemplateManager = BaseClass("AllianceCityTemplateManager");
local AllianceCityTemplate = require "DataCenter.AllianceCity.AllianceCityTemplate"

local function __init(self)
    self.templateDict = nil
    self.alliancePass = {}
    self.strongHold = {}
    self:InitTemplateDict()
end

local function __delete(self)
    self.templateDict = nil
end

local function Startup(self)
    
end

local function InitTemplateDict(self)
    self.templateDict = {}
    LocalController:instance():visitTable(TableName.WorldCity, function(id, lineData)
        local template = AllianceCityTemplate.New()
        template:InitData(lineData)
        self.templateDict[tostring(id)] = template
        if template.eden_city_type == WorldCityType.AlliancePass then
            self.alliancePass[tostring(id)] = template
        end
        if template.eden_city_type == WorldCityType.StrongHold then
            self.strongHold[tostring(id)] = template
        end
    end)
end

local function GetTemplate(self, id)
    return self.templateDict[tostring(id)]
end

local function GetAllTemplate(self)
    return self.templateDict
end

local function GetTemplateMaxLv(self)
    local lv = 1
    local template = self:GetAllTemplate()
    for i, v in pairs(template) do
        if v.level > lv then
            lv = v.level
        end
    end
    return lv
end

function AllianceCityTemplateManager:GetNearCityPosByLevel(level)
    if CS.SceneManager.World ~= nil then
        local minDis = IntMaxValue
        local myPos = SceneUtils.WorldToTile(CS.SceneManager.World.CurTarget, ForceChangeScene.World)
        local result = myPos
        local template = self:GetAllTemplate()
        for i, v in pairs(template) do
            if v.eden_city_type == WorldCityType.AllianceCity 
                    and v.server_type == ServerType.NORMAL and v.level == level then
                local dis = SceneUtils.TileDistance(v.center, myPos)
                if dis < minDis then
                    minDis = dis
                    result = v.center
                end
            end
        end
        return SceneUtils.TileToWorld(result, ForceChangeScene.World)
    end
end

function AllianceCityTemplateManager:GetCityActScore()
    local template = self:GetAllTemplate()
    local list = {}
    local temp = {}
    for i, v in pairs(template) do
        if not temp[v.level] then
            temp[v.level] = true
            local param = {}
            param.lv = v.level
            param.actScore = v.actScore
            table.insert(list,param)
        end
    end
    table.sort(list,function(a,b)
        if a.lv < b.lv then
            return true
        end
        return false
    end)
    return list
end


function AllianceCityTemplateManager:GetAlliancePass()
    return self.alliancePass
end

function AllianceCityTemplateManager:GetStrongHold()
    return self.strongHold
end
AllianceCityTemplateManager.__init = __init
AllianceCityTemplateManager.__delete = __delete
AllianceCityTemplateManager.Startup = Startup
AllianceCityTemplateManager.InitTemplateDict = InitTemplateDict
AllianceCityTemplateManager.GetTemplate = GetTemplate
AllianceCityTemplateManager.GetAllTemplate = GetAllTemplate
AllianceCityTemplateManager.GetTemplateMaxLv = GetTemplateMaxLv

return AllianceCityTemplateManager
