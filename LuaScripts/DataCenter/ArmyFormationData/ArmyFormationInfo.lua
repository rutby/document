---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by guqu.
--- DateTime: 2020/8/17 18:03
---
---编队信息
local ArmyFormationInfo = BaseClass("ArmyFormationInfo")

local function __init(self)
    self.uuid =0
    self.ownerUid ="" --拥有者Uid
    self.index =0 --索引
    self.state = 0 -- ArmyFormationState 0空闲 1出征
    self.armsType = 0 -- MarchArmsType 0普通出征 1跨服出征
    self.maxNum =0 --出征最大兵力
    self.name ="" -- 编队名称
    self.soldiers ={} --当前兵 key armyId，value count
    self.heroes = {} --当前英雄 key heroUuid，value index
    self.heroUuids = {} -- List<heroUuid>
    self.localHeroes = {} --当前本地英雄 key heroUuid，value index
    self.localHeroUuids = {} -- List<heroUuid>
end

local function __delete(self)
    self.uuid = nil
    self.ownerUid =nil
    self.index =nil
    self.state = nil
    self.armsType = nil
    self.maxNum =nil
    self.name =nil
    self.soldiers =nil
    self.heroes = nil
    self.heroUuids = nil
    self.localHeroes = nil
    self.localHeroUuids = nil
end

local function ParseData(self,message)
    if message ==nil then
        return
    end
    if message["uuid"]~=nil then
        self.uuid = message["uuid"]
    end
    if message["ownerUid"]~=nil then
        self.ownerUid = message["ownerUid"]
    end
    if message["index"]~=nil then
        self.index = message["index"]
    end
    if message["state"]~=nil then
        self.state = message["state"]
    end
    if message["armsType"]~=nil then
        self.armsType = message["armsType"]
    end
    if message["maxNum"]~=nil then
        self.maxNum = message["maxNum"]
    end
    if message["name"]~=nil then
        self:SetName(message["name"])
    end
    if message["soldiers"]~=nil then
        self.soldiers = {}
        table.walk(message["soldiers"],function (k,v)
            local armyId = v["armyId"]
            local count  =v["count"]
            self.soldiers[armyId] =count
        end)
    end

    if message["heroes"]~=nil then
        self.heroes ={}
        table.walk(message["heroes"],function (k,v)
            local heroUuid = v["heroUuid"]
            local index  =v["index"]
            self.heroes[heroUuid] = index
            self.heroUuids[index] = heroUuid
            self.localHeroes[heroUuid] = index
            self.localHeroUuids[index] = heroUuid
        end)
    end
end

local function SetName(self,name)
     if name~=nil and name~="" then
        self.name = name
    end
end

local function GetTotalSoliderNum(self)
    local count =0
    table.walk(self.soldiers,function (k,v)
        count = count+v
    end)
    return count
end

local function GetCurHeroes(self)
    local list = {}
    if self.heroes~=nil then
        for k,v in pairs(self.heroes) do
            local heroData = DataCenter.HeroDataManager:GetHeroByUuid(k)
            if heroData~=nil then
                list[k] = v
            end
        end
        self.heroes = list
    end
    return self.heroes
end

local function GetHeroUuids(self)
    local list = {}
    for _, heroUuid in ipairs(self.heroUuids) do
        local heroData = DataCenter.HeroDataManager:GetHeroByUuid(heroUuid)
        if heroData then
            table.insert(list, heroUuid)
        end
    end
    return list
end

local function HasHero(self, heroUuid)
    return table.containsKey(self:GetCurHeroes(), heroUuid)
end

-- LW PVE

local function GetAllHeroes(self)
    return DeepCopy(self.heroUuids)
end

local function GetLocalAllHeroes(self)
    return DeepCopy(self.localHeroUuids)
end

local function HasLocalHero(self,heroUuid)
    return table.hasvalue(self.localHeroUuids, heroUuid)
end

local function GetEmptySlotIndex(self)
    for i = 1, 5 do
        if self.localHeroUuids[i] == nil then
            return i
        end
    end
    return nil
end

local function SetLocalHero(self, index, heroUuid)
    if not index then
        return
    end
    if self.localHeroUuids[index] ~= nil then
        self.localHeroes[self.localHeroUuids[index]] = nil
    end
    if heroUuid ~= nil then
        self.localHeroes[heroUuid] = index
    end
    self.localHeroUuids[index] = heroUuid
end

local function GetLocalHeroIndex(self, heroUuid)
    for k, v in pairs(self.localHeroUuids) do
        if v == heroUuid then
            return k
        end
    end
    return nil
end

local function GetLocalHeroAtSlotIndex(self, index)
    return self.localHeroUuids[index]
end

-- LW PVE end

ArmyFormationInfo.__init = __init
ArmyFormationInfo.__delete = __delete
ArmyFormationInfo.ParseData = ParseData
ArmyFormationInfo.SetName = SetName
ArmyFormationInfo.GetTotalSoliderNum =GetTotalSoliderNum
ArmyFormationInfo.GetCurHeroes = GetCurHeroes
ArmyFormationInfo.GetHeroUuids = GetHeroUuids
ArmyFormationInfo.HasHero = HasHero

ArmyFormationInfo.GetAllHeroes = GetAllHeroes
ArmyFormationInfo.GetLocalAllHeroes = GetLocalAllHeroes
ArmyFormationInfo.HasLocalHero = HasLocalHero
ArmyFormationInfo.GetEmptySlotIndex = GetEmptySlotIndex
ArmyFormationInfo.SetLocalHero = SetLocalHero
ArmyFormationInfo.GetLocalHeroIndex = GetLocalHeroIndex
ArmyFormationInfo.GetLocalHeroAtSlotIndex = GetLocalHeroAtSlotIndex

return ArmyFormationInfo