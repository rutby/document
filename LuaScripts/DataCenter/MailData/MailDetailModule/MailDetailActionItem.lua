---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by mac.
--- DateTime: 8/11/21 5:10 PM
---
local Localization = CS.GameEntry.Localization

local ActionItem = BaseClass("ActionItem")
-- 初始化Buff信息,startIdx 表示开始生效的回合数
function ActionItem:InitData( actiondata, userlist )
    self._actionData = actiondata or {}
    local _type = self._actionData["type"]
    if (_type == eMailDetailActionType.ADD_EFFECT) then
        local a = 1
    end
    self._userlist = userlist
    self._skillTarget = {}  -- 当技能播放的时候,打击的对象ActionItem
end

function ActionItem:AddSkillTarget( actionItem )
    self._skillTarget[#self._skillTarget+1] = actionItem
end

-- 获取该技能作用的哪些效果
function ActionItem:GetSkillTarget() 
    return self._skillTarget
end

-- 返回当前类型
function ActionItem:GetActionItemType()
    return self._actionData["type"]
end

function ActionItem:GetTriggerIndex()
    return self._actionData["triggerIndex"]
end

function ActionItem:GetSkillId()
    return self._actionData["skillId"]
end

function ActionItem:GetTargetIndex()
    return self._actionData["targetIndex"]
end

function ActionItem:IsSubActionItem()
    local actionType = self:GetActionItemType()
    if (actionType ~= eMailDetailActionType.ATTACK) then
        return false
    end
    local skillId = self:GetSkillId()
    if ( skillId ==0 or skillId == 100000 ) then -- 这个时候表示普攻
        return false
    end
    return true
end

-- 检测actionItem是否属于本轮技能攻击
function ActionItem:IsBelongThisSkill( actionItem )
    local roundType = self._actionData["type"]
    if (roundType ~= eMailDetailActionType.USE_SKILL) then -- 不是技能发起,直接忽略
        return false
    end
    if (actionItem:GetActionItemType() ~= eMailDetailActionType.ATTACK) then -- 待检测的不是攻击类型直接跳过
        return false
    end
    -- 需要检测atkid, skillid, 
    if (self:GetTriggerIndex() == actionItem:GetTriggerIndex() and
        self:GetSkillId() == actionItem:GetSkillId()) then
        return true
    end
    return false
end

function ActionItem:GetRoundIndex()
    return self._actionData["round"] or 0
end

function ActionItem:GetTriggerUserInfo()
    local triggerindex = self._actionData["triggerIndex"]
    local triggerPlayer = self._userlist[triggerindex]
    return triggerPlayer
end

function ActionItem:GetTargetUserInfo()
    local targetindex = self._actionData["targetIndex"]
    local targetPlayer = self._userlist[targetindex]
    return targetPlayer
end

function ActionItem:GetDesc()
    local roundType = self._actionData["type"]
    if (roundType == eMailDetailActionType.DEFAULT) then
        return self:GetDesc_Default()
    elseif roundType == eMailDetailActionType.ATTACK then
        return self:GetDesc_Attack()
    elseif roundType == eMailDetailActionType.COUNTER_ATTACK then
        return self:GetDesc_CounterAttack()
    elseif roundType == eMailDetailActionType.SHIELD_ATTACK then
        return self:GetDesc_ShieldAttack()
    elseif roundType == eMailDetailActionType.SHIELD_COUNTER_ATTACK then
        return self:GetDesc_ShieldCounterAttack()
    elseif roundType == eMailDetailActionType.SHIELD then
        return self:GetDesc_Shield()
    elseif roundType == eMailDetailActionType.RECOVER_DAMAGE then
        return self:GetDesc_RecoverDamage()
    elseif roundType == eMailDetailActionType.ADD_EFFECT then
        return self:GetDesc_AddEffect()
    elseif roundType == eMailDetailActionType.USE_SKILL then
        return self:GetDesc_UseSkill()
    elseif roundType == eMailDetailActionType.ADD_ANGER then
        return self:GetDesc_AddAnger()
    else
        return ""
    end
end

function ActionItem:GetDesc_Default()
    return "GetDesc_Default"
end

--[[
public enum DetailPlayerInfoType {
        // 0 玩家
        PLAYER,
        // 1 怪物
        MONSTER,
    }
]]

-- 因为回头后期需要做名字的颜色处理所以对于name单独拆分方法
function ActionItem:GetTriggerName()
    local triggerInfo = self:GetTriggerUserInfo()
    if (triggerInfo == nil) then
        return "not find GetTriggerName"
    end
    local triggerName = triggerInfo["name"]
    if (triggerInfo["infoType"] == 1) then -- 表示monsterId
        local monsterName = DataCenter.MonsterTemplateManager:GetTableValue( triggerName, "name")
        if monsterName~=nil and monsterName~="" then
            triggerName = Localization:GetString(monsterName)
        else
            triggerName = Localization:GetString(302219)
        end
    elseif triggerInfo["infoType"] == 3 then
        triggerName = Localization:GetString("110251")
        local desertId = tonumber(triggerInfo["name"])
        local level = GetTableData(TableName.Desert, desertId, "desert_level")
        if level~=nil and level>0 then
            local nameStr = GetTableData(TableName.Desert, desertId, "desert_name")
            triggerName = "Lv."..level..Localization:GetString(nameStr)
        end
    end
    if triggerName ==nil or triggerName == "" then
        triggerName = Localization:GetString("100184")
    end
    if (triggerInfo["isSelf"]) then
        triggerName = eMailDetailTxtColor.Green_Start .. "[" .. triggerName .. "]" .. eMailDetailTxtColor.End
    else
        triggerName = eMailDetailTxtColor.Red_Start .. "[" .. triggerName .. "]" .. eMailDetailTxtColor.End
    end
    return triggerName
end

function ActionItem:IsTriggerIsSelf()
    local triggerInfo = self:GetTriggerUserInfo()
    if (triggerInfo == nil) then
        return false
    end
    return triggerInfo["isSelf"] or false
end

function ActionItem:GetTargetName()
    local targetInfo = self:GetTargetUserInfo()
    if (targetInfo == nil) then
        return "not find GetTargetName"
    end
    local targetName = targetInfo["name"]
    if (targetInfo["infoType"] == 1) then -- 表示monsterId
        local monsterName = DataCenter.MonsterTemplateManager:GetTableValue( targetName, "name")
        if monsterName~=nil and monsterName~="" then
            targetName = Localization:GetString(monsterName)
        else
            targetName = Localization:GetString(302219)
        end
        
    elseif targetInfo["infoType"] == 3 then
        targetName = Localization:GetString("110251")
        local desertId = tonumber(targetInfo["name"])
        local level = GetTableData(TableName.Desert, desertId, "desert_level")
        if level~=nil and level>0 then
            local nameStr = GetTableData(TableName.Desert, desertId, "desert_name")
            targetName = "Lv."..level..Localization:GetString(nameStr)
        end
    end
    if targetName ==nil or targetName == "" then
        targetName = Localization:GetString("100184")
    end
    if (targetInfo["isSelf"]) then
        targetName = eMailDetailTxtColor.Green_Start .. "[" .. targetName .. "]" .. eMailDetailTxtColor.End
    else
        targetName = eMailDetailTxtColor.Red_Start .. "[" .. targetName .. "]" .. eMailDetailTxtColor.End
    end
    return targetName
end

function ActionItem:IsTargetIsSelf()
    local targetInfo = self:GetTargetUserInfo()
    if (targetInfo == nil) then
        return false
    end
    return targetInfo["isSelf"] or false
end

--[[
    返回伤害值 {"side" = eMailDetailTroopSide, "value" = xx}
]]
function ActionItem:GetValue()
    local roundType = self._actionData["type"]
    if roundType == eMailDetailActionType.ATTACK then
        return self:GetValue_Attack()
    elseif roundType == eMailDetailActionType.COUNTER_ATTACK then
        return self:GetValue_CounterAttack()
    elseif roundType == eMailDetailActionType.RECOVER_DAMAGE then
        return self:GetValue_RecoverDamage()
    end
    return {}
end

function ActionItem:GetValue_Attack()
    local param = {}
    local isMyDemage = self:IsTargetIsSelf()
    if (isMyDemage) then
        param["side"] = eMailDetailTroopSide.Self
    else
        param["side"] = eMailDetailTroopSide.Other
    end
    param["value"] = -self._actionData["value"] or 0
    return param
end

function ActionItem:GetValue_CounterAttack()
    local param = {}
    local isMyDemage = self:IsTargetIsSelf()
    if (isMyDemage) then
        param["side"] = eMailDetailTroopSide.Self
    else
        param["side"] = eMailDetailTroopSide.Other
    end
    param["value"] = -self._actionData["value"] or 0
    return param
end

function ActionItem:GetValue_RecoverDamage()
    local param = {}
    local isMyDemage = self:IsTargetIsSelf()
    if (isMyDemage) then
        param["side"] = eMailDetailTroopSide.Self
    else
        param["side"] = eMailDetailTroopSide.Other
    end
    param["value"] = self._actionData["value"] or 0
    return param
end

-- 普攻   261004={0}对{1}发动了普通攻击，{1}损失了{2}兵力
function ActionItem:GetDesc_Attack()
    local triggerName = self:GetTriggerName()
    local targetName = self:GetTargetName()
    local value = self._actionData["value"] or 0
    local skillId = self._actionData["skillId"] or 0
    local damageType = self._actionData["damageEffectType"] or 0
    if skillId ~=nil and skillId~=0 and skillId ~=100000 then
        return "          "..Localization:GetString("310171",targetName, value)
    else
        local str = Localization:GetString("261012",triggerName, targetName).."\n"
        if damageType == APSDamageEffectType.MISS then
            str = str.."          "..Localization:GetString("261016",targetName)
        elseif damageType == APSDamageEffectType.CRIT then
            str = str.."          "..Localization:GetString("261017").."\n".."          "..Localization:GetString("261014",targetName, value)
        else
            str = str.."          "..Localization:GetString("261014",targetName, value)
        end
        return "· "..str
    end
end


-- 反击   261005={0}发动反击，{1}损失了{2}兵力
function ActionItem:GetDesc_CounterAttack()
    local triggerName = self:GetTriggerName()
    local targetName = self:GetTargetName()
    local value = self._actionData["value"] or 0
    local damageType = self._actionData["damageEffectType"] or 0
    local str = Localization:GetString("261013",triggerName).."\n"
    if damageType == APSDamageEffectType.MISS then
        str = str.."          "..Localization:GetString("261016",targetName)
    elseif damageType == APSDamageEffectType.CRIT then
        str = str.."          "..Localization:GetString("261017").."\n".."          "..Localization:GetString("261014",targetName, value)
    else
        str = str.."          "..Localization:GetString("261014",targetName, value)
    end
    return "· "..str
end

-- 护盾攻击 261011	{0}对{1}发动了普通攻击，{1}损失了{2}护盾值
function ActionItem:GetDesc_ShieldAttack()
    local triggerName = self:GetTriggerName()
    local targetName = self:GetTargetName()
    local value = self._actionData["value"] or 0
    local str = Localization:GetString("261012",triggerName, targetName).."\n"
    str = str.."          "..Localization:GetString("261015",targetName, value)
    return "· "..str
end

-- 护盾攻击 261011	{0}对{1}发动了普通攻击，{1}损失了{2}护盾值
function ActionItem:GetDesc_ShieldCounterAttack()
    local triggerName = self:GetTriggerName()
    local targetName = self:GetTargetName()
    local value = self._actionData["value"] or 0
    local str = Localization:GetString("261013",triggerName).."\n"
    str = str.."          "..Localization:GetString("261015",targetName, value)
    return "· "..str
end

-- 护盾   261010={0}发动了{1}！{2}获得了一个护盾效果
function ActionItem:GetDesc_Shield()
    local triggerName = self:GetTriggerName()
    local targetName = self:GetTargetName()
    local skillId = self._actionData["skillId"] or 0
    local skillName = GetTableData(TableName.SkillTab, skillId, "name")
    skillName = Localization:GetString(skillName)
    return "· "..Localization:GetString("261010", triggerName, skillName, targetName)
end

-- 恢复伤兵  261009={0}发动了{1}！{2}恢复了{3}兵力
function ActionItem:GetDesc_RecoverDamage()
    local triggerName = self:GetTriggerName()
    local targetName = self:GetTargetName()
    local value = self._actionData["value"] or 0
    local skillId = self._actionData["skillId"] or 0
    local skillName = GetTableData(TableName.SkillTab, skillId, "name")
    if skillName==nil or skillName == ""then
        Logger.Log("battle report skillId"..skillId)
    end
    skillName = Localization:GetString(skillName)
    return "· "..Localization:GetString("261009", triggerName, skillName, targetName, value)
end

-- 添加BUFF   261008={0}发动了{1}！{2}获得了{3}效果
function ActionItem:GetDesc_AddEffect()
    local triggerName = self:GetTriggerName()
    local targetName = self:GetTargetName()
    local skillId = self._actionData["skillId"] or 0
    local skillIdName = GetTableData(TableName.SkillTab, skillId, "name")
    local skillName = Localization:GetString(skillIdName)
    if (skillIdName == "") then
        skillName = skillName .. "-skillId:" .. tostring(skillId)
    end
    local status = self._actionData["value"] or 0
    local effectArr = GetTableData(TableName.StatusTab, status, "effect") or ""
    effectArr = string.split(effectArr, '|') or {}
    local effectNumArr = GetTableData(TableName.StatusTab, status, "effect_num") or ""
    effectNumArr = string.split(effectNumArr, '|') or {}
    local skillLevel = self._actionData["skillLevel"] or 1
    local effectName = ""
    local effectValue = ""
    local effectArrCnt = table.count(effectArr)
    local effectNumArrCnt = table.count(effectNumArr)
    local result = "· "Localization:GetString("310170",triggerName, skillName)
    if (effectArrCnt == effectNumArrCnt and effectArrCnt >= skillLevel) then
        local effectIdStr = effectArr[skillLevel]
        local effectIdList = string.split(effectIdStr,";")
        local numDesStr =effectNumArr[skillLevel]
        local numDesList = string.split(numDesStr,";")
        if #effectIdList>0 and #numDesList>0 and #effectIdList == #numDesList  then
            result = ""
            for i =1,#effectIdList do
                effectName = GetTableData(TableName.EffectNumDesc, effectIdList[i], "des")
                effectName = Localization:GetString(effectName)
                local effectType = toInt(GetTableData(TableName.EffectNumDesc, effectIdList[i], "type"))
                if (effectType == EffectLocalTypeInEffectDesc.Percent) then
                    effectValue = numDesList[i] .. "%"
                else
                    effectValue = numDesList[i]
                end
                result = result.."· "..Localization:GetString("261008", triggerName, skillName, targetName, effectName, effectValue)
                if i<#effectIdList then
                    result = result.."\n"
                end
            end
        end
    end
    return result
end

-- 310170={0}发动了{1}！
function ActionItem:GetDesc_UseSkill()
    local triggerName = self:GetTriggerName()
    local targetName = self:GetTargetName()
    local skillId = self._actionData["skillId"] or 0
    local skillName = GetTableData(TableName.SkillTab, skillId, "name")
    if skillName==nil or skillName=="" then
        Logger.LogError("no name skillId"..skillId)
    end
    skillName = Localization:GetString(skillName)
    -- 先筛选出来发动技能的标题
    local skillTitle = Localization:GetString("310170", triggerName, skillName)
    -- 筛选出来被打击对象的标题
    local skillTarget = ""
    for _, v in pairs(self._skillTarget) do
        skillTarget = "\n " .. skillTarget .. v:GetDesc()
    end
    local content = skillTitle .. skillTarget
    return "· "..content
end

-- 增加怒气  261006={0}获得了{1}怒气
function ActionItem:GetDesc_AddAnger()
    local targetName = self:GetTargetName()
    local value = self._actionData["value"] or 0
    return "· "..Localization:GetString("261006", targetName, value)
end
 
return ActionItem