---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by mac.
--- DateTime: 8/3/21 7:09 PM
---
--[[
    为了保持统一,单支队伍的士兵和英雄也采用这种方式存储信息
    tSoldier = {
        ["userId"] = {["sid"] = xx, ["sid"] = xx},
            ...
    英雄的也是同理操作
     
    这样因为目前的战斗会牵涉到多轮,并且是不同类型的.所以统一成如上格式,在采用自己的信息时直接筛选出自己对应的uid即可
    
    在计算总的士兵信息时过滤所有回合,对于armyObj如果已经存放在列表中直接跳过,对于afterArmyObj如果没有直接填充,如果已经有了则直接替换，这样在整个一轮计算后，总兵数就是armyObj的汇总，差值就是损伤
    
    对于单个回合的直接取每一轮的即可
    }
]] 
local UnitBase = BaseClass("UnitBase")

function UnitBase:InitData( unitData )
    
end

-- 获取士兵信息 -- 士兵和英雄均是按照 ["userId"] = {["sid"] = xx, ["sid"] = xx}, 这种结构返回
function UnitBase:GetSoldiers()
    
end

-- 获取英雄列表
function UnitBase:GetHeroes()
    
end

-- 获取基础信息
function UnitBase:GetBaseInfo()
    
end

-- 获取当前方所有成员
function UnitBase:GetAllMembers()
    return {}
end

function UnitBase:GetAttTotalCnt( attId, isMySelf )
    return 0
end
function UnitBase:GetSoliderLvStr()
    return ""
end
function UnitBase:GetHealth()
    return 0
end

function UnitBase:GetSimpleCombatUnit()
    return nil
end

function UnitBase:GetPlayerHeroes()
    return {}
end

function UnitBase:GetAllMembersUuid(unitType)
    return {}
end

function UnitBase:GetArmyUuidByUid(uid,unitType)
    return 0
end

function UnitBase:GetSimpleCombatUnitByUuid( uuid )
    return nil
end
function UnitBase:GetBuffIdListByEffectId(effectId,marchId)
    local buffList = {}
    return buffList
end

function UnitBase:GetSoldierPercentByType(sType)
    return 0
end

function UnitBase:GetSpecialType()
    return SpecialUnitType.NONE
end
function UnitBase:GetFormationIndex()
    return 0
end

function UnitBase:GetEdenSignal()
    return 0
end
function UnitBase:GetHeroSpecialSkillList()
    return {}
end
return UnitBase