---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2022/3/22 17:48
---

local AllianceLeaderManager = BaseClass("AllianceLeaderManager");

local function __init(self)
    self.canBeLeader = false
    self:AddListener()
end

local function AddListener(self)
    --EventManager:GetInstance():AddListener(EventId.TrainingArmy, self.OnBuildTrainingStartSignal)
end

local function RemoveListener(self)
    --EventManager:GetInstance():RemoveListener(EventId.GetAllDetectInfo, self.CheckDetectEventSignal)
end

local function __delete(self)
    self.canBeLeader = nil
    self:RemoveListener()
end

local function TryOpenRoleSelect(self)
    if self:CheckCanBeLeader() then
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIAllianceSelectRole)
    else
        DataCenter.AllianceLeaderManager:FinishQaGuide(0, 5)
    end
end

local function UpdateBeLeader(self, ret)
    self.canBeLeader = (ret == 1)
    EventManager:GetInstance():Broadcast(EventId.UpdateAlCanBeLeader)
end

local function CheckCanBeLeader(self)
    return self.canBeLeader
end

local function GetAllQuestions(self)
    local retList = {}
    LocalController:instance():visitTable("questionAndAnswer",function(id,lineData)
        local tempData = DeepCopy(lineData)
        local tempType = tempData.type
        if tempType == 1 then
            table.insert(retList, tempData)
        end
    end)
    table.sort(retList, function(a, b)
        return a.id < b.id
    end)
    return retList
end

local function FinishQaGuide(self, leaderParam, status)
    self:CheckDoNext()
    local param = {}
    param.chooseLeader = leaderParam
    param.status = status
    SFSNetwork.SendMessage(MsgDefines.FirstJoinAlliance, param)
end

local function CheckDoNext(self)
    local template = DataCenter.GuideManager:GetCurTemplate()
    if template ~= nil then
        if template.type == GuideType.WaitQuestionEnd then
            --这里是选择成为盟友
            DataCenter.GuideManager:SetCurGuideId(tonumber(template.para2))
            DataCenter.GuideManager:DoGuide()
        end
    end
end

local function SendCheckCanBeLeader(self)
    SFSNetwork.SendMessage(MsgDefines.AlBeLeaderCheck)
end

AllianceLeaderManager.__init = __init
AllianceLeaderManager.AddListener = AddListener
AllianceLeaderManager.RemoveListener = RemoveListener
AllianceLeaderManager.__delete = __delete

AllianceLeaderManager.TryOpenRoleSelect = TryOpenRoleSelect
AllianceLeaderManager.CheckCanBeLeader = CheckCanBeLeader
AllianceLeaderManager.GetAllQuestions = GetAllQuestions
AllianceLeaderManager.UpdateBeLeader = UpdateBeLeader
AllianceLeaderManager.CheckDoNext = CheckDoNext
AllianceLeaderManager.FinishQaGuide = FinishQaGuide
AllianceLeaderManager.SendCheckCanBeLeader = SendCheckCanBeLeader

return AllianceLeaderManager
