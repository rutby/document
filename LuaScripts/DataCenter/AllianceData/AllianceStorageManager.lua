---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2022/3/28 16:25
---

local AllianceStorageManager = BaseClass("AllianceStorageManager");

local StorageContent = {
    RewardType.ALLIANCE_POINT,
    --RewardType.MONEY,
    --RewardType.METAL,
    --RewardType.ELECTRICITY,
    RewardType.SAPPHIRE
}

local function __init(self)
    self.resInfoDic = {}
    self.recordList = {}
    self.timer = nil
    self.timer_action = function(temp)
        self:CheckAllianceStorage()
    end
end

local function __delete(self)
    self:DeleteTimer()
    self.timer_action = nil
    self.resInfoDic = nil
    self.recordList = nil
end

local function GetAlStorageContent(self)
    return StorageContent
end

local function UpdateStorageInfo(self, t)
    if t.money then
        self.resInfoDic[RewardType.MONEY] = t.money
    end
    if t.electricity then
        self.resInfoDic[RewardType.ELECTRICITY] = t.electricity
    end
    if t.crystal then
        self.resInfoDic[RewardType.METAL] = self.crystal
    end
    if t.sapphire then
        self.resInfoDic[RewardType.SAPPHIRE] = t.sapphire
    end
    if t.lastRefreshTime then
        self.lastRefreshTime = t.lastRefreshTime
    end
    if t.storeLogArr then
        self.recordList = {}
        table.walk(t.storeLogArr,function (k,v)
            local info = AllianceStorageRecordData.New()
            info:ParseData(v)
            table.insert(self.recordList, info)
        end)
    end
    table.sort(self.recordList, function(a, b)
        return a.time > b.time
    end)
    EventManager:GetInstance():Broadcast(EventId.OnRecvAllianceStorageInfo)
    self:AddTimer()
end

local function DeleteTimer(self)
    if self.timer ~= nil then
        self.timer:Stop()
        self.timer = nil
    end
end

local function AddTimer(self)
    if self.timer == nil then
        local refreshTime = 1800
        self.timer = TimerManager:GetInstance():GetTimer(refreshTime, self.timer_action, self, false,false,false)
    end

    self.timer:Start()
end
local function CheckAllianceStorage(self)
    if not LuaEntry.Player:IsInAlliance() then
        return 
    end
    SFSNetwork.SendMessage(MsgDefines.GetAllianceStorageInfo)
end
local function GetResCountByRewardType(self, rewardType)
    if rewardType == RewardType.ALLIANCE_POINT then
        return DataCenter.AllianceShopDataManager:GetAlliancePoint()
    else
        return self.resInfoDic[rewardType] or 0
    end
end

local function GetStorageRecords(self)
    return self.recordList
end


AllianceStorageManager.__init = __init
AllianceStorageManager.__delete = __delete

AllianceStorageManager.UpdateStorageInfo = UpdateStorageInfo
AllianceStorageManager.GetAlStorageContent = GetAlStorageContent
AllianceStorageManager.GetResCountByRewardType = GetResCountByRewardType
AllianceStorageManager.GetStorageRecords = GetStorageRecords
AllianceStorageManager.DeleteTimer = DeleteTimer
AllianceStorageManager.AddTimer = AddTimer
AllianceStorageManager.CheckAllianceStorage = CheckAllianceStorage
return AllianceStorageManager