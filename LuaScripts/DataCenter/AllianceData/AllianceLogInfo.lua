---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zzl.
--- DateTime: 
---
local AllianceLogInfo = BaseClass("AllianceLogInfo")
local Localization = CS.GameEntry.Localization

local function __init(self)
    self.uuid = ""      --日志UUID
    self.type = AllianceLogMemberType.NULL       --日志类型
    self.code = ""      --日志dialog
    self.time = 0       --发生时间  毫秒
    self.params = {}    --参数数组
    self.trans  = {}    --参数类型数组 与上面一一对应  0 ：普通文本  1：dialog 2:坐标点
    self.sign = 0       --日志标记  类型1，2
    self.pos = nil        --仅当参数中带有坐标点使用
    self.server = 0
end

local function __delete(self)
    self.uuid = ""      --日志UUID
    self.type = AllianceLogMemberType.NULL       --日志类型
    self.code = ""      --日志dialog
    self.time = 0       --发生时间  毫秒
    self.params = {}    --参数数组
    self.trans  = {}    --参数类型数组 与上面一一对应  0 ：普通文本  1：dialog 2:坐标点
    self.sign = 0       --日志标记  类型1，2
    self.pos = nil        --仅当参数中带有坐标点使用
    self.server = 0
end

local function ParseData(self,message)
    if message ==nil then
        return
    end
    if message["uuid"]~=nil then
        self.uuid = message["uuid"]
    end
    if message["type"]~=nil then
        self.type = message["type"]
        if self.type == AllianceLogMemberType.UPDATE_RANK or self.type == AllianceLogMemberType.GET_ALLIANCE_CITY 
            or self.type == AllianceLogMemberType.GIVE_UP_ALLIANCE_CITY or self.type == AllianceLogMemberType.AUTO_JOIN_ALLIANCE
                or self.type == AllianceLogMemberType.AUTO_QUIT_ALLIANCE or self.type == AllianceLogMemberType.AGREE_JOIN_ALLIANCE
                or self.type == AllianceLogMemberType.REFUSE_JOIN_ALLIANCE or self.type == AllianceLogMemberType.KICK_MEMBER
                or self.type == AllianceLogMemberType.TRANSFER_LEADER or self.type == AllianceLogMemberType.CANCEL_GIVE_UP_ALLIANCE_CITY then
            self.sign = 1
        else
            self.sign = 2
        end
    end
    if message["code"]~=nil then
        self.code = message["code"]
    end
    if message["time"]~=nil then
        self.time = message["time"]
    end
    if message["params"]~=nil then
        self.params = message["params"]
    end
    if message["trans"]~=nil then
        self.trans = message["trans"]
    end
end

local function GetStrLog(self,isIgnore)
    if next(self.params) then
        local template = self:AnalyseParam(isIgnore)
        return  Localization:GetString(self.code,table.unpack(template))
    end
    return Localization:GetString(self.code)
end

local function AnalyseParam(self,isIgnore)
    local param = {}
    for i = 1, #self.params do
        if self.trans[i] == 0 then
            param[i] = self.params[i]
        elseif self.trans[i] == 1 then
            param[i] = Localization:GetString(self.params[i])
        elseif self.trans[i] == 2 then
            local str = string.split(self.params[i],";")
            local pos = nil
            if #str == 1 then
                pos = SceneUtils.IndexToTilePos(tonumber(self.params[i]),ForceChangeScene.World)
                self.pos = tonumber(self.params[i])
            elseif #str == 2 then
                self.server = tonumber(str[1])
                self.pos = tonumber(str[2])
                pos = SceneUtils.IndexToTilePos(tonumber(str[2]),ForceChangeScene.World)
            end
            if isIgnore then
                param[i] = Localization:GetString(GameDialogDefine.SHOW_POS, pos.x, pos.y)
            else
                param[i] = "<u>"..Localization:GetString(GameDialogDefine.SHOW_POS, pos.x, pos.y).."</u>"
            end
        end
    end
    return param
end
--GameDialogDefine.SHOW_POS
local function GetLogSignIconPath(self)
    if self.sign == 1 then
        return string.format(LoadPath.UIAlliance,"UIAlliance_img_title_member")
    elseif self.sign == 2  then
        return string.format(LoadPath.UIAlliance,"UIAlliance_img_title_battle")
    end
end

local function GetPos(self)
    return self.server,self.pos
end

AllianceLogInfo.__init = __init
AllianceLogInfo.__delete = __delete
AllianceLogInfo.ParseData = ParseData
AllianceLogInfo.GetStrLog = GetStrLog
AllianceLogInfo.AnalyseParam = AnalyseParam
AllianceLogInfo.GetLogSignIconPath = GetLogSignIconPath
AllianceLogInfo.GetPos = GetPos
return AllianceLogInfo
