---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2021/11/9 18:23
---

local AllianceCityTip = BaseClass("AllianceCityTip")
local SpriteRenderer = CS.UnityEngine.SpriteRenderer
local SuperTextMesh = CS.SuperTextMesh
local TouchObjectEventTrigger = CS.TouchObjectEventTrigger
local Localization = CS.GameEntry.Localization

local nameLabel_path = "NameLabel"
local nameText_path = "NameLabel/NameText"
--local allianceText_path = "NameLabel/allianceText"
local levelLabel_path = "LevelLabel"
local levelText_path = "LevelLabel/LevelText"
local centerLevelLabel_path = "CenterLevelLabel"
local centerLevelText_path = "CenterLevelLabel/LevelText"
local collider1_path = "LevelLabel/Collider1"
local collider2_path = "CenterLevelLabel/Collider2"
local boss_obj_path= "actBoss"
local boss_collider_path = "actBoss/Collider"
local king_icon_path = "kingIcon"
local declareWar_path = "DeclareWar"
local declareWarBtn_path = "DeclareWar/DeclareWarBtn"
local declareWarList_path = "DeclareWar/DeclareList"
local arrow_path = "VFX_alliancecitytip_jiantou"
local flag_path = "AllianceFlag"
local flagBg_path = "AllianceFlag/flagBg"
local flagFg_path = "AllianceFlag/flagFg"
local posOffset = Vector3.New(-6, 0, -6)
local thronePos = Vector3.New(-6, 7, -6)
local namePadding = 0.6
local colliderPadding = 0.6
local levelOffset = 0.3

local function OnCreate(self, request)
    self.request = request
    self.gameObject = request.gameObject
    self.transform = request.gameObject.transform
    --self.effect = self.transform:Find(arrow_path).gameObject
    self.name_spr = self.transform:Find(nameLabel_path):GetComponent(typeof(SpriteRenderer))
    self.name_text = self.transform:Find(nameText_path):GetComponent(typeof(SuperTextMesh))
    --self.alliance_text = self.transform:Find(allianceText_path):GetComponent(typeof(SuperTextMesh))
    self.level_spr = self.transform:Find(levelLabel_path):GetComponent(typeof(SpriteRenderer))
    self.level_text = self.transform:Find(levelText_path):GetComponent(typeof(SuperTextMesh))
    self.centerLevel_spr = self.transform:Find(centerLevelLabel_path):GetComponent(typeof(SpriteRenderer))
    self.centerLevel_text = self.transform:Find(centerLevelText_path):GetComponent(typeof(SuperTextMesh))
    self.collider1 = self.transform:Find(collider1_path):GetComponent(typeof(TouchObjectEventTrigger))
    self.collider1.onPointerClick = function()
        self:OnClick()
    end
    self.collider2 = self.transform:Find(collider2_path):GetComponent(typeof(TouchObjectEventTrigger))
    self.collider2.onPointerClick = function()
        self:OnClick()
    end
    self.boss_obj = self.transform:Find(boss_obj_path).gameObject
    self.boss_collider = self.transform:Find(boss_collider_path):GetComponent(typeof(TouchObjectEventTrigger))
    self.boss_collider.onPointerClick = function()
        self:OnBossClick()
    end
    self.king_icon = self.transform:Find(king_icon_path).gameObject
    
    self.cacheLod = 1
    self.declareWar = self.transform:Find(declareWar_path):GetComponent(typeof(SpriteRenderer))
    self.declareWarList = self.transform:Find(declareWarList_path):GetComponent(typeof(SpriteRenderer))
    self.declareWarBtn = self.transform:Find(declareWarBtn_path):GetComponent(typeof(TouchObjectEventTrigger))
    self.declareWarBtn.onPointerClick = function()
        self:OnClickDeclare()
    end

    self.lodIcon = self.transform:Find("LodIcon").gameObject
    self.lodIconSprite = self.lodIcon:GetComponent(typeof(SpriteRenderer))
    
    self.flag = self.transform:Find(flag_path).gameObject
    self.flagBgN = self.transform:Find(flagBg_path):GetComponent(typeof(SpriteRenderer))
    self.flagFgN = self.transform:Find(flagFg_path):GetComponent(typeof(SpriteRenderer))
end


local function OnDestroy(self)
    self.request = nil
    self.data = nil
    self.name_spr = nil
    self.name_text = nil
    self.level_spr = nil
    self.level_text = nil
    self.collider1.onPointerClick = nil
    self.collider2.onPointerClick = nil
    self.boss_collider.onPointerClick = nil
    self.collider1 = nil
    self.collider2 = nil
    self.boss_collider = nil
    self.declareWar = nil
    self.declareWarList = nil
    self.flagBgN = nil
    self.flagFgN = nil
end

local function OnClick(self)
    GoToUtil.GotoWorldPos(self.transform.position,CS.SceneManager.World.InitZoom, 0.3,nil,LuaEntry.Player:GetCurServerId())
end

local function SetData(self, data)
    --self.effect:SetActive(false)
    self.data = data
    if self.data.id == THRONE_ID and LuaEntry.Player.serverType == ServerType.NORMAL then
        self.king_icon:SetActive(true)
        self.level_spr.gameObject:SetActive(false)
    else
        self.king_icon:SetActive(false)
        self.level_spr.gameObject:SetActive(true)
    end
    self:SetLodIcon(data.id)
    self:SetAllianceColor(data.id)
    self:SetAllianceIcon(data.id)
    self:SetName(data.id)
    self:SetLevel(data.level)
    self:SetTilePos(data.pos)
    self:CheckBossData()
    self:CheckCityDeclare()
end

local function ShowEffect(self,abbr)
    local name = ""
    if self.data ~= nil then
        name = Localization:GetString(self.data.name)
    end
    if abbr~=nil and abbr~=""then
        local cityAbbr = "["..abbr.."]"
        name = cityAbbr..name
    end
    -- 名字文本
    self.name_text.text = name
    --self.name_text:SetLocalText(name)

    -- 名字背景宽度
    local textWidth = self.name_text:GetWidth()
    local s_x, s_y = self.name_spr:Get_size()
    s_x = textWidth + namePadding
    self.name_spr:Set_size(s_x, s_y)

    -- 等级牌和碰撞体位置
    pos_x = - textWidth * 0.5 - levelOffset
    self.level_spr.transform:Set_localPosition(pos_x, 0.5, 0)
    self.collider1.transform:Set_localPosition(-pos_x, 0.54, 0)

    -- 碰撞体宽度
    local scale_x, scale_y, scale_z = self.collider1.transform:Get_localScale()
    scale_x = textWidth + colliderPadding
    self.collider1.transform:Set_localScale(scale_x, scale_y, scale_z)
    --self.effect:SetActive(true)
end

local function HideEffect(self)
    --self.effect:SetActive(false)
    if self.data ~= nil then
        self:SetName(self.data.id)
    end
end

local function SetLodIcon(self,cityId)
    local pic = string.format(LoadPath.LodIcon,"cfm_daditu_chengshi_01.png")
    local cityData = DataCenter.WorldAllianceCityDataManager:GetAllianceCityDataByCityId(cityId)
    if cityData~=nil then
        if cityData.allianceId~=nil and cityData.allianceId~="" then
            if cityData.allianceId==LuaEntry.Player.allianceId then
                pic = string.format(LoadPath.LodIcon,"cfm_daditu_chengshi_02.png")
            else
                pic = string.format(LoadPath.LodIcon,"cfm_daditu_chengshi_03.png")
            end
        end
    end
    self.lodIconSprite:LoadSprite(pic)
end

local function SetAllianceColor(self,cityId)
    local pic = string.format(LoadPath.LodIcon,"alliancecity_name_gray.png")
    local cityData = DataCenter.WorldAllianceCityDataManager:GetAllianceCityDataByCityId(cityId)
    if cityData~=nil then
        if cityData.allianceId~=nil and cityData.allianceId~="" then 
            if cityData.allianceId==LuaEntry.Player.allianceId then
                pic = string.format(LoadPath.LodIcon,"alliancecity_name_blue.png")
            else
                if LuaEntry.Player.serverType == ServerType.EDEN_SERVER and DataCenter.GloryManager:IsSameCampByAllianceId(cityData.allianceId) ==true then
                    pic = string.format(LoadPath.LodIcon,"alliancecity_name_yellow.png")
                else
                    pic = string.format(LoadPath.LodIcon,"alliancecity_name_red.png")
                end
            end
        end
    end
    self.name_spr:LoadSprite(pic)
end

local function SetAllianceIcon(self,cityId)
    local cityData = DataCenter.WorldAllianceCityDataManager:GetAllianceCityDataByCityId(cityId)
    if cityData ~= nil and cityData.flagIcon ~= nil then
        self.flag:SetActive(true)
        self.flagBgN:LoadSprite(string.format("Assets/Main/Sprites/UI/UIAllianceFlag/UIalliance_img_flagbg%s", cityData.flagIcon.flagBgIcon))
        self.flagBgN.color = AllianceFlagBgColor[cityData.flagIcon.flagBgColor]
        self.flagFgN:LoadSprite(string.format("Assets/Main/Sprites/UI/UIAllianceFlag/UIalliance_img_flagpattern%s_big", cityData.flagIcon.flagFgIcon))
        self.flagFgN.color = AllianceFlagFgColor[cityData.flagIcon.flagFgColor]
    else
        self.flag:SetActive(false)
    end
end

local function SetName(self,cityId)
    if self.data == nil then
        return
    end
    local name = Localization:GetString(self.data.name)
    local cityInfo = DataCenter.WorldAllianceCityDataManager:GetAllianceCityDataByCityId(cityId)
    if cityInfo~=nil and cityInfo.cityName~=nil and cityInfo.cityName~="" then
        name = cityInfo.cityName
    end
    if cityInfo~=nil and cityInfo.abbr~=nil and cityInfo.abbr~=""then
        local abbr = "["..cityInfo.abbr.."]"
        name = abbr..name
    end
    -- 名字文本
    self.name_text.text = name
	--self.name_text:SetLocalText(name)

	-- 名字背景宽度
	local textWidth = self.name_text:GetWidth()
	local s_x, s_y = self.name_spr:Get_size()
	s_x = textWidth + namePadding
	self.name_spr:Set_size(s_x, s_y)

	-- 等级牌和碰撞体位置
	pos_x = - textWidth * 0.5 - levelOffset
	self.level_spr.transform:Set_localPosition(pos_x, 0.5, 0)
    self.collider1.transform:Set_localPosition(-pos_x, 0.54, 0)
    self.declareWar.transform:Set_localPosition(-pos_x, 0.537, 0)
	-- 碰撞体宽度
	local scale_x, scale_y, scale_z = self.collider1.transform:Get_localScale()
	scale_x = textWidth + colliderPadding
	self.collider1.transform:Set_localScale(scale_x, scale_y, scale_z)
end

local function SetLevel(self, level)
    self.level_text.text = level
    self.centerLevel_text.text = level
end

local function SetTilePos(self, tilePos)
    --local pos = SceneUtils.TileToWorld(tilePos.x, tilePos.y)
	local pos = SceneUtils.TileToWorld(tilePos)
    self:SetPos(pos)
end

local function SetPos(self, pos)
	local t = pos + posOffset
    if self.data~=nil and self.data.id == THRONE_ID and LuaEntry.Player.serverType == ServerType.NORMAL then
        t = pos + thronePos
    end
	self.transform:Set_position(t.x, t.y, t.z)
    --self.transform.position = pos + posOffset
end

local function SetNameBg(self, path)
    self.name_spr:LoadSprite(path)
end

local function CheckBossData(self)
    if self.data == nil then
        return
    end
    self.monsterData = DataCenter.ActBossDataManager:GetActBossDataByCityId(self.data.id)
    if self.monsterData ~= nil and self.lodCache >= 7 then
        self.boss_obj:SetActive(true)
    else
        self.boss_obj:SetActive(false)
    end
end

local function CheckCityDeclare(self)
    if self.data == nil or CrossServerUtil:GetIsCrossServer() then
        self.declareWar.gameObject:SetActive(false)
        return
    end
    local data  = DataCenter.AllianceDeclareWarManager:GetWarDataByCityId(self.data.id)
    --if data and tonumber(data.content) == cityId then
    if next(data) then
        local isSelfAlliance = false
        local isSameCamp = false
        local selfAlliance = DataCenter.AllianceBaseDataManager:GetAllianceBaseData()
        for i = 1 ,#data do
            if selfAlliance and data[i].aId == selfAlliance.uid then
                isSelfAlliance = true
            elseif LuaEntry.Player.serverType == ServerType.EDEN_SERVER and DataCenter.GloryManager:IsSameCampByAllianceId(data[i].aId) ==true then
                isSameCamp = true
            end
        end
        if isSelfAlliance then
            local pic = string.format(LoadPath.LodIcon,"UImap_img_declare-war_blue")
            self.declareWar:LoadSprite(pic)
        elseif isSameCamp then
            local pic = string.format(LoadPath.LodIcon,"UImap_img_declare-war_yellow")
            self.declareWar:LoadSprite(pic)
        else
            local pic = string.format(LoadPath.LodIcon,"UImap_img_declare-war_red")
            self.declareWar:LoadSprite(pic)
        end
        self.declareWar.gameObject:SetActive(true)
        if table.count(data) > 1 then
            self.declareWarList.gameObject:SetActive(true)
        else
            self.declareWarList.gameObject:SetActive(false)
        end
    else
        self.declareWar.gameObject:SetActive(false)
    end
end

local function OnClickDeclare(self)
    if self.data == nil then
        return
    end
    local data  = DataCenter.AllianceDeclareWarManager:GetWarDataByCityId(self.data.id)
    if next(data) and self.lodCache >= 4 then
        if table.count(data) >= 1 then
            CS.SceneManager.World:SetUseInput(false)
            GoToUtil.GotoOpenView(UIWindowNames.UIWorldDeclareList,SceneUtils.TilePosToIndex(self.data.pos),self.data.id)
        end
    end
end

local function SetLod(self,lod)
    if self.lodCache ~=lod then
        self.lodCache =lod
    end
end

local function CheckLod(self,lod)
    if self.lodCache ~=lod then
        self.lodCache =lod
        self:CheckBossData()
    end
end

local function OnBossClick(self)
    CS.SceneManager.World:SetUseInput(false)
    local pointId = SceneUtils.WorldToTileIndex(self.boss_obj.transform.position)
    GoToUtil.GotoOpenView(UIWindowNames.UIActBossTips,{anim = true},self.monsterData.uuid,pointId)
end

AllianceCityTip.OnCreate = OnCreate
AllianceCityTip.OnDestroy = OnDestroy
AllianceCityTip.OnClick = OnClick
AllianceCityTip.SetData = SetData
AllianceCityTip.SetName = SetName
AllianceCityTip.SetLevel = SetLevel
AllianceCityTip.SetTilePos = SetTilePos
AllianceCityTip.SetPos = SetPos
AllianceCityTip.SetNameBg = SetNameBg
AllianceCityTip.SetLodIcon = SetLodIcon
AllianceCityTip.SetAllianceColor = SetAllianceColor
AllianceCityTip.SetAllianceIcon = SetAllianceIcon
AllianceCityTip.CheckBossData =CheckBossData
AllianceCityTip.CheckCityDeclare = CheckCityDeclare
AllianceCityTip.OnBossClick =OnBossClick
AllianceCityTip.SetLod =SetLod
AllianceCityTip.CheckLod =CheckLod
AllianceCityTip.ShowEffect =ShowEffect
AllianceCityTip.HideEffect =HideEffect
AllianceCityTip.OnClickDeclare = OnClickDeclare
return AllianceCityTip