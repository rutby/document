---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2021/11/9 18:32
---

local AllianceCityTipManager = BaseClass("AllianceCityTipManager")
local AllianceCityTip = require "DataCenter.AllianceCityTip.AllianceCityTip"
local ResourceManager = CS.GameEntry.Resource

local function __init(self)
    self.tipDict = {} -- <cityId: int, { tip: AllianceCityTip, req: InstanceRequest }>
    self.notShowTipFlag = {}--<cityId: int,value:true>
    self:AddListeners()
end

local function __delete(self)
    if self.tipDict ~= nil then
        for _, t in pairs(self.tipDict) do
            if t.tip ~= nil then
                t.tip:OnDestroy()
            end
            if t.req ~= nil then
                t.req:Destroy()
            end
        end
        self.tipDict = nil
    end
    self.notShowTipFlag = nil
    self:RemoveListeners()
end

local function Startup(self)
    
end

local function RemoveAllAllianceCityTip(self)
    if self.tipDict ~= nil then
        for _, t in pairs(self.tipDict) do
            if t.tip ~= nil then
                t.tip:OnDestroy()
            end
            if t.req ~= nil then
                t.req:Destroy()
            end
        end
        self.tipDict = {}
    end
end

local function AddListeners(self)
    EventManager:GetInstance():AddListener(EventId.ChangeCameraLod, self.ChangeCameraLodSignal)
    EventManager:GetInstance():AddListener(EventId.AllianceCityInView, self.AllianceCityInViewSignal)
    EventManager:GetInstance():AddListener(EventId.AllianceCityOutView, self.AllianceCityOutViewSignal)
    EventManager:GetInstance():AddListener(EventId.WorldCityOwnerInfoChanged, self.AllianceCityNameChange)
    EventManager:GetInstance():AddListener(EventId.OnActBossDataRefresh, self.ShowActBossIconShow)
    EventManager:GetInstance():AddListener(EventId.WorldZoneChangeColorFinish, self.WorldZoneChangeColorFinish)
    EventManager:GetInstance():AddListener(EventId.DeclareWar, self.AllianceCityRefreshDeclare)
    EventManager:GetInstance():AddListener(EventId.OnEnterCrossServer, self.AllianceCityRefreshDeclare)
    EventManager:GetInstance():AddListener(EventId.OnQuitCrossServer, self.AllianceCityRefreshDeclare)
end

local function RemoveListeners(self)
    EventManager:GetInstance():RemoveListener(EventId.ChangeCameraLod, self.ChangeCameraLodSignal)
    EventManager:GetInstance():RemoveListener(EventId.AllianceCityInView, self.AllianceCityInViewSignal)
    EventManager:GetInstance():RemoveListener(EventId.AllianceCityOutView, self.AllianceCityOutViewSignal)
    EventManager:GetInstance():RemoveListener(EventId.WorldCityOwnerInfoChanged, self.AllianceCityNameChange)
    EventManager:GetInstance():RemoveListener(EventId.OnActBossDataRefresh, self.ShowActBossIconShow)
    EventManager:GetInstance():RemoveListener(EventId.WorldZoneChangeColorFinish, self.WorldZoneChangeColorFinish)
    EventManager:GetInstance():RemoveListener(EventId.DeclareWar, self.AllianceCityRefreshDeclare)
    EventManager:GetInstance():RemoveListener(EventId.OnEnterCrossServer, self.AllianceCityRefreshDeclare)
    EventManager:GetInstance():RemoveListener(EventId.OnQuitCrossServer, self.AllianceCityRefreshDeclare)
end

local function ChangeCameraLodSignal(lod)
    DataCenter.AllianceCityTipManager:UpdateLod(lod)
end

local function ShowActBossIconShow(data)
    DataCenter.AllianceCityTipManager:CheckAllianceCityTipsShowBoss()
end
local function ShowWorldZoneChangeColor(self,cityId,beforeAbbr)
    local t = self.tipDict[cityId]
    if t~=nil and t.tip~=nil then
        t.tip:ShowEffect(beforeAbbr)
    end
end
local function WorldZoneChangeColorFinish(data)
    DataCenter.AllianceCityTipManager:HideChangeEffect(data)
end
local function HideChangeEffect(self,data)
    if data~=nil then
        local id = tonumber(data)
        local t = self.tipDict[id]
        if t~=nil and t.tip~=nil then
            t.tip:HideEffect()
        end
    end
end
local function CheckAllianceCityTipsShowBoss(self)
    for k,v in pairs(self.tipDict) do
        if v.tip~=nil then
            v.tip:CheckBossData()
        end
    end
end

local function UpdateTipLod(self)
    for k,v in pairs(self.tipDict) do
        if v.tip~=nil then
            v.tip:CheckLod(self.lodCache)
        end
    end
end

local function UpdateLod(self, lod)
    if self.lodCache ~=lod then
        self.lodCache =lod
        if self.lodCache >= 7 then
            self:SendRequest()
        end
        self:UpdateTipLod()
    end
end

local function SendRequest(self)
    local curTime = UITimeManager:GetInstance():GetServerTime()
    local dataList = DataCenter.ActivityListDataManager:GetActivityDataByType(ActivityEnum.ActivityType.WorldBoss)
    if #dataList>0 then
        local data = dataList[1]
        if data.startTime<=curTime and data.endTime>=curTime then
            SFSNetwork.SendMessage(MsgDefines.UserGetActBossMarch)
        end
    end
end

local function AllianceCityNameChange(data)
    DataCenter.AllianceCityTipManager:RefreshAllianceCityName()
end

local function RefreshAllianceCityName(self)
    for k,v in pairs(self.tipDict) do
        if v.tip~=nil then
            v.tip:SetName(k)
            v.tip:SetAllianceColor(k)
        end
    end
end
local function SetCanShowFlag(self,id,canShow)
    if canShow then
        if self.notShowTipFlag ~= nil and self.notShowTipFlag[id]~=nil then
            self.notShowTipFlag[id] = nil
            DataCenter.AllianceCityTipManager:ShowTip(id, true)
        end
    else
        if self.notShowTipFlag ~= nil and self.notShowTipFlag[id]==nil then
            self.notShowTipFlag[id] = true
            DataCenter.AllianceCityTipManager:ShowTip(id, false)
        end
    end
end
local function AllianceCityInViewSignal(id)
    DataCenter.AllianceCityTipManager:ShowTip(id, true)
end

local function AllianceCityOutViewSignal(id)
    DataCenter.AllianceCityTipManager:ShowTip(id, false)
end

local function AllianceCityRefreshDeclare()
    DataCenter.AllianceCityTipManager:RefreshDeclare()
end

local function RefreshDeclare(self)
    for k,v in pairs(self.tipDict) do
        if v.tip~=nil then
            v.tip:CheckCityDeclare()
        end
    end
end

local function ShowTip(self, id, show)
    if show and self.tipDict[id] == nil and self.notShowTipFlag[id] == nil then
        self:CreateTip(id)
    elseif not show and self.tipDict[id] ~= nil then
        self:DestroyTip(id)
    end
end

local function CreateTip(self, id)
    if LuaEntry.Player.serverType == ServerType.DRAGON_BATTLE_FIGHT_SERVER then
        return
    end
    if LuaEntry.Player.serverType == ServerType.EDEN_SERVER then
        return
    end
    local checkTemplate = DataCenter.AllianceCityTemplateManager:GetTemplate(id)
    if checkTemplate == nil then
        return
    end
    local request = ResourceManager:InstantiateAsync(UIAssets.AllianceCityTip)
    request:completed('+', function()
        if request.isError then
            return
        end
        
        request.gameObject:SetActive(true)
        request.gameObject.transform:SetParent(CS.SceneManager.World.DynamicObjNode)
        request.gameObject.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
        
        local template = DataCenter.AllianceCityTemplateManager:GetTemplate(id)
        local tip = AllianceCityTip.New()
        tip:OnCreate(request)
        tip:SetLod(self.lodCache)
        tip:SetData(template)
        self.tipDict[id] = { tip = tip, req = request }
    end)
    self.tipDict[id] = { tip = nil, req = request } 
end

local function DestroyTip(self, id)
    local t = self.tipDict[id]
    if t ~= nil then
        if t.tip ~= nil then
            t.tip:OnDestroy()
        end
        if t.req ~= nil then
            t.req:Destroy()
        end
    end
    self.tipDict[id] = nil
end

AllianceCityTipManager.__init = __init
AllianceCityTipManager.__delete = __delete
AllianceCityTipManager.Startup = Startup
AllianceCityTipManager.RemoveAllAllianceCityTip = RemoveAllAllianceCityTip
AllianceCityTipManager.AddListeners = AddListeners
AllianceCityTipManager.RemoveListeners = RemoveListeners
AllianceCityTipManager.ChangeCameraLodSignal = ChangeCameraLodSignal
AllianceCityTipManager.AllianceCityInViewSignal = AllianceCityInViewSignal
AllianceCityTipManager.AllianceCityOutViewSignal = AllianceCityOutViewSignal
AllianceCityTipManager.ShowTip = ShowTip
AllianceCityTipManager.CreateTip = CreateTip
AllianceCityTipManager.DestroyTip = DestroyTip
AllianceCityTipManager.SetCanShowFlag =SetCanShowFlag
AllianceCityTipManager.RefreshAllianceCityName =RefreshAllianceCityName
AllianceCityTipManager.AllianceCityNameChange = AllianceCityNameChange
AllianceCityTipManager.ShowActBossIconShow =ShowActBossIconShow
AllianceCityTipManager.CheckAllianceCityTipsShowBoss =CheckAllianceCityTipsShowBoss
AllianceCityTipManager.UpdateTipLod =UpdateTipLod
AllianceCityTipManager.SendRequest =SendRequest
AllianceCityTipManager.UpdateLod =UpdateLod
AllianceCityTipManager.ShowWorldZoneChangeColor =ShowWorldZoneChangeColor
AllianceCityTipManager.WorldZoneChangeColorFinish =WorldZoneChangeColorFinish
AllianceCityTipManager.HideChangeEffect =HideChangeEffect
AllianceCityTipManager.AllianceCityRefreshDeclare = AllianceCityRefreshDeclare
AllianceCityTipManager.RefreshDeclare = RefreshDeclare
return AllianceCityTipManager