---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by w.
--- DateTime: 2023/1/6 15:32
---

local ParkourManager = BaseClass("ParkourManager")
local Localization = CS.GameEntry.Localization

local function __init(self)
    self.lastPassTime = 0 --ms
    self.curStageId = 0   --
    self.passStageId = 0
end

local function __delete(self)
    
end

local function InitData(self,message)
    if message["stageFeatureInfo"] ~= nil then
        local u = message["stageFeatureInfo"]
        local id = tonumber(u["stageId"])
        local time = tonumber(u["featureRewardTimeStamp"])
        self:ProcessData(id,time)
    else
        self:ProcessData(0,0)
    end
end

local function UpdateData(self,stageId,time,reward)
    self:ProcessData(stageId,time)
    self.reward = reward
    self.rewardStageId = stageId
end

local function ProcessData(self,stageId,time)
    self.lastPassTime = time
    self.curStageId =  math.max(stageId, self.curStageId)
    self.passStageId = math.max(stageId, self.passStageId)
    local meta = {}
    LocalController:instance():visitTable(LuaEntry.Player:GetABTestTableName(TableName.LW_Stage_Feature), function(id, lineData) 
        table.insert(meta, {id = lineData:getValue("id"),order = lineData:getValue("order")}) 
    end)
    table.sort(meta,function(a, b) return a.order<b.order end)
    local curOrder = 0
    if stageId > 0 then
        local meta = LocalController:instance():getLine(LuaEntry.Player:GetABTestTableName(TableName.LW_Stage_Feature),stageId)
        curOrder = meta.order
    end
    for _, lineData in ipairs(meta) do
        if lineData.order > curOrder then
            self.curStageId = math.max(self.curStageId,lineData.id)
            break
        end
    end
    EventManager:GetInstance():Broadcast(EventId.UpdateParkourStage)
end

local function AlreadyPass(self,id)
    return self.curStageId > id
end

ParkourManager.__init = __init
ParkourManager.__delete = __delete
ParkourManager.InitData = InitData
ParkourManager.UpdateData = UpdateData
ParkourManager.ProcessData = ProcessData
ParkourManager.AlreadyPass = AlreadyPass

return ParkourManager