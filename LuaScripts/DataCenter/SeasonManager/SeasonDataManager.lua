---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 24224.
--- DateTime: 2022/12/13 17:27
---
local SeasonDataManager = BaseClass("SeasonDataManager");

local function __init(self)
    self.seasonId = 0
    self.mode = 0
    self.season = 0
    self.seasonStartTime = 0
    self.settleTime = 0 --赛季结束时间  这个才是赛季结束时间！！！  赛季初可能没有这个字段
    self.edenWarServerGroup = {}
end

local function __delete(self)
end

local function StartUp(self)
    
end

local function InitData(self,message)
    if message["seasonInfo"]~=nil then
        local info = message["seasonInfo"]
        if info["seasonId"]~=nil then
            self.seasonId = info["seasonId"]
        end
        if info["season"]~=nil then
            self.season = info["season"]
        end
        if info["seasonStartTime"]~=nil then
            self.seasonStartTime = info["seasonStartTime"]
        end
        if info["settleTime"]~=nil then
            self.settleTime = info["settleTime"]
        end
        self.mode = GetTableData(TableName.APS_Season,self.seasonId, 'rule')
        if info["extraDesertNum"]~=nil then
            LuaEntry.Player:SetExtraDesertNum(info["extraDesertNum"])
        end
    end
end

local function GetMode(self)
    return self.mode
end

local function GetSeasonId(self)
    return self.seasonId
end

local function GetSeason(self)
    return self.season
end

-- 获取本赛季开始时间（毫秒）
local function GetSeasonStartTime(self)
    return self.seasonStartTime
end

-- 获取本赛季结算时间（毫秒）
local function GetSeasonSettleTime(self)
    return self.settleTime
end

-- 获取本赛季持续时间（天）
local function GetSeasonDurationDay(self)
    if self.seasonStartTime == 0 then
        return 0
    end
    
    local zeroTime = UITimeManager:GetInstance():GetTodayZeroServerTime(self.seasonStartTime // 1000) * 1000
    local curTime = UITimeManager:GetInstance():GetServerTime()
    local duration = math.max(curTime - zeroTime, 0)
    return duration // 86400000
end

local function SetEdenWarServerGroup(self,message)
    if message["serverGroup"]~=nil then
        self.edenWarServerGroup = {}
        local arr = message["serverGroup"]
        for k,v in pairs(arr) do
            local serverId = toInt(v)
            if serverId~=nil and serverId>0 then
                self.edenWarServerGroup[serverId] = 1
            end
        end
    end
end

local function GetEdenWarServerGroup(self)
    return self.edenWarServerGroup
end

local function GetIsInEdenWarServerGroup(self,serverId)
    if self.edenWarServerGroup[serverId]~=nil then
        return DataCenter.AccountManager:CheckIsInServerList(serverId)
    end
    return false
end

local function GetEdenCrossWarServerGroup(self)
    return self.edenCrossWarServerGroup
end
local function GetIsInEdenCrossWarServerGroup(self,serverId)
    if self.edenCrossWarServerGroup[serverId]~=nil then
        return DataCenter.AccountManager:CheckIsInServerList(serverId)
    end
    return false
end
local function SetEdenCrossWarServerGroup(self,message)
    if message["serverGroup"]~=nil then
        self.edenCrossWarServerGroup = {}
        local arr = message["serverGroup"]
        for k,v in pairs(arr) do
            local serverId = toInt(v)
            if serverId~=nil and serverId>0 then
                self.edenCrossWarServerGroup[serverId] = 1
            end
        end
    end
end
SeasonDataManager.__init = __init
SeasonDataManager.__delete = __delete
SeasonDataManager.StartUp = StartUp
SeasonDataManager.InitData = InitData
SeasonDataManager.GetMode = GetMode
SeasonDataManager.GetSeasonId = GetSeasonId
SeasonDataManager.GetSeason = GetSeason
SeasonDataManager.GetSeasonStartTime = GetSeasonStartTime
SeasonDataManager.GetSeasonSettleTime = GetSeasonSettleTime
SeasonDataManager.GetSeasonDurationDay = GetSeasonDurationDay
SeasonDataManager.SetEdenWarServerGroup = SetEdenWarServerGroup
SeasonDataManager.GetIsInEdenWarServerGroup =GetIsInEdenWarServerGroup
SeasonDataManager.GetEdenWarServerGroup = GetEdenWarServerGroup
SeasonDataManager.SetEdenCrossWarServerGroup = SetEdenCrossWarServerGroup
SeasonDataManager.GetIsInEdenCrossWarServerGroup = GetIsInEdenCrossWarServerGroup
SeasonDataManager.GetEdenCrossWarServerGroup = GetEdenCrossWarServerGroup
return SeasonDataManager