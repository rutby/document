---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by admin.
--- DateTime: 2024/3/29 11:07
---
local FirstOpenActivity = "FirstOpenActivity" --活动首次
local TodayLoginIn = "TodayLoginIn" --每日登录
local EveryTimeOpenActivity = "EveryTimeOpenActivity" --每次开启
local EveryDayLoginInTimers = "EveryDayLoginInTimers" --每日登录次数
local ActivityTipManager = BaseClass("ActivityTipManager");
local Setting = CS.GameEntry.Setting
local ShowState = {
    isShow = 0,
    NotShow = 1,
}

function ActivityTipManager:__init()
    self:AddListeners()
    self.entranceList = {}
    self.confDataList = {}
    self.isShowVitaOver = false  -- 1
    self.isShowLogInOver = false -- 2
    LocalController:instance():visitTable(TableName.ActivityTip, function(_, lineData)
        local confData = {
            id = lineData:getValue("id"),
            entranceType = lineData:getValue("type"),
            order = lineData:getValue("priority"),
        }
        table.insert(self.confDataList,confData)
    end)
    table.sort(self.confDataList,function(a, b)
        if a.entranceType ~= b.entranceType then
            return a.entranceType < b.entranceType
        elseif a.order ~= b.order then 
            return a.order < b.order
        else
            return a.id < b.id
        end
    end)
    self:InitDataList()
end

function ActivityTipManager:__delete()
    self:RemoveListeners()
end

function ActivityTipManager:Startup()
    
end

function ActivityTipManager:AddListeners()
    EventManager:GetInstance():AddListener(EventId.ActivityTipStateUpdate, self.GetCurrentShowTip)
end

function ActivityTipManager:RemoveListeners()
    EventManager:GetInstance():RemoveListener(EventId.ActivityTipStateUpdate, self.GetCurrentShowTip)
end

function ActivityTipManager:InitDataList()
    for i = 1, #self.confDataList do
        local template = self.confDataList[i]
        if not self.entranceList[template.entranceType] then
            self.entranceList[template.entranceType] = {}
        end
        template.activityType = GetTableData(TableName.ActivityTip, template.id, "activity_type")
        template.conditionType  = GetTableData(TableName.ActivityTip, template.id, "condition")
        template.tipsId = GetTableData(TableName.ActivityTip, template.id, "tips")
        template.tips_value = GetTableData(TableName.ActivityTip, template.id, "tips_value")
        template.btnName = GetTableData(TableName.ActivityTip, template.id, "btn_name")
        table.insert(self.entranceList[template.entranceType],template)
    end
end

--获取当前应该显示的数据
function ActivityTipManager.GetCurrentShowTip(flagIndex)
    local self = DataCenter.ActivityTipManager
    if flagIndex == 1 then
        self.isShowVitaOver = true
    end
    if flagIndex == 2 then
        self.isShowLogInOver = true
    end
    --Logger.LogError("LoginPop  ActivityTipManager "..tostring(self.isShowVitaOver).."   "..tostring(self.isShowLogInOver))
    if self.isShowLogInOver and self.isShowVitaOver then
        --Logger.LogError("LoginPop  ActivityTipManager UIActivityTip")
        self.showData = {}
        for type, dataList in pairs(self.entranceList) do
            local isFunctionOpen = false
            if type == ActivityTipEntranceType.activityEntrance then
                local unlockBtnLockType = DataCenter.UnlockBtnManager:GetShowBtnState(UnlockBtnType.Activity)
                if unlockBtnLockType == UnlockBtnLockType.Show and DataCenter.ActivityListDataManager:GetActivityOpenLv() and DataCenter.BuildManager.MainLv >= DataCenter.ActivityListDataManager:GetActivityOpenLv() then
                    isFunctionOpen = true
                end
            end
            --Logger.LogError("isFunctionOpen  "..tostring(isFunctionOpen).."  type "..type)
            if isFunctionOpen then
                for _, data in ipairs(dataList) do
                    local curShowState = self:GetLocalDataByCondition(data.entranceType,data.conditionType,data.activityType)
                    if curShowState == ShowState.isShow then
                        table.insert(self.showData,data)
                    end
                end
            end
        end
        if #self.showData > 0 then
            DataCenter.UIPopWindowManager:Push(UIWindowNames.UIActivityTip,{},self.showData)
        end
    end
end

function ActivityTipManager:GetCurPosByEntranceType(entranceType)
    local pos = Vector3.zero
    if entranceType == ActivityTipEntranceType.activityEntrance then
        pos = UIUtil.GetUIMainSavePos(UIMainSavePosType.Activity)
    elseif entranceType == ActivityTipEntranceType.welfareCenterEntrance then
        pos = UIUtil.GetUIMainSavePos(UIMainSavePosType.WelfareCenter)
    elseif entranceType == ActivityTipEntranceType.Another then
        
    end
    return pos
end

--根据触发条件和活动类型 获取是否显示 0显示 1 不显示 
function ActivityTipManager:GetLocalDataByCondition(entranceType,conditionType,activityType,activityId)
    local curActivityDaily = self:GetActivityDailyByEntrance(entranceType)
    if conditionType == ActivityTipConditionType.FirstActivityId then --活动id首次出现记录
        return Setting:GetPrivateInt(FirstOpenActivity..activityId, 0)
    elseif conditionType == ActivityTipConditionType.FirstActivityType then --活动type首次出现记录
        return Setting:GetPrivateInt(FirstOpenActivity..activityType, 0)
    elseif conditionType == ActivityTipConditionType.LoginInEveryDay then --每日首次登录
        local second = UITimeManager:GetInstance():GetServerSeconds()
        local today = UITimeManager:GetInstance():GetTimeToMD(second)
        return Setting:GetPrivateInt(TodayLoginIn..today..activityType, 0)
    elseif conditionType == ActivityTipConditionType.EveryTime then --每次登录
        return ShowState.isShow
    elseif conditionType == ActivityTipConditionType.CycleActivityEveryTime then --活动每次新开一轮提示
        local dataList = DataCenter.ActivityListDataManager:GetNowActivityDataByType(activityType)
        if table.count(dataList) > 0 then
            for _,data in pairs(dataList) do
                if data.activity_daily == curActivityDaily then
                    return  Setting:GetPrivateInt(EveryTimeOpenActivity..data.startTime..activityType, 0)
                end
            end
            --local actListData = dataList[1]
            --if actListData then
            --   return  Setting:GetPrivateInt(EveryTimeOpenActivity..actListData.startTime..activityType, 0)
            --end
        end
        return ShowState.NotShow
    end
end

function ActivityTipManager:ClickGoToEvent(data)
    self:SetLocalDataByEntranceType(data.entranceType)
    GoToUtil.GoActWindowByType(tonumber(data.activityType))
end

--点击前往按钮 此次对应入口类型的展示数据不在显示
function ActivityTipManager:SetLocalDataByEntranceType(entranceType)
    for _, data in pairs(self.showData) do
        if entranceType == data.entranceType then
            self:SetLocalDataByCondition(entranceType,data.conditionType,data.activityType)
        end
    end
end

--根据触发条件和活动类型 设置已经显示
function ActivityTipManager:SetLocalDataByCondition(entranceType,conditionType,activityType,activityId)
    local curActivityDaily = self:GetActivityDailyByEntrance(entranceType)
    if conditionType == ActivityTipConditionType.FirstActivityId then --活动id首次出现记录
        Setting:SetPrivateInt(FirstOpenActivity..activityId, 1)
    elseif conditionType == ActivityTipConditionType.FirstActivityType then --活动type首次出现记录
        Setting:SetPrivateInt(FirstOpenActivity..activityType, 1)
    elseif conditionType == ActivityTipConditionType.LoginInEveryDay then --每日首次登录
        local second = UITimeManager:GetInstance():GetServerSeconds()
        local today = UITimeManager:GetInstance():GetTimeToMD(second)
        Setting:SetPrivateInt(TodayLoginIn..today..activityType, 1)
    elseif conditionType == ActivityTipConditionType.EveryTime then --每次登录
        
    elseif conditionType == ActivityTipConditionType.CycleActivityEveryTime then --活动每次新开一轮提示
        local dataList = DataCenter.ActivityListDataManager:GetNowActivityDataByType(activityType)
        if table.count(dataList) > 0 then
            for _,data in pairs(dataList) do
                if data.activity_daily == curActivityDaily then
                    Setting:SetPrivateInt(EveryTimeOpenActivity..data.startTime..activityType, 1)
                end
            end
            --local actListData = dataList[1]
            --if actListData then
            --    Setting:SetPrivateInt(EveryTimeOpenActivity..actListData.startTime..activityType, 1)
            --end
        end
    end
end

--根据入口类型获得活动显示位置
function ActivityTipManager:GetActivityDailyByEntrance(entranceType)
    local curActivityDaily = 0
    if entranceType == ActivityTipEntranceType.activityEntrance then
        curActivityDaily = 0
    elseif entranceType == ActivityTipEntranceType.welfareCenterEntrance then
        curActivityDaily = 10
    end
    return curActivityDaily
end

return ActivityTipManager