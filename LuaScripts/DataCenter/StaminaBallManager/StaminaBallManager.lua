---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2023/6/25 10:50
---
local StaminaBallManager = BaseClass("StaminaBallManager");
local Localization = CS.GameEntry.Localization

local function __init(self)
    self.todayStamina = 0
    self.oldStamina = 0
    self.lastDayStamina = 0
    
    self.maxStamina = 0
    self.expDayParam = 0
    self.expDayPow = 0
    self.maxExpMuti = 0
end

local function __delete(self)
end

local function InitConfig(self)
    self.maxStamina = 0
    self.expDayParam = 0
    self.expDayPow = 0
    self.maxExpMuti = 0
    local k1 = LuaEntry.DataConfig:TryGetStr("stamina_bubble", "k1")
    local maxStaminaConfigArr = string.split(k1,"|")
    local k2 = LuaEntry.DataConfig:TryGetStr("stamina_bubble", "k2")
    local expDayParamConfigArr = string.split(k2,"|")
    local k3 = LuaEntry.DataConfig:TryGetStr("stamina_bubble", "k3")
    local expDayPowConfigArr = string.split(k3,"|")
    local k4 = LuaEntry.DataConfig:TryGetStr("stamina_bubble", "k4")
    local maxExpMutiConfigArr = string.split(k4,"|")
    local season = DataCenter.SeasonDataManager:GetSeason() or 0
    local index =season+1
    if #maxStaminaConfigArr>=index then
        self.maxStamina = tonumber(maxStaminaConfigArr[index]) or 0
    end
    if #expDayParamConfigArr>=index then
        self.expDayParam = tonumber(expDayParamConfigArr[index]) or 0
    end
    if #expDayPowConfigArr>=index then
        self.expDayPow = tonumber(expDayPowConfigArr[index]) or 0
    end
    if #maxExpMutiConfigArr>=index then
        self.maxExpMuti = tonumber(maxExpMutiConfigArr[index]) or 0
    end
end
local function InitStaminaData(self,message)
    if message == nil then
        return
    end
    if message["todayStamina"]~=nil then
        self.todayStamina = message["todayStamina"]
    else
        self.todayStamina = 0
    end
    if message["oldStamina"]~=nil then
        self.oldStamina = message["oldStamina"]
    else
        self.oldStamina = 0
    end
    if message["lastDayStamina"]~=nil then
        self.lastDayStamina = message["lastDayStamina"]
    else
        self.lastDayStamina = 0
    end
end

local function GetStaminaDataRequest(self)
    SFSNetwork.SendMessage(MsgDefines.UserGetStaminaBubble)
end
local function GetOldStamina(self)
    return self.oldStamina
end
local function GetTodayStamina(self)
    return self.todayStamina
end

local function GetExpByStamina(self,value)
    local expNum = 0
    local realStamina = value
    if realStamina>0 then
        local season = DataCenter.SeasonDataManager:GetSeason() or 0
        local openServerDays =0
        if season>0 then
            openServerDays = DataCenter.SeasonDataManager:GetSeasonDurationDay() + 1
        else
            local serverTimeS = UITimeManager:GetInstance():GetServerSeconds()
            local todayZero = UITimeManager:GetInstance():GetTodayZeroServerTime(serverTimeS)
            openServerDays = math.ceil((todayZero * 1000 - LuaEntry.Player.openServerTime) / (OneDayTime * 1000)) + 1
        end
        local seasonExpMuti = math.min((self.expDayParam*Mathf.Pow(openServerDays,self.expDayPow)),self.maxExpMuti)
        local effectValue = LuaEntry.Effect:GetGameEffect(EffectDefine.GLOBAL_HERO_EXP_EXTRA_PERCENT)
        expNum = math.min((Mathf.Round(seasonExpMuti*realStamina * (1 + effectValue / 100))),self.maxStamina)
    end
    return expNum
end

local function CheckShowRewardRed(self)
    if self:GetExpByStamina(self.oldStamina)>0 then
        return 1
    else
        return 0
    end
end

local function GetMaxStamina(self)
    return self.maxStamina
end
StaminaBallManager.__init = __init
StaminaBallManager.__delete = __delete
StaminaBallManager.GetOldStamina =GetOldStamina
StaminaBallManager.GetTodayStamina = GetTodayStamina
StaminaBallManager.InitConfig= InitConfig
StaminaBallManager.GetExpByStamina = GetExpByStamina
StaminaBallManager.InitStaminaData = InitStaminaData
StaminaBallManager.CheckShowRewardRed =CheckShowRewardRed
StaminaBallManager.GetStaminaDataRequest = GetStaminaDataRequest
StaminaBallManager.GetMaxStamina =GetMaxStamina
return StaminaBallManager