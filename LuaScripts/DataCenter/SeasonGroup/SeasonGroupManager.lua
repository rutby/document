---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2023/2/28 17:24
---

local SeasonGroupManager = BaseClass("SeasonGroupManager");
local SeasonGroupTemplate = require "DataCenter.SeasonGroup.SeasonGroupTemplate"

local function __init(self)
    self.templateDict = {}
    LocalController:instance():visitTable(TableName.SeasonGroup, function(id, lineData)
        local template = SeasonGroupTemplate.New()
        template:InitData(lineData)
        self.templateDict[id] = template
    end)
end

local function __delete(self)
    self.templateDict = nil
end

local function GetTemplate(self, season, serverId)
    for _, template in pairs(self.templateDict) do
        if template.season == season and table.hasvalue(template.serverIds, serverId) then
            return template
        end
    end
    return nil
end

local function GetTemplateById(self, id)
    return self.templateDict[id]
end

local function AreServersInSameGroup(self, serverIdA, serverIdB)
    local season = DataCenter.SeasonDataManager:GetSeason() or 0
    local templateA = self:GetTemplate(season, serverIdA)
    local templateB = self:GetTemplate(season, serverIdB)
    if templateA and templateB and templateA.id == templateB.id then
        return true
    end
    return false
end

SeasonGroupManager.__init = __init
SeasonGroupManager.__delete = __delete

SeasonGroupManager.GetTemplate = GetTemplate
SeasonGroupManager.GetTemplateById = GetTemplateById
SeasonGroupManager.AreServersInSameGroup = AreServersInSameGroup

return SeasonGroupManager
