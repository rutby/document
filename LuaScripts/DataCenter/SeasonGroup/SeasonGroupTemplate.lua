---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2023/2/28 17:24
---

local SeasonGroupTemplate = BaseClass("SeasonGroupTemplate")

local function __init(self)
    self.id = 0
    self.season = 0
    self.serverIds = {}
    self.battleStart = 0
    self.battleDays = {} -- Dict<weekDay, { isStart, canAttack }>
    self.stageDis = {} -- List<List<dialog>>
    self.closeTime = {}--Dict<startDay,continueDays>
end

local function __delete(self)
    self.id = 0
    self.season = 0
    self.serverIds = {}
    self.battleStart = 0
    self.battleDays = {} -- Dict<weekDay, { isStart, canAttack }>
    self.stageDis = {} -- List<List<dialog>>
    self.closeTime = {} --Dict<startDay,continueDays>
end

local function InitData(self,row)
    if row == nil then
        return
    end

    self.id = tonumber(row:getValue("id")) or 0
    self.season = tonumber(row:getValue("season")) or 0
    self.serverIds = {}
    local serverStr = row:getValue("server") or ""
    for _, str in ipairs(string.split(serverStr, ";")) do
        table.insert(self.serverIds, tonumber(str))
    end
    self.battleStart = tonumber(row:getValue("battle_start")) or 0
    self.battleDays = {}
    for i = 1, 7 do
        self.battleDays[i] = { isStart = false, canAttack = false }
    end
    local battleDayStr = row:getValue("battle_date") or ""
    for _, str in ipairs(string.split(battleDayStr, "|")) do
        local spls = string.split(str, ";")
        if #spls == 2 then
            local i = tonumber(spls[2])
            local canAttack = tonumber(spls[1]) == 1
            self.battleDays[i] = { isStart = true, canAttack = canAttack }
        end
    end
    self.stageDis = {}
    local stageDisStr = row:getValue("stage_dis") or ""
    if not string.IsNullOrEmpty(stageDisStr) then
        for _, str in ipairs(string.split(stageDisStr, "|")) do
            local list = {}
            for _, spl in ipairs(string.split(str, ";")) do
                table.insert(list, spl)
            end
            table.insert(self.stageDis, list)
        end
    end
    self.closeTime = {}
    local strTime = row:getValue("clos_time") or ""
    if not string.IsNullOrEmpty(strTime) then
        for _, str in ipairs(string.split(strTime, "|")) do
            local arr = string.split(str,";")
            local startDay = tonumber(arr[1])
            local continueDays = tonumber(arr[2])
            if startDay~=nil and continueDays~=nil and startDay>0 and continueDays>0 then
                local oneData = {}
                oneData.startDay = startDay
                oneData.continueDays = continueDays
                table.insert(self.closeTime,oneData)
            end
            
        end
    end
end

SeasonGroupTemplate.__init = __init
SeasonGroupTemplate.__delete = __delete
SeasonGroupTemplate.InitData = InitData

return SeasonGroupTemplate