---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2023/10/20 18:01
---
local UnityAdsManager = BaseClass("UnityAdsManager");
local rapidjson = require "rapidjson"
local function __init(self)
    self:AddListeners()
end

local function __delete(self)
    self:RemoveListeners()
end

local function AddListeners(self)
    EventManager:GetInstance():AddListener(EventId.UnityAdsUserEarnedReward, self.OnUAdsUserEarnedReward)
    EventManager:GetInstance():AddListener(EventId.UnityAdsUserSkipReward, self.OnUAdsUserUserSkipReward)
    EventManager:GetInstance():AddListener(EventId.UnityAdsUserCreateRewardedAdFail, self.OnUAdsUserCreateRewardedAdFail)
    EventManager:GetInstance():AddListener(EventId.UnityAdsUserCreateRewardedAdSuccess, self.OnUAdsUserCreateRewardedAdSuccess)
    EventManager:GetInstance():AddListener(EventId.UnityAdsUserClickAd, self.OnUAdsUserClickAd)
end

local function RemoveListeners(self)
    EventManager:GetInstance():RemoveListener(EventId.UnityAdsUserEarnedReward, self.OnUAdsUserEarnedReward)
    EventManager:GetInstance():RemoveListener(EventId.UnityAdsUserSkipReward, self.OnUAdsUserUserSkipReward)
    EventManager:GetInstance():RemoveListener(EventId.UnityAdsUserCreateRewardedAdFail, self.OnUAdsUserCreateRewardedAdFail)
    EventManager:GetInstance():RemoveListener(EventId.UnityAdsUserCreateRewardedAdSuccess, self.OnUAdsUserCreateRewardedAdSuccess)
    EventManager:GetInstance():RemoveListener(EventId.UnityAdsUserClickAd, self.OnUAdsUserClickAd)
end

local function Startup(self)
    if CS.GameEntry.Sdk.InitUnityAds~=nil then
        if CS.SDKManager.IS_UNITY_ANDROID() then
            if CommonUtil.IsXCity() then

            else
                CS.GameEntry.Sdk:InitUnityAds("5455035")
            end
        elseif CS.SDKManager.IS_UNITY_IPHONE() then
            if CommonUtil.IsXCity() then

            else
                CS.GameEntry.Sdk:InitUnityAds("5455034")
            end
        end
    end
end

local function OnUAdsUserEarnedReward(data)
    print("lua OnUAdsUserEarnedReward:" .. data)
    local strArr = string.split(data,",")
    if #strArr>0 then
        local str = strArr[1].."}"
        local t = rapidjson.decode(str)
        DataCenter.WatchAdManager:WatchFinish(t.templateId)
    end
end

local function OnUAdsUserUserSkipReward(data)
    print("lua OnUAdsUserUserSkipReward:" .. data)
end

local function OnUAdsUserCreateRewardedAdFail(data)
    print("lua OnUAdsUserCreateRewardedAdFail:" .. data)
    local strArr = string.split(data,",")
    if #strArr>0 then
        local str = strArr[1].."}"
        local t = rapidjson.decode(str)
        DataCenter.WatchAdManager:WatchFail(t.templateId)
    end
    
end

local function OnUAdsUserCreateRewardedAdSuccess(data)
    print("lua OnUAdsUserCreateRewardedAdSuccess:" .. data)
end

local function OnUAdsUserClickAd(data)
    print("lua OnGAdsUserClickAd:" .. data)
end


local function ShowRewarded(self,adId,templateId)
    local tbl = {}
    tbl["adId"] = adId
    tbl["templateId"] = templateId
    tbl["playerUid"] = LuaEntry.Player.uid
    local json = rapidjson.encode(tbl)
    CS.GameEntry.Sdk:SendDataToNative("UAds_adsRewardedAd", json)
end
UnityAdsManager.__init = __init
UnityAdsManager.__delete = __delete
UnityAdsManager.AddListeners = AddListeners
UnityAdsManager.RemoveListeners =RemoveListeners
UnityAdsManager.Startup =Startup
UnityAdsManager.OnUAdsUserEarnedReward =OnUAdsUserEarnedReward
UnityAdsManager.OnUAdsUserUserSkipReward =OnUAdsUserUserSkipReward
UnityAdsManager.OnUAdsUserCreateRewardedAdFail = OnUAdsUserCreateRewardedAdFail
UnityAdsManager.OnUAdsUserCreateRewardedAdSuccess = OnUAdsUserCreateRewardedAdSuccess
UnityAdsManager.OnUAdsUserClickAd =OnUAdsUserClickAd
UnityAdsManager.ShowRewarded =ShowRewarded
return UnityAdsManager