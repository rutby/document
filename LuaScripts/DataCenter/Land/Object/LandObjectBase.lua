---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2024/1/9 11:17
---

local LandObjectBase = BaseClass("LandObjectBase")
local Resource = CS.GameEntry.Resource

local function __init(self, objType, id)
    self.objType = objType
    self.id = id
    self.modelNames = {}
    self.modelReqs = {}
    self.changeModelTotalCount = 0
    self.changeModelFinishCount = 0
    self.changeModelCallback = nil
end

local function __delete(self)
    
end

local function Create(self, callback)
    self.changeModelFinishCount = 0
    self.changeModelCallback = callback
    
    self.req = Resource:InstantiateAsync(LandObjectPrefab[self.objType])
    self.req:completed('+', function()
        self:CreateCallbackInternal()
        self:Refresh()
    end)
end

local function CreateCallbackInternal(self)
    self.gameObject = self.req.gameObject
    self.gameObject.name = "Land" .. self.objType .. "_" .. self.id
    self.transform = self.gameObject.transform
    self.transform:SetParent(CS.SceneManager.World.DynamicObjNode)
    self.transform.position = DataCenter.LandManager:GetObjectPos(self.objType, self.id)
    self.transform.rotation = DataCenter.LandManager:GetObjectRot(self.objType, self.id)
    self.rootGo = self.transform:Find("Root").gameObject
    local triggerTf = self.transform:Find("Root/Trigger")
    if triggerTf then
        self.trigger = triggerTf:GetComponent(typeof(CS.TouchObjectEventTrigger))
    end
    if self.trigger then
        self.trigger.onPointerClick = function()
            self:OnClick()
        end
        self.trigger.onPointerDoubleClick = function()
            self:OnClick()
        end
    end
    
end

local function Destroy(self)
    if self.trigger then
        self.trigger.onPointerClick = nil
        self.trigger.onPointerDoubleClick = nil
    end
    self:ClearModel()
    if self.req then
        self.req:Destroy()
        self.req = nil
    end
end

local function Refresh(self)
    
end

local function ChangeModel(self, index, modelName, callback, callbackOnce)
    if self.modelNames[index] == modelName then
        self:ChangeModelCallbackInternal(index)
        if self.modelReqs[index] and not IsNull(self.modelReqs[index].gameObject) then
            if callback then
                callback(self.modelReqs[index].gameObject)
            end
        end
        return
    end
    self.modelNames[index] = modelName
    if not string.IsNullOrEmpty(modelName) then
        if self.modelReqs[index] then
            self.modelReqs[index]:Destroy()
        end
        self.modelReqs[index] = Resource:InstantiateAsync(string.format(LoadPath.LandObjectModel, modelName))
        self.modelReqs[index]:completed('+', function(req)
            local go = req.gameObject
            go.name = modelName

            self:ChangeModelCallbackInternal(index)
            if callback then
                callback(go)
            end
            if callbackOnce then
                callbackOnce(go)
            end
        end)
    else
        self:ChangeModelCallbackInternal(index)
        if self.modelReqs[index] then
            self.modelReqs[index]:Destroy()
            self.modelReqs[index] = nil
        end
    end
end

local function ChangeModelCallbackInternal(self, index)
    self.changeModelFinishCount = self.changeModelFinishCount + 1
    if self.changeModelFinishCount == self.changeModelTotalCount then
        if self.changeModelCallback then
            self.changeModelCallback()
        end
    end
end

local function ClearModel(self)
    for _, req in pairs(self.modelReqs) do
        req:Destroy()
        req = nil
    end
end

local function MoveModel(self, index, pos, duration)
    local go = self.modelReqs[index].gameObject
    local tf = go.transform
    return tf:DOMove(pos, duration):SetEase(CS.DG.Tweening.Ease.Linear)
end

local function OnClick(self)
    
end

LandObjectBase.__init = __init
LandObjectBase.__delete = __delete

LandObjectBase.Create = Create
LandObjectBase.CreateCallbackInternal = CreateCallbackInternal
LandObjectBase.Destroy = Destroy
LandObjectBase.Refresh = Refresh
LandObjectBase.ChangeModel = ChangeModel
LandObjectBase.ChangeModelCallbackInternal = ChangeModelCallbackInternal
LandObjectBase.ClearModel = ClearModel
LandObjectBase.MoveModel = MoveModel
LandObjectBase.OnClick = OnClick

return LandObjectBase
