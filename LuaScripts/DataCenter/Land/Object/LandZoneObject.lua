---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2024/1/9 10:21
---

local base = require "DataCenter.Land.Object.LandObjectBase"
local LandLockObject = BaseClass("LandLockObject", base)
local LandRewardObject = require "DataCenter.Land.Object.LandRewardObject"
local ZoneFogOffsetX = 0.9 -- 坐标是右上角的中心点，所以再向右上偏移半格
local ZoneFogOffsetZ = 0.9 -- 坐标是右上角的中心点，所以再向右上偏移半格
local ZoneEffectY = -1.4
local function __init(self, objType, id)
    base.__init(self, objType, id)
    self.changeModelTotalCount = 2
    self.rewardObjs = {}
    self.bubbleObj = nil
end

local function Destroy(self)
    self:DestroyAllRewardObject()
    base.Destroy(self)
end

local function CreateCallbackInternal(self)
    base.CreateCallbackInternal(self)
    self.trigger.gameObject:SetActive(false)
end

local function Refresh(self)
    base.Refresh(self)
    self.bubbleObj = nil
    local config = DataCenter.LandManager:GetConfig(self.objType, self.id)
    local state = DataCenter.LandManager:GetState(self.objType, self.id)
    if state == LandState.Unexplored or state == LandState.Unaccessible then
        -- 未通过
        self:ChangeModel(1, config.model)
        self:ChangeModel(2, config.model_normal)
        self:DestroyAllRewardObject()
        self.trigger.gameObject:SetActive(false)
    elseif state == LandState.Accessible then
        -- 已通过
        self:ChangeModel(1, config.model)
        self:ChangeModel(2, config.model_normal)
        self:RefreshAllRewardObject()
        self.trigger.gameObject:SetActive(false)
    elseif state == LandState.Cleared then
        -- 已通过
        local mainPos = SceneUtils.TileToWorld(BuildingUtils.GetMainPos(), ForceChangeScene.City)
        local subConfig = config.unlock_vfx[1]
        local x = mainPos.x + subConfig[1] + ZoneFogOffsetX
        local z = mainPos.z + subConfig[2] + ZoneFogOffsetZ
        local width = subConfig[3]
        local height = subConfig[4]
        local centerX = x - width / 2
        local centerZ = z - height / 2
        local pos = Vector3.New(centerX, ZoneEffectY, centerZ)
        
        self:ChangeModel(1,"unlock_range",function(obj)
            local go = obj
            local tf = go.transform
            tf.position = pos
            tf.rotation = Quaternion.identity
            tf.localScale = Vector3.New(width, math.max(width, height), height) * 0.55
        end)
        self:ChangeModel(2, "unlock_range_bubble", function(obj)
            local go = obj
            local tf = go.transform
            tf.position = pos
            tf.rotation = Quaternion.identity
            self.bubbleObj = tf:Find("icon_go")
        end)
        self:RefreshAllRewardObject()
        if self.trigger.gameObject~=nil then
            local tf = self.trigger.gameObject.transform
            tf.position = pos
            tf.rotation = Quaternion.identity
            tf.localScale = Vector3.New(width, math.max(width, height), height) * 0.55
        end
        self.trigger.gameObject:SetActive(true)
    elseif state == LandState.Unlocked then
        -- 已解锁
        self:ChangeModel(1, config.model)
        self:ChangeModel(2, config.model_clear)
        self:RefreshAllRewardObject()
        self.trigger.gameObject:SetActive(false)
    end
end

local function ChangeModelCallbackInternal(self, index)
    base.ChangeModelCallbackInternal(self, index)
    
    if self.modelReqs[index] == nil or IsNull(self.modelReqs[index].gameObject) then
        return
    end
    
    local go = self.modelReqs[index].gameObject
    local tf = go.transform
    tf:SetParent(self.transform)
    tf.localScale = Vector3.one
    tf.position = Vector3.zero
    tf.rotation = Quaternion.identity
end

local function RefreshAllRewardObject(self)
    local config = DataCenter.LandManager:GetConfig(self.objType, self.id)
    if config.land_reward then
        for _, rewardIds in ipairs(config.land_reward) do
            for _, rewardId in ipairs(rewardIds) do
                local rewardState = DataCenter.LandManager:GetState(LandObjectType.Reward, rewardId)
                if rewardState == LandState.Accessible then
                    self:CreateRewardObject(rewardId)
                else
                    self:DestroyRewardObject(rewardId)
                end
            end
        end
    end
end

local function DestroyAllRewardObject(self)
    for _, obj in pairs(self.rewardObjs) do
        obj:Destroy()
    end
    self.rewardObjs = {}
end

local function CreateRewardObject(self, rewardId)
    if self.rewardObjs[rewardId] then
        return
    end
    local obj = LandRewardObject.New(LandObjectType.Reward, rewardId)
    obj:Create(function()
        obj.transform:SetParent(self.rootGo.transform)
        obj.transform.position = DataCenter.LandManager:GetObjectPos(LandObjectType.Reward, rewardId)
        obj.transform.rotation = DataCenter.LandManager:GetObjectRot(LandObjectType.Reward, rewardId)
        obj.transform.localScale = Vector3.one
    end)
    self.rewardObjs[rewardId] = obj
end

local function DestroyRewardObject(self, rewardId)
    if self.rewardObjs[rewardId] == nil then
        return
    end
    local obj = self.rewardObjs[rewardId]
    obj:Destroy()
    self.rewardObjs[rewardId] = nil
end

local function PlayUnlock(self, rewardId)
    local config = DataCenter.LandManager:GetConfig(self.objType, self.id)
    self:CreateRewardObject(rewardId)
    self:ChangeModel(2, config.model_clear)
end


local function OnClick(self)
    base.OnClick(self)

    if DataCenter.LandManager.isPlayingUnlock then
        return
    end

    local fogType = DataCenter.LandManager:GetFogType(self.objType, self.id)
    local state = DataCenter.LandManager:GetState(self.objType, self.id)
    local config = DataCenter.LandManager:GetConfig(self.objType, self.id)
    Logger.Log("LandZoneObject id = " .. self.id .. ", state = " .. state .. ", fogType = " .. fogType)
    if state == LandState.Cleared then
        DataCenter.LandManager:SendUnlockZone(self.id)
    end
    
    local param = {}
    param.landId = self.id
    DataCenter.GuideManager:SetCompleteNeedParam(param)
    DataCenter.GuideManager:CheckGuideComplete()
end

function LandLockObject:GetTriggerObj()
    return self.trigger.gameObject
end

function LandLockObject:GetBubbleObj()
    if self.bubbleObj ~= nil then
        return self.bubbleObj.gameObject
    end
    return nil
end

LandLockObject.__init = __init
LandLockObject.Destroy = Destroy
LandLockObject.CreateCallbackInternal = CreateCallbackInternal
LandLockObject.Refresh = Refresh
LandLockObject.ChangeModelCallbackInternal = ChangeModelCallbackInternal

LandLockObject.RefreshAllRewardObject = RefreshAllRewardObject
LandLockObject.DestroyAllRewardObject = DestroyAllRewardObject
LandLockObject.CreateRewardObject = CreateRewardObject
LandLockObject.DestroyRewardObject = DestroyRewardObject
LandLockObject.PlayUnlock = PlayUnlock
LandLockObject.OnClick= OnClick
return LandLockObject
