---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2021/8/10 10:32
---
---
local BuildRobotData = BaseClass("BuildRobotData")
local RobotSkillInfo = require "DataCenter.BuildQueueManager.RobotSkillInfo"
function BuildRobotData:__init()
    self.uuid = 0
    self.index =0
    self.endTime = 0 --过期时间
    self.occupyUuid = 0 --建筑uuid
    self.robotId = 0
    self.state = RobotState.FREE
    self.buildExp = 0
    self.scienceExp =0
    self.skills = {}
    self.effectDict = {}
    self.expireTime = 0--雇佣时间为0表示永久
end

function BuildRobotData:__delete()
    self.uuid = 0
    self.index =0
    self.endTime = 0 --过期时间
    self.occupyUuid = 0 --建筑uuid
    self.robotId = 0
    self.state = RobotState.FREE
    self.buildExp = 0
    self.scienceExp =0
    self.skills = {}
    self.effectDict = {}
    self.expireTime = 0--雇佣时间为0表示永久
end
function BuildRobotData:ParseData(message)
    if message == nil then
        return
    end
    if message["uuid"]~=nil  then
        self.uuid = message["uuid"]
    end
    if message["endTime"]~=nil  then
        self.endTime = message["endTime"]
    end
    if message["occupyUuid"]~=nil  then
        self.occupyUuid = message["occupyUuid"]
    end
    if message["robotId"]~=nil  then
        self.robotId = message["robotId"]
    end
    if message["state"]~=nil  then
        self.state = message["state"]
    end
    if message["buildExp"]~=nil  then
        self.buildExp = message["buildExp"]
    end
    if message["scienceExp"]~=nil  then
        self.scienceExp = message["scienceExp"]
    end
    if message["skills"]~=nil  then
        self.skills = {}
        local skills = message["skills"]
        table.walk(skills,function(k,v)
            local oneData = RobotSkillInfo.New()
            oneData:ParseData(v)
            table.insert(self.skills,oneData)
        end)
        
    end
    if message["effect"]~=nil  then
        self.effectDict ={}
        for k, v in pairs(message["effect"]) do
            local effectId = tonumber(k)
            local effectValue = tonumber(v)
            self.effectDict[effectId] = effectValue
        end
    end
    if message["expireTime"]~=nil  then
        self.expireTime = message["expireTime"]
    end
    self.index = GetTableData(TableName.Robot,self.robotId,"order")
    self.giftId = toInt(GetTableData(TableName.Robot,self.robotId,"gift"))
    self:CheckIsFree()
end

function BuildRobotData:CheckIsFree()
    if self.occupyUuid~=0 then
        local buildData = DataCenter.BuildManager:GetBuildingDataByUuid(self.occupyUuid)
        if buildData ==nil then
            if self.state == RobotState.BUILD then
                local curTime = UITimeManager:GetInstance():GetServerTime()
                if curTime < self.endTime then
                    return
                end
            end
            self:ResetQueue()
        else
            if self.state == RobotState.BUILD then
                if buildData:IsUpgrading()==false and buildData:IsUpgradeFinish()==false and buildData:IsInFix() ==false and buildData:IsFixFinish() == false then
                    self:ResetQueue()
                end
            end
        end
    end
end
function BuildRobotData:ResetQueue()
    self.occupyUuid = 0
    self.state = RobotState.FREE
end

function BuildRobotData:HandleEffect(effect)
    for k, v in pairs(effect) do
        local effectId = tonumber(k)
        local effectValue = tonumber(v)
        self.effectDict[effectId] = effectValue
    end
end

function BuildRobotData:GetEffectValue(effectId)
    if self.effectDict[effectId]~=nil then
        return self.effectDict[effectId]
    else
        return 0
    end
end

--是否可以使用
function BuildRobotData:CanUse()
    if self.occupyUuid ~= 0 then
        return false
    end

    if self.expireTime ~= 0 then
        local curTime = UITimeManager:GetInstance():GetServerTime()
        if self.expireTime > curTime then
            return true
        end
        return false
    end
    
    return true
end

return BuildRobotData