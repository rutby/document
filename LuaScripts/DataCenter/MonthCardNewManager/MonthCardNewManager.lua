---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2021/11/3 21:48
---

local MonthCardNewManager = BaseClass("MonthCardNewManager");
local CaravanRecordSendArr = require "DataCenter.MonthCardNewManager.CaravanRecordSendArr"
local CaravanRecordReceiveArr = require "DataCenter.MonthCardNewManager.CaravanRecordReceiveArr"
local function __init(self)
    self.golloesMonthCard = nil
    self.sendArr = {}
    self.receiveArr = {}
    self:AddListener()
    self.alreadyClick = false
end

local function __delete(self)
    self.alreadyClick = false
    self.golloesMonthCard = nil
    self.sendArr = {}
    self.receiveArr = {}
    self:RemoveListener()
end

local function AddListener(self)
    EventManager:GetInstance():AddListener(EventId.OnPackageInfoUpdated, self.ResetGolloesMonthCardPack)
end

local function ResetGolloesMonthCardPack()
    local manager = DataCenter.MonthCardNewManager
    if manager.golloesMonthCard then
        manager.golloesMonthCard.packageData = GiftPackageData.get(manager.golloesMonthCard.monthCardId)
    end
end


local function RemoveListener(self)
    EventManager:GetInstance():RemoveListener(EventId.OnPackageInfoUpdated, self.ResetGolloesMonthCardPack)
end

local function InitGolloesMonthCard(self, message)
    if not self.golloesMonthCard then
        self.golloesMonthCard = MonthCardNewInfo.New()
        self.golloesMonthCard:SetMonthCardId("9007")--月卡写死
    end
    
    if not message then
        return
    end
    if not message["golloesMonthCard"] then
        return
    end

    self.golloesMonthCard:ParseData(message["golloesMonthCard"])
end

local function UpdateMonthCardData(self, message)
    if not message then
        return
    end
    if message["golloesMonthCard"] then
        if not self.golloesMonthCard then
            self.golloesMonthCard = MonthCardNewInfo.New()
        end
        self.golloesMonthCard:ParseData(message["golloesMonthCard"])
    end
    if message["gold"] then
        LuaEntry.Player.gold = message["gold"]
        EventManager:GetInstance():Broadcast(EventId.UpdateGold)
    end
    EventManager:GetInstance():Broadcast(EventId.MonthCardInfoUpdated)
    EventManager:GetInstance():Broadcast(EventId.RefreshWelfareRedDot)
end

local function GetGolloesMonthCard(self)
    return self.golloesMonthCard
end

local function CheckIfMonthCardActive(self)
    if self.golloesMonthCard and self.golloesMonthCard:IsBought() then
        return true
    else
        return false
    end
end

local function CheckIfHasGolloesGift(self)
    if not self:CheckIfMonthCardActive() then
        return false
    end
    return not self.golloesMonthCard:IsTodayClaimed()
end


local function GetGolloesHeadBg(self)
    if self:CheckIfMonthCardActive() then
        return "Common_playerbg_golloes"
    end
end

local function HasClickBubble(self)
    return self.alreadyClick
end
local function OnClickBubble(self)
    self.alreadyClick = true
end
--是否显示咕噜月卡入口
local function CheckIfGolloesMonthCardAvailable(self)
    return self.golloesMonthCard~=nil and self.golloesMonthCard.packageData~=nil
end

local function InitCaravanRecord(self,message)
    self.sendArr = {}
    self.receiveArr = {}
    if message["sendArr"] then
        for i = 1 ,table.count(message["sendArr"]) do
            local sendArr = CaravanRecordSendArr.New()
            sendArr:ParseData(message["sendArr"][i])
            table.insert(self.sendArr,sendArr)
        end
    end
    if message["receiveArr"] then
        for i = 1 ,table.count(message["receiveArr"]) do
            local receiveArr = CaravanRecordReceiveArr.New()
            receiveArr:ParseData(message["receiveArr"][i])
            table.insert(self.receiveArr,receiveArr)
        end
    end
    EventManager:GetInstance():Broadcast(EventId.ColloesCaravanRecord)
end

local function GetCaravanRecord(self,type)
    if type == 1 then
        return self.sendArr
    elseif type == 2 then
        return self.receiveArr
    end
end

local function CheckIsShowRed(self)
    --上一次查看的时间
    local lastTime = CS.GameEntry.Setting:GetString("Golloes_Receive_" .. LuaEntry.Player.uid, "")
    if lastTime == "" then
        lastTime = 0
    end
    local isNew = false
    if lastTime and lastTime ~= "" then
        for i = 1 ,table.count(self.receiveArr) do
            if self.receiveArr[i].time > tonumber(lastTime) then
                isNew = true
                self.receiveArr[i]:SetNewState(true)
            end
        end
        if isNew then
            return true
        end
    end
    return false
end

MonthCardNewManager.__init = __init
MonthCardNewManager.__delete = __delete
MonthCardNewManager.UpdateMonthCardData = UpdateMonthCardData
MonthCardNewManager.InitGolloesMonthCard = InitGolloesMonthCard
MonthCardNewManager.GetGolloesMonthCard = GetGolloesMonthCard
MonthCardNewManager.CheckIfMonthCardActive = CheckIfMonthCardActive
MonthCardNewManager.GetGolloesHeadBg = GetGolloesHeadBg
MonthCardNewManager.CheckIfHasGolloesGift = CheckIfHasGolloesGift
MonthCardNewManager.CheckIfGolloesMonthCardAvailable = CheckIfGolloesMonthCardAvailable
MonthCardNewManager.AddListener = AddListener
MonthCardNewManager.RemoveListener = RemoveListener
MonthCardNewManager.ResetGolloesMonthCardPack = ResetGolloesMonthCardPack

MonthCardNewManager.InitCaravanRecord = InitCaravanRecord
MonthCardNewManager.GetCaravanRecord = GetCaravanRecord
MonthCardNewManager.CheckIsShowRed = CheckIsShowRed
MonthCardNewManager.HasClickBubble = HasClickBubble
MonthCardNewManager.OnClickBubble = OnClickBubble
return MonthCardNewManager