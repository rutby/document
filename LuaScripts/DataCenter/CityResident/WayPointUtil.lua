---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2024/4/16 11:43
---

local WayPointUtil = {}

function WayPointUtil.GetRandomPos(mask, flag, arg)
    local pos = MainPos
    local ok, err = pcall(function()
        pos = CS.CityResidentPathUtil.GetRandomPos(mask, flag, arg)
    end)
    if not ok then
        Logger.Log("WayPointUtil GetRandomPos error: mask = " .. mask .. ", flag = " .. flag .. ", arg = " .. (arg or "nil") .. ", err = " .. err)
    end
    return pos
end

function WayPointUtil.GetNearWayPoint(pos, mask, flag, arg)
    local wayPoint = nil
    local ok, err = pcall(function()
        wayPoint = CS.CityResidentPathUtil.GetNearWayPoint(pos, mask, flag, arg)
    end)
    if not ok then
        Logger.Log("WayPointUtil GetNearWayPoint error: mask = " .. mask .. ", flag = " .. flag .. ", arg = " .. (arg or "nil") .. ", err = " .. err)
    end
    return wayPoint
end

function WayPointUtil.GetOneWayPointByMask(mask, flag, arg)
    local wayPoint = nil
    local ok, err = pcall(function()
        wayPoint = CS.CityResidentPathUtil.GetOneWayPointByMask(mask, flag, arg)
    end)
    if not ok then
        Logger.Log("WayPointUtil GetOneWayPointByMask error: mask = " .. mask .. ", flag = " .. flag .. ", arg = " .. (arg or "nil") .. ", err = " .. err)
    end
    return wayPoint
end

function WayPointUtil.GetWayPointsByMask(mask, flag, arg)
    local wayPoints = nil
    local ok, err = pcall(function()
        wayPoints = CS.CityResidentPathUtil.GetWayPointsByMask(mask, flag, arg)
    end)
    if not ok then
        Logger.Log("WayPointUtil GetWayPointsByMask error: mask = " .. mask .. ", flag = " .. flag .. ", arg = " .. (arg or "nil") .. ", err = " .. err)
    end
    return wayPoints
end

function WayPointUtil.GetWayPointArg(wayPoint, key)
    if wayPoint.args and wayPoint.args.Count > 0 then
        for i = 0, wayPoint.args.Count -1 do
            local spls = string.split(wayPoint.args[i], "=")
            if #spls == 2 then
                if tostring(key) == spls[1] then
                    return spls[2]
                end
            end
        end
    end
    return ""
end

return WayPointUtil
