---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2023/11/23 10:52
---
 
local CityResidentStateBase = require "DataCenter.CityResident.CityResidentState.CityResidentStateBase"
local CityResidentStateSleep = BaseClass("CityResidentStateSleep", CityResidentStateBase)

local EnterInterval = 10

local function OnEnter(self)
    local fUuid, index = DataCenter.CityResidentManager.occupyMgr:TryOccupyBed(self.data.uuid)
    if fUuid ~= 0 then
        local furnitureTf = DataCenter.FurnitureObjectManager:GetTransformByFurnitureUuid(fUuid)
        if furnitureTf then
            local isOdd = (index % 2 == 1)
            local pos = furnitureTf.position
            pos.y = isOdd and 0.11 or 0.61 -- 上下铺
            local eulerAngles = furnitureTf.eulerAngles
            eulerAngles.y = eulerAngles.y - 180
            self.data:SetPos(pos)
            self.data:SetRot(Quaternion.Euler(eulerAngles.x, eulerAngles.y, eulerAngles.z))
            self.data:Idle()
            if DataCenter.CityResidentManager.occupyMgr:GetBedCapacity(fUuid) <= 1 then
                self.data:PlayAnim(CityResidentDefines.AnimName.Scratch)
            else
                self.data:PlayAnim(CityResidentDefines.AnimName.Sleep)
            end

            --local offset = Vector3.New(isOdd and 0 or -20, 70, 0)
            --self:ShowFurnitureResidentSlider(fUuid, nil, offset)
            
            self.fUuid = fUuid
            self.enterCd = 0
            return
        end
    end
    
    self.data:SetState(CityResidentDefines.State.GoToIdle)
end

local function OnExit(self)
    local pos = self.data:GetPos()
    pos.y = 0
    self.data:SetPos(pos)
    --DataCenter.CityHudManager:Destroy(self.data.uuid, CityHudType.ResidentSlider)
    
    EventManager:GetInstance():Broadcast(EventId.CityResidentExitFurniture, { rUuid = self.data.uuid, fUuid = self.fUuid })
end

local function OnUpdate(self, deltaTime)
    self.enterCd = self.enterCd - deltaTime
    if self.enterCd <= 0 then
        EventManager:GetInstance():Broadcast(EventId.CityResidentEnterFurniture, { rUuid = self.data.uuid, fUuid = self.fUuid })
        self.enterCd = EnterInterval
    end
end

CityResidentStateSleep.OnEnter = OnEnter
CityResidentStateSleep.OnExit = OnExit
CityResidentStateSleep.OnUpdate = OnUpdate

return CityResidentStateSleep