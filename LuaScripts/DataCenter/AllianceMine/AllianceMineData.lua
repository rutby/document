---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2022/12/8 16:37
---AllianceMineData.lua

local AllianceMineData = BaseClass("AllianceMineData")

local function __init(self)
    self.uuid = 0
    self.buildId = 0
    self.status = AllianceMineStatus.Normal
    self.pointId = 0
    self.level = 0
    self.alAbbr = ""
    self.alName = ""
    self.flag = ""
    self.allianceId = ""
    self.durability = 0
    self.lastBuildTime = 0--Constructing ;联盟建筑为耐久开始恢复时间
    --联盟矿
    self.buildSpeed = 0--Constructing
    self.soldierNum = 0--Constructing
    self.soldierMax = 0--Constructing
    self.initNum = 1--Normal
    self.remainNum = 0--Normal
    self.collectSpeed = 0--Normal
    self.expireTime = 0--Normal
    self.srcServerId = 0
    self.curServerId = 0
    self.posV2 = {}
    self.posV2.x = 0
    self.posV2.y = 0
    self.battleStartTime = 0
end

local function __delete(self)
    self.uuid = nil
    self.buildId = nil
    self.status = nil
    self.pointId = nil
    self.level = nil
    self.alAbbr = nil
    self.allianceId = nil
    self.durability = nil
    self.lastBuildTime = nil
    self.buildSpeed = nil
    self.soldierNum = nil
    self.soldierMax = nil
    self.initNum = nil
    self.remainNum = nil
    self.collectSpeed = nil
    self.expireTime = nil
    self.battleStartTime = nil
end

local function ParseData(self,message)
    if message ==nil then
        return
    end
    if message["uuid"] then
        self.uuid = message["uuid"]
    end
    if message["buildId"] then
        self.buildId = message["buildId"]
    end
    if message["status"] then
        self.status = message["status"]
    end
    if message["pointId"] then
        self.pointId = message["pointId"]
    end
    if message["level"] then
        self.level = message["level"]
    end
    if message["alAbbr"] then
        self.alAbbr = message["alAbbr"]
    end
    if message["alName"] then
        self.alName = message["alName"]
    end
    if message["icon"] then
        self.flag = message["icon"]
    end
    if message["allianceId"] then
        self.allianceId = message["allianceId"]
    end
    if message["durability"] then
        self.durability = message["durability"]
    end
    if message["lastBuildTime"] then
        self.lastBuildTime = message["lastBuildTime"]
    end
    if message["buildSpeed"] then
        self.buildSpeed = message["buildSpeed"]
    end
    if message["soldierNum"] then
        self.soldierNum = message["soldierNum"]
    end
    if message["soldierMax"] then
        self.soldierMax = message["soldierMax"]
    end
    if message["initNum"] then
        self.initNum = message["initNum"]
    end
    if message["remainNum"] then
        self.remainNum = message["remainNum"]
    end
    if message["collectSpeed"] then
        self.collectSpeed = message["collectSpeed"]
    end
    if message["expireTime"] then
        self.expireTime = message["expireTime"]
    end
    if message["srcServer"] then
        self.srcServerId = message["srcServer"]
    end
    if message["serverId"] then
        self.curServerId = message["serverId"]
    end
    if message["battleStartTime"] then
        self.battleStartTime = message["battleStartTime"]
    end
    local size = GetTableData(TableName.AllianceMine,self.buildId, "res_size")
    self.posV2 = SceneUtils.IndexToTilePos(self.pointId,ForceChangeScene.World)
    if size~=nil then
        local tile = math.floor(size/2)
        self.posV2.x = self.posV2.x-tile
        self.posV2.y = self.posV2.y-tile
    end
end

local function GetConstructDurability(self)
    if WorldAllianceBuildUtil.IsAllianceMineGroup(self.buildId) ==true then
        if self.status == AllianceMineStatus.Constructing then
            local curTime = UITimeManager:GetInstance():GetServerTime()
            local temp = self.durability + (curTime - self.lastBuildTime) / 1000 * self.buildSpeed
            return temp
        end
    end
    return 0
end

local function GetAllianceCenterDurability(self)
    if WorldAllianceBuildUtil.IsAllianceCenterGroup(self.buildId) ==true then
        local curTime = UITimeManager:GetInstance():GetServerTime()
        local temp = self.durability + (curTime - self.lastBuildTime) / 1000 * self.buildSpeed
        return temp
    end
    return 0
end
local function GetAllianceFrontDurability(self)
    if WorldAllianceBuildUtil.IsAllianceFrontGroup(self.buildId) ==true then
        local curTime = UITimeManager:GetInstance():GetServerTime()
        local temp = self.durability + (curTime - self.lastBuildTime) / 1000 * self.buildSpeed
        return temp
    end
    return 0
end

AllianceMineData.__init = __init
AllianceMineData.__delete = __delete
AllianceMineData.ParseData = ParseData
AllianceMineData.GetConstructDurability = GetConstructDurability
AllianceMineData.GetAllianceCenterDurability = GetAllianceCenterDurability
AllianceMineData.GetAllianceFrontDurability =GetAllianceFrontDurability
return AllianceMineData
