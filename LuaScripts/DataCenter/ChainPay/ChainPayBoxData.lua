---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2023/1/6 17:20
---

local ChainPayBoxData = BaseClass("ChainPayBoxData")
local Localization = CS.GameEntry.Localization

local function __init(self)
    self.data = nil
    self.id = 0
    self.rewardArrs = {}
    self.index = 0
    self.exchangeIds = {}
    self.state = ChainPayBoxState.Default
    self.group = 0
end

local function __delete(self)
    self.data = nil
    self.id = nil
    self.rewardArrs = nil
    self.index = nil
    self.exchangeIds = nil
    self.state = nil
    self.group = nil
end

local function IsFree(self)
    local exchangeId = self:GetExchangeId()
    return exchangeId == nil
end

local function GetPack(self)
    local exchangeId = self:GetExchangeId()
    if exchangeId ~= nil then
        return GiftPackManager.get(exchangeId)
    else
        return nil
    end
end

local function GetPriceText(self)
    local exchangeId = self:GetExchangeId()
    if exchangeId ~= nil then
        if self.state == ChainPayBoxState.Default then
            local pack = self:GetPack()
            if pack then
                return DataCenter.PayManager:GetDollarText(pack:getPrice(), pack:getProductID())
            end
        elseif self.state == ChainPayBoxState.Unlocked then
            return Localization:GetString("170004")
        end
    else
        return Localization:GetString("130126")
    end
    return ""
end

local function GetRewards(self)
    local index = self:GetGroupIndex()
    local rewardArr = self.rewardArrs[index] or {}
    local rewards = DataCenter.RewardManager:ReturnRewardParamForView(rewardArr)
    if not table.IsNullOrEmpty(rewards) then
        return rewards
    end
    
    local pack = self:GetPack()
    if pack then
        return DataCenter.RewardManager:ParsePackReward(pack)
    end
    
    return {}
end

local function GetExchangeId(self)
    local index = self:GetGroupIndex()
    return self.exchangeIds[index]
end

local function GetGroupIndex(self)
    local index = self.data.groupDict[self.group] or 0
    return index + 1
end

local function CanRefresh(self)
    -- 允许循环刷新
    return table.count(self.exchangeIds) > 1
    
    -- 不允许循环刷新
    --local index = self:GetGroupIndex()
    --return index < table.count(self.exchangeIds)
end

ChainPayBoxData.__init = __init
ChainPayBoxData.__delete = __delete

ChainPayBoxData.IsFree = IsFree
ChainPayBoxData.GetPack = GetPack
ChainPayBoxData.GetPriceText = GetPriceText
ChainPayBoxData.GetRewards = GetRewards
ChainPayBoxData.GetExchangeId = GetExchangeId
ChainPayBoxData.GetGroupIndex = GetGroupIndex
ChainPayBoxData.CanRefresh = CanRefresh

return ChainPayBoxData
