---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zzl.
--- DateTime: 
---天下大势管理类
local WorldTrendManager = BaseClass("WorldTrendManager", Singleton);
local WorldTrendDataInfo = require "DataCenter.WorldTrendManager.WorldTrendDataInfo"
local WorldTrendRankDataInfo = require "DataCenter.WorldTrendManager.WorldTrendRankDataInfo"

function WorldTrendManager:__init()
    self.dataInfo = {}              --任务信息
    self.rankInfo = {}              --排行榜信息
    self.ServerTrendsStatus =
    {
        DefaultStatus = 0, --未赋值
        Prepare = 1, --未开始
        Ongoing = 2, --进行中
        Fail = 3, --截止时间未完成
        Finish = 4, --已完成
    }
    self.ServerTrendsRewardStatus =
    {
        DefaultRewardStatus = 0, --未赋值
        NotSuccess = 1, --任务未达成，不能领奖
        Unreceived = 2, --可领奖
        Received = 3, --已领奖
        NotJoin = 4, --未参与活动，不能领奖
    }
    self.redPointNum = 0
    self.curparam = 0
    self.isInitSend = true
    self.NewOngoing = 0
end

function WorldTrendManager:__delete()
    self.dataInfo = nil
    self.rankInfo = nil
    self.ServerTrendsStatus = nil
    self.ServerTrendsRewardStatus = nil
    self.redPointNum = nil
    self.curparam = nil
    self.isInitSend = nil
end

--登陆时请求一下
function WorldTrendManager:InitData()
    self.isInitSend = true
end

function WorldTrendManager:UpdateWorldTrendData(serverData)
    self.redPointNum = 0
    if serverData then
        if serverData["trendsInfo"] ~= nil then
            self.dataInfo = {}
            local last = Setting:GetPrivateInt(SettingKeys.LAST_WORLD_TREDN, 0)
            local id = nil
            for i, v in ipairs(serverData["trendsInfo"] ) do
                local tempData = WorldTrendDataInfo.New()
                tempData:UpdateDataInfo(v)
                if tempData.status == self.ServerTrendsStatus.Ongoing then
                    id = tempData.id
                end
                table.insert(self.dataInfo,tempData)
            end
            if id and tonumber(id) ~= last then
                self.NewOngoing = id
            end
            ----第一次检查下是否有正在进行或者可领奖的
            for i = 1, #self.dataInfo do
                --if self.dataInfo[i].rewardStatus == self.ServerTrendsRewardStatus.Unreceived or self.dataInfo[i].status == self.ServerTrendsStatus.Ongoing then
                if self.dataInfo[i].rewardStatus == self.ServerTrendsRewardStatus.Unreceived then
                    if DataCenter.BuildManager.MainLv and self.dataInfo[i].levelLimit <= DataCenter.BuildManager.MainLv then
                        self.redPointNum = self.redPointNum + 1
                    end
                end
            end
        end
    end
    EventManager:GetInstance():Broadcast(EventId.WorldTrendRefresh)
end

--获取信息
function WorldTrendManager:GetDataInfo()
    return self.dataInfo
end

function WorldTrendManager:CheckIsLastGroup(group,index)
    if self.dataInfo and next(self.dataInfo) then
        for i = 1 ,table.count(self.dataInfo) do
            local week,key = self.dataInfo[i]:GetGroupInfo()
            if week ~= 0 and week == group then
                if key > index then
                    return false
                end
            end
        end
    end
    return true
end

function WorldTrendManager:GetGroupCount(group)
    local count = 0
    if self.dataInfo and next(self.dataInfo) then
        for i = 1 ,table.count(self.dataInfo) do
            local week,key = self.dataInfo[i]:GetGroupInfo()
            if week ~= 0 and week == group then
                count = count + 1
            end
        end
    end
    return count
end

--请求请求天下大势数据
function WorldTrendManager:RequestWorldTrendServerData()
    SFSNetwork.SendMessage(MsgDefines.ServerTrendsInfo)
end

--天下大势 领取任务奖励 
function WorldTrendManager:SendServerTrendsReward(id)
    SFSNetwork.SendMessage(MsgDefines.ServerTrendsReward,id)
end

--更新红点
function WorldTrendManager:SetWorldTrendRedNum(message)
    self.redPointNum = message["num"]
    EventManager:GetInstance():Broadcast(EventId.WorldTrendRedUpdate)
end

--获取红点  ##红点不准，需要计算
function WorldTrendManager:GetWorldTrendRedNum()
    return self.redPointNum
end

function WorldTrendManager:GetBuildIsBubble()
    local data = self:GetDataInfo()
    for i = 1, #data do
        if data[i].levelLimit <= DataCenter.BuildManager.MainLv and data[i].rewardStatus == self.ServerTrendsRewardStatus.Unreceived then
            return true
        end
    end
    return false
end

--请求领奖返回
function WorldTrendManager:ReceiveRewardHandle(message)
    DataCenter.RewardManager:ShowCommonReward(message)
    if message["reward"] ~= nil then
        for _, v in pairs(message["reward"]) do
            DataCenter.RewardManager:AddOneReward(v)
        end
    end
    --修改此ID的领奖状态
    if message["id"] ~= nil then
        for i = 1, #self.dataInfo do
            if self.dataInfo[i].id == message["id"] then
                self.dataInfo[i]:UpdateRewardStatus()
                break
            end
        end
        --任务完成手动修改红点数量
        self.redPointNum = self.redPointNum - 1
    end
    
    EventManager:GetInstance():Broadcast(EventId.WorldTrendUpdate,tonumber(message["id"]))
    --EventManager:GetInstance():Broadcast(EventId.WorldTrendRedUpdate)
    EventManager:GetInstance():Broadcast(EventId.RefreshActivityRedDot)
end

--请求联盟排行榜
function WorldTrendManager:SendServerTrendsRank(id)
    SFSNetwork.SendMessage(MsgDefines.ServerTrendsRank,id)
end

--当前查看排行类型
function WorldTrendManager:SetParam(id)
    self.curparam = id
end

function WorldTrendManager:GetParam()
    return self.curparam 
end

--排行榜信息处理
function WorldTrendManager:ReceiveRankData(message)
    if message["rankInfos"] then
        self.rankInfo = {}
        local info = message["rankInfos"]
        for i = 1, #info do
            local tempData = WorldTrendRankDataInfo.New()
            tempData:UpdateDataInfo(info[i])
            table.insert(self.rankInfo,tempData)
        end 
        EventManager:GetInstance():Broadcast(EventId.WorldTrendRefreshRank)
    end
end

function WorldTrendManager:GetRankInfo()
    return self.rankInfo and self.rankInfo or {}
end

function WorldTrendManager:CheckJumpCell()
    local data = self:GetDataInfo()
    local Unreceived = 0
    local Ongoing = 0
    local Prepare = 0
    local targetIndex = 1
    if next(data) then
        for i = 1, #data do
            --检查是否有可领奖的
            if data[i].rewardStatus == self.ServerTrendsRewardStatus.Unreceived then
                Unreceived = data[i].id
                break
            end
            --检查是否有正在进行的
            if data[i].status == self.ServerTrendsStatus.Ongoing then
                Ongoing = data[i].id
                break
            end
            --检查是否有未开始的
            if data[i].status == self.ServerTrendsStatus.Prepare then
                Prepare = data[i].id
                break
            end
        end
        if Unreceived ~= 0 then
            targetIndex = Unreceived
        elseif Ongoing ~= 0 then
            targetIndex = Ongoing
        elseif Prepare ~= 0 then
            targetIndex = Prepare
        end
        return targetIndex
    end
    return targetIndex
end

--检查开关
function WorldTrendManager:CheckOpen()
    local configOpenState = LuaEntry.DataConfig:CheckSwitch("worldtrend_switch")
    return configOpenState
end

return WorldTrendManager
