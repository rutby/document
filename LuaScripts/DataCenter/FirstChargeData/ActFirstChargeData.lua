---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zzl.
--- DateTime:
---

local ActFirstChargeData = BaseClass("ActFirstChargeData")

function ActFirstChargeData:__init()
    self.giftInfo = {}
end

function ActFirstChargeData:__delete()
    self.giftInfo = {}
end

function ActFirstChargeData:InitData()
    self:SendChargeInfo()
end

--获取首充信息
function ActFirstChargeData:SendChargeInfo()
    SFSNetwork.SendMessage(MsgDefines.GetFirstChargeInfo)
end

function ActFirstChargeData:HandleCharge(message)
    self.giftInfo = message
    -- 礼包中心红点
    EventManager:GetInstance():Broadcast(EventId.RefreshWelfareRedDot)
    EventManager:GetInstance():Broadcast(EventId.RefreshFirstChargeUI)
end

function ActFirstChargeData:GetChargeInfo()
    return self.giftInfo
end
------------------------------------------------------
--领取每日奖励
function ActFirstChargeData:SendChargeDayReward()
    SFSNetwork.SendMessage(MsgDefines.ReceiveFirstChargeDayReward)
end

function ActFirstChargeData:HandleGetDayReward(message)
    if message["reward"]~=nil then
        DataCenter.RewardManager:ShowCommonReward(message)
        for k,v in pairs(message["reward"]) do
            DataCenter.RewardManager:AddOneReward(v)
        end
    end
    self:SendChargeInfo()
end
------------------------------------------------------
function ActFirstChargeData:HandlePushChargeInfo(message)
    if self.giftInfo and next(self.giftInfo) then
        self.giftInfo.choose = message["choose"]
        self.giftInfo.startTime = message["startTime"]
        if self.giftInfo.choose > 0 then
            Setting:SetInt(LuaEntry.Player.uid..LuaEntry.Player.pushMark..SettingKeys.FIRST_PAY_BUY_CLICK, 1)
            EventManager:GetInstance():Broadcast(EventId.PlayerChangeHeadRedPot)
        end
    else
        self:SendChargeInfo()
    end
    
    EventManager:GetInstance():Broadcast(EventId.UpdateFirstChargeUI)
end
-------------------------------------------------------

-- 是否已购买过任意档位
function ActFirstChargeData:HasBought()
    local info = self:GetChargeInfo()
    if info and next(info) and info.startTime > 0 then
        if info.choose ~= 0 then
            return true
        end
    end
    return false
end

--检查是否领取完
function ActFirstChargeData:CheckIsShow()
    local info = self:GetChargeInfo()
    if info and next(info) and info.startTime > 0 then
        if info.choose ~= 0 then
            --检查是否购买并且第三档是否领取
            local chooseArr = info.chooseArr
            for i = 1, table.count(chooseArr) do
                if chooseArr[i].chooseIndex == info.choose then
                    local dayArr = chooseArr[i].dayArr
                    for k = 1, table.count(dayArr) do
                        if dayArr[k].day == 3 and dayArr[k].state == 1 then
                            return false
                        end
                    end
                    break
                end
            end
        end
        return true
    end
    return false
end

--判断当前是否能领取
function ActFirstChargeData:CheckIsReceive()
    local isReceive = false
    local endTime = false
    local data = self:GetChargeInfo()
    if data and next(data) then
        if data.choose ~= 0 then
            --主要是看当前时第二天还是第三天，如果是第三天包括之后，可以领取所有，倒计时的显示只有第一天和第二天
            local x = UITimeManager:GetInstance():GetTodayZeroServerTime(data.startTime // 1000) * 1000
            local curTime = UITimeManager:GetInstance():GetServerTime()
            if UITimeManager:GetInstance():IsSameDayForServer(curTime // 1000, data.startTime // 1000) then
                --说明是第一天，这时需要显示倒计时
                isReceive = false
                endTime = true
            else
                --当前是否第二天
                if curTime < x + (OneDayTime * 1000 * 2) then
                    --检查第二天奖励是否领取
                    local curGiftInfo = nil
                    local chooseArr = data.chooseArr
                    for i = 1, table.count(chooseArr) do
                        if chooseArr[i].chooseIndex == data.choose then
                            curGiftInfo = chooseArr[i]
                            break
                        end
                    end
                    if curGiftInfo then
                        local dayArr = curGiftInfo.dayArr
                        for i = 1, table.count(dayArr) do
                            if dayArr[i].day == 2 then
                                isReceive = dayArr[i].state == 0
                                if dayArr[i].state == 1 then
                                    endTime = true
                                end
                                break
                            end
                        end
                    end
                else
                    isReceive = true
                end
            end
            return isReceive,endTime
        end
    end
    return false,endTime
end

return ActFirstChargeData
