---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2021/11/9 15:42
---
local CollectRewardDataManager = BaseClass("CollectRewardDataManager");
local CollectRewardData = require "DataCenter.CollectRewardData.CollectRewardData"

local function Startup(self)

end
local function __init(self)
    self.collectRewardList ={}
end

local function __delete(self)
    self.collectRewardList = nil
end

local function UpdateCollectRewardList(self,message)
    if message ==nil then
        return
    end
    if message["collect_reward"]~=nil then
        self.collectRewardList = {}
        local arr = message["collect_reward"]
        table.walk(arr,function(k,v)
            local oneData = CollectRewardData.New()
            oneData:ParseData(v)
            if oneData.uuid~=0 then
                self.collectRewardList[oneData.uuid] = oneData
            end
        end)
    end
end
local function UpdateOneReward(self,message)
    local oneData = CollectRewardData.New()
    oneData:ParseData(message)
    if oneData.uuid~=0 then
        self.collectRewardList[oneData.uuid] = oneData
    end
    EventManager:GetInstance():Broadcast(EventId.MonsterRewardCreate,oneData.pointId)
end

local function RemoveOneReward(self,uuid)
    if self.collectRewardList[uuid]~=nil then
        self.collectRewardList[uuid] = nil
    end
end

local function GetRewardDataByUuid(self,uuid)
    return self.collectRewardList[uuid]
end

local function GetRewardListBySort(self)
    local showList={}
    local serverTime = UITimeManager:GetInstance():GetServerTime()
    table.walksort(self.collectRewardList,function (leftKey,rightKey)
        local aData = self.collectRewardList[leftKey]
        local bData = self.collectRewardList[rightKey]
        if aData~=nil and bData~=nil then
            if aData.expireTime ~= bData.expireTime then
                return aData.expireTime < bData.expireTime
            end
            return aData.uuid > bData.uuid
        end
        return false
    end, function (a,b)
        --if b.expireTime > serverTime then
            table.insert(showList,b)
        --end
    end)
    return showList
end

local function GetRewardCount(self)
   return  table.count(self.collectRewardList)
end
CollectRewardDataManager.__init = __init
CollectRewardDataManager.__delete = __delete
CollectRewardDataManager.Startup = Startup
CollectRewardDataManager.UpdateCollectRewardList =UpdateCollectRewardList
CollectRewardDataManager.UpdateOneReward = UpdateOneReward
CollectRewardDataManager.RemoveOneReward = RemoveOneReward
CollectRewardDataManager.GetRewardDataByUuid = GetRewardDataByUuid
CollectRewardDataManager.GetRewardListBySort = GetRewardListBySort
CollectRewardDataManager.GetRewardCount = GetRewardCount
return CollectRewardDataManager