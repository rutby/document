---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zzl.
--- DateTime:
--- 天下大势
local UIWorldTrendRankItem = require "UI.UIWorldTrendRank.Component.UIWorldTrendRankItem"
local UIWorldTrendRankView = BaseClass("UIWorldTrendRankView",UIBaseView)
local base = UIBaseView

function UIWorldTrendRankView:OnCreate()
    base.OnCreate(self)
    self.id = self:GetUserData()
    self:ComponentDefine()
    self:OnRefresh()
end

function UIWorldTrendRankView:ComponentDefine()
    self._title_txt = self:AddComponent(UIText,"UICommonPopUpTitle/bg_mid/titleText")

    self.return_btn = self:AddComponent(UIButton,"UICommonPopUpTitle/panel")
    self.return_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)
    self.close_btn = self:AddComponent(UIButton, "UICommonPopUpTitle/bg_mid/CloseBtn")
    self.close_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self.ctrl:CloseSelf()
    end)

    self._titleName_txt = self:AddComponent(UIText,"ImgBg/select/Txt_TitleName")
    self._titleProgess_txt = self:AddComponent(UIText,"ImgBg/select/Txt_TitleProgress")
    self._noRank_txt = self:AddComponent(UIText,"ImgBg/Txt_NoRank")

    self.ScrollView = self:AddComponent(UIScrollView,"ImgBg/ScrollView")
    self.ScrollView:SetOnItemMoveIn(function(itemObj, index)
        self:OnItemMoveIn(itemObj, index)
    end)
    self.ScrollView:SetOnItemMoveOut(function(itemObj, index)
        self:OnItemMoveOut(itemObj, index)
    end)
end

function UIWorldTrendRankView:OnDestroy()
    self:ClearScroll()
    self._title_txt = nil
    self.return_btn = nil
    self.close_btn = nil
    self._titleName_txt = nil
    self._titleProgess_txt = nil
    self.ScrollView = nil
    base.OnDestroy(self)
end

function UIWorldTrendRankView:OnAddListener()
    base.OnAddListener(self)
    self:AddUIListener(EventId.WorldTrendRefreshRank, self.OnRefresh)
end

function UIWorldTrendRankView:OnRemoveListener()
    base.OnRemoveListener(self)
    self:RemoveUIListener(EventId.WorldTrendRefreshRank, self.OnRefresh)
end


function UIWorldTrendRankView:OnEnable()
    base.OnEnable(self)
    DataCenter.WorldTrendManager:SendServerTrendsRank(self.id)
end

function UIWorldTrendRankView:OnDisable()
    base.OnDisable(self)
end

function UIWorldTrendRankView:OnRefresh()
    self:ClearScroll()
    self.rankInfo = DataCenter.WorldTrendManager:GetRankInfo()
    self._title_txt:SetLocalText(302144)
    self._titleName_txt:SetActive(false)
    self._titleProgess_txt:SetActive(false)
    self.param = DataCenter.WorldTrendManager:GetParam()
    if self.rankInfo and next(self.rankInfo) then
        self.ScrollView:SetActive(true)
        self._noRank_txt:SetActive(false)
        self._titleProgess_txt:SetActive(true)
        if self.param.type == 4 then
            self._titleProgess_txt:SetLocalText(302140)
        elseif self.param.type == 7 then
            self._title_txt:SetLocalText(302145)
            --local template = DataCenter.WorldTrendTemplateManager:GetTemplateById(param.id)
            self._titleProgess_txt:SetLocalText(302724)
        elseif self.param.type == 18 then
            self._title_txt:SetLocalText(302145)
            self._titleProgess_txt:SetLocalText(302961)
        elseif self.param.type == 20 then
            self._title_txt:SetLocalText(302145)
            self._titleProgess_txt:SetLocalText(302959)
        end
        self.ScrollView:SetTotalCount(#self.rankInfo)
        self.ScrollView:RefillCells()
        self._titleName_txt:SetActive(true)
        self._titleName_txt:SetLocalText(390288)
    else
        self.ScrollView:SetActive(false)
        self._noRank_txt:SetActive(true)
        if self.param.type == 4 then
            self._noRank_txt:SetLocalText(302721)
        elseif self.param.type == 7 then
            self._noRank_txt:SetLocalText(302721)
        elseif self.param.type == 18 then
            self._noRank_txt:SetLocalText(302960)
        elseif self.param.type == 20 then
            self._noRank_txt:SetLocalText(302958)
        end
    end
end

function UIWorldTrendRankView:OnItemMoveIn(itemObj, index)
    itemObj.name = tostring(index)
    local cellItem = self.ScrollView:AddComponent(UIWorldTrendRankItem, itemObj)
    cellItem:RefreshData(self.rankInfo[index],index,self.param)
end

function UIWorldTrendRankView:OnItemMoveOut(itemObj, index)
    self.ScrollView:RemoveComponent(itemObj.name, UIWorldTrendRankItem)
end

function UIWorldTrendRankView:ClearScroll()
    self.ScrollView:ClearCells()--清循环列表数据
    self.ScrollView:RemoveComponents(UIWorldTrendRankItem)--清循环列表gameObject
end

return UIWorldTrendRankView