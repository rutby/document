---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2023/11/2 17:32
---

local UIVitaResidentWork = BaseClass("UIVitaResidentWork", UIBaseContainer)
local base = UIBaseContainer
local UIVitaResidentWorkSlot = require "UI.UIVita.UIVitaResident.Component.UIVitaResidentWorkSlot"
local UIGray = CS.UIGray

local name_path = "Name"
local icon_path = "IconBg/Icon"
local slot_path = "List/Slot_%s"
local add_path = "CountBg/Add"
local sub_path = "CountBg/Sub"
local count_path = "CountBg/Count"

local WorkerCount = 6

local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function ComponentDefine(self)
    self.name_text = self:AddComponent(UITextMeshProUGUIEx, name_path)
    self.icon_image = self:AddComponent(UIImage, icon_path)
    self.slots = {}
    for i = 1, WorkerCount do
        self.slots[i] = self:AddComponent(UIVitaResidentWorkSlot, string.format(slot_path, i))
    end
    self.add_btn = self:AddComponent(UIButton, add_path)
    self.add_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Add)
        self:OnAddClick()
    end)
    self.sub_btn = self:AddComponent(UIButton, sub_path)
    self.sub_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Dec)
        self:OnSubClick()
    end)
    self.count_text = self:AddComponent(UITextMeshProUGUIEx, count_path)
end

local function ComponentDestroy(self)

end

local function DataDefine(self)
    self.data = nil
    self.needWorkerFurnitureInfo = nil
    self.maxCount = 0
    self.curCount = 0
    self.residentDataList = {}
end

local function DataDestroy(self)

end

local function OnAddListener(self)
    base.OnAddListener(self)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
end

local function SetData(self, data)
    self.data = data
    self:Refresh()
end

local function Refresh(self)
    local buildData = DataCenter.BuildManager:GetBuildingDataByUuid(self.data.bUuid)
    if buildData ~= nil then
        self.icon_image:LoadSprite(DataCenter.BuildManager:GetBuildIconPath(buildData.itemId, buildData.level))
        self.name_text:SetLocalText(GetTableData(DataCenter.BuildTemplateManager:GetTableName(), buildData.itemId + buildData.level,"name"))
    end
    self.maxCount = 0
    self.curCount = 0
    self.residentDataList = {}
    self.needWorkerFurnitureInfo = nil
    for _, furnitureInfo in ipairs(self.data.furnitureInfoList) do
        local furnitureLevelTemplate = DataCenter.BuildTemplateManager:GetBuildingLevelTemplate(furnitureInfo.fId, furnitureInfo.lv)
        self.maxCount = self.maxCount + furnitureLevelTemplate.need_worker
        local furnitureResidentDataList = DataCenter.VitaManager:GetResidentDataListByFurnitureUuid(furnitureInfo.uuid)
        if #furnitureResidentDataList < furnitureLevelTemplate.need_worker then
            self.needWorkerFurnitureInfo = furnitureInfo
        end
        for _, residentData in ipairs(furnitureResidentDataList) do
            table.insert(self.residentDataList, residentData)
            self.curCount = self.curCount + 1
        end
    end

    for i = 1, WorkerCount do
        if i <= self.curCount then
            self.slots[i]:SetActive(true)
            self.slots[i]:SetData(self.residentDataList[i])
            self.slots[i]:SetEmpty(false)
            self.slots[i]:Refresh()
        elseif i <= self.maxCount then
            self.slots[i]:SetActive(true)
            self.slots[i]:SetEmpty(true)
            self.slots[i]:Refresh()
        else
            self.slots[i]:SetActive(false)
        end
        self.slots[i]:StopEffect()
    end
    
    self.count_text:SetText(self.curCount .. "/" .. self.maxCount)

    local canAdd = (self.needWorkerFurnitureInfo ~= nil)
    local canSub = (#self.residentDataList > 0)
    UIGray.SetGray(self.add_btn.transform, not canAdd, true)
    UIGray.SetGray(self.sub_btn.transform, not canSub, true)
    self:CheckGuideDead()
end

local function GetAvailableSlots(self)
    local slots = {}
    for i = 1, self.maxCount do
        table.insert(slots, self.slots[i])
    end
    return slots
end

local function OnAddClick(self)
    if self.panel.isWaiting then
        return
    end
    
    if self.needWorkerFurnitureInfo == nil then
        UIUtil.ShowTipsId(GameDialogDefine.SET_WORKER_NO_POSITION_TIP)
        return
    end
    
    local residentDataList = DataCenter.VitaManager:GetRestingResidentDataList()
    if #residentDataList == 0 then
        UIUtil.ShowTipsId(GameDialogDefine.SET_WORKER_NO_WORKER_TIP)
        return
    end
    
    DataCenter.VitaManager:SendSetResidentWork(residentDataList[1].uuid, self.needWorkerFurnitureInfo.uuid)
    self.panel.isWaiting = true
end

local function OnSubClick(self)
    if self.panel.isWaiting then
        return
    end
    
    for _, residentData in ipairs(self.residentDataList) do
        if residentData.state ~= VitaDefines.ResidentState.Normal then
            DataCenter.VitaManager:SendSetResidentWork(residentData.uuid, 0)
            self.panel.isWaiting = true
            return
        end
    end
    for _, residentData in ipairs(self.residentDataList) do
        if residentData.state == VitaDefines.ResidentState.Normal then
            DataCenter.VitaManager:SendSetResidentWork(residentData.uuid, 0)
            self.panel.isWaiting = true
            return
        end
    end
end

function UIVitaResidentWork:CheckGuideDead()
    local guideParam = DataCenter.GuideManager:GetFlag(GuideTempFlagType.VitaDead)
    if guideParam ~= nil and guideParam.buildId == self.data.buildId then
        if self.data.guideCallback ~= nil then
            self.data.guideCallback(self.slots[self.maxCount].icon_image)
        end
    end
end

UIVitaResidentWork.OnCreate = OnCreate
UIVitaResidentWork.OnDestroy = OnDestroy
UIVitaResidentWork.OnEnable = OnEnable
UIVitaResidentWork.OnDisable = OnDisable
UIVitaResidentWork.ComponentDefine = ComponentDefine
UIVitaResidentWork.ComponentDestroy = ComponentDestroy
UIVitaResidentWork.DataDefine = DataDefine
UIVitaResidentWork.DataDestroy = DataDestroy
UIVitaResidentWork.OnAddListener = OnAddListener
UIVitaResidentWork.OnRemoveListener = OnRemoveListener

UIVitaResidentWork.SetData = SetData
UIVitaResidentWork.Refresh = Refresh
UIVitaResidentWork.GetAvailableSlots = GetAvailableSlots
UIVitaResidentWork.OnAddClick = OnAddClick
UIVitaResidentWork.OnSubClick = OnSubClick

return UIVitaResidentWork