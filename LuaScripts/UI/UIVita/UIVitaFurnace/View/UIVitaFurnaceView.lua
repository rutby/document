---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2023/11/8 17:55
---

local UIVitaFurnace = BaseClass("UIVitaFurnace", UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization

local title_path = "UICommonMiniPopUpTitle/Bg_mid/titleText"
local close_path = "UICommonMiniPopUpTitle/Bg_mid/CloseBtn"
local return_path = "UICommonMiniPopUpTitle/panel"
local cursor_path = "StateBg/CursorRoot/Cursor"
local state_title_path = "StateBg/StateTitle"
local state_desc_path = "StateBg/StateDesc"
local state_path = "StateBg/State"
local consume_title_path = "ConsumeBg/ConsumeTitle"
local consume_icon_path = "ConsumeBg/List/ConsumeIcon"
local consume_path = "ConsumeBg/List/Consume"
local switch_title_path = "SwitchBg/SwitchTitle"
local switch_desc_path = "SwitchBg/SwitchDesc%s"
local switch_path = "SwitchBg/Switch%s"
local switch_off_path = "SwitchBg/Switch%s/Off%s"
local switch_on_path = "SwitchBg/Switch%s/On%s"
local switch_off_text_path = "SwitchBg/Switch%s/Off%s/OffText%s"
local switch_on_text_path = "SwitchBg/Switch%s/On%s/OnText%s"

local SwitchCount = 2

local CursorRot =
{
    [VitaDefines.FurnaceState.Close] = 0,
    [VitaDefines.FurnaceState.Open] = -71,
    [VitaDefines.FurnaceState.OpenWithBooster] = -220,
    [VitaDefines.FurnaceState.CloseWithBooster] = 0,
}

local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
end

local function OnDestroy(self)
    self:DataDestroy()
    self:ComponentDestroy()
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
    self:ReInit()
end

local function OnDisable(self)
    local data = DataCenter.VitaManager:GetData()
    if self.furnaceState ~= data.furnaceState then
        DataCenter.VitaManager:SendSetFurnaceState(self.furnaceState)
    end
    base.OnDisable(self)
end

local function ComponentDefine(self)
    self.title_text = self:AddComponent(UITextMeshProUGUIEx, title_path)
    self.title_text:SetLocalText(137056)
    self.close_btn = self:AddComponent(UIButton, close_path)
    self.close_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)
    self.cursor_go = self:AddComponent(UIBaseContainer, cursor_path)
    self.return_btn = self:AddComponent(UIButton, return_path)
    self.return_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)
    self.state_title_text = self:AddComponent(UIText, state_title_path)
    self.state_title_text:SetLocalText(137057)
    self.state_desc_text = self:AddComponent(UIText, state_desc_path)
    self.state_desc_text:SetLocalText(137058)
    self.state_text = self:AddComponent(UIText, state_path)
    self.consume_title_text = self:AddComponent(UIText, consume_title_path)
    self.consume_title_text:SetLocalText(100040)
    self.consume_icon_image = self:AddComponent(UIImage, consume_icon_path)
    self.consume_text = self:AddComponent(UIText, consume_path)
    self.switch_title_text = self:AddComponent(UIText, switch_title_path)
    self.switch_title_text:SetLocalText(137061)
    self.switch_desc_texts = {}
    self.switch_btns = {}
    self.switch_off_goes = {}
    self.switch_on_goes = {}
    self.switch_off_texts = {}
    self.switch_on_texts = {}
    for i = 1, SwitchCount do
        self.switch_desc_texts[i] = self:AddComponent(UIText, string.format(switch_desc_path, i))
        self.switch_btns[i] = self:AddComponent(UIButton, string.format(switch_path, i))
        self.switch_btns[i]:SetOnClick(function()
            self:OnSwitchClick(i)
        end)
        self.switch_off_goes[i] = self:AddComponent(UIBaseContainer, string.format(switch_off_path, i, i))
        self.switch_on_goes[i] = self:AddComponent(UIBaseContainer, string.format(switch_on_path, i, i))
        self.switch_off_texts[i] = self:AddComponent(UIText, string.format(switch_off_text_path, i, i, i))
        self.switch_off_texts[i]:SetText("Off")
        self.switch_on_texts[i] = self:AddComponent(UIText, string.format(switch_on_text_path, i, i, i))
        self.switch_on_texts[i]:SetText("On")
    end
    self.switch_desc_texts[1]:SetLocalText(137062)
    self.switch_desc_texts[2]:SetLocalText(137060)
end

local function ComponentDestroy(self)

end

local function DataDefine(self)
    self.reqs = {}
    self.furnaceState = VitaDefines.FurnaceState.None
    self.switchOn = { false, false }
    self.cursorRot = 0
end

local function DataDestroy(self)
    for _, req in pairs(self.reqs) do
        req:Destroy()
    end
    self.reqs = {}
end

local function OnAddListener(self)
    base.OnAddListener(self)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
end

local function ReInit(self)
    local data = DataCenter.VitaManager:GetData()
    self.furnaceState = data.furnaceState
    self.switchOn[1] = (self.furnaceState == VitaDefines.FurnaceState.Open or self.furnaceState == VitaDefines.FurnaceState.OpenWithBooster)
    self.switchOn[2] = (self.furnaceState == VitaDefines.FurnaceState.OpenWithBooster or self.furnaceState == VitaDefines.FurnaceState.CloseWithBooster)
    
    self.cursorRot = CursorRot[self.furnaceState]
    self.cursor_go.localRotation = Quaternion.Euler(0, 0, self.cursorRot)
    
    self:Refresh()
end

local function Refresh(self)
    for i = 1, SwitchCount do
        self.switch_on_goes[i]:SetActive(self.switchOn[i])
        self.switch_off_goes[i]:SetActive(not self.switchOn[i])
    end
    local buildData = DataCenter.BuildManager:GetFunbuildByItemID(BuildingTypes.FUN_BUILD_MAIN)
    local buildLevelTemplate = DataCenter.BuildTemplateManager:GetBuildingLevelTemplate(buildData.itemId, buildData.level)

    local resType = ResourceType.Steel
    local count = 0
    local strs = string.split(buildLevelTemplate.para7, "|")
    if self.furnaceState == VitaDefines.FurnaceState.Close or self.furnaceState == VitaDefines.FurnaceState.CloseWithBooster then
        local str = strs[1] or ""
        local spls = string.split(str, ";")
        if #spls == 2 then
            resType = tonumber(spls[1])
            count = 0
        end
        self.state_text:SetLocalText(100178)
    elseif self.furnaceState == VitaDefines.FurnaceState.Open then
        local str = strs[1] or ""
        local spls = string.split(str, ";")
        if #spls == 2 then
            resType = tonumber(spls[1])
            count = -tonumber(spls[2]) * 60
        end
        self.state_text:SetLocalText(137059)
    elseif self.furnaceState == VitaDefines.FurnaceState.OpenWithBooster then
        local str = strs[2] or ""
        local spls = string.split(str, ";")
        if #spls == 2 then
            resType = tonumber(spls[1])
            count = -tonumber(spls[2]) * 60
        end
        self.state_text:SetLocalText(137060)
    end

    self.consume_icon_image:LoadSprite(DataCenter.ResourceManager:GetResourceIconByType(resType))
    self.consume_text:SetText(toInt(count) .. "/" .. Localization:GetString("100165"))
    CS.UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(self.consume_text.transform)
    CS.UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(self.consume_text.transform.parent)
    self.cursorRot = CursorRot[self.furnaceState]
end

local function Update(self)
    local rot = self.cursor_go.transform.localRotation.eulerAngles.z
    if rot > 0 then
        rot = rot - 360
    end
    if rot ~= self.cursorRot then
        rot = rot * 0.8 + self.cursorRot * 0.2
        self.cursor_go.transform.localRotation = Quaternion.Euler(0, 0, rot)
    end
end

local function OnSwitchClick(self, i)
    self.switchOn[i] = not self.switchOn[i]
    if self.switchOn[1] and self.switchOn[2] then
        self.furnaceState = VitaDefines.FurnaceState.OpenWithBooster
    elseif self.switchOn[1] and not self.switchOn[2] then
        self.furnaceState = VitaDefines.FurnaceState.Open
    elseif not self.switchOn[1] and self.switchOn[2] then
        self.furnaceState = VitaDefines.FurnaceState.CloseWithBooster
    elseif not self.switchOn[1] and not self.switchOn[2] then
        self.furnaceState = VitaDefines.FurnaceState.Close
    end
    self:Refresh()
end

UIVitaFurnace.OnCreate = OnCreate
UIVitaFurnace.OnDestroy = OnDestroy
UIVitaFurnace.OnEnable = OnEnable
UIVitaFurnace.OnDisable = OnDisable
UIVitaFurnace.ComponentDefine = ComponentDefine
UIVitaFurnace.ComponentDestroy = ComponentDestroy
UIVitaFurnace.DataDefine = DataDefine
UIVitaFurnace.DataDestroy = DataDestroy
UIVitaFurnace.OnAddListener = OnAddListener
UIVitaFurnace.OnRemoveListener = OnRemoveListener

UIVitaFurnace.ReInit = ReInit
UIVitaFurnace.Refresh = Refresh
UIVitaFurnace.Update = Update
UIVitaFurnace.OnSwitchClick = OnSwitchClick

return UIVitaFurnace