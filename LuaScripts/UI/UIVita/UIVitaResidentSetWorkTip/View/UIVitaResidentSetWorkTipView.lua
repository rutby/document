---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2023/11/14 21:03
---

local UIVitaResidentSetWorkTip = BaseClass("UIVitaResidentSetWorkTip", UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization

local root_path = "Root"
local desc_path = "Root/Desc"
local res_path = "Root/Res"

local DescMaxCount = 2
local EffectInterval = 0.12

local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
end

local function OnDestroy(self)
    self:DataDestroy()
    self:ComponentDestroy()
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
    self.active = true
    self:ReInit()
end

local function OnDisable(self)
    self.active = false
    base.OnDisable(self)
end

local function ComponentDefine(self)
    self.root_go = self:AddComponent(UIBaseContainer, root_path)
    self.desc_prefab = self.transform:Find(desc_path).gameObject
    self.desc_prefab:GameObjectCreatePool()
    self.res_prefab = self.transform:Find(res_path).gameObject
    self.res_prefab:GameObjectCreatePool()
end

local function ComponentDestroy(self)

end

local function DataDefine(self)
    
end

local function DataDestroy(self)
    
end

local function OnAddListener(self)
    base.OnAddListener(self)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
end

local function ReInit(self)
    self.desc_prefab:GameObjectRecycleAll()
    self.res_prefab:GameObjectRecycleAll()
    
    local uuids = self:GetUserData()
    local count = #uuids
    local cur = 0
    if count <= DescMaxCount then
        for _, uuid in ipairs(uuids) do
            local residentData = DataCenter.VitaManager:GetResidentData(uuid)
            local furnitureInfo = DataCenter.FurnitureManager:GetFurnitureByUuid(residentData.fUuid)
            if furnitureInfo then
                local rName = GetTableData(TableName.VitaResident, residentData.id, "name")
                local fName = GetTableData(DataCenter.BuildTemplateManager:GetTableName(), furnitureInfo.fId,"name")
                local desc = Localization:GetString("450203", Localization:GetString(rName), Localization:GetString(fName))
                cur = cur + 1
                self:ShowOneDesc(cur, desc)
            end
        end
    else
        local uuid = uuids[1]
        local residentData = DataCenter.VitaManager:GetResidentData(uuid)
        local rName = GetTableData(TableName.VitaResident, residentData.id, "name")
        local desc = Localization:GetString("450224", Localization:GetString(rName), count)
        cur = cur + 1
        self:ShowOneDesc(cur, desc)
    end
    
    local oldDict = DataCenter.VitaManager.oldResProduct or {}
    local newDict = DataCenter.VitaManager.newResProduct or {}
    for resType, val in pairs(newDict) do
        local oldVal = oldDict[resType] or 0
        if val > oldVal then
            cur = cur + 1
            self:ShowOneRes(cur, resType, oldVal, val)
        end
    end
    TimerManager:GetInstance():DelayInvoke(function()
        if self.active then
            self.ctrl:CloseSelf()
        end
    end, 2)
end

local function ShowOneDesc(self, index, desc)
    local go = self.desc_prefab:GameObjectSpawn(self.root_go.transform)
    go:SetActive(true)
    local text = go:GetComponent(typeof(CS.TextMeshProUGUIEx))
    text.text = desc
    local particle = go.transform:Find("Effect"):GetComponent(typeof(CS.UnityEngine.ParticleSystem))
    particle:Stop()
    TimerManager:GetInstance():DelayInvoke(function()
        if self.active then
            particle:Play()
        end
    end, index * EffectInterval)
end

local function ShowOneRes(self, index, resType, oldVal, val)
    local go = self.res_prefab:GameObjectSpawn(self.root_go.transform)
    go:SetActive(true)
    local icon_image = go.transform:Find("Left/Icon"):GetComponent(typeof(CS.UnityEngine.UI.Image))
    icon_image:LoadSprite(DataCenter.ResourceManager:GetResourceIconByType(resType))
    local left_text = go.transform:Find("Left"):GetComponent(typeof(CS.TextMeshProUGUIEx))
    left_text.text = string.format("%s/M", string.GetFormattedStr(oldVal * 60))
    local right_text = go.transform:Find("Right"):GetComponent(typeof(CS.TextMeshProUGUIEx))
    right_text.text = string.format("%s/M", string.GetFormattedStr(val * 60))
    local particle = go.transform:Find("Effect"):GetComponent(typeof(CS.UnityEngine.ParticleSystem))
    particle:Stop()
    TimerManager:GetInstance():DelayInvoke(function()
        if self.active then
            particle:Play()
        end
    end, index * EffectInterval)
end

UIVitaResidentSetWorkTip.OnCreate = OnCreate
UIVitaResidentSetWorkTip.OnDestroy = OnDestroy
UIVitaResidentSetWorkTip.OnEnable = OnEnable
UIVitaResidentSetWorkTip.OnDisable = OnDisable
UIVitaResidentSetWorkTip.ComponentDefine = ComponentDefine
UIVitaResidentSetWorkTip.ComponentDestroy = ComponentDestroy
UIVitaResidentSetWorkTip.DataDefine = DataDefine
UIVitaResidentSetWorkTip.DataDestroy = DataDestroy
UIVitaResidentSetWorkTip.OnAddListener = OnAddListener
UIVitaResidentSetWorkTip.OnRemoveListener = OnRemoveListener

UIVitaResidentSetWorkTip.ReInit = ReInit
UIVitaResidentSetWorkTip.ShowOneDesc = ShowOneDesc
UIVitaResidentSetWorkTip.ShowOneRes = ShowOneRes

return UIVitaResidentSetWorkTip