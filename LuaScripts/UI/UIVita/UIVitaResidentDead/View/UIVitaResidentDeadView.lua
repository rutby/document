---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2024/4/3 17:29
---

local UIVitaResidentDead = BaseClass("UIVitaResidentDead", UIBaseView)
local base = UIBaseView
local UIVitaResidentDeadItem = require "UI.UIVita.Component.UIVitaResidentDeadItem"

local return_path = "UICommonPanel"
local bg_path = "imgBg"
local desc_path = "imgBg/Desc"
local list_path = "imgBg/List"
local go_path = "imgBg/Go"
local go_text_path = "imgBg/Go/GoText"
local time_path = "imgBg/Time"

local CellWidth = 136
local CellSpace = 50
local CloseDuration = 5.5

local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
end

local function OnDestroy(self)
    self:DataDestroy()
    self:ComponentDestroy()
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
    self:ReInit()
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function ComponentDefine(self)
    self.return_btn = self:AddComponent(UIButton, return_path)
    self.return_btn:SetOnClick(function()
        self:OnCloseClick()
    end)
    self.bg_image = self:AddComponent(UIImage, bg_path)
    self.desc_text = self:AddComponent(UITextMeshProUGUIEx, desc_path)
    self.desc_text:SetLocalText(450252)
    self.list_go = self:AddComponent(UIBaseContainer, list_path)
    self.go_btn = self:AddComponent(UIButton, go_path)
    self.go_btn:SetOnClick(function()
        self:OnCloseClick()
    end)
    self.go_text = self:AddComponent(UITextMeshProUGUIEx, go_text_path)
    self.go_text:SetLocalText(450254)
    self.time_text = self:AddComponent(UITextMeshProUGUIEx, time_path)
end

local function ComponentDestroy(self)

end

local function DataDefine(self)
    self.idList = {}
    self.reqs = {}
    self.items = {}
    self.closeTime = 0
    if self.timer == nil then
        self.timer = TimerManager:GetInstance():GetTimer(0.5, self.TimerAction, self, false, false, false)
        self.timer:Start()
    end
end

local function DataDestroy(self)
    if self.timer then
        self.timer:Stop()
        self.timer = nil
    end
    for _, req in pairs(self.reqs) do
        req:Destroy()
    end
    self.reqs = {}
    self.items = {}
end

local function OnAddListener(self)
    base.OnAddListener(self)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
end

local function ReInit(self)
    self.idList = self:GetUserData()
    self.go_text:SetLocalText(100178)
    for i, id in ipairs(self.idList) do
        self.reqs[i] = self:GameObjectInstantiateAsync(UIAssets.UIVitaResidentDeadItem, function(req)
            local go = req.gameObject
            go.name = tostring(i)
            local tf = go.transform
            tf:SetParent(self.list_go.transform)
            tf:Set_localScale(1, 1, 1)
            local item = self.list_go:AddComponent(UIVitaResidentDeadItem, go.name)
            item:SetData(id)
            self.items[i] = item
        end)
    end

    local colCount = math.min(#self.idList, 3)
    local listWidth = colCount * CellWidth + (colCount - 1) * CellSpace + 60
    local size = self.list_go.rectTransform.sizeDelta
    self.list_go.rectTransform.sizeDelta = Vector2.New(listWidth, size.y)
    
    local curTime = UITimeManager:GetInstance():GetServerTime()
    self.closeTime = curTime + CloseDuration * 1000
    self:TimerAction()
end

local function TimerAction(self)
    local curTime = UITimeManager:GetInstance():GetServerTime()
    local restTime = self.closeTime - curTime
    local sec = toInt(Mathf.Round(restTime / 1000), 0)
    if sec >= 0 then
        self.time_text:SetLocalText(450255, sec)
    else
        self.timer:Stop()
        self:OnCloseClick()
    end
end

local function OnCloseClick(self)
    self.ctrl:CloseSelf()
end

UIVitaResidentDead.OnCreate = OnCreate
UIVitaResidentDead.OnDestroy = OnDestroy
UIVitaResidentDead.OnEnable = OnEnable
UIVitaResidentDead.OnDisable = OnDisable
UIVitaResidentDead.ComponentDefine = ComponentDefine
UIVitaResidentDead.ComponentDestroy = ComponentDestroy
UIVitaResidentDead.DataDefine = DataDefine
UIVitaResidentDead.DataDestroy = DataDestroy
UIVitaResidentDead.OnAddListener = OnAddListener
UIVitaResidentDead.OnRemoveListener = OnRemoveListener

UIVitaResidentDead.ReInit = ReInit
UIVitaResidentDead.TimerAction = TimerAction
UIVitaResidentDead.OnCloseClick = OnCloseClick

return UIVitaResidentDead