---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2023/11/13 15:25
---

local UIVitaResidentRiot = BaseClass("UIVitaResidentRiot", UIBaseView)
local base = UIBaseView

local title_path = "UICommonPopUpTitle/bg_mid/titleText"
local close_path = "UICommonPopUpTitle/bg_mid/CloseBtn"
local return_path = "UICommonPopUpTitle/panel"
local desc_path = "Desc"
local time_path = "Time"
local go_path = "Go"
local go_text_path = "Go/GoText"

local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
end

local function OnDestroy(self)
    self:DataDestroy()
    self:ComponentDestroy()
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
    self:ReInit()
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function ComponentDefine(self)
    self.title_text = self:AddComponent(UIText, title_path)
    self.close_btn = self:AddComponent(UIButton, close_path)
    self.close_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)
    self.return_btn = self:AddComponent(UIButton, return_path)
    self.return_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)
    self.desc_text = self:AddComponent(UIText, desc_path)
    self.time_text = self:AddComponent(UIText, time_path)
    self.go_btn = self:AddComponent(UIButton, go_path)
    self.go_btn:SetOnClick(function()
        self:OnGoClick()
    end)
    self.go_text = self:AddComponent(UIText, go_text_path)
    self.go_text:SetLocalText(350023)
end

local function ComponentDestroy(self)

end

local function DataDefine(self)
    self.endTime = 0
    self.timer = TimerManager:GetInstance():GetTimer(0.5, self.TimerAction, self, false, false, false)
    self.timer:Start()
end

local function DataDestroy(self)
    if self.timer then
        self.timer:Stop()
        self.timer = nil
    end
end

local function OnAddListener(self)
    base.OnAddListener(self)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
end

local function ReInit(self)
    local riotInfo = DataCenter.VitaManager:GetResidentRiotInfo()
    self.endTime = riotInfo.endTime
    self.desc_text:SetLocalText(350022, riotInfo.val)
    self:TimerAction()
end

local function TimerAction(self)
    local curTime = UITimeManager:GetInstance():GetServerTime()
    local restTime = self.endTime - curTime
    if self.endTime > 0 then
        if restTime >= 0 then
            local restTimeStr = UITimeManager:GetInstance():GetFormattedTimeMs(restTime)
            self.time_text:SetText(restTimeStr)
        else
            self.ctrl:CloseSelf()
        end
    end
end

local function OnGoClick(self)
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIVitaResident, 2)
    self.ctrl:CloseSelf()
end

UIVitaResidentRiot.OnCreate = OnCreate
UIVitaResidentRiot.OnDestroy = OnDestroy
UIVitaResidentRiot.OnEnable = OnEnable
UIVitaResidentRiot.OnDisable = OnDisable
UIVitaResidentRiot.ComponentDefine = ComponentDefine
UIVitaResidentRiot.ComponentDestroy = ComponentDestroy
UIVitaResidentRiot.DataDefine = DataDefine
UIVitaResidentRiot.DataDestroy = DataDestroy
UIVitaResidentRiot.OnAddListener = OnAddListener
UIVitaResidentRiot.OnRemoveListener = OnRemoveListener

UIVitaResidentRiot.ReInit = ReInit
UIVitaResidentRiot.TimerAction = TimerAction
UIVitaResidentRiot.OnGoClick = OnGoClick

return UIVitaResidentRiot