---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zzl.
--- DateTime: 

local UIActDragonHistoryView = BaseClass("UIActDragonHistoryView", UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization
local BattleHistoryCell = require "UI.UIActDragon.UIActDragonHistory.Component.BattleHistoryCell"


function UIActDragonHistoryView:OnCreate()
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

function UIActDragonHistoryView:OnDestroy()
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

function UIActDragonHistoryView:ComponentDefine()
    self._title_text = self:AddComponent(UITextMeshProUGUIEx, "UICommonPopUpTitle/bg_mid/titleText")
    self._title_text:SetLocalText(376022)
    self._return_btn = self:AddComponent(UIButton, "UICommonPopUpTitle/panel")
    self._return_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self.ctrl:CloseSelf()
    end)
    self._close_btn = self:AddComponent(UIButton, "UICommonPopUpTitle/bg_mid/CloseBtn")
    self._close_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self.ctrl:CloseSelf()
    end)

    self.scroll_view = self:AddComponent(UIScrollView, "Right/ScrollView")
    self.scroll_view:SetOnItemMoveIn(function(itemObj, index)
        self:OnItemMoveIn(itemObj, index)
    end)
    self.scroll_view:SetOnItemMoveOut(function(itemObj, index)
        self:OnItemMoveOut(itemObj, index)
    end)
    
    self._noBattle_txt = self:AddComponent(UIText,"Right/Txt_NoBattle")
    self._noBattle_txt:SetLocalText(302233)
end

function UIActDragonHistoryView:ComponentDestroy()
 
end

function UIActDragonHistoryView:DataDefine()

end

function UIActDragonHistoryView:DataDestroy()
    self:ClearScroll()
end

function UIActDragonHistoryView:OnAddListener()
    self:AddUIListener(EventId.DragonBattleHistory, self.ReInit)
    base.OnAddListener(self)
end

function UIActDragonHistoryView:OnRemoveListener()
    self:RemoveUIListener(EventId.DragonBattleHistory, self.ReInit)
    base.OnRemoveListener(self)
end

function UIActDragonHistoryView:OnEnable()
    base.OnEnable(self)
    DataCenter.ActDragonManager:SendBattleHistory()
end

function UIActDragonHistoryView:OnDisable()
    base.OnDisable(self)
end

function UIActDragonHistoryView:ReInit()
    self:ClearScroll()
    self.battleHistory = DataCenter.ActDragonManager:GetBattleHistory()
    if not self.battleHistory then
        return
    end
    if table.count(self.battleHistory) > 0 then
        self._noBattle_txt:SetActive(false)
        self.scroll_view:SetActive(true)
        self.scroll_view:SetTotalCount(#self.battleHistory)
        self.scroll_view:RefillCells()
    else
        self.scroll_view:SetActive(false)
        self._noBattle_txt:SetActive(true)
    end
end

function UIActDragonHistoryView:OnItemMoveIn(itemObj, index)
    itemObj.name = tostring(index)
    local cellItem = self.scroll_view:AddComponent(BattleHistoryCell, itemObj)
    cellItem:SetData(self.battleHistory[index])
end

function UIActDragonHistoryView:OnItemMoveOut( itemObj, index)
    self.scroll_view:RemoveComponent(itemObj.name, BattleHistoryCell)
end


function UIActDragonHistoryView:ClearScroll()
    self.scroll_view:ClearCells()
    self.scroll_view:RemoveComponents(BattleHistoryCell)
end

return UIActDragonHistoryView