---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zzl
--- DateTime: 
---
local RewardRule = BaseClass("RewardRule", UIBaseContainer)
local base = UIBaseContainer
local UIActDragonRewardCell = require "UI.UIActDragon.UIActDragonRule.Component.UIActDragonRewardCell"
local PersonRewardCell = require "UI.UIActDragon.UIActDragonRule.Component.PersonRewardCell"
function RewardRule:OnCreate() 
    base.OnCreate(self)
    self:ComponentDefine()
    self:SetConstTxt()
    self:ReInit()
end

function RewardRule:ComponentDefine()
    self._allianceRewardTitle_txt   = self:AddComponent(UIText, "ScrollView/Viewport/Content/Rect_Alliance/Txt_AllianceRewardTitle")
    self._allianceDesc1_txt         = self:AddComponent(UIText, "ScrollView/Viewport/Content/Rect_Reward1/Txt_AllianceDesc1")
    self._allianceDesc2_txt         = self:AddComponent(UIText, "ScrollView/Viewport/Content/Rect_Reward2/Txt_AllianceDesc2")
    self._content1_rect             = self:AddComponent(UIBaseContainer,"ScrollView/Viewport/Content/Rect_Reward1/Rect_Content1")
    self._content2_rect             = self:AddComponent(UIBaseContainer,"ScrollView/Viewport/Content/Rect_Reward2/Rect_Content2")
    
    self._personRewardTitle_txt     = self:AddComponent(UIText, "ScrollView/Viewport/Content/Rect_Person/Txt_PersonRewardTitle")
    self._personDesc1_txt           = self:AddComponent(UIText, "ScrollView/Viewport/Content/Rect_Reward3/Txt_PersonDesc1")
    self._personDesc2_txt           = self:AddComponent(UIText, "ScrollView/Viewport/Content/Rect_Reward4/Txt_PersonDesc2")
    self._content3_rect             = self:AddComponent(UIBaseContainer,"ScrollView/Viewport/Content/Rect_Reward3/Rect_Content3")
    self._content4_rect             = self:AddComponent(UIBaseContainer,"ScrollView/Viewport/Content/Rect_Reward4/Rect_Content4")

    self._scoreRewardTitle_txt      = self:AddComponent(UIText, "ScrollView/Viewport/Content/Rect_Score/Txt_ScoreRewardTitle")
    self._scoreDesc1_txt            = self:AddComponent(UIText, "ScrollView/Viewport/Content/Rect_Reward5/Txt_ScoreDesc1")
    self._scoreDesc2_txt            = self:AddComponent(UIText, "ScrollView/Viewport/Content/Rect_Reward6/Txt_ScoreDesc2")
    self._content5_rect             = self:AddComponent(UIBaseContainer,"ScrollView/Viewport/Content/Rect_Reward5/Rect_Content5")
    self._personTitle1_txt          = self:AddComponent(UIText,"ScrollView/Viewport/Content/Rect_Reward5/Rect_Content5/Rect_PersonTitle1/Txt_PersonTitle1")
    self._personTitle2_txt          = self:AddComponent(UIText,"ScrollView/Viewport/Content/Rect_Reward5/Rect_Content5/Rect_PersonTitle1/Txt_PersonTitle2")
    self._content6_rect             = self:AddComponent(UIBaseContainer,"ScrollView/Viewport/Content/Rect_Reward6/Rect_Content6")
    self._personTitle3_txt          = self:AddComponent(UIText,"ScrollView/Viewport/Content/Rect_Reward6/Rect_Content6/Rect_PersonTitle2/Txt_PersonTitle3")
    self._personTitle4_txt          = self:AddComponent(UIText,"ScrollView/Viewport/Content/Rect_Reward6/Rect_Content6/Rect_PersonTitle2/Txt_PersonTitle4")
    self.content = {[1] = self._content1_rect,[2] = self._content2_rect,[3] = self._content3_rect,[4] = self._content4_rect,[5] = self._content5_rect,[6] = self._content6_rect}
end

function RewardRule:OnDestroy()
    base.OnDestroy(self)
end

function RewardRule:SetConstTxt()
    self._allianceRewardTitle_txt:SetLocalText(376037)
    self._allianceDesc1_txt:SetLocalText(376038)
    self._allianceDesc2_txt:SetLocalText(376039)
    self._personRewardTitle_txt:SetLocalText(376040)
    self._personDesc1_txt:SetLocalText(376041)
    self._personDesc2_txt:SetLocalText(376042)
    self._scoreRewardTitle_txt:SetLocalText(376043)
    self._scoreDesc1_txt:SetLocalText(376044)
    self._scoreDesc2_txt:SetLocalText(376045)
    self._personTitle1_txt:SetLocalText(376046)
    self._personTitle2_txt:SetLocalText(376047)
    self._personTitle3_txt:SetLocalText(376046)
    self._personTitle4_txt:SetLocalText(376047)
end

function RewardRule:ReInit()

end

function RewardRule:SetData()
    local data = DataCenter.ActDragonManager:GetRewardInfo()
    if not data or not self.content then
        return
    end
    self:ClearCell()
    for i = 1 ,4 do
        self.rewardModels[i] = {}
        for k = 1, table.length(data[i]) do
            --复制基础prefab，每次循环创建一次
            self.rewardModels[i][k] = self:GameObjectInstantiateAsync(UIAssets.UIActDragonRewardCell, function(request)
                if request.isError then
                    return
                end
                local go = request.gameObject;
                go.gameObject:SetActive(true)
                go.transform:SetParent(self.content[i].transform)
                go.transform.localScale = Vector3.New(0.6, 0.6, 0.6)
                local nameStr = tostring(NameCount)
                go.name = nameStr
                NameCount = NameCount + 1
                local cell = self.content[i]:AddComponent(UIActDragonRewardCell,nameStr)
                cell:ReInit(data[i][k])
            end)
        end
    end
    for i = 5 ,6 do
        local winArr = data[i]
        self.rewardModels[i] = {}
        for k = 1 ,table.count(winArr) do
            --复制基础prefab，每次循环创建一次
            self.rewardModels[i][k] = self:GameObjectInstantiateAsync(UIAssets.PersonRewardCell, function(request)
                if request.isError then
                    return
                end
                local go = request.gameObject;
                go.gameObject:SetActive(true)
                go.transform:SetParent(self.content[i].transform)
                go.transform.localScale = Vector3.New(1, 1, 1)
                local nameStr = tostring(NameCount)
                go.name = nameStr
                NameCount = NameCount + 1
                local cell = self.content[i]:AddComponent(PersonRewardCell,nameStr)
                cell:ReInit(i,winArr[k],k)
            end)
        end
    end
end

function RewardRule:ClearCell()
    for i = 1 ,4 do
        if self.content[i] then
            self.content[i]:RemoveComponents(UIActDragonRewardCell)
        end
        if self.rewardModels and self.rewardModels[i]~=nil then
            for k,v in pairs(self.rewardModels1[i]) do
                if v ~= nil then
                    self:GameObjectDestroy(v)
                end
            end
        end
    end
    for i = 5 ,6 do
        if self.content[i] then
            self.content[i]:RemoveComponents(PersonRewardCell)
        end
        if self.rewardModels and self.rewardModels[i]~=nil then
            for k,v in pairs(self.rewardModels[i]) do
                if v ~= nil then
                    self:GameObjectDestroy(v)
                end
            end
        end
    end
    self.rewardModels = {}
end

return RewardRule