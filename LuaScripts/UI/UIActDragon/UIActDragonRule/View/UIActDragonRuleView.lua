---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zzl.
--- DateTime: 

local UIActDragonRuleView = BaseClass("UIActDragonRuleView", UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization
local BaseRule = require "UI.UIActDragon.UIActDragonRule.Component.BaseRule"
local BuildRule = require "UI.UIActDragon.UIActDragonRule.Component.BuildRule"
local RewardRule = require "UI.UIActDragon.UIActDragonRule.Component.RewardRule"

local tabSelect_img = "Assets/Main/Sprites/UI/Common/New/Common_btn_tab_open.png"
local tabUnSelect_img = "Assets/Main/Sprites/UI/Common/New/Common_btn_tab_close.png"

function UIActDragonRuleView:OnCreate()
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

function UIActDragonRuleView:OnDestroy()
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

function UIActDragonRuleView:ComponentDefine()
    self._title_text = self:AddComponent(UITextMeshProUGUIEx, "UICommonPopUpTitle/bg_mid/titleText")
   
    self._return_btn = self:AddComponent(UIButton, "UICommonPopUpTitle/panel")
    self._return_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self.ctrl:CloseSelf()
    end)
    self._close_btn = self:AddComponent(UIButton, "UICommonPopUpTitle/bg_mid/CloseBtn")
    self._close_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self.ctrl:CloseSelf()
    end)
    
    self._base_btn = self:AddComponent(UIButton,"ScrollView/Viewport/Content/Btn_Base")
    self._base_txt = self:AddComponent(UIText,"ScrollView/Viewport/Content/Btn_Base/Txt_Base")
    self._base_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnClickRect(1)
    end)
    
    self._build_btn = self:AddComponent(UIButton,"ScrollView/Viewport/Content/Btn_Build")
    self._build_txt = self:AddComponent(UIText,"ScrollView/Viewport/Content/Btn_Build/Txt_Build")
    self._build_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnClickRect(2)
    end)

    self._reward_btn = self:AddComponent(UIButton,"ScrollView/Viewport/Content/Btn_Reward")
    self._reward_txt = self:AddComponent(UIText,"ScrollView/Viewport/Content/Btn_Reward/Txt_Reward")
    self._reward_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnClickRect(3)
    end)

    self._other_btn = self:AddComponent(UIButton,"ScrollView/Viewport/Content/Btn_Other")
    self._other_txt = self:AddComponent(UIText,"ScrollView/Viewport/Content/Btn_Other/Txt_Other")
    self._other_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnClickRect(4)
    end)
    
    self._base_rule = self:AddComponent(BaseRule,"Right/Rect_BaseRule")
    self._build_rule = self:AddComponent(BuildRule,"Right/Rect_BuildRule")
    self._reward_rule = self:AddComponent(RewardRule,"Right/Rect_RewardRule")
end

function UIActDragonRuleView:ComponentDestroy()
 
end

function UIActDragonRuleView:DataDefine()

end

function UIActDragonRuleView:DataDestroy()

end

function UIActDragonRuleView:OnAddListener()
    self:AddUIListener(EventId.DragonRewardInfo, self.RefreshReward)
    base.OnAddListener(self)
end

function UIActDragonRuleView:OnRemoveListener()
    self:RemoveUIListener(EventId.DragonRewardInfo, self.RefreshReward)
    base.OnRemoveListener(self)
end

function UIActDragonRuleView:OnEnable()
    base.OnEnable(self)
    DataCenter.ActDragonManager:SendGetRewardInfo()
    self.lastType = 0
    self:ReInit()
    self:OnClickRect(1)
end

function UIActDragonRuleView:OnDisable()
    base.OnDisable(self)
end

function UIActDragonRuleView:ReInit()
    self:SetConstTxt()
end

function UIActDragonRuleView:SetConstTxt()
    self._title_text:SetLocalText(376024)
    self._base_txt:SetLocalText(376025)
    self._build_txt:SetLocalText(376026)
    self._reward_txt:SetLocalText(376027)
    self._other_txt:SetLocalText(376028)
end

function UIActDragonRuleView:OnClickRect(type)
    if self.lastType ~= type then
        self.lastType = type
        if type == 1 then
            self._base_rule:SetActive(true)
            self._build_rule:SetActive(false)
            self._reward_rule:SetActive(false)
            
            self._base_btn:LoadSprite(tabSelect_img)
            self._build_btn:LoadSprite(tabUnSelect_img)
            self._reward_btn:LoadSprite(tabUnSelect_img)
            self._other_btn:LoadSprite(tabUnSelect_img)
        elseif type == 2 then
            self._base_rule:SetActive(false)
            self._build_rule:SetActive(true)
            self._build_rule:SetData()
            self._reward_rule:SetActive(false)
            
            self._base_btn:LoadSprite(tabUnSelect_img)
            self._build_btn:LoadSprite(tabSelect_img)
            self._reward_btn:LoadSprite(tabUnSelect_img)
            self._other_btn:LoadSprite(tabUnSelect_img)
        elseif type == 3 then
            self._base_rule:SetActive(false)
            self._build_rule:SetActive(false)
            self._reward_rule:SetActive(true)
            
            self._base_btn:LoadSprite(tabUnSelect_img)
            self._build_btn:LoadSprite(tabUnSelect_img)
            self._reward_btn:LoadSprite(tabSelect_img)
            self._other_btn:LoadSprite(tabUnSelect_img)
        elseif type == 4 then
            self._base_btn:LoadSprite(tabUnSelect_img)
            self._build_btn:LoadSprite(tabUnSelect_img)
            self._reward_btn:LoadSprite(tabUnSelect_img)
            self._other_btn:LoadSprite(tabSelect_img)
        end
    end
end

function UIActDragonRuleView:RefreshReward()
    self._reward_rule:SetData()
end

return UIActDragonRuleView