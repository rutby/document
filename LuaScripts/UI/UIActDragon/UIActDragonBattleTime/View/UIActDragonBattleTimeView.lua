---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zzl.
--- DateTime: 

local UIActDragonBattleTime = BaseClass("UIActDragonBattleTime", UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization
local BattleTimeCell = require "UI.UIActDragon.UIActDragonBattleTime.Component.BattleTimeCell"

function UIActDragonBattleTime:OnCreate()
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

function UIActDragonBattleTime:OnDestroy()
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

function UIActDragonBattleTime:ComponentDefine()
    self._title_text = self:AddComponent(UIText, "UICommonMidPopUpTitle/bg_mid/titleText")
    self._title_text:SetLocalText(376098)
    self._return_btn = self:AddComponent(UIButton, "UICommonMidPopUpTitle/panel")
    self._return_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        UIManager:GetInstance():DestroyWindow(UIWindowNames.UIActDragonBattleTime)
    end)
    self._close_btn = self:AddComponent(UIButton, "UICommonMidPopUpTitle/bg_mid/CloseBtn")
    self._close_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        UIManager:GetInstance():DestroyWindow(UIWindowNames.UIActDragonBattleTime)
    end)
    
    self._tips1_txt = self:AddComponent(UIText,"Txt_Tips1")
    self._tips1_txt:SetLocalText(376099)
    self._tips2_txt = self:AddComponent(UIText,"Txt_Tips2")
    self._tips2_txt:SetLocalText(376100)
    
    self.scroll_view = self:AddComponent(UIScrollView, "ScrollView")
    self.scroll_view:SetOnItemMoveIn(function(itemObj, index)
        self:OnItemMoveIn(itemObj, index)
    end)
    self.scroll_view:SetOnItemMoveOut(function(itemObj, index)
        self:OnItemMoveOut(itemObj, index)
    end)
end

function UIActDragonBattleTime:ComponentDestroy()
 
end

function UIActDragonBattleTime:DataDefine()

end

function UIActDragonBattleTime:DataDestroy()
    self:ClearScroll()
end

function UIActDragonBattleTime:OnAddListener()
    self:AddUIListener(EventId.DragonBattleTimes, self.ReInit)
    base.OnAddListener(self)
end

function UIActDragonBattleTime:OnRemoveListener()
    self:RemoveUIListener(EventId.DragonBattleTimes, self.ReInit)
    base.OnRemoveListener(self)
end

function UIActDragonBattleTime:OnEnable()
    base.OnEnable(self)
    DataCenter.ActDragonManager:SendGetBattleTime()
end

function UIActDragonBattleTime:OnDisable()
    base.OnDisable(self)
end

function UIActDragonBattleTime:ReInit()
    self:ClearScroll()
    self.battleTime = DataCenter.ActDragonManager:GetBattleTimeInfo()
    if not self.battleTime then
        return
    end
    local actData = DataCenter.ActDragonManager:GetDragonInfo()
    self.battlePeriod = actData.battlePeriod
    if table.count(self.battleTime) > 0 then
        self.scroll_view:SetTotalCount(#self.battleTime)
        self.scroll_view:RefillCells()
    end
end

function UIActDragonBattleTime:OnItemMoveIn(itemObj, index)
    itemObj.name = tostring(index)
    local cellItem = self.scroll_view:AddComponent(BattleTimeCell, itemObj)
    cellItem:SetData(self.battleTime[index])
end

function UIActDragonBattleTime:OnItemMoveOut( itemObj, index)
    self.scroll_view:RemoveComponent(itemObj.name, BattleTimeCell)
end


function UIActDragonBattleTime:ClearScroll()
    self.scroll_view:ClearCells()
    self.scroll_view:RemoveComponents(BattleTimeCell)
end

return UIActDragonBattleTime