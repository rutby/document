---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by mac.
--- DateTime: 7/22/21 2:48 PM
---
--[[
    这个是一个道具信息的弹版提示,里面涉及到道具名称,道具描述,道具图标
    这个在传入的参数中需要传入一个gameObject,在显示的时候需要根据到边界的距离动态判定显示的Align。
    
    [0.9, 0.1]         [0.1, 0.1]
            --------------
            |             |
            |             |
            --------------
    [0.9, 0.9]          [0.1, 0.9]
]]

local UIGiftScoreTipsView = BaseClass("UIGiftScoreTipsView", UIBaseView)
local base = UIBaseView

local Localization = CS.GameEntry.Localization

local Pivot_Max = 1
local Pivot_Min = 0.1
local Pivot_Mid = 0.5

local _cp_btnGo = "root/Btn_Go"
local _cp_txtGO = "root/Btn_Go/Txt_Go"
local _cp_txtTop = "root/Rect_Top/Txt_Top"
local _cp_imgIcon = "root/Rect_Top/Img_Icon"
local _cp_txtTip = "root/TipTextBg/TipText"
local _cp_btnBg = "Panel"
local _cp_root = "root"
local _cp_imgArrow = "root/imgArrow"


--创建
function UIGiftScoreTipsView:OnCreate()
    base.OnCreate(self)
    self:ComponentDefine()
end

function UIGiftScoreTipsView:OnEnable()
    self:Init()
end

function UIGiftScoreTipsView:Init()
    local param = self:GetUserData()

    -- 必须绑定一个 alignObject，如果 alignObject 在 tip 创建过程中被销毁，tip 在创建完成后不会初始化，会被销毁
    assert(param.alignObject ~= nil)
    if param.alignObject.gameObject == nil or not param.alignObject.gameObject.activeInHierarchy then
        self.ctrl:CloseSelf()
        return
    end

    self._param = param
    self._cp_txtTop:SetLocalText(320414)
    self._cp_txtTip:SetLocalText(320415)
    self._txtGo:SetLocalText(320416)

    CS.UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(self._root.transform)
    self._cp_imgIcon:LoadSprite(string.format(LoadPath.ItemPath, param.iconPath))
    self:CheckAlign()
end

function UIGiftScoreTipsView:CheckAlign()
    local _arrowX = 0
    local _arrowY = 0
    local _rotation = -90
    local ScreenSize = CS.UnityEngine.Screen
    local ScreenWidth = ScreenSize.width
    local ScreenHeight = ScreenSize.height

    local scale = ScreenWidth / 750.0
    local _rect = self._root.rectTransform.rect
    local BgWidth = _rect.width * scale
    local BgHeight = _rect.height * scale
    local alignObject = self._param["alignObject"]
    local aboveValue = 1 --1表示箭头向上，-1表示箭头向下
    -- 目前这个先不做成自适应的了,回头有需求的再改吧
    -- 获取当前的屏幕坐标
    local _screenPos = PosConverse.WorldToScreenPos(alignObject.transform.position)
    local objWidth = alignObject.rectTransform.rect.width * scale
    local objHeight = alignObject.rectTransform.rect.height
    local pivot = Vector2.New(0.5, 0.5)
    if (_screenPos.y - objHeight*0.5 - BgHeight <0) then
        pivot.y = Pivot_Min
        _arrowY = -BgHeight / scale *0.5-3
        aboveValue = -1
    else
        pivot.y = Pivot_Max
        _arrowY = BgHeight / scale * 0.5+3
        aboveValue = 1
    end
    if (_screenPos.x - BgWidth *0.5 <=1) then
        pivot.x = Pivot_Min
        _arrowX = -BgWidth / scale*0.5*0.8
    elseif (_screenPos.x + BgWidth*0.5 > ScreenWidth-1) then
        pivot.x = Pivot_Max
        _arrowX = BgWidth / scale*0.5*0.8
    else
        pivot.x = Pivot_Mid
        _arrowX = 0
    end

    -- 计算旋转角度
    if (pivot.y == Pivot_Max and pivot.x == Pivot_Min) then
        _rotation = -90--135 
    elseif (pivot.y == Pivot_Max and pivot.x == Pivot_Max) then
        _rotation = -90--225
    elseif (pivot.y == Pivot_Max and pivot.x == Pivot_Mid) then
        _rotation = -90
    elseif (pivot.y == Pivot_Min and pivot.x == Pivot_Min) then
        _rotation = 90--45
    elseif (pivot.y == Pivot_Min and pivot.x == Pivot_Max) then
        _rotation = 90--315
    elseif (pivot.y == Pivot_Min and pivot.x == Pivot_Mid) then
        _rotation = 90
    end

    self._imgArrow.transform.localRotation = Quaternion.Euler(0, 0, _rotation)
    self._imgArrow.rectTransform.anchoredPosition = Vector2.New(_arrowX, _arrowY)
    
    self._root.rectTransform.pivot = pivot
    self._root.transform.position = alignObject.transform.position
    
end

function UIGiftScoreTipsView:OnClickGo()
    local dailyType = self.ctrl:getDailyTypeByRechargeId(self._param.rechargeId)
    self.ctrl:CloseSelf()
    local welfareType = self._param.rechargeType or WelfareTagType.CumulativeRecharge
    if tonumber(dailyType) == ActivityShowLocation.welfareCenter then
        if UIManager:GetInstance():IsWindowOpen(UIWindowNames.UIWelfareCenter) then
            EventManager:GetInstance():Broadcast(EventId.OnSelectWelfareTypeChange,self._param.rechargeId)
        else
            local param = {}
            param.selectId = self._param.rechargeId
            GoToUtil.CloseAllWindows()
            UIManager:GetInstance():OpenWindow(UIWindowNames.UIWelfareCenter, { anim = true, UIMainAnim = UIMainAnimType.AllHide,isBlur = true },param)
        end
    else
        if UIManager:GetInstance():IsWindowOpen(UIWindowNames.UIGiftPackage) then
            EventManager:GetInstance():Broadcast(EventId.GoGiftPackagePop,welfareType)
        else
            GoToUtil.CloseAllWindows()
            GoToUtil.GotoGiftPackView(nil,welfareType)
        end
    end
end

-- 销毁
function UIGiftScoreTipsView:OnDestroy()
    self:ComponentDestroy()
    base.OnDestroy(self)
end

function UIGiftScoreTipsView:ComponentDefine()
    self._btn = self:AddComponent(UIButton, _cp_btnBg)
    self._btn:SetOnClick(function ()
        self.ctrl:CloseSelf()
    end)
    self._cp_btnGo = self:AddComponent(UIButton,_cp_btnGo)
    self._cp_btnGo:SetOnClick(function ()
      self:OnClickGo()
    end)
    self._txtGo = self:AddComponent(UITextMeshProUGUIEx, _cp_txtGO)
    self._cp_txtTop = self:AddComponent(UITextMeshProUGUIEx, _cp_txtTop)
    self._cp_txtTip = self:AddComponent(UITextMeshProUGUIEx,_cp_txtTip)
    self._root = self:AddComponent(UIBaseContainer, _cp_root)
    self._imgArrow = self:AddComponent(UIBaseContainer, _cp_imgArrow)
    self._cp_imgIcon = self:AddComponent(UIImage,_cp_imgIcon)
end



function UIGiftScoreTipsView:ComponentDestroy()
    self._btn = nil
    self._txtName = nil
    self._txtDesc = nil
end


return UIGiftScoreTipsView