---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 9/1/2024 下午8:04
---
local base = UIBaseView--Variable
local MailPlayerHeroItem = require "UI.UIMailNew.UIMailMainPanel.Component.MailTypeContent.BattleTypeNew.MailPlayerHeroItem"
local UIArenaPlayerDetailView = BaseClass("UIArenaPlayerDetailView", base)--Variable
local Localization = CS.GameEntry.Localization

local title_path = "UICommonMiniPopUpTitle/Bg_mid/titleText"
local closeBtn_path = "UICommonMiniPopUpTitle/Bg_mid/CloseBtn"
local panel_path = "UICommonMiniPopUpTitle/panel"
local playerHead_path = "playerFlag/UIPlayerHead/HeadIcon"
local playerHeadFg_path = "playerFlag/UIPlayerHead/Foreground"
local playerHeadBtn_path = "playerFlag/UIPlayerHead"
local name_path = "playerName"
local power_path = "power"
local score_path = "starObj/starNum"
local hero_des_path = "heroDes"
local layout_path = "layout"

local function OnCreate(self)
    base.OnCreate(self)
    self.rankInfo = self:GetUserData()
    self:ComponentDefine()
    self:DataDefine()
    self:InitData()
end

local function OnDestroy(self)
    self:ClearScroll()
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    self.titleN = self:AddComponent(UITextMeshProUGUIEx, title_path)
    self.titleN:SetLocalText(100092)
    self.closeBtnN = self:AddComponent(UIButton, closeBtn_path)
    self.closeBtnN:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)
    self.panel = self:AddComponent(UIButton, panel_path)
    self.panel:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)
    self.playerHeadN = self:AddComponent(UIPlayerHead, playerHead_path)
    self.playerHeadFgN = self:AddComponent(UIImage, playerHeadFg_path)
    self.playerHeadBtnN = self:AddComponent(UIButton, playerHeadBtn_path)
    self.playerHeadBtnN:SetOnClick(function()
        self:OnClickPlayerHeadBtn()
    end)
    self.nameN = self:AddComponent(UITextMeshProUGUIEx, name_path)
    self.powerN = self:AddComponent(UITextMeshProUGUIEx, power_path)
    self.scoreN = self:AddComponent(UITextMeshProUGUIEx, score_path)
    self.hero_des = self:AddComponent(UITextMeshProUGUIEx, hero_des_path)
    self.hero_des:SetLocalText(100275)
    self.layout = self:AddComponent(UIBaseContainer,layout_path)
end

local function ComponentDestroy(self)
    self.titleN = nil
    self.closeBtnN = nil
    self.challengeTimesN = nil
    self.ticketCountN = nil
    self.buyTicketBtnN = nil
    self.svHistoryN = nil
    self.targetContentN = nil
end

local function DataDefine(self)
end

local function DataDestroy(self)
end

--  [[
local function OnAddListener(self)
    base.OnAddListener(self)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
end
--]]

local function InitData(self)
    if self.rankInfo.type == 0 then
        self.nameN:SetLocalText(100184)
        self.powerN:SetText(string.GetFormattedStr(self.rankInfo.power))
        self.scoreN:SetText(self.rankInfo.score)
    else
        self.playerHeadN:SetData(self.rankInfo.uid, self.rankInfo.pic, self.rankInfo.picVer)
        local tempAbbr = not string.IsNullOrEmpty(self.rankInfo.abbr) and "[" .. self.rankInfo.abbr .. "]" or ""
        self.nameN:SetText(tempAbbr .. self.rankInfo.name)
        self.powerN:SetText(string.GetFormattedStr(self.rankInfo.power))
        self.scoreN:SetText(self.rankInfo.score)
    end
    self:RefreshArmy()
end

local function RefreshArmy(self)
    self:ClearScroll()
    local heroes = self.rankInfo.army and self.rankInfo.army.heroes or {}
    local heroCount = #heroes
    if heroCount>0 then
        for i=1,heroCount do
            self.model[i] = self:GameObjectInstantiateAsync(UIAssets.MailPlayerHeroItem, function(request)
                if request.isError then
                    return
                end
                local go = request.gameObject;
                go:SetActive(true)
                go.transform:SetParent(self.layout.transform)
                go.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
                go.name = "item"..i
                local cell = self.layout:AddComponent(MailPlayerHeroItem,go.name)
                cell:SetData(heroes[i])
            end)
        end
    end

end

local function ClearScroll(self)
    if self.layout then
        self.layout:RemoveComponents(MailPlayerHeroItem)
    end
    if self.model~=nil and next(self.model) then
        for k,v in pairs(self.model) do
            if v ~= nil then
                self:GameObjectDestroy(v)
            end
        end
    end
    self.model ={}
end

local function OnClickPlayerHeadBtn(self)
    if self.rankInfo and self.rankInfo.type == 1 then
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIOtherPlayerInfo,self.rankInfo.uid)
    end
end
UIArenaPlayerDetailView.OnCreate = OnCreate
UIArenaPlayerDetailView.OnDestroy = OnDestroy
UIArenaPlayerDetailView.OnAddListener = OnAddListener
UIArenaPlayerDetailView.OnRemoveListener = OnRemoveListener
UIArenaPlayerDetailView.ComponentDefine = ComponentDefine
UIArenaPlayerDetailView.ComponentDestroy = ComponentDestroy
UIArenaPlayerDetailView.DataDefine = DataDefine
UIArenaPlayerDetailView.DataDestroy = DataDestroy

UIArenaPlayerDetailView.InitData = InitData
UIArenaPlayerDetailView.ClearScroll= ClearScroll
UIArenaPlayerDetailView.RefreshArmy =RefreshArmy
UIArenaPlayerDetailView.OnClickPlayerHeadBtn = OnClickPlayerHeadBtn
return UIArenaPlayerDetailView