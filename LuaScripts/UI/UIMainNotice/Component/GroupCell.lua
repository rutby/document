---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 
--- DateTime: 
---GroupCell

local GroupCell = BaseClass("GroupCell",UIBaseContainer)
local MailListItem = require "UI.UIMainNotice.Component.MailListItem"
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization

local function OnCreate(self)
    base.OnCreate(self)
    
    --self._name_rect = self:AddComponent(UIBaseContainer,"groupName")
    --self.titleN = self:AddComponent(UIText, "groupName/groupName")
    self.tabContainerN = self:AddComponent(UIBaseContainer, "activityContainer")
end

local function OnDestroy(self)
    self:SetAllCellDestroy()
    self.titleN = nil
    self.tabContainerN = nil
    
    self.groupId = nil
    
    base.OnDestroy(self)
end

local function RefreshGroup(self, index,group,callBack)
    --local dialog =  DataCenter.WorldNoticeManager:GetTitleByType(index)
    --if dialog ~= "" then
    --    self._name_rect:SetActive(true)
    --    self.titleN:SetLocalText(dialog)
    --else
    --    self._name_rect:SetActive(false)
    --end
    
    self:RefreshTabs(group,callBack)
end

local function RefreshTabs(self,group,callBack)
    self:SetAllCellDestroy()
    local count = 0
    self.modelTabs = {}
    for i, v in ipairs(group) do
        self.modelTabs[i] = self:GameObjectInstantiateAsync(UIAssets.NoticeListItem, function(request)
            if request.isError then
                return
            end
            local go = request.gameObject;
            go.gameObject:SetActive(true)
            go.transform:SetParent(self.tabContainerN.transform)
            go.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
            go.name = "list_item"..v.noticeId
            local cell = self.tabContainerN:AddComponent(MailListItem,go.name)
            cell:SetItemShow(v)
            count = count + 1
            CS.UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(self.tabContainerN.rectTransform)
            if count == #group then
                callBack()
            end
        end)
    end
end

local function SetAllCellDestroy(self)
    self.tabContainerN:RemoveComponents(MailListItem)
    if self.modelTabs~=nil then
        for k,v in pairs(self.modelTabs) do
            if v ~= nil then
                self:GameObjectDestroy(v)
            end
        end
    end
end


GroupCell.OnCreate = OnCreate
GroupCell.OnDestroy = OnDestroy

GroupCell.RefreshGroup = RefreshGroup
GroupCell.RefreshTabs = RefreshTabs

GroupCell.SetAllCellDestroy = SetAllCellDestroy


return GroupCell