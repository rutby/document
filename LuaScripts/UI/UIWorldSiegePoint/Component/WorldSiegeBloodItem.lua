---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 5/3/2024 下午4:03
---
local WorldSiegeBloodItem = BaseClass("WorldSiegeBloodItem", UIBaseContainer)
local base = UIBaseContainer

local soldier_num_text_path = "sliderBlood/totalNum"
local soldier_slider_A_path = "sliderBlood/Background/sliderA"
local soldier_slider_B_path = "sliderBlood/Background/sliderB"

local blood_num_text_path = "sliderStamina/Slider/slider_text"
local blood_slider_path = "sliderStamina/Slider"
local SliderSoliderLength = Vector2.New(360,26)
local BloodColorList = {"UIActivityPirates_pro1","UIActivityPirates_pro1.2","UIActivityPirates_pro1.3","UIActivityPirates_pro1.4"}
-- 创建
local function OnCreate(self)
    base.OnCreate(self)
    self.soldier_num_text = self:AddComponent(UITextMeshProUGUIEx,soldier_num_text_path)
    self.soldier_slider_A = self:AddComponent(UIImage,soldier_slider_A_path)
    self.soldier_slider_B = self:AddComponent(UIImage,soldier_slider_B_path)
    self.blood_num_text = self:AddComponent(UITextMeshProUGUIEx,blood_num_text_path)
    self.blood_slider = self:AddComponent(UISlider,blood_slider_path)
    self.curSoldierSize = {x = SliderSoliderLength.x,y = SliderSoliderLength.y}
    self:ResetNum()
end

-- 销毁
local function OnDestroy(self)
    base.OnDestroy(self)
end

-- 显示
local function OnEnable(self)
    base.OnEnable(self)
end

-- 隐藏
local function OnDisable(self)
    base.OnDisable(self)
end

local function ResetNum(self)
    self.blood_slider:SetValue(0)
    self.blood_num_text:SetText("")
    self.soldier_slider_A:SetSizeDelta({x = 0,y = SliderSoliderLength.y})
    self.soldier_slider_B:SetSizeDelta({x = 0,y = SliderSoliderLength.y})
    self.soldier_num_text:SetText("")
end
local function SetUuid(self,uuid,cityId)
    self.uuid = uuid
    self.cityId = cityId
    self.splitNum = toInt(GetTableData(TableName.WorldCity, self.cityId, "hp_army"))
    self.recoverSpeed = tonumber(GetTableData(TableName.WorldCity, self.cityId, "wall_recover"))
end
-- 全部刷新
local function RefreshData(self,bUuid,curSoldierNum,maxSoldierNum, maxDura,curDura)
    if self.uuid ==bUuid then
        local maxDurability = maxDura
        local curBlood = curSoldierNum
        local maxBlood = maxSoldierNum
        local curDurability = curDura
        local info = DataCenter.WorldPointManager:GetPointInfoByUuid(bUuid)
        if info~=nil then
            local allianceCityPointInfo = PBController.ParsePbFromBytes(info.extraInfo, "protobuf.AllianceCityPointInfo")
            if allianceCityPointInfo~=nil then
                local durability = allianceCityPointInfo["durability"]
                local lastDurabilityTime = allianceCityPointInfo["lastDurabilityTime"]
                local curTime = UITimeManager:GetInstance():GetServerSeconds()
                local addNum = (curTime- lastDurabilityTime)*self.recoverSpeed
                local realDurabilityNum = durability + math.max(addNum,0)
                curDurability = math.min(realDurabilityNum,maxDurability)
            end
        end
        self:SetSoldierBlood(curBlood,maxBlood)
        self:SetBlood(curDurability,maxDurability)
    end
end

local function UpdateStamina(self,message)
    if message ==nil then
        return 
    end
    if message["cityUuid"]~=nil then
        local bUuid = message["cityUuid"]
        if self.uuid == bUuid then
            local startBlood = message["oldDurability"]
            local targetBlood = message["nowDurability"]
            local maxBlood = message["maxDurability"]
            self:SetBlood(targetBlood,maxBlood)
        end
    end
end
local function UpdateSoldierBlood(self,data)
    if data~=nil then
        local dataStr = string.split(data,";")
        if #dataStr>2 then
            local bUuid = tonumber(dataStr[1])
            if self.uuid == bUuid then
                local curBlood = tonumber(dataStr[2])
                local maxBlood = tonumber(dataStr[3])
                self:SetSoldierBlood(curBlood,maxBlood)
            end
            
        end
    end
end
local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.AllianceCityStaminaUpdate, self.UpdateStamina)
    self:AddUIListener(EventId.ShowAllianceCitySoldierBlood, self.UpdateSoldierBlood)
end


local function OnRemoveListener(self)
    base.OnRemoveListener(self)
    self:RemoveUIListener(EventId.AllianceCityStaminaUpdate, self.UpdateStamina)
    self:RemoveUIListener(EventId.ShowAllianceCitySoldierBlood, self.UpdateSoldierBlood)
end

local function SetSoldierBlood(self,curBlood,maxBlood)
    local totalCount = math.floor(maxBlood/self.splitNum)
    local value = math.min((curBlood/maxBlood),1)
    local realNum = value*totalCount
    local ANum = math.floor(realNum)
    local BNum = math.ceil(realNum)
    local percent = math.min((realNum-ANum),1)
    if ANum == BNum then
        percent = 1
    end
    if ANum>0 then
        local count = #BloodColorList
        local posA = ANum%count
        local posB = BNum%count
        if posA<=0 then
            posA = count
        end
        if posB<=0 then
            posB = count
        end
        local sprA = BloodColorList[posA]
        local sprB = BloodColorList[posB]
        self.soldier_slider_A:LoadSprite("Assets/Main/Sprites/UI/UIWorldBattle/"..sprA)
        self.soldier_slider_B:LoadSprite("Assets/Main/Sprites/UI/UIWorldBattle/"..sprB)
        self.soldier_slider_A:SetSizeDelta({x = SliderSoliderLength.x,y = SliderSoliderLength.y})
        self.soldier_slider_B:SetSizeDelta({x = SliderSoliderLength.x*percent,y = SliderSoliderLength.y})
    elseif BNum>0 then
        local count = #BloodColorList
        local posB = BNum%count
        if posB<=0 then
            posB = count
        end
        local sprB = BloodColorList[posB]
        self.soldier_slider_B:LoadSprite("Assets/Main/Sprites/UI/UIWorldBattle/"..sprB)
        self.soldier_slider_A:SetSizeDelta({x = 0,y = SliderSoliderLength.y})
        self.soldier_slider_B:SetSizeDelta({x = SliderSoliderLength.x*percent,y = SliderSoliderLength.y})
        self.soldier_num_text:SetText("x0")
    else
        self.soldier_slider_A:SetSizeDelta({x = 0,y = SliderSoliderLength.y})
        self.soldier_slider_B:SetSizeDelta({x = 0,y = SliderSoliderLength.y})
        self.soldier_num_text:SetText("x0")
    end
    if BNum<=0 then
        self.soldier_num_text:SetText("")
    else
        self.soldier_num_text:SetText("x"..BNum)
    end
end

local function SetBlood(self,targetBlood,maxBlood)
    local value = math.min((targetBlood/maxBlood),1)
    self.blood_slider:SetValue(value)
    self.blood_num_text:SetText(string.GetFormattedSeperatorNum(toInt(targetBlood)).."/"..string.GetFormattedSeperatorNum(toInt(maxBlood)))
end

WorldSiegeBloodItem.OnCreate = OnCreate
WorldSiegeBloodItem.OnDestroy = OnDestroy
WorldSiegeBloodItem.OnEnable = OnEnable
WorldSiegeBloodItem.OnDisable = OnDisable
WorldSiegeBloodItem.RefreshData = RefreshData
WorldSiegeBloodItem.ResetNum = ResetNum
WorldSiegeBloodItem.SetUuid = SetUuid
WorldSiegeBloodItem.OnAddListener =OnAddListener
WorldSiegeBloodItem.OnRemoveListener =OnRemoveListener
WorldSiegeBloodItem.UpdateStamina = UpdateStamina
WorldSiegeBloodItem.UpdateSoldierBlood =UpdateSoldierBlood
WorldSiegeBloodItem.SetBlood = SetBlood
WorldSiegeBloodItem.SetSoldierBlood = SetSoldierBlood
return WorldSiegeBloodItem