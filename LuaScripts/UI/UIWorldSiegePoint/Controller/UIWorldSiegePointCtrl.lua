---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2021/10/25 14:33
---
local UIWorldSiegePointCtrl = BaseClass("UIWorldSiegePointCtrl", UIBaseCtrl)
local Localization = CS.GameEntry.Localization
local function CloseSelf(self)
    UIManager.Instance:DestroyWindow(UIWindowNames.UIWorldSiegePoint)
end
local function InitData(self,cityId,pointId)
    self.cityId = cityId
	self.pointId = pointId
    SFSNetwork.SendMessage(MsgDefines.WorldGetAllianceCityDetail,self.cityId,LuaEntry.Player:GetCurServerId())
end

local function GetAllianceCityData(self,cityId)
    local oneData = {}
    oneData.cityId = cityId
    oneData.isInAlliance = false
    local allianceUid =""
    local data =  DataCenter.AllianceBaseDataManager:GetAllianceBaseData()
    if data~=nil then
        allianceUid = data.uid
        if allianceUid~=nil and allianceUid~="" then
            oneData.isInAlliance = true
        end

    end
    local cityTemplate = LocalController:instance():getLine(TableName.WorldCity, cityId)
    if cityTemplate~=nil then
        oneData.level = cityTemplate:getValue("level")
        oneData.rewardStr = {}
        oneData.forceNum = 0
        oneData.forceAddSpeed = 0
        oneData.resistance = 0
        oneData.selfPercent = 1
        oneData.eden_city_type = cityTemplate:getValue("eden_city_type")
        local season = SeasonUtil.GetSeason()
        if CrossServerUtil:GetIsCrossServer() then
            local serverId = LuaEntry.Player:GetCurServerId()
            season = DataCenter.AccountManager:GetSeasonNumByServerId(serverId)
        end
        if season ~= nil and season>0 then
            local str = "city_resistance"
            local isOpen = LuaEntry.DataConfig:CheckSwitch("world_city_use_extra_army")
            if isOpen then
                str = "city_resistance_b"
            end
            local city_dmg_param = cityTemplate:getValue("city_dmg_param")
            local k21 = LuaEntry.DataConfig:TryGetNum("new_battle_config", "k21")
            local k23 = LuaEntry.DataConfig:TryGetNum("new_battle_config", "k23")
            local arrK = string.split(city_dmg_param,";")
            if #arrK>=2 then
                k21 = tonumber(arrK[1])
                k23 = tonumber(arrK[2])
            end
            oneData.resistance = cityTemplate:getValue(str)
            oneData.selfValue = SeasonUtil:GetSelfSeasonResistanceValue()
            oneData.selfPercent = SeasonUtil.GetSeasonResistanceSelf(oneData.selfValue,oneData.resistance,k21)-1
            oneData.otherPercent = SeasonUtil.GetSeasonResistanceOther(oneData.selfValue,oneData.resistance,k23)-1
        end
        local rewardStr = cityTemplate:getValue("show_reward")
        if season ~= nil and season>0 then
            rewardStr = cityTemplate:getValue("s"..season.."_show_reward")
        end
        if season ~= nil and season>0 then
            oneData.forceNum = cityTemplate:getValue("s"..season.."_force")
            oneData.forceAddSpeed = cityTemplate:getValue("s"..season.."_force_grow")
        else
            oneData.forceNum = cityTemplate:getValue("force")
            oneData.forceAddSpeed = cityTemplate:getValue("force_grow")
        end
        local reward = string.split(rewardStr,"|")
        if #reward>0 then
            table.walk(reward,function (k,v)
                local str = v
                if str~=nil and str~="" then
                    local strVec = string.split(str,";")
                    if #strVec>2 then
                        local id = tonumber(strVec[1])
                        local rewardType = tonumber(strVec[2])
                        local num = tonumber(strVec[3])
                        if rewardType ==  RewardType.GOODS then
                            local goods = DataCenter.ItemTemplateManager:GetItemTemplate(id)
                            if goods~=nil then
                                local item = {}
                                item.itemId = id
                                item.iconName = string.format(LoadPath.ItemPath,goods.icon)
                                item.count = num
                                item.itemColor = DataCenter.ItemTemplateManager:GetToolBgByColor(goods.color)
                                item.rewardType = rewardType
                                local itemType = goods.type
                                if itemType == 2 then -- SPD
                                    if goods.para1 ~= nil and goods.para1 ~= "" then
                                        local para1 = goods.para1
                                        local temp = string.split(para1,';')
                                        if temp ~= nil and #temp > 1 then
                                            item.itemFlag = temp[1]..temp[2]
                                        end
                                    end
                                elseif itemType == 3 then -- USE
                                    local type2 = goods.type2
                                    if type2 ~= 999 and goods.para ~= nil then
                                        local res_num = tonumber(goods.para)
                                        item.itemFlag = string.GetFormattedStr(res_num)
                                    end
                                end
                                table.insert(oneData.rewardStr,item)
                            end
                        else
                            local resourceType = RewardToResType[rewardType]
                            if resourceType~=nil then
                                local item = {}
                                item.itemId = id
                                item.iconName = DataCenter.ResourceManager:GetResourceIconByType(resourceType)
                                item.itemColor = DataCenter.ItemTemplateManager:GetToolBgByColor(ItemColor.GREEN)
                                item.rewardType = rewardType
                                item.count = num
                                table.insert(oneData.rewardStr,item)
                            end

                        end
                    end
                end

            end)
        end
        oneData.userName = ""
        oneData.name = cityTemplate:getValue("name")
        local cityInfo = DataCenter.WorldAllianceCityDataManager:GetAllianceCityDataByCityId(cityId)
        if cityInfo~=nil and cityInfo.cityName~=nil and cityInfo.cityName~="" then
            oneData.userName = cityInfo.cityName
        end
        oneData.monsterNum = cityTemplate:getValue("monster_num")
        oneData.maxDurability = cityTemplate:getValue("wall")
        if season ~= nil and season>0 then
            oneData.maxDurability = cityTemplate:getValue("s"..season.."_wall")
        end
        oneData.cityRecoverSpeed = cityTemplate:getValue("wall_recover")
        oneData.monsterRecoverTime = cityTemplate:getValue("army_recover_time")

        local recommend = cityTemplate:getValue("recommend_soldier")
        if season ~= nil and season>0 then
            local str = "s"..season.."_recommend_soldier"
            local isOpen = LuaEntry.DataConfig:CheckSwitch("world_city_use_extra_army")
            if isOpen then
                str = str.."_b"
            end
            recommend = cityTemplate:getValue(str)
        end
        local recommendArr = string.split_ss_array(recommend,";")
        oneData.recommend_level = 0
        oneData.recommend_num = 0
        if #recommendArr>=2 then
            oneData.recommend_level = tonumber(recommendArr[1])
            oneData.recommend_num = tonumber(recommendArr[2])
        end
        oneData.kill_reward_list = {}
        local kill_reward_str = cityTemplate:getValue("kill_show_reward")
        if season ~= nil and season>0 then
            kill_reward_str = cityTemplate:getValue("s"..season.."_kill_show_reward")
        end
        local killRewardArr = string.split_ss_array(kill_reward_str,"|")
        if #killRewardArr>0 then
            table.walk(killRewardArr,function(k,v)
                local str = v
                local rewardArr =string.split_ss_array(str,";")
                if #rewardArr>0 then
                    local onPlayerReward = {}
                    table.walk(rewardArr,function(a,b)
                        local oneStr = b
                        if oneStr~=nil and oneStr~="" then
                            local strVec = string.split(oneStr,",")
                            if #strVec>2 then
                                local id = tonumber(strVec[1])
                                local rewardType = tonumber(strVec[2])
                                local num = tonumber(strVec[3])
                                if rewardType ==  RewardType.GOODS then
                                    local goods = DataCenter.ItemTemplateManager:GetItemTemplate(id)
                                    if goods~=nil then
                                        local item = {}
                                        item.itemId = id
                                        item.iconName = string.format(LoadPath.ItemPath,goods.icon)
                                        item.count = num
                                        item.itemColor = DataCenter.ItemTemplateManager:GetToolBgByColor(goods.color)
                                        item.rewardType = rewardType
                                        local itemType = goods.type
                                        if itemType == 2 then -- SPD
                                            if goods.para1 ~= nil and goods.para1 ~= "" then
                                                local para1 = goods.para1
                                                local temp = string.split(para1,';')
                                                if temp ~= nil and #temp > 1 then
                                                    item.itemFlag = temp[1]..temp[2]
                                                end
                                            end
                                        elseif itemType == 3 then -- USE
                                            local type2 = goods.type2
                                            if type2 ~= 999 and goods.para ~= nil then
                                                local res_num = tonumber(goods.para)
                                                item.itemFlag = string.GetFormattedStr(res_num)
                                            end
                                        end
                                        table.insert(onPlayerReward,item)
                                    end
                                else
                                    local resourceType = RewardToResType[rewardType]
                                    if resourceType~=nil then
                                        local item = {}
                                        item.itemId = id
                                        item.iconName = DataCenter.ResourceManager:GetResourceIconByType(resourceType)
                                        item.itemColor = DataCenter.ItemTemplateManager:GetToolBgByColor(ItemColor.GREEN)
                                        item.rewardType = rewardType
                                        item.count = num
                                        table.insert(onPlayerReward,item)
                                    end

                                end
                            end
                        end
                    end)
                    if #onPlayerReward>0 then
                        table.insert(oneData.kill_reward_list,onPlayerReward)
                    end
                end
            end)
        end

        oneData.destroy_reward_list = {}
        local destroy_reward_str = cityTemplate:getValue("destroy_show_reward")
        if season ~= nil and season>0 then
            destroy_reward_str = cityTemplate:getValue("s"..season.."_destroy_show_reward")
        end
        local destroyRewardArr = string.split_ss_array(destroy_reward_str,"|")
        if #destroyRewardArr>0 then
            table.walk(destroyRewardArr,function(k,v)
                local str = v
                local rewardArr =string.split_ss_array(str,";")
                if #rewardArr>0 then
                    local onPlayerReward = {}
                    table.walk(rewardArr,function(a,b)
                        local oneStr = b
                        if oneStr~=nil and oneStr~="" then
                            local strVec = string.split(oneStr,",")
                            if #strVec>2 then
                                local id = tonumber(strVec[1])
                                local rewardType = tonumber(strVec[2])
                                local num = tonumber(strVec[3])
                                if rewardType ==  RewardType.GOODS then
                                    local goods = DataCenter.ItemTemplateManager:GetItemTemplate(id)
                                    if goods~=nil then
                                        local item = {}
                                        item.itemId = id
                                        item.iconName = string.format(LoadPath.ItemPath,goods.icon)
                                        item.count = num
                                        item.itemColor = DataCenter.ItemTemplateManager:GetToolBgByColor(goods.color)
                                        item.rewardType = rewardType
                                        local itemType = goods.type
                                        if itemType == 2 then -- SPD
                                            if goods.para1 ~= nil and goods.para1 ~= "" then
                                                local para1 = goods.para1
                                                local temp = string.split(para1,';')
                                                if temp ~= nil and #temp > 1 then
                                                    item.itemFlag = temp[1]..temp[2]
                                                end
                                            end
                                        elseif itemType == 3 then -- USE
                                            local type2 = goods.type2
                                            if type2 ~= 999 and goods.para ~= nil then
                                                local res_num = tonumber(goods.para)
                                                item.itemFlag = string.GetFormattedStr(res_num)
                                            end
                                        end
                                        table.insert(onPlayerReward,item)
                                    end
                                else
                                    local resourceType = RewardToResType[rewardType]
                                    if resourceType~=nil then
                                        local item = {}
                                        item.itemId = id
                                        item.iconName = DataCenter.ResourceManager:GetResourceIconByType(resourceType)
                                        item.itemColor = DataCenter.ItemTemplateManager:GetToolBgByColor(ItemColor.GREEN)
                                        item.rewardType = rewardType
                                        item.count = num
                                        table.insert(onPlayerReward,item)
                                    end

                                end
                            end
                        end
                    end)
                    if #onPlayerReward>0 then
                        table.insert(oneData.destroy_reward_list,onPlayerReward)
                    end
                end
            end)
        end

        oneData.nearCityIdList = {}
        local nearStr = cityTemplate:getValue("nearBy")
        if nearStr~=nil and nearStr~="" then
            local nearList = string.split(nearStr,"|")
            if #nearList>0 then
                table.walk(nearList,function(k,v)
                    local oneCityId  =tonumber(v)
                    local posStr = GetTableData(TableName.WorldCity, oneCityId, "location")
                    local oneStr = oneCityId..": "..posStr
                    table.insert(oneData.nearCityIdList,oneStr)
                end)
            end

        end
        local buff = cityTemplate:getValue("buff")
        if season ~= nil and season>0 then
            buff = cityTemplate:getValue("s"..season.."_buff")
        end
        if buff~=nil then
            local buffArr = string.split(buff,"|")
            if #buffArr>0 then
                local buffStr = string.split(buffArr[1],";")
                if #buffStr>1 then
                    local effectId = tonumber(buffStr[1])
                    if effectId ~= 30145 then
                        local value = tonumber(buffStr[2])
                        local nameStr = GetTableData(TableName.EffectNumDesc, effectId, 'des')
                        oneData.buffDes = nameStr --加成类型
                        local type = toInt(GetTableData(TableName.EffectNumDesc, effectId, 'type'))

                        if type == EffectLocalTypeInEffectDesc.Num then
                            oneData.buffAddNum = string.GetFormattedSeperatorNum(value)
                        elseif type == EffectLocalTypeInEffectDesc.Percent then
                            oneData.buffAddNum = string.GetFormattedPercentStr(value/100)
                        elseif type == EffectLocalTypeInEffectDesc.Thousandth then
                            oneData.buffAddNum = string.GetFormattedThousandthStr(value/1000)
                        end
                    end
                end
                if #buffArr>1 then
                    local buffStr2 = string.split(buffArr[2],";")
                    if #buffStr2>1 then
                        local effectId = tonumber(buffStr2[1])
                        if effectId ~= 30145 then
                            local value = tonumber(buffStr2[2])
                            local nameStr = GetTableData(TableName.EffectNumDesc, effectId, 'des')
                            oneData.buffDes2 = nameStr --加成类型
                            local type = toInt(GetTableData(TableName.EffectNumDesc, effectId, 'type'))

                            if type == EffectLocalTypeInEffectDesc.Num then
                                oneData.buffAddNum2 = string.GetFormattedSeperatorNum(value)
                            elseif type == EffectLocalTypeInEffectDesc.Percent then
                                oneData.buffAddNum2 = string.GetFormattedPercentStr(value/100)
                            elseif type == EffectLocalTypeInEffectDesc.Thousandth then
                                oneData.buffAddNum2 = string.GetFormattedThousandthStr(value/1000)
                            end
                        end

                    end
                end
            end
        end
        oneData.dead_rate = ""
        local wounded_rate = cityTemplate:getValue("wounded_rate")
        local injury_rate = cityTemplate:getValue("injury_rate")
        if season ~= nil and season==3 then
            wounded_rate = cityTemplate:getValue("s3_wounded_rate")
            injury_rate = cityTemplate:getValue("s3_injury_rate")
        elseif season~=nil and season == 4 then
            wounded_rate = cityTemplate:getValue("s4_wounded_rate")
            injury_rate = cityTemplate:getValue("s4_injury_rate")
        end
        oneData.wounded_rate = 0
        oneData.injury_rate = 0
        if wounded_rate~=nil and injury_rate~=nil then
            oneData.wounded_rate = wounded_rate
            oneData.injury_rate = injury_rate
            local rate = 100-wounded_rate-injury_rate
            oneData.dead_rate = rate.."%"
        end
        
        local camp = cityTemplate:getValue("belong_eden_camp")
        oneData.belong_eden_camp = toInt(camp)
    end
    local pointInfo =DataCenter.WorldPointManager:GetPointInfo(self.pointId)
    if pointInfo~=nil then
        if pointInfo~=nil then
            oneData.pointId = pointInfo.pointIndex
            oneData.uuid = pointInfo.uuid
            oneData.serverId = pointInfo.serverId
            local allianceCityPointInfo = PBController.ParsePbFromBytes(pointInfo.extraInfo, "protobuf.AllianceCityPointInfo")
            if allianceCityPointInfo~=nil then
                oneData.openTime = allianceCityPointInfo["openTime"]
                if LuaEntry.Player.serverType == ServerType.EDEN_SERVER then
                    if oneData.belong_eden_camp~=nil and oneData.belong_eden_camp >0 then
                        local selfCamp = DataCenter.RobotWarsManager:GetSelfCamp()
                        if selfCamp == oneData.belong_eden_camp then
                        else
                            oneData.openTime = -1
                        end
                    end
                end
                oneData.state = allianceCityPointInfo["state"]
                oneData.protectTime = allianceCityPointInfo["protectTime"]
                oneData.alAbbr = allianceCityPointInfo["alAbbr"]
                oneData.alName = allianceCityPointInfo["alName"]
                oneData.allianceId = allianceCityPointInfo["allianceId"]
                oneData.durability = allianceCityPointInfo["durability"]
                oneData.lastDurabilityTime = allianceCityPointInfo["lastDurabilityTime"]
                local cityAllianceId = allianceCityPointInfo["allianceId"]
                oneData.btnList ={}
                if oneData.cityId == THRONE_ID and LuaEntry.Player.serverType == ServerType.NORMAL then
                    if oneData.isInAlliance == true then
                        if (oneData.state == AllianceCityState.OCCUPIED or oneData.state == AllianceCityState.InProgress) and cityAllianceId == allianceUid then
                            oneData.selfPercent =1
                            table.insert(oneData.btnList,WorldPointBtnType.RallyAssistanceThrone)
                        else
                            table.insert(oneData.btnList,WorldPointBtnType.ScoutThrone)
                            table.insert(oneData.btnList,WorldPointBtnType.RallyThrone)
                        end
                    else
                        table.insert(oneData.btnList,WorldPointBtnType.ScoutThrone)
                        table.insert(oneData.btnList,WorldPointBtnType.RallyThrone)
                    end

                else
                    if oneData.isInAlliance == true then
                        if oneData.state == AllianceCityState.OCCUPIED and cityAllianceId == allianceUid then
                            oneData.selfPercent =1
                            table.insert(oneData.btnList,WorldPointBtnType.AssistanceCity)
                        else
                            local info = DataCenter.AllianceDeclareWarManager:GetSelfDeclareWarData()
                            if info then
                                --检查是否自己联盟所宣战的
                                if cityId == tonumber(info.content) then
                                    table.insert(oneData.btnList,WorldPointBtnType.ScoutCity)
                                    table.insert(oneData.btnList,WorldPointBtnType.RallyCity)
                                    table.insert(oneData.btnList,WorldPointBtnType.AttackCity)
                                    local infoList = DataCenter.ActivityListDataManager:GetActivityDataByType(ActivityEnum.ActivityType.AllianceCityRecord)
                                    if infoList and #infoList > 0 then
                                        local isOpen = DataCenter.ActivityListDataManager:CheckIsSend(infoList[1])
                                        if isOpen then
                                            table.insert(oneData.btnList,WorldPointBtnType.AllianceCityRank)
                                        end
                                    end
                                    
                                else
                                    table.insert(oneData.btnList,WorldPointBtnType.DeclareWar)
                                end
                            else
                                table.insert(oneData.btnList,WorldPointBtnType.DeclareWar)
                            end
                            
                        end
                    else
                        table.insert(oneData.btnList,WorldPointBtnType.ScoutCity)
                        table.insert(oneData.btnList,WorldPointBtnType.RallyCity)
                        table.insert(oneData.btnList,WorldPointBtnType.AttackCity)
                    end

                    if #oneData.btnList<=3 and oneData.eden_city_type == WorldCityType.AllianceCity then
                        --开活动后显示黑骑士
                        local act = DataCenter.ActBlackKnightManager:GetActivity()
                        if act ~= nil then
                            if DataCenter.ActivityListDataManager:IsActivityOpen(act.id) then
                                table.insert(oneData.btnList, WorldPointBtnType.BlackKnight)
                            end
                        end
                        -- 捐兵活动
                        if DataCenter.ActivityDonateSoldierManager:IsDonateSoldierActivityOpen() then
                            table.insert(oneData.btnList, WorldPointBtnType.DonateSoldier)
                        end
                    end
                end
            end
        end
    end
    if CrossServerUtil:GetIsCrossServer() then
        oneData.btnList = {}
    end
    return oneData
end

local function GetAllianceCityDetail(self,cityId)
    local data = {}
    data = DataCenter.WorldPointDetailManager:GetAllianceCityData(cityId)
    return data
end

local function OnMarkClick(self,server,point,oname,olv)
    local share_param = {}
    share_param.sid = server
    share_param.worldId = LuaEntry.Player:GetCurWorldId()
    share_param.pos = point
    share_param.oname = oname
    share_param.olv = olv
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIPositionAdd, { anim = true }, share_param)
    self:CloseSelf()
end

local function OnShareClick(self,server,point,oname,uname)
    local share_param = {}
    share_param.sid = server
    share_param.worldId = LuaEntry.Player:GetCurWorldId()
    share_param.pos = point
    share_param.oname = oname
    share_param.uname = nil--uname
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIPositionShare, {anim = true}, share_param)
    self:CloseSelf()
end


UIWorldSiegePointCtrl.CloseSelf = CloseSelf
UIWorldSiegePointCtrl.GetAllianceCityData = GetAllianceCityData
UIWorldSiegePointCtrl.InitData = InitData
UIWorldSiegePointCtrl.OnMarkClick = OnMarkClick
UIWorldSiegePointCtrl.OnShareClick = OnShareClick
UIWorldSiegePointCtrl.GetAllianceCityDetail = GetAllianceCityDetail
return UIWorldSiegePointCtrl