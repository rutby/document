---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2021/10/25 14:33
---
local UIWorldSiegePointView = BaseClass("UIWorldSiegePointView", UIBaseView)
local base = UIBaseView
local UIWorldSiegePointBtn = require "UI.UIWorldSiegePoint.Component.UIWorldSiegePointBtn"
local UIWorldSiegePointInfo = require "UI.UIWorldSiegePoint.Component.UIWorldSiegePointInfo"
local WorldSiegeBloodItem = require "UI.UIWorldSiegePoint.Component.WorldSiegeBloodItem"
local WorldSiegeContributePanel = require "UI.UIWorldSiegePoint.Component.WorldSiegeContributePanel"
local WorldSiegeThroneScorePanel = require "UI.UIWorldSiegePoint.Component.WorldSiegeThroneScorePanel"
local Localization = CS.GameEntry.Localization
local PositionDelta = Vector3.New(-6,0,-6)
local BtnPosition = {} --从右向左
BtnPosition[1] = { Vector3.New(0,-131.5,0)}
BtnPosition[2] = { Vector3.New(93.5,-124.5,0),Vector3.New(-93.5,-124.5,0)}
BtnPosition[3] = { Vector3.New(178.5,-63.5,0), Vector3.New(0,-131.5,0),Vector3.New(-178.5,-63.5,0)}
BtnPosition[4] = { Vector3.New(241.5,-6.5,0),Vector3.New(93.5,-124.5,0),
                   Vector3.New(-93.5,-124.5,0),Vector3.New(-241.5,-6.5,0)}
BtnPosition[5] = { Vector3.New(297.5,92.5,0),Vector3.New(178.5,-63.5,0),
                   Vector3.New(0,-131.5,0),Vector3.New(-178.5,-63.5,0),Vector3.New(-297.5,92.5,0)}
local BtnCellCircle = Vector3.New(0,120,0)--按钮的圆心

local AnimName =
{
    Enter = "UIWorldPointView_movein",--进入动画
    Exit = "UIWorldPointView_moveout",--退出动画

}

local BtnAnim = {} --从右向左
BtnAnim[1] = { "5Right3"}
BtnAnim[2] = { "4Right2","4Right3"}
BtnAnim[3] = { "5Right2","5Right3","5Right4"}
BtnAnim[4] = { "4Right1","4Right2","4Right3","4Right4"}
BtnAnim[5] = { "5Right1","5Right2","5Right3","5Right4","5Right5"}

local BuildAdjust =
{
    left = 200,right = 200, top = 350,bottom = 100
}

local pos_go_path = "PosGo"
local owner_name_text_path = "PosGo/message/bg/Top/NameText"
local build_btn_go_path = "PosGo/BuildBtnScale/BuildBtnGo"
local build_btn_obj_path = "PosGo/BuildBtnScale"
local this_path = ""
local btn_mark_path = "PosGo/message/bg/Top/Btn_mark"
local btn_share_path = "PosGo/message/bg/Top/Btn_share"
local btn_detail_path = "PosGo/message/bg/Top/btn_detail"
local btn_return_path = "PosGo/message/bg/Top/btn_return"
local blood_obj_path = "PosGo/message/bg/BloodLayout"
local point_obj_path = "PosGo/message/bg/layout"

local contributePanel_path = "PosGo/message/bg/layout/BuildInfo/middleObj/rankObj"
--local throneScore_path = "PosGo/throneScore"
--创建
local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
end

-- 销毁
local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    self.pos_go = self:AddComponent(UIBaseContainer,pos_go_path)
    self.owner_name_text = self:AddComponent(UITextMeshProUGUIEx,owner_name_text_path)
    self.build_btn_go = self:AddComponent(UIBaseContainer,build_btn_go_path)
    self.build_btn_obj = self:AddComponent(UIBaseContainer,build_btn_obj_path)
    self.this_anim = self:AddComponent(UIAnimator,this_path)
    self.build_btn_anim = self:AddComponent(UIAnimator,build_btn_go_path)
    self.blood_obj = self:AddComponent(WorldSiegeBloodItem,blood_obj_path)
    self.point_obj = self:AddComponent(UIWorldSiegePointInfo, point_obj_path)
    self.btn_mark = self:AddComponent(UIButton,btn_mark_path)
    self.btn_mark:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnMarkClick()
    end)
    self.btnMarkImg = self:AddComponent(UIImage, btn_mark_path)
    local iconPath = UIWorldTileTopBtnImage[UIWorldTileTopBtnType.Book]
    if DataCenter.AllianceBaseDataManager:IsR4orR5() then
        iconPath = "Assets/Main/Sprites/UI/UISearch/UISearch_btn_leaderMark"
    end
    self.btnMarkImg:LoadSprite(iconPath)

    self.btn_share = self:AddComponent(UIButton,btn_share_path)
    self.btn_share:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnShareClick()
    end)

    self.btn_detail = self:AddComponent(UIButton,btn_detail_path)
    self.btn_detail:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnDetailClick()
    end)
    self.btn_detail:SetActive(true)
    self.btn_return = self:AddComponent(UIButton,btn_return_path)
    self.btn_return:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnReturnClick()
    end)
    self.btn_return:SetActive(false)
    self.AutoAdjustScreenPos = self.transform:Find(pos_go_path):GetComponent(typeof(CS.AutoAdjustScreenPos))
    self.model = {}
    self.refreshSlider = false
end

local function ComponentDestroy(self)
    self.pos_go = nil
    self.name_text = nil
    self.timer_action = nil
    self.build_btn_go = nil
    self.this_anim = nil
    self.build_btn_anim = nil
    self.btn_mark = nil
    self.btn_share = nil
    self.btn_detail = nil
    self.btn_return = nil
    self.AutoAdjustScreenPos = nil
    self.model = nil
    self.refreshSlider = nil
end


local function DataDefine(self)
    self.worldPos = nil
    self.timer_action = function(temp)
        self:RefreshTime()
    end
    --self.screenPos = nil
    self.buildBtnCells = {}
    self.animIndex = 0
    self.timer = nil
    self.showIndex = 1

    self.staticTimer = nil
    self.static_timer_action = function(temp)
        self:RefreshInfo()
    end
end

local function DataDestroy(self)
    self.worldPos = nil
    --self.screenPos = nil
    self.buildBtnCells = nil
    self.animIndex = nil
    self.timer = nil
    self.showIndex = nil
end

local function OnEnable(self)
    base.OnEnable(self)
    self.ctrl:InitData(self:GetUserData())
    self:ReInit()
    if self.info~=nil then
        WorldCityTipManager:GetInstance():SetCanShowFlag(self.info.cityId,false,self.info.eden_city_type)
    end
    self:AddStaticTimer()
end

local function OnDisable(self)
    self:DeleteStaticTimer()
    self:DeleteTimer()
    --AllianceBuildBloodManager:GetInstance():OnCloseAllianceCity(self.info.uuid)
    if self.info~=nil then
        WorldCityTipManager:GetInstance():SetCanShowFlag(self.info.cityId,true,self.info.eden_city_type)
    end
    base.OnDisable(self)
end

local function OnAddListener(self)
    base.OnAddListener(self)
    --self:AddUIListener(EventId.RefreshUIWorldSiegePointView, self.RefreshUIWorldSiegePointViewSignal)
    self:AddUIListener(EventId.WorldAllianceCityDetail, self.SetData)
    self:AddUIListener(EventId.ChangeCameraLod, self.UpdateLod)
end


local function OnRemoveListener(self)
    base.OnRemoveListener(self)
    self:RemoveUIListener(EventId.WorldAllianceCityDetail, self.SetData)
    self:RemoveUIListener(EventId.ChangeCameraLod, self.UpdateLod)
end

local function ReInit(self)
    self.info = self.ctrl:GetAllianceCityData(self.ctrl.cityId)
    if self.info ~= nil then
        local worldPos = SceneUtils.TileIndexToWorld(self.ctrl.pointId)
        worldPos.x = worldPos.x
        worldPos.y = worldPos.y
        worldPos.z = worldPos.z
        GoToUtil.GotoWorldPos(worldPos, CS.SceneManager.World.InitZoom, nil, nil, self.info.serverId)
        self.AutoAdjustScreenPos:Init(worldPos)
        self.point_obj:InitData(self.info)
        self.blood_obj:SetActive(self.ctrl.cityId ~= THRONE_ID)
        self.blood_obj:SetUuid(self.info.uuid, self.ctrl.cityId)
        if self.info.userName ~= nil and self.info.userName ~= "" then
            self.owner_name_text:SetText(Localization:GetString("140205", self.info.level, self.info.userName))
        else
            self.owner_name_text:SetText(Localization:GetString("140205", self.info.level, Localization:GetString(self.info.name)))
        end

        Logger.Log("cityId:", self.info.cityId)
        table.walk(self.info.nearCityIdList, function(k, v)
            Logger.Log("nearCityId:", v)
        end)
        self:ShowBtn()
        if self.info.cityId == THRONE_ID and LuaEntry.Player.serverType == ServerType.NORMAL then
            if show == true then
                DataCenter.GuideManager:CheckDoTriggerGuide(GuideTriggerType.ClickWarThrone, SaveGuideDoneValue)
            else
                DataCenter.GuideManager:CheckDoTriggerGuide(GuideTriggerType.ClickProtectThrone, SaveGuideDoneValue)
            end
        else
            if self.info.state == AllianceCityState.NEUTRAL and self.info.eden_city_type == WorldCityType.AllianceCity then
                DataCenter.GuideManager:CheckDoTriggerGuide(GuideTriggerType.ClickDesertCity, SeasonDesertCity.Block)
            elseif self.info.isInAlliance then
                DataCenter.GuideManager:CheckDoTriggerGuide(GuideTriggerType.ClickDesertCity, SeasonDesertCity.Alliance)
            else
                DataCenter.GuideManager:CheckDoTriggerGuide(GuideTriggerType.ClickDesertCity, SeasonDesertCity.Other)
            end
        end
        if LuaEntry.Player.serverType == ServerType.EDEN_SERVER then
            if self.info.eden_city_type == WorldCityType.StrongHold then
                DataCenter.GuideManager:CheckDoTriggerGuide(GuideTriggerType.EnterSeasonOpenAllianceSiege, tostring(SeasonIntroType.Stronghold))
            elseif self.info.eden_city_type == WorldCityType.AlliancePass then
                DataCenter.GuideManager:CheckDoTriggerGuide(GuideTriggerType.EnterSeasonOpenAllianceSiege, tostring(SeasonIntroType.Pass))
            end
        end
    end
end

local function SetDurability(self)
    if self.info~=nil then
        if self.info.maxDurability > self.info.durability then
            local durability = self.info.durability
            local curTime = UITimeManager:GetInstance():GetServerSeconds()
            local addNum = (curTime- self.info.lastDurabilityTime)*tonumber(self.info.cityRecoverSpeed)
            local realDurabilityNum = durability + math.max(addNum,0)
            local curNum = math.min(realDurabilityNum,self.info.maxDurability)
            --if self.info.uuid~= nil and self.info.uuid~=0 and (self.ctrl.cityId ~= THRONE_ID or LuaEntry.Player.serverType ~= ServerType.NORMAL) then
            --    AllianceBuildBloodManager:GetInstance():OnSetBuildBlood(self.info.uuid,curNum,self.info.maxDurability)
            --end
            
        else
            --if self.info.uuid~= nil and self.info.uuid~=0 and (self.ctrl.cityId ~= THRONE_ID or LuaEntry.Player.serverType ~= ServerType.NORMAL) then
            --    AllianceBuildBloodManager:GetInstance():OnSetBuildBlood(self.info.uuid,self.info.maxDurability,self.info.maxDurability)
            --end
        end
        
    end
end

local function SetData(self)
    local serverData = self.ctrl:GetAllianceCityDetail(self.ctrl.cityId)
    if serverData ~= nil and self.info ~= nil then
        self.point_obj:RefreshData(serverData)
        local curTime = UITimeManager:GetInstance():GetServerSeconds()
        if self.info.uuid ~= nil and self.info.uuid ~= 0 and self.ctrl.cityId ~= THRONE_ID then
            local recoverTime = (serverData.battleStartTime / 1000) + self.info.monsterRecoverTime
            if recoverTime >= curTime then
                self.blood_obj:RefreshData(self.info.uuid,serverData.armyNum,serverData.maxArmyNum,serverData.durabilityMax,self.info.durability)
            else
                self.blood_obj:RefreshData(self.info.uuid,serverData.maxArmyNum,serverData.maxArmyNum,serverData.durabilityMax,self.info.durability)
            end


        end
    end
end

local function SetAllCellDestroy(self)
    self.build_btn_go:RemoveComponents(UIWorldSiegePointBtn)
    if self.model~=nil then
        for k,v in pairs(self.model) do
            if v ~= nil then
                self:GameObjectDestroy(v)
            end
        end
    end
    self.model ={}
end

local function ShowBtn(self)
    self.buildBtnCells = {}
    self:SetAllCellDestroy()
    self.btnList = self.info.btnList
    self.btnCount = self.btnList and #self.btnList or 0
    local curTime = UITimeManager:GetInstance():GetServerSeconds()
    local showList = true
    local tempOpenTime = self.info.openTime or -1
    if tempOpenTime> curTime or tempOpenTime == -1 then
        showList = false
    elseif self.ctrl.cityId == THRONE_ID and self.info.openTime <=0 and self.info.protectTime<=0 and LuaEntry.Player.serverType == ServerType.NORMAL then
        showList= false
    end
    if self.btnCount > 0 and showList == true then
        self.build_btn_obj:SetActive(true)
        table.sort(self.btnList,function(a,b)
            return a > b
        end)
        for k,v in ipairs(self.btnList) do
            local param = {}
            param.btnType = v
            param.info = self.info
            param.position = BtnPosition[self.btnCount][k] - BtnCellCircle
            self.model[k] = self:GameObjectInstantiateAsync(UIAssets.UIWorldTileBuildBtn, function(request)
                if request.isError then
                    return
                end
                local go = request.gameObject
                go:SetActive(true)
                go.transform:SetParent(self.build_btn_go.transform)
                go.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
                go.transform.localPosition = BtnCellCircle
                local nameStr = tostring(v)
                go.name = nameStr
                self.buildBtnCells[v] = self.build_btn_go:AddComponent(UIWorldSiegePointBtn, nameStr)
                self.buildBtnCells[v]:ReInit(param)
                self:CheckPlay()
            end)
        end
        self:CheckPlay()
    else
        self.build_btn_obj:SetActive(false)
    end
end

local function CheckPlay(self)
    if self.btnCount <= table.count(self.buildBtnCells) then
        self.animIndex = 1
        self:AddTimer()
    end
end

local function DeleteTimer(self)
    if self.timer ~= nil then
        self.timer:Stop()
        self.timer = nil
    end
end

local function AddTimer(self)
    if self.timer == nil then
        local time = self.build_btn_anim:GetFloat("DuringTime")
        self.timer = TimerManager:GetInstance():GetTimer(time / 10, self.timer_action, self, false,false,false)
    end
    self.timer:Start()
end

local function RefreshTime(self)
    if self.animIndex > 0 then
        if self.btnCount >= self.animIndex then
            local temp = self.buildBtnCells[self.btnList[self.animIndex]]
            if temp ~= nil then
                temp:PlayAnim(BtnAnim[self.btnCount][self.animIndex])
            end
            self.animIndex = self.animIndex + 1
        else
            self.animIndex = 0
            self:DeleteTimer()
        end
    end
end

local function DeleteStaticTimer(self)
    if self.staticTimer ~= nil then
        self.staticTimer:Stop()
        self.staticTimer = nil
    end
end

local function AddStaticTimer(self)
    if self.staticTimer == nil then
        self.staticTimer = TimerManager:GetInstance():GetTimer(1, self.static_timer_action, self, false,false,false)
        self.staticTimer:Start()
    end
end

local function RefreshInfo(self)
    if self.info~=nil then
        if self.refreshSlider == true then
            
        end
        if self.point_obj~=nil then
            self.point_obj:UpdateTime()
        end
    end
end
local function OnMarkClick(self)
    if self.info~=nil then
        local name = ""
        if self.info.userName~=nil and self.info.userName~="" then
            name = self.info.userName
        else
            name = self.info.name
        end
        if name~=nil then
            local realPoint = self.ctrl.pointId * 10 + 7
            self.ctrl:OnMarkClick(LuaEntry.Player:GetCurServerId(),realPoint,name)
        end
    end
end
local function OnShareClick(self)
    if self.info~=nil then
        local name = ""
        if self.info.userName~=nil and self.info.userName~="" then
            name = self.info.userName
        else
            name = self.info.name
        end
        if name~=nil then
            self.ctrl:OnShareClick(LuaEntry.Player:GetCurServerId(),self.ctrl.pointId,name,"")
        end
    end
end

local function OnDetailClick(self)
    if self.info~=nil then
        if LuaEntry.Player.serverType == ServerType.EDEN_SERVER then
            if self.info.eden_city_type == WorldCityType.StrongHold then
                UIManager:GetInstance():OpenWindow(UIWindowNames.UIGuideEdenWarTips, { anim = true, playEffect = false }, SeasonIntroType.Stronghold)
                return
            elseif self.info.eden_city_type == WorldCityType.AlliancePass then
                UIManager:GetInstance():OpenWindow(UIWindowNames.UIGuideEdenWarTips, { anim = true, playEffect = false }, SeasonIntroType.Pass)
                return
            end
        end
        self.point_obj:OnInfoClick()
        self.btn_detail:SetActive(false)
        self.btn_return:SetActive(true)
    end
end

local function OnReturnClick(self)
    if self.info~=nil then
        self.point_obj:OnReturnClick()
        self.btn_detail:SetActive(true)
        self.btn_return:SetActive(false)
    end
end


local function UpdateLod(self, lod)
    if lod > 2 then
        self.ctrl:CloseSelf(false)
    end
end


local function OnReturnDesClick(self)
    self.point_obj:OnReturnDesClick()
end
UIWorldSiegePointView.OnCreate = OnCreate
UIWorldSiegePointView.OnDestroy = OnDestroy
UIWorldSiegePointView.OnEnable = OnEnable
UIWorldSiegePointView.OnDisable = OnDisable
UIWorldSiegePointView.ComponentDefine = ComponentDefine
UIWorldSiegePointView.ComponentDestroy = ComponentDestroy
UIWorldSiegePointView.DataDefine = DataDefine
UIWorldSiegePointView.DataDestroy = DataDestroy
UIWorldSiegePointView.OnAddListener = OnAddListener
UIWorldSiegePointView.OnRemoveListener = OnRemoveListener
UIWorldSiegePointView.ReInit = ReInit
UIWorldSiegePointView.ShowBtn = ShowBtn
UIWorldSiegePointView.CheckPlay = CheckPlay
UIWorldSiegePointView.DeleteTimer = DeleteTimer
UIWorldSiegePointView.AddTimer = AddTimer
UIWorldSiegePointView.RefreshTime = RefreshTime
UIWorldSiegePointView.SetAllCellDestroy = SetAllCellDestroy
UIWorldSiegePointView.SetData = SetData
UIWorldSiegePointView.OnMarkClick =OnMarkClick
UIWorldSiegePointView.OnShareClick =OnShareClick
UIWorldSiegePointView.OnDetailClick =OnDetailClick
UIWorldSiegePointView.OnReturnClick =OnReturnClick
UIWorldSiegePointView.RefreshInfo = RefreshInfo
UIWorldSiegePointView.AddStaticTimer = AddStaticTimer
UIWorldSiegePointView.DeleteStaticTimer = DeleteStaticTimer
UIWorldSiegePointView.OnAllianceClick= OnAllianceClick
UIWorldSiegePointView.UpdateLod = UpdateLod
UIWorldSiegePointView.OnReturnDesClick = OnReturnDesClick
return UIWorldSiegePointView