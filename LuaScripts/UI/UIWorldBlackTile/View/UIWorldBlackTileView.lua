---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by shimin.
--- DateTime: 2021/7/29
---
local UIWorldBlackTileView = BaseClass("UIWorldBlackTileView",UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization
local Screen = CS.UnityEngine.Screen

function UIWorldBlackTileView:OnCreate()
    base.OnCreate(self)
    local pointId = self:GetUserData()
    local hasAlliance = LuaEntry.Player:IsInAlliance()
    if hasAlliance then
        DataCenter.AllianceBaseDataManager:RequestAlMoveInvitePoint()
    end
    self.pointId = tonumber(pointId)

    self.show_pos_obj = self:AddComponent(UIBaseContainer, "showPos")
    self.left_obj = self:AddComponent(UIBaseContainer, "showPos/left")
    self.right_obj = self:AddComponent(UIBaseContainer,  "showPos/right")
    self.top_obj = self:AddComponent(UIBaseContainer, "showPos/top")
    self.bottom_obj = self:AddComponent(UIBaseContainer, "showPos/buttom")

    self.view_obj = self:AddComponent(UIBaseContainer, "ImgBg")
    --分享
    self._share_btn = self:AddComponent(UIButton,"ImgBg/Btn_share")
    self._share_btn:SetOnClick(function()  
SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnShareClick()
    end)
    --收藏
    self._mark_btn = self:AddComponent(UIButton,"ImgBg/Btn_mark")
    self._mark_btn:SetOnClick(function()  
SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnMarkClick()
    end)
    self.markIcon = self:AddComponent(UIImage, "ImgBg/Btn_mark")
    if DataCenter.AllianceBaseDataManager:IsR4orR5() then
        self.markIcon:LoadSprite("Assets/Main/Sprites/UI/UISearch/UISearch_btn_leaderMark")
    else
        self.markIcon:LoadSprite("Assets/Main/Sprites/UI/UISearch/UISearch_btn_collect")
    end
    
    --坐标
    self._pos_txt = self:AddComponent(UIText,"ImgBg/Txt_Pos")
    --面板切换
    self.animator = self:AddComponent(UIAnimator, "ImgBg/showObj")
    --信息界面
    self._buildInfo_rect = self:AddComponent(UIBaseContainer,"ImgBg/showObj/BuildInfo")
    self._buildInfo_canvas = self:AddComponent(UICanvasGroup,"ImgBg/showObj/BuildInfo")
    self._buildInfo_canvas:SetAlpha(1)
    --详情信息
    --self._info_btn = self:AddComponent(UIButton,"ImgBg/showObj/BuildInfo/Btn_Info")
    --self._info_btn:SetOnClick(function()
    --    self:OnInfoClick()
    --end)

    self._collect_txt =  self:AddComponent(UIText,"ImgBg/showObj/BuildInfo/Txt_Collect")
    --采集者名字
    self._collectPlayerName_txt = self:AddComponent(UIText,"ImgBg/showObj/BuildInfo/Txt_CollectPlayerName")
    --地块类型
    self._collectName_txt = self:AddComponent(UIText,"ImgBg/showObj/BuildInfo/Txt_CollectName")
    --指挥官信息
    self._playerInfo_btn = self:AddComponent(UIButton,"ImgBg/showObj/BuildInfo/Btn_PlayerInfo")
    self._playerInfo_btn:SetOnClick(function()  
SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnPlayerDetailClick()
    end)
    --资源icon
    self._icon_img = self:AddComponent(UIImage,"ImgBg/showObj/BuildInfo/Rect_head/Img_Icon")
    
    ----文字界面
    --self._buildDetails_rect = self:AddComponent(UIBaseContainer,"ImgBg/showObj/BuildDetails")
    --self._buildDetails_canvas = self:AddComponent(UICanvasGroup,"ImgBg/showObj/BuildDetails")
    --self._buildDetails_canvas:SetAlpha(1)
    ----返回
    --self._return_btn = self:AddComponent(UIButton,"ImgBg/showObj/BuildDetails/Btn_Return")
    --self._return_btn:SetOnClick(function()
    --    self:OnReturnClick()
    --end)
    ----文字
    --self._des_txt = self:AddComponent(UIText,"ImgBg/showObj/BuildDetails/ScrollView/Viewport/Content/Txt_Des")
    
    --侦察
    self._watch_btn = self:AddComponent(UIButton,"ImgBg/Rect_Bottom/Btn_Watch")
    self._watch_btn:SetOnClick(function()  
SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnMoveCityClick()
    end)
    self._watch_txt = self:AddComponent(UIText,"ImgBg/Rect_Bottom/Btn_Watch/Txt_Watch")
    self._watch_txt:SetLocalText(GameDialogDefine.MOVE_CITY) 
    --攻击
    self._attack_btn = self:AddComponent(UIButton,"ImgBg/Rect_Bottom/Btn_Attack")
    self._attack_btn:SetOnClick(function()  
SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnAttackClick()
    end)
    self._attack_txt = self:AddComponent(UIText,"ImgBg/Rect_Bottom/Btn_Attack/Txt_Attack")
    self._attack_txt:SetLocalText(GameDialogDefine.MARCH) 
    --采集者信息
    self.data = {}
    self.timer_Action = function(temp)
        self:UpdateTime(temp)
    end
    self.hideMove = nil
end

function UIWorldBlackTileView:OnDestroy()
    self.pointId = nil
    self.view_obj = nil
    self.show_pos_obj = nil
    self.left_obj = nil
    self.right_obj = nil
    self.top_obj = nil
    self.bottom_obj = nil
    self._share_btn = nil
    self._mark_btn = nil
    self._pos_txt = nil
    self.animator = nil
    self._buildInfo_rect = nil
    self._buildInfo_canvas = nil
    --self._info_btn = nil
    self._collect_txt = nil
    self._collectPlayerName_txt = nil
    self._collectName_txt = nil
    self._playerInfo_btn = nil
    self._icon_img = nil
    --self._buildDetails_rect = nil
    --self._buildDetails_canvas = nil
    --self._return_btn = nil
    --self._des_txt = nil
    self._watch_btn = nil
    self._attack_btn = nil
    self.data = nil
    
    base.OnDestroy(self)
end

function UIWorldBlackTileView:OnAddListener()
    self:AddUIListener(EventId.ChangeCameraLod, self.UpdateLod)
end

function UIWorldBlackTileView:OnRemoveListener()
    self:RemoveUIListener(EventId.ChangeCameraLod, self.UpdateLod)
end

function UIWorldBlackTileView:OnEnable()
    base.OnEnable(self)
    self:SetPosition()
    self:SetData()
end

function UIWorldBlackTileView:OnDisable()
    self:DeleteTimer()
    base.OnDisable(self)
end

--攻击
function UIWorldBlackTileView:OnAttackClick()
    if LuaEntry.Player.serverType == ServerType.DRAGON_BATTLE_FIGHT_SERVER then
        local dragonInfo = DataCenter.ActDragonManager:GetDragonInfo()
        local curTime = UITimeManager:GetInstance():GetServerTime()
        local canShow = false
        if dragonInfo~=nil and dragonInfo.timeInfo~=nil then
            if dragonInfo.matchResult == 1 then    --匹配到对手
                if dragonInfo.timeInfo.battleOpenTime~=nil and dragonInfo.timeInfo.battleOpenTime<curTime and dragonInfo.timeInfo.endTime~=nil and curTime < dragonInfo.timeInfo.endTime then
                    canShow = true
                end
            end
        end
        if canShow ==false then
            UIUtil.ShowTipsId(376128)
            return
        end
    end
    if LuaEntry.Player.serverType == ServerType.EDEN_SERVER then
        if CS.SceneManager.World:IsTileWalkable(CS.SceneManager.World:IndexToTilePos(self.pointId))==false then
            UIUtil.ShowTipsId(111079)
            return
        end
    end
    self.ctrl:OnAttackClick(self.pointId)
end
--迁城
function UIWorldBlackTileView:OnMoveCityClick()
    if CrossServerUtil:GetIsCrossServer() then
        UIUtil.ShowTipsId(104266)
    else
        local mainBuild = DataCenter.BuildManager:GetFunbuildByItemID(BuildingTypes.FUN_BUILD_MAIN)
        if mainBuild~=nil then
            --local city = CS.SceneManager.World:GetWorldBuildingByUuid(mainBuild.uuid)
            --if city~=nil then
            --    city:SetMoveState(true)
            --end
            if  SceneUtils.IsInBlackRange(self.pointId) then
                local uuid = mainBuild.uuid
                local level = mainBuild.level
                local id = BuildingTypes.FUN_BUILD_MAIN+level-1
                UIUtil.ShowMessage(Localization:GetString("250044"),1,"110006",nil,function ()
                    local black_item = DataCenter.ItemData:GetItemById(SpecialItemId.ITEM_BLACK_DESERT_CITY_MOVE)
                    if not black_item then
                        local lackTab = {}
                        local param = {}
                        param.type = ResLackType.Item
                        param.id = tonumber(SpecialItemId.ITEM_BLACK_DESERT_CITY_MOVE)
                        param.targetNum = 1
                        table.insert(lackTab,param)
                        GoToResLack.GoToItemResLackList(lackTab)
                        return
                    end
                    CS.SceneManager.World:UICreateBuilding(id, uuid,LuaEntry.Player:GetMainWorldPos(), PlaceBuildType.MoveCity)
                end,nil,nil)
            else
                --if SceneUtils.IsInBlackRange(self.pointId)==false then
                --    local item = DataCenter.ItemData:GetItemById(SpecialItemId.ITEM_MOVE_CITY)
                --    if item == nil or item.count == 0 then
                --        local hasAlTerritory = DataCenter.WorldAllianceCityDataManager:CheckIfHasAlCity()
                --        local isAlTerritory = DataCenter.WorldAllianceCityDataManager:CheckIfIsAlTerritory(self.pointId)
                --        if hasAlTerritory == false or isAlTerritory == false then
                --            if DataCenter.AllianceBaseDataManager:CheckIfCanAlMove(self.pointId,hasAlTerritory) then
                --            else
                --                UIUtil.ShowTipsId(120273)
                --                return
                --            end
                --        end
                --    end
                --end
                --local item = DataCenter.ItemData:GetItemById(SpecialItemId.ITEM_ALLIANCE_CITY_MOVE)
                --local state = LuaEntry.Player:CheckIfHasFreeAlMove()
                --if not item and not state then
                --    local lackTab = {}
                --    local param = {}
                --    param.type = ResLackType.Item
                --    param.id = tonumber(SpecialItemId.ITEM_ALLIANCE_CITY_MOVE)
                --    param.targetNum = 1
                --    table.insert(lackTab,param)
                --    GoToResLack.GoToItemResLackList(lackTab)
                --    return
                --end
                local level = mainBuild.level
                local id = BuildingTypes.FUN_BUILD_MAIN+level-1
                CS.SceneManager.World:UICreateBuilding(id, mainBuild.uuid,LuaEntry.Player:GetMainWorldPos(), PlaceBuildType.MoveCity)
            end
        end
    end
end
--指挥官信息
function UIWorldBlackTileView:OnPlayerDetailClick()
    --self.ctrl:OnPlayerDetailClick(self.data.ownerUid)
end
--信息
--function UIWorldBlackTileView:OnInfoClick()
--    self.animator:Enable(true)
--    self.animator:Play("switchEnter",0,0)
--end
--返回
--function UIWorldBlackTileView:OnReturnClick()
--    self.animator:Enable(true)
--    self.animator:Play("switchOut",0,0)
--end
--分享
function UIWorldBlackTileView:OnShareClick()
    self.ctrl:OnShareClick(LuaEntry.Player:GetCurServerId(),self.pointId,GameDialogDefine.BLACK_TILE)
end
--收藏
function UIWorldBlackTileView:OnMarkClick()
    local point = self.pointId * 10 + 1
    self.ctrl:OnMarkClick(LuaEntry.Player:GetCurServerId(),point,GameDialogDefine.BLACK_TILE)
end

function UIWorldBlackTileView:SetData()
    self:RefreshMoveBtn(LuaEntry.Player.serverType == ServerType.DRAGON_BATTLE_FIGHT_SERVER)
    self.data = self.ctrl:GetBlackData(self.pointId)
    self.endTime = 0
    local pos = SceneUtils.IndexToTilePos(self.pointId)
    self._pos_txt:SetLocalText(GameDialogDefine.SHOW_POS, pos.x, pos.y)
    local img = "Assets/Main/Sprites/UI/Common/New/Common_blank_tips.png"
    if LuaEntry.Player.serverType == ServerType.EDEN_SERVER then
        local areaId = CS.SceneManager.World:GetAreaIdByPosId(self.pointId-1)
        local areaTemp = DataCenter.EdenAreaTemplateManager:GetTemplate(areaId)
        local isUnLock = true
        if areaTemp~=nil then
            if areaTemp.area_type == EdenAreaType.NORTH_BORN_AREA then
                if DataCenter.RobotWarsManager:GetSelfCamp() == EdenCamp.NORTH then
                end
            elseif areaTemp.area_type == EdenAreaType.SOUTH_BORN_AREA then
                if DataCenter.RobotWarsManager:GetSelfCamp() == EdenCamp.SOUTH then
                end
            elseif areaTemp.area_type == EdenAreaType.FIGHT_AREA then
                local seasonStartTime = DataCenter.SeasonDataManager:GetSeasonStartTime()
                local curTime = UITimeManager:GetInstance():GetServerTime()
                if areaTemp:GetUnlockBornTime()>=LongMaxValue then
                    isUnLock = false
                    self:RefreshMoveBtn(true)
                    self.endTime = 0
                    self._collect_txt:SetLocalText(120050)
                else
                    local deltaTime = areaTemp:GetUnlockBornTime() + seasonStartTime-curTime
                    if deltaTime>0 then
                        isUnLock = false
                        self.endTime = areaTemp:GetUnlockBornTime() + seasonStartTime
                    end
                end
                
            end
        end
        if isUnLock ==false then
            self:AddTimer()
            self:UpdateTime()
        else
            self:DeleteTimer()
            self._collect_txt:SetLocalText(111189)
        end
    else
        self._collect_txt:SetLocalText(100610)
    end
    

    self._collectPlayerName_txt:SetText("")

    self._collectName_txt:SetLocalText(GameDialogDefine.BLACK_TILE) 
    
    self._icon_img:LoadSprite(img)
end

function UIWorldBlackTileView:RefreshMoveBtn(hide)
    if self.hideMove~=hide then
        self.hideMove = hide
        self._watch_btn:SetActive(self.hideMove ==false)
    end
end
function UIWorldBlackTileView:SetPosition()
    local scaleFactor = UIManager:GetInstance():GetScaleFactor()
    local screenPos = CS.SceneManager.World:WorldToScreenPoint(SceneUtils.TileIndexToWorld(self.pointId))
    self.lastPos = screenPos
    local screenCenterPos = Vector3.New(Screen.width/(2*scaleFactor), Screen.height/(2*scaleFactor), 0)
    local deltaX = screenPos.x - screenCenterPos.x
    local deltaY = screenPos.y - screenCenterPos.y
    local absX = math.abs(deltaX)
    local absY = math.abs(deltaY)
    self.left_obj:SetActive(deltaX<=0 and absX>=absY)
    self.right_obj:SetActive(deltaX>0 and absX>=absY)
    self.top_obj:SetActive(deltaY>0 and absX< absY)
    self.bottom_obj:SetActive(deltaY<=0 and absX<absY)
    local rect = self.show_pos_obj.rectTransform.rect
    local verticalOffset = (rect.height/2) +70
    local horizontalOffset = (rect.width/2)+70
    local posOffset = Vector3.New(0, 0, 0)
    if self.left_obj:GetActive() then
        posOffset.x = horizontalOffset
    elseif self.right_obj:GetActive() then
        posOffset.x = -horizontalOffset
    elseif self.top_obj:GetActive() then
        posOffset.y = -verticalOffset
    elseif self.bottom_obj:GetActive() then
        posOffset.y = verticalOffset
    end
    self.show_pos_obj.transform.position = screenPos
    local anchoredPosition = self.show_pos_obj.rectTransform.anchoredPosition
    local tempAnchoredPosition = Vector2.New(anchoredPosition.x + posOffset.x,anchoredPosition.y + posOffset.y)
    self.show_pos_obj.rectTransform.anchoredPosition = tempAnchoredPosition

    if tempAnchoredPosition.x>0 then
        tempAnchoredPosition.x = math.min(tempAnchoredPosition.x + horizontalOffset,screenCenterPos.x) - horizontalOffset
    else
        tempAnchoredPosition.x = math.max(tempAnchoredPosition.x - horizontalOffset,-screenCenterPos.x) + horizontalOffset
    end

    if tempAnchoredPosition.y>0 then
        tempAnchoredPosition.y = math.min(tempAnchoredPosition.y + verticalOffset,screenCenterPos.y) - verticalOffset-10
    else
        tempAnchoredPosition.y = math.max(tempAnchoredPosition.y - verticalOffset,-screenCenterPos.y) + verticalOffset-10
    end
    self.view_obj.rectTransform.anchoredPosition = tempAnchoredPosition
end

function UIWorldBlackTileView:UpdateLod(lod)
    if lod >= 2 then
        self.ctrl:CloseSelf(false)
    end
end

function UIWorldBlackTileView:UpdateTime()
    if self.endTime>0 then
        local curTime = UITimeManager:GetInstance():GetServerTime()
        local deltaTime =self.endTime-curTime
        if deltaTime>0 then
            local restTimeStr = UITimeManager:GetInstance():MilliSecondToFmtString(deltaTime)
            self._collect_txt:SetText(Localization:GetString("111068")..restTimeStr)
            self:RefreshMoveBtn(true)
        else
            self.endTime = 0
            self:SetData()
        end
    end
end

function UIWorldBlackTileView:AddTimer()
    if self.timer == nil then
        self.timer = TimerManager:GetInstance():GetTimer(1, self.timer_Action ,self, false,false,false)
    end
    self.timer:Start()
end

function UIWorldBlackTileView:DeleteTimer()
    if self.timer ~= nil then
        self.timer:Stop()
        self.timer = nil
    end
end

return UIWorldBlackTileView