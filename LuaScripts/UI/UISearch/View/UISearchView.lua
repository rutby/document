---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by guqu.
--- DateTime: 2020/8/6 11:20
---
local WorldSearchItem = require "UI.UISearch.Component.WorldSearchItem"
local WorldBookmarkItem = require "UI.UISearch.Component.WorldBookmarkItem"
local WorldGotoItem = require "UI.UISearch.Component.WorldGotoItem"
local SearchElement = require "UI.UISearch.Component.SearchElement"
local UISearchView = BaseClass("UISearchView",UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization

local toogle1_path = "Tab/Toggle1"
local toogle2_path = "Tab/Toggle2"
local toogle3_path = "Tab/Toggle3"
local toogle4_path = "Tab/Toggle4"

local choose1_path = "Tab/Toggle1/Choose"
local choose2_path = "Tab/Toggle2/Choose"
local choose3_path = "Tab/Toggle3/Choose"
local choose4_path = "Tab/Toggle4/Choose"

local toogle_title_path = "Tab/titleLayout/Bookmark_Title"

local monster_path = "Monster"
local content_path = "Monster/ScrollView/Viewport/Content"
local monster_btn_path = "Monster/ScrollView/Viewport/Content/Monster_Btn"
local boss_btn_path = "Monster/ScrollView/Viewport/Content/Boss_Btn"
local money_btn_path = "Monster/ScrollView/Viewport/Content/Money_Btn"
local wood_btn_path = "Monster/ScrollView/Viewport/Content/Wood_Btn"
local elec_btn_path = "Monster/ScrollView/Viewport/Content/Elec_Btn"
local metal_btn_path = "Monster/ScrollView/Viewport/Content/Metal_Btn"
local bookmark_path = "layout/Bookmark_Bg"
local tab_path = "Tab"
local layout_path = "layout"
local goto_path = "layout/Goto"

local search_obj_path = "Monster/Search"

local function OnCreate(self)
    --首先执行基类create
    base.OnCreate(self)
    self.isFirst = true
    self.ctrl:InitData()
    local type,monsterLevel = self:GetUserData()
    self.monsterLevel = monsterLevel
    if monsterLevel ~= nil and monsterLevel > 0 then
        self.ctrl:SetCurNumBySearchType(type,monsterLevel)
    end
    if type ~= nil then
        DataCenter.WorldFavoDataManager:SetLastTab(type)
    end
    self.layout = self:AddComponent(UIBaseContainer,layout_path)
    self.layout:SetActive(true)
    self.tab  = self:AddComponent(UIBaseContainer,tab_path)
    self.tab:SetActive(true)
    self.event_trigger = self:AddComponent(UIEventTrigger,"Image")
    self.event_trigger:OnBeginDrag(function(eventData)
        self.ctrl:CloseSelf()
    end)
    self.event_trigger:OnPointerClick(function(eventData)
        self.ctrl:CloseSelf()
    end)
    self.event_trigger:SetActive(true)
    self.toogle1 = self:AddComponent(UIToggle, toogle1_path)
    self.toogle1:SetIsOn(false)
    
    self.toogle1:SetOnValueChanged(function(tf)
        if tf then
            self:ToggleControlBorS()
        end
    end)
    self.toogle1.text = self.toogle1:AddComponent(UITextMeshProUGUIEx, "Text")
    self.toogle1.text:SetLocalText(GameDialogDefine.BOOKMARK_SPECIAL) 
    
    self.toogle2 = self:AddComponent(UIToggle, toogle2_path)
    self.toogle2:SetIsOn(false)
    self.toogle2:SetOnValueChanged(function(tf)
        if tf then
            self:ToggleControlBorS()
        end
    end)
    self.toogle2.text = self.toogle2:AddComponent(UITextMeshProUGUIEx, "Text")
    self.toogle2.text:SetLocalText(GameDialogDefine.BOOKMARK_FRIEND) 

    self.toogle3 = self:AddComponent(UIToggle, toogle3_path)
    self.toogle3:SetIsOn(false)
    self.toogle3:SetOnValueChanged(function(tf)
        if tf then
            self:ToggleControlBorS()
        end
    end)
    self.toogle3.text = self.toogle3:AddComponent(UITextMeshProUGUIEx, "Text")
    self.toogle3.text:SetLocalText(GameDialogDefine.BOOKMARK_ENEMY) 

    self.toogle4 = self:AddComponent(UIToggle, toogle4_path)
    self.toogle4:SetIsOn(false)
    self.toogle4:SetOnValueChanged(function(tf)
        if tf then
            self:ToggleControlBorS()
        end
    end)
    self.toogle4.text = self.toogle4:AddComponent(UITextMeshProUGUIEx, "Text")
    self.toogle4.text:SetLocalText(GameDialogDefine.ALLIANCE) 
    
    self.monster_obj = self:AddComponent(UIBaseContainer,monster_path)
    self.toogle_title = self:AddComponent(UITextMeshProUGUIEx, toogle_title_path)
    self.toogle_title:SetLocalText(GameDialogDefine.BOOKMARK) 
    self.content = self:AddComponent(UIBaseContainer,content_path)
    self.searchList = {}
    local monster = self:AddComponent(SearchElement,monster_btn_path)
    self.searchList[UISearchType.Monster] = monster
    local boss = self:AddComponent(SearchElement,boss_btn_path)
    self.searchList[UISearchType.Boss] = boss
    local money = self:AddComponent(SearchElement,money_btn_path)
    self.searchList[UISearchType.Money] = money
    local wood = self:AddComponent(SearchElement,wood_btn_path)
    self.searchList[UISearchType.Wood] = wood
    local elec = self:AddComponent(SearchElement,elec_btn_path)
    self.searchList[UISearchType.Electricity] = elec
    local metal = self:AddComponent(SearchElement,metal_btn_path)
    self.searchList[UISearchType.Metal] = metal

    for k,v in pairs(self.searchList) do
        v:SetData(k)
    end
    self.choose1 = self.transform:Find(choose1_path):GetComponent(typeof(CS.UnityEngine.UI.Image))
    self.choose2 = self.transform:Find(choose2_path):GetComponent(typeof(CS.UnityEngine.UI.Image))
    self.choose3 = self.transform:Find(choose3_path):GetComponent(typeof(CS.UnityEngine.UI.Image))
    self.choose4 = self.transform:Find(choose4_path):GetComponent(typeof(CS.UnityEngine.UI.Image))
    self.choose1.gameObject:SetActive(false)
    self.choose2.gameObject:SetActive(false)
    self.choose3.gameObject:SetActive(false)
    self.choose4.gameObject:SetActive(false)
    self.search_obj = self:AddComponent(WorldSearchItem, search_obj_path)
    self.bookmark = self:AddComponent(WorldBookmarkItem, bookmark_path)

    if LuaEntry.Player.serverType == ServerType.DRAGON_BATTLE_FIGHT_SERVER then
        CS.UIGray.SetGray(self.searchList[UISearchType.Monster].transform, true, false)
        CS.UIGray.SetGray(self.searchList[UISearchType.Boss].transform, true, false)
    else
        CS.UIGray.SetGray(self.searchList[UISearchType.Monster].transform, false, true)
        CS.UIGray.SetGray(self.searchList[UISearchType.Boss].transform, false, true)
    end
    self.lastTab = DataCenter.WorldFavoDataManager:GetLastTab()
    if self.lastTab == UISearchType.Boss then
        if CrossServerUtil:GetIsCrossServer() == false and LuaEntry.Player.serverType ~= ServerType.DRAGON_BATTLE_FIGHT_SERVER then
            self:OnSearchClick(UISearchType.Boss)
        end
    else
        if CrossServerUtil:GetIsCrossServer() == false and LuaEntry.Player.serverType ~= ServerType.DRAGON_BATTLE_FIGHT_SERVER then
            self:OnSearchClick(UISearchType.Monster)
        end
    end
    self:ShowGotoWorldItem()
end

local function OnDestroy(self)
    self:CloseAllPanel()
    if self.delayAnimTime ~= nil then
        self.delayAnimTime:Stop()
        self.delayAnimTime = nil
    end 
    base.OnDestroy(self)
end

local function ToggleControlBorS(self)
    self:CloseAllPanel(self.bookmark)
    if self.toogle1:GetIsOn() then
        self:ShowBookmarkItem(self.toogle1, MarkType.Special)
    elseif self.toogle2:GetIsOn() then
        self:ShowBookmarkItem(self.toogle2, MarkType.Friend)
    elseif self.toogle3:GetIsOn() then
        self:ShowBookmarkItem(self.toogle3, MarkType.Enemy)
    elseif self.toogle4:GetIsOn() then
        self:ShowBookmarkItem(self.toogle4, MarkType.Alliance_Attack)
    end
end

local function OnEnable(self)
    base.OnEnable(self)
    local k8 = LuaEntry.DataConfig:TryGetNum("search_monster", "k8")
    if DataCenter.BuildManager.MainLv < k8 then
        self.searchList[UISearchType.Boss]:SetActive(false)
    else
        self.searchList[UISearchType.Boss]:SetActive(true)
    end
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.END_SEARCH, self.OnSearchCallBack)
    self:AddUIListener(EventId.OpenUI, self.OnUIOpen)
    self:AddUIListener(EventId.CloseUI, self.OnUClose)
end


local function OnRemoveListener(self)
    base.OnRemoveListener(self)
    self:RemoveUIListener(EventId.END_SEARCH, self.OnSearchCallBack)
    self:RemoveUIListener(EventId.OpenUI, self.OnUIOpen)
    self:RemoveUIListener(EventId.CloseUI, self.OnUClose)
end

function UISearchView:OnUIOpen(windowsName)
    if windowsName == UIWindowNames.UIWorldPoint then
        self.event_trigger:SetActive(false)
        self.layout:SetActive(false)
        self.tab:SetActive(false)
    elseif windowsName~=UIWindowNames.UISearch and 
            windowsName ~= UIWindowNames.TouchScreenEffect and
            windowsName ~= UIWindowNames.UICommonMessageTip and
            windowsName ~= UIWindowNames.UIArrow and
            windowsName ~= UIWindowNames.UIMain and
            windowsName ~= UIWindowNames.UINoticeHeroTips and
            windowsName ~= UIWindowNames.UINoticeTips and
            windowsName ~= UIWindowNames.UICommonMessageBar and
            windowsName ~= UIWindowNames.UICityHud and
            windowsName ~= UIWindowNames.UIBubble and
            windowsName ~= UIWindowNames.UIQueueList and
            windowsName ~= UIWindowNames.UIFormationDispatchTip and
            windowsName ~= UIWindowNames.UIVitaMatter then
        self.ctrl:CloseSelf()
    end
end
function UISearchView:OnUClose(windowsName)
    if windowsName == UIWindowNames.UIWorldPoint then
        self.event_trigger:SetActive(true)
        self.layout:SetActive(true)
        self.tab:SetActive(true)
        self:ShowGotoWorldItem()
        if self.gotoWorld~=nil then
            self.gotoWorld:InitState()
        end
    end
end
local function OnSearchCallBack(self,param)
    if param ~= nil then
        self.ctrl:OnSearchEnd(param.pointId,param.uuid)
    end
end

local function OnSearchClick(self,index)
    if self.monster_obj~=nil then
        self.monster_obj:SetActive(true)
    end
    self:CloseAllPanel(self.monster_obj)
    if (index ==UISearchType.Monster or index == UISearchType.Boss ) and CrossServerUtil:GetIsCrossServer() then
        UIUtil.ShowTipsId(104266)
        return
    end
    local rangeWidth = 724--视口区域大小
    local itemWidth = 180--单个item尺寸
    local space = 20 --item间隔
    local maxNum  = 6--一共6个item
    local totalLength = maxNum*itemWidth+(maxNum-1)*space
    local maxDelta = rangeWidth-totalLength
    --local scaleFactor = UIManager:GetInstance():GetScaleFactor()
    
    local rDelta = rangeWidth-(index*itemWidth+(index-1)*space)--最右侧
    if rDelta>=0 then
        rDelta = 0
    end
    if rDelta< maxDelta then
        rDelta = maxDelta
    end

    local lDelta = -((index-1)*itemWidth+(index-1)*space)--最右侧
    if lDelta>=0 then
        rDelta = 0
    end
    if lDelta< maxDelta then
        lDelta = maxDelta
    end
    
    local delta = self.content.rectTransform.anchoredPosition.x
    if delta>rDelta then
        delta = rDelta
    elseif delta<lDelta then
        delta = lDelta
    end
    
    local needPos = Vector2.New(delta,self.content.rectTransform.anchoredPosition.y)
    self.content.rectTransform.anchoredPosition = needPos
    for k,v in pairs(self.searchList) do
        v:OnSelectClick(index)
    end
    self:ShowSearchItem(index)
    DataCenter.WorldFavoDataManager:SetLastTab(index)
end

local function CloseAllPanel(self, except)
    if self.monster_obj ~= nil and self.monster_obj ~= except then
        self.monster_obj:SetActive(false)
    end
    if self.bookmark ~= nil and self.bookmark ~= except then
        self.bookmark:SetActive(false)
        self.choose1.gameObject:SetActive(false)
        self.choose2.gameObject:SetActive(false)
        self.choose3.gameObject:SetActive(false)
        self.choose4.gameObject:SetActive(false)
    end
end

local function HasOpenItem(self)
    if self.search_obj ~= nil and self.search_obj:GetActive() then
        return true
    end
    if self.bookmark ~= nil and self.bookmark:GetActive() then
        return true
    end
    return false
end

local function ShowGotoWorldItem(self)
    if self.gotoWorld == nil then
        self.gotoWorld = self:AddComponent(WorldGotoItem, goto_path)
    end
    self.gotoWorld:SetActive((not CS.SceneManager:IsInCity()) and LuaEntry.Player.serverType ~= ServerType.DRAGON_BATTLE_FIGHT_SERVER and LuaEntry.Player.serverType~=ServerType.CROSS_THRONE)
end

local function ShowBookmarkItem(self, toggle, bookmarkType)
    self.bookmark:ClearScroll()
    self.bookmark:SetActive(true)
    self.choose1.gameObject:SetActive(bookmarkType == 0)
    self.choose2.gameObject:SetActive(bookmarkType == 1)
    self.choose3.gameObject:SetActive(bookmarkType == 2)
    self.choose4.gameObject:SetActive(bookmarkType == 3)

    self.bookmark:ReInit(bookmarkType, toggle.transform.position.x)
    self.ctrl:SetCurBookMarkType(bookmarkType)
end

local function HideBookmarkItem(self)
    if self.search_obj ~= nil then
        self.search_obj:SetActive(false)
    end
    self.ctrl:SetCurBookMarkType(nil)
end

local function ShowSearchItem(self,index)
    self.search_obj:RefreshData(index)
end



UISearchView.OnCreate= OnCreate
UISearchView.OnDestroy = OnDestroy
UISearchView.ToggleControlBorS = ToggleControlBorS
UISearchView.OnEnable = OnEnable
UISearchView.OnDisable = OnDisable
UISearchView.OnAddListener =OnAddListener
UISearchView.OnRemoveListener =OnRemoveListener
UISearchView.OnSearchCallBack =OnSearchCallBack
UISearchView.CloseAllPanel = CloseAllPanel
UISearchView.OnSearchClick = OnSearchClick
UISearchView.ShowGotoWorldItem = ShowGotoWorldItem
UISearchView.ShowBookmarkItem = ShowBookmarkItem
UISearchView.HideBookmarkItem = HideBookmarkItem
UISearchView.ShowSearchItem = ShowSearchItem
UISearchView.HasOpenItem = HasOpenItem

return UISearchView