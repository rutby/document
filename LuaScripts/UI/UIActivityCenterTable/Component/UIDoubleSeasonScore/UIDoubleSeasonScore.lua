---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zzl
--- DateTime: 
---


local UIDoubleSeasonScore = BaseClass("UIDoubleSeasonScore", UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization
local DoubleActEffectCell = require "UI.UIActivityCenterTable.Component.UIDoubleSeasonScore.DoubleActEffectCell"
local title_path = "Panel/Title"
local info_path =  "Panel/Title/Info"
local Txt_Title = "Panel/Txt_Title"
local rest_time_path = "Panel/RestTime"
local go_path = "Panel/Btn_Go"
local go_text_path = "Panel/Btn_Go/Txt_Go"
local descScore_txt_path = "Panel/bg/Txt_ScoreDesc"
local ScoreAdd_txt_path = "Panel/bg/Rect_S3/Txt_ScoreAdd"
local Txt_AddDesc = "Panel/bg/Txt_AddDesc"
local percent_txt_path = "Panel/bg/Rect_S3/Txt_Percent"
local img_add_path = "Panel/bg/Rect_S3/Img_Add"
local seasonEnd_txt_path = "Panel/bg/Txt_SeasonEnd"

function UIDoubleSeasonScore:OnCreate()
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

function UIDoubleSeasonScore:OnDestroy()
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

function UIDoubleSeasonScore:OnEnable()
    base.OnEnable(self)
end

function UIDoubleSeasonScore:OnDisable()
    base.OnDisable(self)
end

function UIDoubleSeasonScore:ComponentDefine()
    self.title_text = self:AddComponent(UIText, title_path)
    self.info_btn = self:AddComponent(UIButton, info_path)
    self.info_btn:SetOnClick(function() self:OnInfoClick() end)
    self.title_txt = self:AddComponent(UIText, Txt_Title)
    self._descScore_txt = self:AddComponent(UIText,descScore_txt_path)
    self._scoreAdd_txt = self:AddComponent(UIText,ScoreAdd_txt_path)
    self._percent_txt = self:AddComponent(UIText,percent_txt_path)
    self.rest_time_text = self:AddComponent(UIText, rest_time_path)
    
    self._addDesc_txt = self:AddComponent(UIText,Txt_AddDesc)

    self.go_btn = self:AddComponent(UIButton, go_path)
    self.go_btn:SetOnClick(function() self:OnGoClick() end)
    self.go_text = self:AddComponent(UIText, go_text_path)
    self.go_text:SetLocalText(372955)

    self._seasonEnd_txt = self:AddComponent(UIText,seasonEnd_txt_path)
    
    self._add_img = self:AddComponent(UIBaseContainer,img_add_path)
    
    self._endTime1_txt = self:AddComponent(UIText,"Panel/bg/Rect_TimeEnd/Txt_EndTime1")
    self._endTime2_txt = self:AddComponent(UIText,"Panel/bg/Rect_TimeEnd/Txt_EndTime2")
    self._endTime3_txt = self:AddComponent(UIText,"Panel/bg/Rect_TimeEnd/Txt_EndTime3")
    self._endTime4_txt = self:AddComponent(UIText,"Panel/bg/Rect_TimeEnd/Txt_EndTime4")
    
    self.content = self:AddComponent(UIBaseContainer,"Panel/bg/Content")
    
    self._s3_rect = self:AddComponent(UIBaseContainer,"Panel/bg/Rect_S3")
    self._s2Percent_txt = self:AddComponent(UIText,"Panel/bg/Txt_S2Percent")
end

function UIDoubleSeasonScore:ComponentDestroy()

end

function UIDoubleSeasonScore:DataDefine()
    self.timer_action = function(temp)
        self:RefreshTime()
    end
    self.timer_actionEnd = function(temp)
        self:RefreshEndTime()
    end
end

function UIDoubleSeasonScore:DataDestroy()
    self:DeleteEndTimer()
    self:DeleteTimer()
end


function UIDoubleSeasonScore:SetData(activityId)
    self.activityId = activityId
    self:Refresh()
end

function UIDoubleSeasonScore:Refresh()
    local data = DataCenter.ActivityListDataManager:GetActivityDataById(self.activityId)
    local settleTime = DataCenter.SeasonDataManager:GetSeasonSettleTime()
    self.time = settleTime
    self.data = data
    self.title_text:SetLocalText(tonumber(data.name))
    self.title_txt:SetLocalText(373101)
    if self.time and self.time > 0 then
        self._seasonEnd_txt:SetLocalText(110358)
    else
        self._seasonEnd_txt:SetLocalText(373117)
    end
    local serverT = UITimeManager:GetInstance():GetServerTime()
    if serverT > data.endTime then
        self.rest_time_text:SetLocalText(370100)
    else
        self:RefreshTime()
        self:AddTimer()
    end
    self:RefreshEndTime()
    self:AddEndTimer()
   
    local seasonId = DataCenter.SeasonDataManager:GetSeasonId()
    self.percent = 0
    if seasonId == 2 then
        self.percent = LuaEntry.DataConfig:TryGetStr("season_double_points","k1")
    elseif seasonId >= 3 then
        self.percent = LuaEntry.DataConfig:TryGetStr("season_double_points","k2")
    end
    self._s3_rect:SetActive(seasonId >= 3)
    self._s2Percent_txt:SetActive(seasonId == 2)
    self._descScore_txt:SetLocalText(373100)

    local dialog = "372954"
    local addStr = string.split(data.para2,"|")
    for i = 1 ,table.count(addStr) do
        local str = string.split(addStr[i],";")
        if seasonId == tonumber(str[1]) then
            dialog = str[2]
            break
        end
    end
    local addValue = 0
    if seasonId == 2 then
        local value = tonumber(self.percent) - 100
        self._s2Percent_txt:SetText("+"..value.."%")
    elseif seasonId >= 3 then
        addValue = LuaEntry.DataConfig:TryGetNum("plant_battle", "k9")
        self._percent_txt:SetLocalText(320362,math.floor(LuaEntry.DataConfig:TryGetNum("plant_battle", "k9") * tonumber(self.percent) * 0.01))
        self._scoreAdd_txt:SetText(addValue.."%")
    end
    self._addDesc_txt:SetLocalText(tonumber(dialog))
    local effectList = LuaEntry.Effect:GetServerAllActEffect()
    if effectList then
        self:SetAllCellDestroy()
        self.model = {}
        for i ,v in pairs(effectList) do
            local template = DataCenter.EffectTemplateManager:GetTemplate(i)
            if template then
                --复制基础prefab，每次循环创建一次
                self.model[i] = self:GameObjectInstantiateAsync(UIAssets.DoubleActEffectCell, function(request)
                    if request.isError then
                        return
                    end
                    local go = request.gameObject;
                    go.gameObject:SetActive(true)
                    go.transform:SetParent(self.content.transform)
                    go.transform:Set_localScale(1,1,1)
                    local nameStr = tostring(NameCount)
                    go.name = nameStr
                    NameCount = NameCount + 1
                    local cell = self.content:AddComponent(DoubleActEffectCell,go.name)
                    cell:ReInit(template)
                end)
            end
        end
    end
end

function UIDoubleSeasonScore:SetAllCellDestroy()
    self.content:RemoveComponents(DoubleActEffectCell)
    if self.model~=nil then
        for k,v in pairs(self.model) do
            if v ~= nil then
                self:GameObjectDestroy(v)
            end
        end
    end
end

--{{{活动倒计时
function UIDoubleSeasonScore:AddTimer()
    if self.timer == nil then
        self.timer = TimerManager:GetInstance():GetTimer(1, self.timer_action , self, false,false,false)
    end
    self.timer:Start()
end
function UIDoubleSeasonScore:DeleteTimer()
    if self.timer ~= nil then
        self.timer:Stop()
        self.timer = nil
    end
end

function UIDoubleSeasonScore:RefreshTime()
    local curTime = math.floor(UITimeManager:GetInstance():GetServerTime())
    local restTime = math.max(self.data.endTime - curTime, 0)
    if restTime <= 0 then
        self.rest_time_text:SetLocalText(370100)
        self:DeleteTimer()
    else
        self.rest_time_text:SetText( UITimeManager:GetInstance():MilliSecondToFmtString(restTime))
    end
end
--}}}

--{{{赛季结束倒計時
function UIDoubleSeasonScore:AddEndTimer()
    if self.timer_end == nil then
        self.timer_end = TimerManager:GetInstance():GetTimer(1, self.timer_actionEnd , self, false,false,false)
    end
    self.timer_end:Start()
end

function UIDoubleSeasonScore:RefreshEndTime()
    local now = UITimeManager:GetInstance():GetServerTime()
    if self.time and self.time > 0 and self.time > now then
        local tab = UITimeManager:GetInstance():MilliSecondToFmtStringByNum(self.time - now,true)
        if table.count(tab) == 3 then
            self._endTime1_txt:SetText("00")
            self._endTime2_txt:SetText(tab[1])
            self._endTime3_txt:SetText(tab[2])
            self._endTime4_txt:SetText(tab[3])
        else
            self._endTime1_txt:SetText(tab[1])
            self._endTime2_txt:SetText(tab[2])
            self._endTime3_txt:SetText(tab[3])
            self._endTime4_txt:SetText(tab[4])
        end
    else
        if self.data.endTime > now then
            local tab = UITimeManager:GetInstance():MilliSecondToFmtStringByNum(self.data.endTime - now,true)
            if table.count(tab) == 3 then
                self._endTime1_txt:SetText("00")
                self._endTime2_txt:SetText(tab[1])
                self._endTime3_txt:SetText(tab[2])
                self._endTime4_txt:SetText(tab[3])
            else
                self._endTime1_txt:SetText(tab[1])
                self._endTime2_txt:SetText(tab[2])
                self._endTime3_txt:SetText(tab[3])
                self._endTime4_txt:SetText(tab[4])
            end
        else
            self._endTime1_txt:SetText("00")
            self._endTime2_txt:SetText("00")
            self._endTime3_txt:SetText("00")
            self._endTime4_txt:SetText("00")
            self:DeleteEndTimer()
        end
    end
end

function UIDoubleSeasonScore:DeleteEndTimer()
    if self.timer_end ~= nil then
        self.timer_end:Stop()
        self.timer_end = nil
    end
end
--}}}

function UIDoubleSeasonScore:OnGoClick()
    local dataList = DataCenter.ActivityListDataManager:GetActivityDataByType(ActivityEnum.ActivityType.AllianceSeasonForce)
    if dataList ~= nil and #dataList > 0 then
        local actData = dataList[1]
        if actData ~= nil then
            self.view:JumpAct(actData.id)
        end
    end
end

function UIDoubleSeasonScore:OnInfoClick()
    local story = string.split(self.data.para1,"|")
    local seasonId = DataCenter.SeasonDataManager:GetSeasonId()
    for i = 1 ,table.count(story) do
        local str = string.split(story[i],";")
        if seasonId == tonumber(str[1]) then
            UIUtil.ShowIntro(Localization:GetString(self.data.name),"", Localization:GetString(str[2],self.percent))
            --self.story_text:SetLocalText(str[2],Localization:GetString("320362",percent))
            break
        end
    end
end
return UIDoubleSeasonScore