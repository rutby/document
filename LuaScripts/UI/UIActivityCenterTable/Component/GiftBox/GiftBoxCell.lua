---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zzl.
--- DateTime: 
---

local GiftBoxCell = BaseClass("GiftBoxCell", UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization
function GiftBoxCell:OnCreate()
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
end

function GiftBoxCell:OnDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

function GiftBoxCell:ComponentDefine()
    self._this_btn = self:AddComponent(UIButton,"")
    self._this_anim = self:AddComponent(UIAnimator,"")
    self._this_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnClickOpen()
    end)
    
    self._boxKeyNum_txt = self:AddComponent(UITextMeshProUGUIEx,"Txt_BoxKeyNum")
    self._time_txt = self:AddComponent(UITextMeshProUGUIEx,"Txt_Time")
    
    self._giftBox_img = self:AddComponent(UIImage,"mask/Img_GiftBox")
    
    self._timeBg_img = self:AddComponent(UIImage,"Img_TimeBg")
    
    self._key_img = self:AddComponent(UIImage,"Img_Key")
end

function GiftBoxCell:DataDefine()
    self.timer_actionBox = function(temp)
        self:RefreshBoxTime(temp)
    end
end

function GiftBoxCell:DataDestroy()
    self:DeleteBoxTimer()
end

function GiftBoxCell:ReInit(param,activityId,keyID,index,effectList)
    self.activityId = activityId
    self._boxKeyNum_txt:SetText("")     
    self._time_txt:SetText("")
    self.param = nil
    self.isLangTime = false
    self:DeleteBoxTimer()
    --有宝箱
    if param then
        self._this_btn:SetActive(true)
        self.param = param
        --检查是否过期
        local curTime = UITimeManager:GetInstance():GetServerTime()
        if curTime > param.expireTime then
            --过期
            self.isLangTime = true
        else
            self:RefreshBoxTime(param.expireTime)
            self:AddBoxTimer(param.expireTime)
            self.isLangTime = false
        end

        --获取盒子配置
        self.template =  DataCenter.ActGiftBoxData:GetActBoxInfoByItemId(param.itemId)
        self._giftBox_img:LoadSprite(string.format(LoadPath.UImystery,self.template.reward_icon))

        if keyID then
            self.keyId = keyID
            local count = DataCenter.ItemData:GetItemCount(keyID)
            local goods = DataCenter.ItemTemplateManager:GetItemTemplate(keyID)
            self._boxKeyNum_txt:SetLocalText(150033,count,self.template.unlock_cost)
            self._key_img:LoadSprite(string.format(LoadPath.ItemPath,goods.icon))
        end
    else
        self._this_btn:SetActive(false)
    end

    if index % 2 == 0 then
        self._timeBg_img:LoadSprite(string.format(LoadPath.UImystery,"UImystery_giftlist_04"))
    else
        self._timeBg_img:LoadSprite(string.format(LoadPath.UImystery,"UImystery_giftlist_03"))
    end

    if effectList then
        for i = 1 ,table.count(effectList) do
            if effectList[i] == index then
                self._this_anim:Play("V_ui_giftboxcell_chuxian",0,0)
            end
        end
    else
        self._this_anim:Play("V_ui_giftboxcell_def",0,0)
    end
end

--{{{宝箱时间
function GiftBoxCell:AddBoxTimer(expireTime)
    if self.timerBox == nil then
        self.timerBox = TimerManager:GetInstance():GetTimer(1, self.timer_actionBox ,expireTime , false,false,false)
    end
    self.timerBox:Start()
end

function GiftBoxCell:RefreshBoxTime(expireTime)
    local curTime = UITimeManager:GetInstance():GetServerTime()
    if expireTime < curTime then
        self:DeleteBoxTimer()
        if self.param then
            DataCenter.ActGiftBoxData:BoxTimeEnd(self.activityId,self.param.uuid)
        end
        self._this_btn:SetActive(false)
    else
        self._time_txt:SetText(UITimeManager:GetInstance():MilliSecondToFmtString(expireTime - curTime))
    end
end

function GiftBoxCell:DeleteBoxTimer()
    if self.timerBox ~= nil then
        self.timerBox:Stop()
        self.timerBox = nil
    end
end
--}}}

--打开礼盒界面
function GiftBoxCell:OnClickOpen()
    if self.param and not self.isLangTime then
        DataCenter.ActGiftBoxData:SetParam(self.param)
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIActGiftBoxOpen, self.activityId)
    end
end

return GiftBoxCell