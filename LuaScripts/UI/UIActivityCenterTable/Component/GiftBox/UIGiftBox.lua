---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zzl.
--- DateTime: 
---

local UIGiftBox = BaseClass("UIGiftBox", UIBaseView)
local base = UIBaseContainer
local GiftBoxCell = require "UI.UIActivityCenterTable.Component.GiftBox.GiftBoxCell"
local Localization = CS.GameEntry.Localization
local UIGray = CS.UIGray

function UIGiftBox:OnCreate()
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
end

function UIGiftBox:OnDestroy()
    DataCenter.ActGiftBoxData:ClearNewGift()
    self:DeleteTimer()
    self:DeleteBossTimer()
    self:DataDestroy()
    base.OnDestroy(self)
end

function UIGiftBox:OnEnable()
    base.OnEnable(self)
end

function UIGiftBox:OnDisable()
    base.OnDisable(self)
    DataCenter.ActGiftBoxData:ClearNewGift()
    if self.delayTime then
        self.delayTime:Stop()
        self.delayTime = nil
    end
end

function UIGiftBox:ComponentDefine()
    
    self._actName_txt = self:AddComponent(UITextMeshProUGUIEx, "Root/Txt_ActName")
    self._time_txt = self:AddComponent(UITextMeshProUGUIEx,"Root/TitleBg/NotStarted/Txt_Times")
    self._actTime_txt = self:AddComponent(UITextMeshProUGUIEx,"Root/TitleBg/Txt_ActTime")
    --活动说明
    self.intro_btn = self:AddComponent(UIButton, "Root/Txt_ActName/Intro")
    self.intro_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnIntroClick()
    end)
            
    --奖励预览
    self._preview_btn = self:AddComponent(UIButton, "Root/Btn_Preview")
    self._preview_txt = self:AddComponent(UITextMeshProUGUIEx, "Root/Btn_Preview/Txt_Preview")
    self._preview_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnRewardListClick()
    end)
    
    --钥匙信息
    self._key_rect = self:AddComponent(UIBaseContainer,"Root/Rect_Key")
    self._key_img = self:AddComponent(UIImage,"Root/Rect_Key/Img_Key")
    self._keyNum_txt = self:AddComponent(UITextMeshProUGUIEx,"Root/Rect_Key/Txt_KeyNum")
    self._keyAdd_btn = self:AddComponent(UIButton,"Root/Rect_Key/Btn_KeyAdd")
    self._keyAdd_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnKeyAddClick()
    end)
    
    --跳过动画
    self.toggle = self:AddComponent(UIToggle,"Root/redSwitch")
    self.toggle:SetOnValueChanged(function(tf)
        self:ToggleControlBorS(tf)
    end)
    self._jumpAnim_txt = self:AddComponent(UITextMeshProUGUIEx,"Root/redSwitch/redSwitchTxt")

    --钻石信息
    self._resIcon_img = self:AddComponent(UIImage,"Root/topRes/Res/resIcon")
    self._resNum_txt = self:AddComponent(UITextMeshProUGUIEx,"Root/topRes/Res/resNum")
    
    self._boxList_anim = self:AddComponent(UIAnimator,"Root/gift_box")
    self.curGiftBox = self:AddComponent(UIImage,"Root/gift_box/Rect_CurGiftBox")
    self.flyBox = {}
    for i = 1 ,4 do
        self.flyBox[i] = self:AddComponent(UIBaseContainer,"Root/Rect_BoxFly/FlyBox"..i)
    end

    --单抽
    self._one_btn = self:AddComponent(UIButton,"Root/layout/Btn_One")
    self._freeRed_img = self:AddComponent(UIImage,"Root/layout/Btn_One/Img_FreeRed")
    self._btnOne_txt = self:AddComponent(UITextMeshProUGUIEx,"Root/layout/Btn_One/Rect_BtnOne/Txt_BtnOne")
    self._costOne_txt = self:AddComponent(UITextMeshProUGUIEx,"Root/layout/Btn_One/Rect_BtnOne/Txt_CostOne")
    self._costOne_img = self:AddComponent(UIImage,"Root/layout/Btn_One/Rect_BtnOne/Txt_CostOne/Img_CostOne")
    self._costOneFree_txt = self:AddComponent(UITextMeshProUGUIEx,"Root/layout/Btn_One/Txt_CostOneFree")
    
    self._one_btn:SetOnClick(function()
        
        self:OnClickOne(0)
    end)
    
    --五连
    self._five_btn = self:AddComponent(UIButton,"Root/layout/Btn_Five")
    self._btnFive_txt = self:AddComponent(UITextMeshProUGUIEx,"Root/layout/Btn_Five/Rect_BtnFive/Txt_BtnFive")
    self._costFive_txt = self:AddComponent(UITextMeshProUGUIEx,"Root/layout/Btn_Five/Rect_BtnFive/Txt_CostFive")
    self._costFive_img = self:AddComponent(UIImage,"Root/layout/Btn_Five/Rect_BtnFive/Txt_CostFive/Img_CostFive")
    self._five_btn:SetOnClick(function()
      
        self:OnClickOne(1)
    end)
    
    --奖励盒子
    self._box_rect = self:AddComponent(UIBaseContainer,"Root/Rect_Box")


    --排行榜
    self._rank_btn = self:AddComponent(UIButton,"Root/Btn_Rank")
    self._rank_txt = self:AddComponent(UITextMeshProUGUIEx,"Root/Btn_Rank/Txt_Rank")
    self._rankNum_txt = self:AddComponent(UITextMeshProUGUIEx,"Root/Btn_Rank/Txt_num")
    self._rank_txt:SetLocalText(390040)
    self._rank_btn:SetOnClick(function()
        self:OnClickRank()
    end)
end

function UIGiftBox:DataDefine()
    self.timer = nil
    self.timer_action = function(temp)
        self:RefreshTime(temp)
    end
    self.timer_actionBoss = function(temp)
        self:RefreshBossTime(temp)
    end
    self.keyID = nil
    self.isFree = 0
    self.needGoldOne = 0
    self.needGoldFive = 0
end

function UIGiftBox:DataDestroy()
    if self.delayTime then
        self.delayTime:Stop()
        self.delayTime = nil
    end
    self:SetAllCellDestroy()
end

function UIGiftBox:OnAddListener()
    base.OnAddListener(self)
    self:AddUIListener(EventId.ActGiftBoxLottery, self.BoxAnim)
    self:AddUIListener(EventId.ActGiftBoxGetInfo, self.OnRefresh)
    self:AddUIListener(EventId.ActGiftBoxOpen, self.ActGiftBoxOpenHandle)
    self:AddUIListener(EventId.UpdateGold, self.ShowNeedRes)
    self:AddUIListener(EventId.PaySuccess, self.RefreshKey)
    self:AddUIListener(EventId.OnRewardGetPanelClose, self.RewardPanelClose)
    self:AddUIListener(EventId.UseItemSuccess, self.ShowKey)
    self:AddUIListener(EventId.BuyItemAndRes, self.ShowKey)
    self:AddUIListener(EventId.ActGiftBoxRankUpdate, self.OnRefreshRankNum)
end

function UIGiftBox:OnRemoveListener()
    base.OnRemoveListener(self)
    self:RemoveUIListener(EventId.ActGiftBoxLottery, self.BoxAnim)
    self:RemoveUIListener(EventId.ActGiftBoxGetInfo, self.OnRefresh)
    self:RemoveUIListener(EventId.ActGiftBoxOpen, self.ActGiftBoxOpenHandle)
    self:RemoveUIListener(EventId.UpdateGold, self.ShowNeedRes)
    self:RemoveUIListener(EventId.PaySuccess, self.RefreshKey)
    self:RemoveUIListener(EventId.OnRewardGetPanelClose, self.RewardPanelClose)
    self:RemoveUIListener(EventId.UseItemSuccess, self.ShowKey)
    self:RemoveUIListener(EventId.BuyItemAndRes, self.ShowKey)
    self:RemoveUIListener(EventId.ActGiftBoxRankUpdate, self.OnRefreshRankNum)
end

function UIGiftBox:SetData(activityId,actId)
    self.activityId = activityId
    self._boxList_anim:Play("V_ui_wawaji_gift_box_def",0,0)
   -- DataCenter.ActivityListDataManager:SetActivityVisitedEndTime(actId)
    SFSNetwork.SendMessage(MsgDefines.GetActivityGiftBoxInfo, activityId)
    SFSNetwork.SendMessage(MsgDefines.GetGiftBoxRank,toInt(self.activityId))
    self:SetConstTxt()
end

--刷新
function UIGiftBox:OnRefresh()
    self.actData = DataCenter.ActGiftBoxData:GetInfoByActId(tonumber(self.activityId))
    self.animState = false
    --DataCenter.ActivityListDataManager:SetActivityVisitedEndTime(tostring(self.activityId))
    local state = Setting:GetBool(SettingKeys.ActGiftBoxJumpAnim..LuaEntry.Player.uid,false)
    self.toggle:SetIsOn(state)
    local actListData = DataCenter.ActivityListDataManager:GetActivityDataById(self.activityId)
    if actListData then
        self.actListData = actListData
        self:RefreshTime(actListData)
        self:AddTimer(actListData)
 
        self:RefreshTitle(actListData)
        self:ShowKey()
        self:RefreshBottom()
        self:RefreshGiftBox()
    end
    self:ShowNeedRes()
end

function UIGiftBox:OnRefreshRankNum()
    self.actData = DataCenter.ActGiftBoxData:GetInfoByActId(tonumber(self.activityId))
    if self.actData then
        if self.actData.selfRank ~= -1 then
            if self.actData.selfRank > 0 and self.actData.selfRank < 4 then
                self._rank_btn:LoadSprite("Assets/Main/Sprites/UI/UIAlliance/rank/UIalliance_rankingbg0" .. self.actData.selfRank)
                self._rankNum_txt:SetText("")
            else
                self._rank_btn:LoadSprite(string.format(LoadPath.UIGolloesCards,"UIgolo_btn_rankinga"))
                self._rankNum_txt:SetText(self.actData.selfRank)
            end
            return
        end
    end
    self._rankNum_txt:SetText("")
end

--跳过动画
function UIGiftBox:ToggleControlBorS(isJumpPlay)
    Setting:SetBool(SettingKeys.ActGiftBoxJumpAnim..LuaEntry.Player.uid, isJumpPlay)
end

--{{{活动时间
function UIGiftBox:AddTimer(actListData)
    if self.timer == nil then
        self.timer = TimerManager:GetInstance():GetTimer(1, self.timer_action ,actListData , false,false,false)
    end
    self.timer:Start()
end

function UIGiftBox:RefreshTime(actListData)
    local curTime = UITimeManager:GetInstance():GetServerTime()
    if actListData.endTime < curTime then
        self:DeleteTimer()
        self.actEnd = true
    else
        if actListData:CheckIfIsToEnd() then
            self._time_txt:SetColorRGBA(0.91, 0.26, 0.26, 1)
        else
            self._time_txt:SetColor(WhiteColor)
        end
        self._time_txt:SetText(UITimeManager:GetInstance():MilliSecondToFmtString(actListData.endTime - curTime))
        self.actEnd = false
    end
end

function UIGiftBox:DeleteTimer()
    if self.timer ~= nil then
        self.timer:Stop()
        self.timer = nil
    end
end
--}}}

--一些固定dialog赋值
function UIGiftBox:SetConstTxt()
    self._preview_txt:SetLocalText(302181)
    self._jumpAnim_txt:SetLocalText(372228)
end

--活动标题
function UIGiftBox:RefreshTitle(actListData)
    self._actName_txt:SetLocalText(actListData.name)
    local startT = UITimeManager:GetInstance():TimeStampToDayForLocal(actListData.startTime)
    local endT = UITimeManager:GetInstance():TimeStampToDayForLocal(actListData.endTime)
    self._actTime_txt:SetText(startT .. "-" .. endT)
end

--钻石信息显示
function UIGiftBox:ShowNeedRes()
    local tempIcon = DataCenter.RewardManager:GetPicByType(RewardType.GOLD)
    self._resIcon_img:LoadSprite(tempIcon)
    local tempCount = LuaEntry.Player.gold
    self._resNum_txt:SetText(string.GetFormattedSeperatorNum(tempCount))
    self:ShowKey()
end

function UIGiftBox:RefreshKey()
    for i = 1 ,self.boxNum do
        self.boxList[i]:ReInit(self.actData.giftBoxs[i],tonumber(self.activityId),self.keyID,i)
    end
end

--钥匙信息
function UIGiftBox:ShowKey()
    self.keyID = DataCenter.ActGiftBoxData:GetActKeyById(tonumber(self.activityId))
    if self.keyID then
        local count = DataCenter.ItemData:GetItemCount(self.keyID)
        local goods = DataCenter.ItemTemplateManager:GetItemTemplate(self.keyID)
        self._keyNum_txt:SetText(count)
        self._key_img:LoadSprite(string.format(LoadPath.ItemPath,goods.icon))
    end
end

--{{{按钮
--按钮信息
function UIGiftBox:RefreshBottom()
    local template = DataCenter.ActGiftBoxData:GetActTemplateByActId(tonumber(self.activityId))
    self:RefreshCostOne(template)
    self:RefreshCostFive(template)
end

--单抽
function UIGiftBox:RefreshCostOne(template)
    --检查是否当天还有免费
    self.isFree = 0
    self._btnOne_txt:SetLocalText(372226)
    if template then
        if self.actData.oneLotteryCount < template.cost_1_free then
            self._costOne_txt:SetActive(false)
            self._costOneFree_txt:SetActive(true)
            self._freeRed_img:SetActive(true)
            self._costOneFree_txt:SetLocalText(110134,template.cost_1_free - self.actData.oneLotteryCount)
            self.isFree = 1
        else
            self._costOne_txt:SetActive(true)
            self._costOneFree_txt:SetActive(false)
            self._freeRed_img:SetActive(false)
            self._costOne_txt:SetText(template.cost_1)
            self.needGoldOne = template.cost_1
        end
    end
end
--五连
function UIGiftBox:RefreshCostFive(template)
    if template then
        self._costFive_txt:SetText(template.cost_5)
        self.needGoldFive = template.cost_5
        self._btnFive_txt:SetLocalText(372227)
    end
end
--}}}

--{{{
function UIGiftBox:ActGiftBoxOpenHandle()
    self.actData = DataCenter.ActGiftBoxData:GetInfoByActId(tonumber(self.activityId))
    self:ShowKey()
    --self:RefreshGiftBox()
    for i = 1 ,self.boxNum do
        self.boxList[i]:ReInit(self.actData.giftBoxs[i],tonumber(self.activityId),self.keyID,i)
    end
end

function UIGiftBox:RefreshBossTime(actListData)
    local curTime = UITimeManager:GetInstance():GetServerTime()
    if actListData.refreshTime < curTime then
        self:DeleteBossTimer()
        self._timeBoss_txt:SetActive(false)
        self._bossPos_txt:SetActive(false)
        self._desc1_txt:SetActive(true)
    else
        self._desc1_txt:SetActive(false)
        self._timeBoss_txt:SetActive(true)
        self._timeBoss_txt:SetText(UITimeManager:GetInstance():MilliSecondToFmtString(actListData.refreshTime - curTime))
    end
end

function UIGiftBox:DeleteBossTimer()
    if self.timerBoss ~= nil then
        self.timerBoss:Stop()
        self.timerBoss = nil
    end
end
--}}}

--{{{盒子暂存
--获取当前活动最多能存多少个
function UIGiftBox:RefreshGiftBox(giftEffect)
    self:SetAllCellDestroy()
    self.model = {}
    self.boxList = {}
    self.boxNum = DataCenter.ActGiftBoxData:GetActMaxBoxById(tonumber(self.activityId))
    if self.boxNum > 0 then
        for i = 1, self.boxNum do
            --复制基础prefab，每次循环创建一次
            self.model[i] = self:GameObjectInstantiateAsync(UIAssets.GiftBoxCell, function(request)
                if request.isError then
                    return
                end
                local go = request.gameObject;
                go.gameObject:SetActive(true)
                go.transform:SetParent(self._box_rect.transform)
                go.transform:Set_localScale(1,1,1)
                go.name ="giftBox" .. i
                local cell = self._box_rect:AddComponent(GiftBoxCell,go.name)
                cell:ReInit(self.actData.giftBoxs[i],tonumber(self.activityId),self.keyID,i,giftEffect)
                self.boxList[i] = cell
            end)
        end
    end
end

function UIGiftBox:SetAllCellDestroy()
    self._box_rect:RemoveComponents(GiftBoxCell)
    if self.model~=nil then
        for k,v in pairs(self.model) do
            if v ~= nil then
                self:GameObjectDestroy(v)
            end
        end
    end
end
--}}}

--获得钥匙
function UIGiftBox:OnKeyAddClick()
    local lackTab = {}
    local param = {}
    param.type = ResLackType.Item
    param.id = self.keyID
    param.targetNum = 10
    table.insert(lackTab,param)
    GoToResLack.GoToItemResLackList(lackTab)
    --UIManager:GetInstance():OpenWindow(UIWindowNames.UIGetPickaxe,{anim = true}, self.activityId)
end

--抽奖
function UIGiftBox:OnClickOne(type)
    if self.animState then
        return
    end
    --是否还有次数
    local template = DataCenter.ActGiftBoxData:GetActTemplateByActId(tonumber(self.activityId))
    if template then
        local curNum = DataCenter.ActGiftBoxData:GetActCurAllNum(tonumber(self.activityId))
        if curNum and curNum >= template.draw_max_daily then
            --没次数了
            return UIUtil.ShowTipsId(372304)
        end
    end
    
    --钱够不够
    if self.isFree == 0 then
        local gold = LuaEntry.Player.gold
        if type == 0 and gold < self.needGoldOne then
            GoToUtil.GotoPayTips()
            return
        elseif  type == 1 and gold < self.needGoldFive then
            GoToUtil.GotoPayTips()
            return
        end
    end
    
    local isFree = 0
    if type == 0 then
        isFree = self.isFree
    end

    self.animState = true

    SFSNetwork.SendMessage(MsgDefines.ActivityGiftBoxLottery,toInt(self.activityId),type,isFree)
end

function UIGiftBox:BoxAnim()
    self.actData = DataCenter.ActGiftBoxData:GetInfoByActId(tonumber(self.activityId))
    self:ShowKey()
    self:RefreshBottom()

    local state = Setting:GetBool(SettingKeys.ActGiftBoxJumpAnim..LuaEntry.Player.uid,false)
    if state then
        --要弹窗的奖励
        local rewardList = DataCenter.ActGiftBoxData:GetLottery()
        DataCenter.ActGiftBoxData:ClearLottery()
        rewardList["reward"] = {}
        DataCenter.RewardManager:ShowCommonReward(rewardList,nil,nil,nil,nil,true)
        DataCenter.ActGiftBoxData:ClearNewGift()
        --self:RefreshGiftBox()
        for i = 1 ,self.boxNum do
            self.boxList[i]:ReInit(self.actData.giftBoxs[i],tonumber(self.activityId),self.keyID,i)
        end
        self.animState = false
    else
        --刷新将要拿起来的盒子颜色
        local gift = DataCenter.ActGiftBoxData:GetIsNewGift()
        if gift and next(gift) then
            local template =  DataCenter.ActGiftBoxData:GetActBoxInfoByItemId(gift[1])
            self.curGiftBox:LoadSprite(string.format(LoadPath.UImystery,template.reward_icon))
        else
            self.curGiftBox:LoadSprite(string.format(LoadPath.UImystery,"UImystery_gift_huang"))
        end

        --开始播动画
        self.animState = true
        self._boxList_anim:Play("V_ui_wawaji_gift_box",0,0)

        --要弹窗的奖励
        local rewardList = DataCenter.ActGiftBoxData:GetLottery()
        DataCenter.ActGiftBoxData:ClearLottery()
        rewardList["reward"] = {}
        self.delayTime = TimerManager:GetInstance():DelayInvoke(function()
            self.animState = false
            DataCenter.RewardManager:ShowCommonReward(rewardList,nil,nil,nil,nil,true)
            if self.delayTime then
                self.delayTime:Stop()
                self.delayTime = nil
            end
        end, 3.3)
    end
end

--关闭奖励界面后跳动画
function UIGiftBox:RewardPanelClose()
    local gift = DataCenter.ActGiftBoxData:GetIsNewGift()
    DataCenter.ActGiftBoxData:ClearNewGift()
    if gift and next(gift) then
        local curMax = table.count(self.actData.giftBoxs) - table.count(gift)
        local giftEffect = {}
        for i = 1 ,table.count(gift) do
            --获取盒子配置
            local template =  DataCenter.ActGiftBoxData:GetActBoxInfoByItemId(gift[i])  
            local pic= string.format(LoadPath.UImystery,template.reward_icon)
            local curPos = self.curGiftBox.transform.position
            local flyPos = self.flyBox[curMax + 1].transform.position
            table.insert(giftEffect,curMax + 1)
            curMax = curMax + 1
            if curMax > 4 then
                curMax = 4
            end
            UIUtil.DoFly(RewardType.ActGiftBox,1,pic,curPos,flyPos,80,80,nil,nil,1)
        end
        self.delayBoxTime = TimerManager:GetInstance():DelayInvoke(function()
            --self:RefreshGiftBox(giftEffect)
            for i = 1 ,self.boxNum do
                self.boxList[i]:ReInit(self.actData.giftBoxs[i],tonumber(self.activityId),self.keyID,i,giftEffect)
            end
            if self.delayBoxTime then
                self.delayBoxTime:Stop()
                self.delayBoxTime = nil
            end
        end, 1.2)
    end
    self._boxList_anim:Play("V_ui_wawaji_gift_box_def",0,0)
end

--活动说明
function UIGiftBox:OnIntroClick()
    UIUtil.ShowIntro(Localization:GetString(self.actListData.name), Localization:GetString("100239"),Localization:GetString(self.actListData.story))
end

--打开奖励列表
function UIGiftBox:OnRewardListClick()
    if self.activityId then
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIActGiftBoxReward, tonumber(self.activityId))
    end
end

--打开排行榜
function UIGiftBox:OnClickRank()
    if self.actData then
        --检查是否属于跨服排行榜
        local serverStr = nil
        local template = DataCenter.ActGiftBoxData:GetActTemplateByActId(tonumber(self.activityId))
        local para1 = template.rank
        if para1 and para1 ~= "" then
            local stage = string.split(para1,"|")
            for i = 1 ,table.count(stage) do
                local str = string.split(stage[i],",")
                if string.find(str[2],";") and string.find(str[2],"-") then
                    local strServer = string.split(str[2],";")
                    for k = 1 ,table.count(strServer) do
                        local server = string.split(strServer[k],"-")
                        if tonumber(server[1]) <= LuaEntry.Player:GetSelfServerId() and LuaEntry.Player:GetSelfServerId() <= tonumber(server[2]) then
                            local subStr = string.gsub(str[2], ";", ",")
                            serverStr = subStr
                            break
                        end
                    end
                elseif string.find(str[2],"-") then
                    local server = string.split(str[2],"-")
                    if tonumber(server[1]) <= LuaEntry.Player:GetSelfServerId() and LuaEntry.Player:GetSelfServerId() <= tonumber(server[2]) then
                        serverStr = str[2]
                        break
                    end
                elseif string.find(str[2],";") then
                    local server = string.split(str[2],";")
                    if tonumber(server[1]) == LuaEntry.Player:GetSelfServerId() or LuaEntry.Player:GetSelfServerId() == tonumber(server[2]) then
                        serverStr = server[1]..","..server[2]
                        break
                    end
                end
            end
        end
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIGiftBoxRank,toInt(self.activityId),serverStr)
    end
end

return UIGiftBox