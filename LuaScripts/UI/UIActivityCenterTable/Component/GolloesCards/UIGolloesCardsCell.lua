---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zzl.
--- DateTime: 
---
local UIGolloesCardsCell = BaseClass("UIGolloesCardsCell",UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization
local ItemIcon = "obj/ItemIcon"
local ImgQuality = "obj/ImgQuality"
local NumText = "obj/NumText"
local obj_path = "obj"
local card_path = "card"
local path = ""
local choice_img = "obj/Img_Choice"
local ImgExtra = "obj/imgExtra"

local effect_best_path = "Rect_EffectBest"
local effect_click_path = "Rect_EffectClick"
local effect_init_path = "GameObject/Rect_EffectInit"
local effect_refresh_path = "Rect_Refresh"

function UIGolloesCardsCell:OnCreate()
    base.OnCreate(self)

    self._obj_path = self:AddComponent(UIBaseContainer,obj_path)
    self._card_path = self:AddComponent(UIImage,card_path)
    self._icon_img = self:AddComponent(UIImage,ItemIcon)
    self._item_quality = self:AddComponent(UIImage, ImgQuality)
    self._num_txt = self:AddComponent(UITextMeshProUGUIEx,NumText)
    self._box_btn = self:AddComponent(UIButton,path)
    self._box_btn:SetOnClick(function()
        self:OnClickGo()
    end)
    self.imgExtra = self:AddComponent(UIImage,ImgExtra)
    self._choice_img = self:AddComponent(UIImage,choice_img)
    self._rect_EffectBest = self:AddComponent(UIBaseContainer,effect_best_path)
    self._rect_EffectClick = self:AddComponent(UIBaseContainer,effect_click_path)
    self._rect_EffectInit = self:AddComponent(UIBaseContainer,effect_init_path)
    self._rect_EffectRefresh = self:AddComponent(UIBaseContainer,effect_refresh_path)
    
    self.cellAnim = self:AddComponent(UIAnimator,path)
    --self.cellAnim:Play("V_ui_UIGolloesCardsCell_default",0,0)
    self.isFirst = true
end

function UIGolloesCardsCell:OnDestroy()
    self:ClearTime()
    base.OnDestroy(self)
end

function UIGolloesCardsCell:OnEnable()
    base.OnEnable(self)
end

function UIGolloesCardsCell:OnDisable()
    base.OnDisable(self)
end

function UIGolloesCardsCell:RefreshData(index,previewRw,callback)
    self.index = index
    self.callback = callback
    self.previewRw = previewRw
   -- self._card_path:SetActive(true)
   -- if self.isFirst then
   --     self.isFirst = false
   --     self._rect_EffectInit:SetActive(true)
   --     self.delayTimeCell = TimerManager:GetInstance():DelayInvoke(function()
   --         self._rect_EffectInit:SetActive(false)
   --     end, 0.6)
   -- end
end

function UIGolloesCardsCell:RefreshState(state)
    --self._card_path:SetActive(state)
  --  self._obj_path:SetActive(not state)
    self._icon_img:SetActive(false)
    self._rect_EffectClick:SetActive(false)
    self._rect_EffectBest:SetActive(false)
    self._rect_EffectInit:SetActive(false)
    self._rect_EffectRefresh:SetActive(false)
end

function UIGolloesCardsCell:LoadBg(pathbg,pathquality)
    self._card_path:LoadSprite(string.format(LoadPath.UIGolloesCards, pathbg))
    self._item_quality:LoadSprite(string.format(LoadPath.UIGolloesCards, pathquality))
end

function UIGolloesCardsCell:RefreshReward(reward,isPlayAnim,state,playBest)
    --self._card_path:SetActive(false)
    --self._obj_path:SetActive(true)
    if not state then
        --self.cellAnim:Play("V_ui_UIGolloesCardsCell_show",0,0)
    end
    self._icon_img:SetActive(true)
    self._rect_EffectClick:SetActive(false)
    self._rect_EffectRefresh:SetActive(false)
    self._rect_EffectInit:SetActive(false)
    self._rect_EffectBest:SetActive(false)
    if reward.rewardType == RewardType.GOODS then
        local goods = DataCenter.ItemTemplateManager:GetItemTemplate(reward.itemId)
        if goods then
            self._icon_img:LoadSprite(string.format(LoadPath.ItemPath, goods.icon))
        end
    else
        local resourceType = tonumber(reward.rewardType)
        if resourceType < 100 then
            if  DataCenter.ResourceManager:GetResourceIconByType(resourceType) then
                self._icon_img:LoadSprite(DataCenter.ResourceManager:GetResourceIconByType(resourceType))
            end
        end
    end
    self._num_txt:SetActive(true)
    self._num_txt:SetText(string.GetFormattedSeperatorNum(reward.count))
    if not playBest then
        self:PlayEffectBest(reward,isPlayAnim)
    end
end

--当前挡位最好的奖励使用流光
function UIGolloesCardsCell:PlayEffectBest(reward,isPlayAnim)
    if self.previewRw and self.previewRw == tonumber(reward.itemId) then
        self._rect_EffectBest:SetActive(true)
        self:PlayEffectClick(isPlayAnim)
    else
        self._rect_EffectBest:SetActive(false)
    end
end

--点击特效
function UIGolloesCardsCell:PlayAnimClick()
    --self.cellAnim:Play("V_ui_UIGolloesCardsCell_fanpai",0,0)
end

function UIGolloesCardsCell:PlayEffectClick(isPlayAnim)
    if self.state then
        return
    end
    if isPlayAnim then
        self.state = false
    else
        self.state = true
    end
    self._rect_EffectClick:SetActive(true)
end

function UIGolloesCardsCell:PlayEffectRefresh()
    self._rect_EffectRefresh:SetActive(true)
end

function UIGolloesCardsCell:FreePlayEffect()
    self._rect_EffectInit:SetActive(true)
    self.delayTimeCell1 = TimerManager:GetInstance():DelayInvoke(function()
        self._rect_EffectInit:SetActive(false)
    end, 1)
end

--翻牌
function UIGolloesCardsCell:PlayAnimFanPai()
    --self.cellAnim:Play("V_ui_UIGolloesCardsCell_fanpai",0,0)
end

--翻转动画
function UIGolloesCardsCell:PlayRefreshAnim()
    --self.cellAnim:Play("V_ui_UIGolloesCardsCell_fanzhuan",0,0)
end

--消失动画
--[[
function UIGolloesCardsCell:PlayHideAnim(path)
    self.cellAnim:Play("V_ui_UIGolloesCardsCell_shuaxin_xiaoshi",0,0)
    self.delayTimeCell3 = TimerManager:GetInstance():DelayInvoke(function()
        self:LoadBg(string.format(LoadPath.UIGolloesCards, path))
    end, 0.5)
end
--]]

function UIGolloesCardsCell:PlayDefaultAnim()
    --self.cellAnim:Play("V_ui_UIGolloesCardsCell_default",0,0)
end

function UIGolloesCardsCell:PlayAnim(reward,previewRw)
    --展示当前奖励
    self:PlayAnimFanPai()
    self.previewRw = previewRw
    self.state = false
    
    self.delayTimeCell2 = TimerManager:GetInstance():DelayInvoke(function()
        self:RefreshReward(reward,true)
    end, 0.5)
end

function UIGolloesCardsCell:OnClickGo()
    if self.callback then
        self.callback(self.index,self._icon_img)
    end
end

function UIGolloesCardsCell:ClearTime()
    if self.delayTimeCell then
        self.delayTimeCell:Stop()
        self.delayTimeCell = nil
    end
    if self.delayTimeCell1 then
        self.delayTimeCell1:Stop()
        self.delayTimeCell1 = nil
    end
    if self.delayTimeCell2 then
        self.delayTimeCell2:Stop()
        self.delayTimeCell2 = nil
    end
end

return UIGolloesCardsCell