---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2023/9/12 15:21
---
local UIEdenCrossWar = BaseClass("UIEdenCrossWar", UIBaseContainer)
local EdenCrossRank = require "UI.UIActivityCenterTable.Component.EdenCrossWar.EdenCrossRank"
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization

local title_path = "Root/Title"
local info_path = "Root/Title/Info"
local date_path = "Root/Date"
local des_path = "Root/cdTip"
local group_des_path = "Root/showDes"
local attackBtn_path = "Root/attackBtn"
local attackBtnTxt_path = "Root/attackBtn/attackTxt"
local rank_obj_path = "Root/Rect_AllianceRank"
local TabCount = 3

local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

local function OnDestroy(self)
    self:DeleteTimer()
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function ComponentDefine(self)
    self.title_text = self:AddComponent(UIText, title_path)
    self.info_btn = self:AddComponent(UIButton, info_path)
    self.info_btn:SetOnClick(function()
        self:OnInfoClick()
    end)
    self.date_text = self:AddComponent(UIText, date_path)
    self.des = self:AddComponent(UIText,des_path)
    self.group_des = self:AddComponent(UIText,group_des_path)
    self.group_des:SetLocalText(111214)
    self.attackBtnN = self:AddComponent(UIButton, attackBtn_path)
    self.attackBtnN:SetOnClick(function()
        self:OnClickAttackBtn()
    end)
    self.attackBtnTxtN = self:AddComponent(UIText, attackBtnTxt_path)
    self._allianceRank_rect = self:AddComponent(EdenCrossRank,rank_obj_path)
    self.timer = nil
    self.timer_action = function(temp)
        self:RefreshTime()
    end
    self.endTime = 0
end

local function ComponentDestroy(self)

end

local function DataDefine(self)
end

local function DataDestroy(self)

end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.GetEdenCrossWarGroupData, self.GetGroupData)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
    self:RemoveUIListener(EventId.GetEdenCrossWarGroupData, self.GetGroupData)
end

local function GetGroupData(self)
    self.getGroupData = true
end
local function SetData(self, actId)
    self.actId = actId
    self.endTime = 0
    self.bindActivityType = nil
    self.getGroupData = false
    DataCenter.ActivityListDataManager:SetActivityVisitedEndTime(self.actId)
    self.actData = DataCenter.ActivityListDataManager:GetActivityDataById(actId)
    self.title_text:SetLocalText(self.actData.name)
    self.des:SetLocalText(self.actData.desc_info)
    self:RefreshData()
    if self.bindActivityType == ActivityEnum.ActivityType.EdenAllianceActMine then
        SFSNetwork.SendMessage(MsgDefines.GetEdenAllianceDuelServer)
    elseif self.bindActivityType == ActivityEnum.ActivityType.EdenAllianceCrossActMine then
        SFSNetwork.SendMessage(MsgDefines.GetEdenMineMatchServer)
    end
end
local function RefreshTime(self)
    if self.endTime >0 then
        local curTime = UITimeManager:GetInstance():GetServerTime()
        local deltaTime = self.endTime - curTime
        if deltaTime>0 then
            if self.showJump then
                self.date_text:SetText(Localization:GetString("372112",UITimeManager:GetInstance():MilliSecondToFmtString(deltaTime)))
            else
                self.date_text:SetText(Localization:GetString("372111",UITimeManager:GetInstance():MilliSecondToFmtString(deltaTime)))
            end
        else
            self:DeleteTimer()
            self:RefreshData()
        end
    end
    
    
end
local function RefreshData(self)
    if self.actData~=nil then
        local showTime = self.actData.showEdenCrossWarTime
        local curTime = UITimeManager:GetInstance():GetServerTime()
        local showButton = true
        --if showTime>0 then
            --if curTime<showTime then
                --showButton = false
            --end
        --end
        self.attackBtnN:SetActive(showButton)
        self.group_des:SetActive(showButton == false)
        self.showJump = false
        self.endTime = 0
        self.bindActivityType = nil
        self.date_text:SetLocalText(370100)
        local actData = self:SelectBindActivity()
        if actData~=nil then
            if curTime>actData.startTime and curTime<actData.endTime then
                self.endTime = actData.endTime
                self.showJump = true
            else
                self.endTime = actData.startTime
            end
        end
        if LuaEntry.Player:IsInAlliance() then
            if self.showJump == true then
                self.attackBtnTxtN:SetLocalText(100150)
            else
                self.attackBtnTxtN:SetLocalText(302806)
            end
        else
            self.attackBtnTxtN:SetLocalText(390079)
        end
        if self.endTime>0 then
            self:AddTimer()
            self:RefreshTime()
        end
        if self.showJump ==true and self.bindActivityType == ActivityEnum.ActivityType.EdenAllianceCrossActMine then
            self._allianceRank_rect:SetActive(true)
            self._allianceRank_rect:SetData()
        else
            self._allianceRank_rect:SetActive(false)
        end
    end
end

local function SelectBindActivity(self)
    local actData1 = nil
    local dataList = DataCenter.ActivityListDataManager:GetActivityDataByType(ActivityEnum.ActivityType.EdenAllianceActMine)
    if table.count(dataList) > 0 then
        actData1 = dataList[1]
    end
    local actData2 = nil
    dataList = DataCenter.ActivityListDataManager:GetActivityDataByType(ActivityEnum.ActivityType.EdenAllianceCrossActMine)
    if table.count(dataList) > 0 then
        actData2 = dataList[1]
    end
    if actData1~=nil and actData2~=nil then
        if UITimeManager:GetInstance():CheckIfIsSameWeek(actData1.startTime) then
            self.bindActivityType = ActivityEnum.ActivityType.EdenAllianceActMine
            return actData1
        elseif UITimeManager:GetInstance():CheckIfIsSameWeek(actData2.startTime) then
            self.bindActivityType = ActivityEnum.ActivityType.EdenAllianceCrossActMine
            return actData2
        end
    elseif actData1~=nil then
        if UITimeManager:GetInstance():CheckIfIsSameWeek(actData1.startTime) then
            self.bindActivityType = ActivityEnum.ActivityType.EdenAllianceActMine
            return actData1
        end
    elseif actData2~=nil then
        if UITimeManager:GetInstance():CheckIfIsSameWeek(actData2.startTime) then
            self.bindActivityType = ActivityEnum.ActivityType.EdenAllianceCrossActMine
            return actData2
            
        end
    end
    return nil
end

local function OnInfoClick(self)
    UIUtil.ShowIntro(Localization:GetString("100239"), "", Localization:GetString(self.actData.story))
end


local function DeleteTimer(self)
    if self.timer ~= nil then
        self.timer:Stop()
        self.timer = nil
    end
end

local function AddTimer(self)
    if self.timer == nil then
        self.timer = TimerManager:GetInstance():GetTimer(1, self.timer_action , self, false,false,false)
    end

    self.timer:Start()
end

local function OnClickAttackBtn(self)
    if LuaEntry.Player:IsInAlliance()==false then
        GoToUtil.GotoOpenView(UIWindowNames.UIAllianceIntro)
        return
    end
    if self.getGroupData == true then
        if self.showJump == true then
            if self.bindActivityType == ActivityEnum.ActivityType.EdenAllianceActMine then
                if LuaEntry.Player.serverType == ServerType.EDEN_SERVER and LuaEntry.Player:IsInCrossFight() then
                    local curTime = UITimeManager:GetInstance():GetServerTime()
                    local startTime = LuaEntry.Player:GetEdenCoolDownTime()
                    local addTime = 0
                    local configTime = LuaEntry.DataConfig:TryGetNum("eden_activity_config", "k1")
                    if configTime~=nil then
                        addTime = configTime*1000
                    end
                    local endTime = addTime+startTime
                    if endTime>curTime then
                        UIUtil.ShowTipsId(111211)
                    else
                        UIUtil.ShowMessage(Localization:GetString("111216"), 1, GameDialogDefine.CONFIRM, GameDialogDefine.CANCEL, function()
                            SFSNetwork.SendMessage(MsgDefines.MoveCrossServer,LuaEntry.Player.crossFightSrcServerId,0, 2)
                            Setting:SetPrivateBool("ForCrossWarEdenToNormal",true)
                            EventManager:GetInstance():Broadcast(EventId.OnSetEdenUI,UISetEdenType.Open)
                        end)
                    end
                    return
                else
                    UIManager:GetInstance():OpenWindow(UIWindowNames.UIEdenCrossGroup,1,self.bindActivityType)
                end
            elseif self.bindActivityType == ActivityEnum.ActivityType.EdenAllianceCrossActMine then
                if LuaEntry.Player.serverType == ServerType.NORMAL then
                    local curTime = UITimeManager:GetInstance():GetServerTime()
                    local startTime = LuaEntry.Player:GetEdenCoolDownTime()
                    local addTime = 0
                    local configTime = LuaEntry.DataConfig:TryGetNum("eden_activity_config", "k1")
                    if configTime~=nil then
                        addTime = configTime*1000
                    end
                    local endTime = addTime+startTime
                    if endTime>curTime then
                        UIUtil.ShowTipsId(111211)
                    else
                        local dataInfo = DataCenter.RobotWarsManager:GetActivityInfo()
                        if dataInfo ~=nil then
                            if dataInfo.edenMatch and dataInfo.edenMatch.targetServer and dataInfo.edenMatch.targetServer ~= 0 then
                                local targetServer = dataInfo.edenMatch.targetServer
                                UIUtil.ShowMessage(Localization:GetString("374032"), 1, GameDialogDefine.CONFIRM, GameDialogDefine.CANCEL, function()
                                    SFSNetwork.SendMessage(MsgDefines.MoveCrossServer,targetServer,0, 2)
                                    Setting:SetPrivateBool("ForCrossWarEdenToNormal",true)
                                    EventManager:GetInstance():Broadcast(EventId.OnSetEdenUI,UISetEdenType.Open)
                                end)
                            end
                        end
                    end
                    return
                else
                    UIManager:GetInstance():OpenWindow(UIWindowNames.UIEdenCrossGroup,1,self.bindActivityType)
                end
            end

        else
            UIManager:GetInstance():OpenWindow(UIWindowNames.UIEdenCrossGroup,0,self.bindActivityType)
        end
    else
        UIUtil.ShowTipsId(374034)
    end
end

UIEdenCrossWar.OnCreate = OnCreate
UIEdenCrossWar.OnDestroy = OnDestroy
UIEdenCrossWar.OnEnable = OnEnable
UIEdenCrossWar.OnDisable = OnDisable
UIEdenCrossWar.ComponentDefine = ComponentDefine
UIEdenCrossWar.ComponentDestroy = ComponentDestroy
UIEdenCrossWar.DataDefine = DataDefine
UIEdenCrossWar.DataDestroy = DataDestroy
UIEdenCrossWar.OnAddListener = OnAddListener
UIEdenCrossWar.OnRemoveListener = OnRemoveListener
UIEdenCrossWar.RefreshTime =RefreshTime
UIEdenCrossWar.RefreshData = RefreshData
UIEdenCrossWar.AddTimer =AddTimer
UIEdenCrossWar.SetData = SetData
UIEdenCrossWar.OnInfoClick = OnInfoClick
UIEdenCrossWar.DeleteTimer = DeleteTimer
UIEdenCrossWar.OnClickAttackBtn =OnClickAttackBtn
UIEdenCrossWar.SelectBindActivity= SelectBindActivity
UIEdenCrossWar.GetGroupData= GetGroupData
return UIEdenCrossWar