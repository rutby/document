---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zzl.
--- DateTime: 
---

local SevenLoginCell = BaseClass("SevenLoginCell", UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization
local UIHeroTipsView = require "UI.UIHeroTips.View.UIHeroTipsView"
function SevenLoginCell:OnCreate()
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
end

function SevenLoginCell:OnDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

function SevenLoginCell:ComponentDefine()
    
    self._this_rect = self:AddComponent(UIBaseContainer,"")
    self._bg_rect = self:AddComponent(UIBaseContainer,"Rect_Bg")
    self.anim = self:AddComponent(UIAnimator,"")
    
    self.itemIcon = self:AddComponent(UIImage, "Rect_Bg/Icon")
    self.numTxt = self:AddComponent(UITextMeshProUGUIEx, "Rect_Bg/Icon/numTxt")
    self.itemIconBtn = self:AddComponent(UIButton, "Rect_Bg/Icon")
    self.itemIconBtn:SetOnClick(function()
        self:OnClickItemIconBtn()
    end)
    
    self._day_txt = self:AddComponent(UITextMeshProUGUIEx,"Rect_Bg/Txt_Day")
    
    self._hero_btn = self:AddComponent(UIButton,"Rect_Bg/hero")
    self._hero_btn:SetOnClick(function()
        self:OnClickHero()
    end)
    
    self._receive_img = self:AddComponent(UIImage,"Rect_Bg/Img_Receive")
    self.mask = self:AddComponent(UIBaseContainer, "Rect_Bg/mask")
    self.select = self:AddComponent(UIBaseContainer, "Rect_Bg/select")
end

function SevenLoginCell:DataDefine()

end

function SevenLoginCell:DataDestroy()
    if self.backModels~=nil then
        self:GameObjectDestroy(self.backModels)
    end
    if self.frontModels ~= nil then
        self:GameObjectDestroy(self.frontModels)
    end
    if self.receModels ~= nil then
        self:GameObjectDestroy(self.receModels)
    end
end

function SevenLoginCell:ReInit(param,specialDay)
    self.param = param
    self._day_txt:SetLocalText(372099,param.day)
    self._receive_img:SetActive(param.state == 1)
    self.path = nil
    self.frontPath = nil
    self.receive_effect_path = nil
    local str = string.split(specialDay,";")
    local isSpecialDay = false
    for i = 1 ,table.count(str) do
        if tonumber(str[i]) == param.day then
            isSpecialDay = true
        end
    end
    if param.reward[1].rewardType == RewardType.HERO then
        self._hero_btn:SetActive(true)
        --self.commonRes:SetActive(false)
        self.itemIcon:SetActive(false)
        self.numTxt:SetActive(false)
        local rarity = GetTableData(HeroUtils.GetHeroXmlName(), param.reward[1].itemId, 'rarity')
        --self._hero_btn:LoadSprite(HeroUtils.GetHeroIconPath(param.reward[1].itemId,true))
        if param.state == 1 then
            --self._receiveHero_img:SetActive(true)
        end
        if rarity == 1 then
            self._day_txt:SetColorRGBA(0.6156863,0.282353,0.1176471,1)
            self.path = UIAssets.SevenLoginCellOrBack
            self.frontPath = UIAssets.SevenLoginCellOrFront
            self.receive_effect_path = UIAssets.SevenLoginCellOrRece
        else
            self._day_txt:SetColorRGBA(0.4431373,0.1137255,0.6901961,1)
            self.path = UIAssets.SevenLoginCellPuBack
            self.frontPath = UIAssets.SevenLoginCellPuFront
            self.receive_effect_path = UIAssets.SevenLoginCellPuRece
        end
    else
        if isSpecialDay then
            if param.reward[1].rewardType == RewardType.GOODS then
                local goods = DataCenter.ItemTemplateManager:GetItemTemplate(param.reward[1].itemId)
                if goods then
                    if goods.color == ItemColor.PURPLE then
                        self.path = UIAssets.SevenLoginCellPuBack
                        self.frontPath = UIAssets.SevenLoginCellPuFront
                        self.receive_effect_path = UIAssets.SevenLoginCellPuRece
                        self._day_txt:SetColorRGBA(0.4431373,0.1137255,0.6901961,1)
                    elseif goods.color == ItemColor.ORANGE then
                        self.path = UIAssets.SevenLoginCellOrBack
                        self.frontPath = UIAssets.SevenLoginCellOrFront
                        self.receive_effect_path = UIAssets.SevenLoginCellOrRece
                        self._day_txt:SetColorRGBA(0.6156863,0.282353,0.1176471,1)
                    end
                end
            end
        else
            self._day_txt:SetColorRGBA(0.8352941,0.4156863,0.2313726,1)
            self.receive_effect_path = UIAssets.SevenLoginCellNo
        end
        self._hero_btn:SetActive(false)
        self.itemIcon:SetActive(true)
        self.numTxt:SetActive(true)
        local iconPath = DataCenter.RewardManager:GetPicByType(param.reward[1].rewardType, param.reward[1].itemId)
        self.itemIcon:LoadSprite(iconPath)
        if param.reward[1].count ~= nil then
            self.numTxt:SetText("x"..param.reward[1].count)
        end
    end
    if self.backModels~=nil then
        self:GameObjectDestroy(self.backModels)
    end
    if self.frontModels ~= nil then
        self:GameObjectDestroy(self.frontModels)
    end
    if self.receModels ~= nil then
        self:GameObjectDestroy(self.receModels)
    end
    self.select:SetActive(false)
    
    self.anim:Play("V_ui_sevenlogin_default",0,0)
end

function SevenLoginCell:CreateEffect()
    if self.param.state == 1 then
        return
    end
    --if self.path then
    --    self.backModels = self:GameObjectInstantiateAsync(self.path, function(request)
    --        if request.isError then
    --            return
    --        end
    --        local go = request.gameObject;
    --        if go == nil then
    --            return
    --        end
    --        go.transform:SetParent(self._bg_rect.transform)
    --        go.transform:Set_localScale(1,1,1)
    --        go.transform:Set_localPosition(0, 0,0)
    --        go.name ="itemBack" ..self.param.day
    --        go.transform:SetAsFirstSibling()
    --    end)
    --    if self.frontPath then
    --        self.frontModels = self:GameObjectInstantiateAsync(self.frontPath, function(request)
    --            if request.isError then
    --                return
    --            end
    --            local go = request.gameObject;
    --            if go == nil then
    --                return
    --            end
    --            go.transform:SetParent(self._bg_rect.transform)
    --            go.transform:Set_localScale(1,1,1)
    --            go.transform:Set_localPosition(0,24,0)
    --            go.name ="itemFront" ..self.param.day
    --            go.transform:SetAsLastSibling()
    --        end)
    --    end
    --    self.anim:Play("V_ui_sevenlogin_fudong",0,0)
    --end
end

function SevenLoginCell:CreateReceiveEffect()
    self.select:SetActive(true)
    
    --if self.receive_effect_path then
    --    self.receModels = self:GameObjectInstantiateAsync(self.receive_effect_path, function(request)
    --        if request.isError then
    --            return
    --        end
    --        local go = request.gameObject;
    --        if go == nil then
    --            return
    --        end
    --        go.transform:SetParent(self._bg_rect.transform)
    --        go.transform:Set_localScale(1,1,1)
    --        go.transform:Set_localPosition(0,0,0)
    --        go.name ="itemRece" ..self.param.day
    --        go.transform:SetAsFirstSibling()
    --    end)
    --end
end

function SevenLoginCell:ShowUnLockMask(value)
    self.mask:SetActive(value)
end

function SevenLoginCell:OnClickHero()
    local heroId = self.param.reward[1].itemId
    local heroConfig = LocalController:instance():getLine(HeroUtils.GetHeroXmlName(), tonumber(heroId))
    local param = UIHeroTipsView.Param.New()
    param.heroId = heroId
    param.title = Localization:GetString(heroConfig.name)
    param.content = Localization:GetString(heroConfig.brief_desc)
    param.dir = UIHeroTipsView.Direction.ABOVE
    param.defWidth = 220
    param.pivot = 0.5
    param.position = self.transform.position + Vector3.New(0, 120, 0)
    param.bindObject = self.gameObject
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIHeroTips, { anim = false }, param)
end

function SevenLoginCell : OnClickItemIconBtn()
    local rewardParam = self.param.reward[1]
    if rewardParam.rewardType == RewardType.GOODS then
        if rewardParam.showSpecialHeroRecruitItemTip == true and DataCenter.LotteryDataManager:IsShowRecruitItemIntro(tostring(rewardParam.itemId)) then
            local para = DeepCopy(rewardParam)
            para.item_icon = self.itemIcon
            UIManager:GetInstance():OpenWindow(UIWindowNames.UISeasonRecruitItemIntro, tostring(rewardParam.itemId), para)
            return
        end
        if rewardParam.itemId ~= nil then
            local param = {}
            param["itemId"] = rewardParam.itemId
            param["alignObject"] = self.itemIcon
            UIManager:GetInstance():OpenWindow(UIWindowNames.UIItemTips,{anim = true}, param)
        elseif rewardParam.iconName ~= nil then
            local param = {}
            param["itemName"] = rewardParam.itemName
            if rewardParam.itemDesc then
                param["itemDesc"] = rewardParam.itemDesc
                param["alignObject"] = self.itemIcon
                UIManager:GetInstance():OpenWindow(UIWindowNames.UIItemTips,{anim = true}, param)
            end
        end
    elseif rewardParam.rewardType == RewardType.UnlockModule then
        local param = {}
        param.itemName = rewardParam.itemName
        param.itemDesc = rewardParam.itemDesc
        param["alignObject"] = self.itemIcon
        param.isLocal = false
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIItemTips,{anim = true}, param)
    else
        local desc = DataCenter.RewardManager:GetDescByType(rewardParam.rewardType, rewardParam.itemId)
        local name = DataCenter.RewardManager:GetNameByType(rewardParam.rewardType, rewardParam.itemId)
        local param = {}
        param["itemName"] = name
        param["itemDesc"] = desc
        param["alignObject"] = self.itemIcon
        param.isLocal = true

        UIManager:GetInstance():OpenWindow(UIWindowNames.UIItemTips,{anim = true}, param)
    end
end

return SevenLoginCell