---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2022/8/15 16:31
---ActivityTabGroupCell

local ActivityTabGroupCell = BaseClass("ActivityTabGroupCell",UIBaseContainer)
local ActivityListItem = require "UI.UIActivityCenterTable.Component.ActivityListItem"
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization

local title_path = "groupName/groupName"
local tabContainer_path = "activityContainer"

local function OnCreate(self,id)
    base.OnCreate(self)
    
    self.groupTitle = ""
    
    self.titleN = self:AddComponent(UITextMeshProUGUIEx, title_path)
    self.tabContainerN = self:AddComponent(UIBaseContainer, tabContainer_path)
end
local function OnDestroy(self)
    self:SetAllCellDestroy()
    self.titleN = nil
    self.tabContainerN = nil
    
    self.groupId = nil
    
    base.OnDestroy(self)
end


local function OnAddListener(self)
    base.OnAddListener(self)
    --self:AddUIListener(EventId.MSG_FRESH_SURVIVAL_VIEW_GET, self.RefreshSurvivalItemState)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
    --self:RemoveUIListener(EventId.MSG_FRESH_SURVIVAL_VIEW_GET, self.RefreshSurvivalItemState)
end

local function RefreshGroup(self, group)
    self.groupId = group.tabGroup
    self.activityList = group.activityList
    
    self.titleN:SetLocalText(self.groupId)
    
    self:RefreshTabs()
end

local function RefreshTabs(self)
    self:SetAllCellDestroy()

    self.modelTabs = {}
    self.tabItems = {}
    for i, v in ipairs(self.activityList) do
        local activityId = v.id
        self.modelTabs[activityId] = self:GameObjectInstantiateAsync(UIAssets.UIActivityListItem, function(request)
            if request.isError then
                return
            end
            local go = request.gameObject;
            go.gameObject:SetActive(true)
            go.transform:SetParent(self.tabContainerN.transform)
            go.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
            go.name = activityId
            local cell = self.tabContainerN:AddComponent(ActivityListItem,go.name,activityId)
            cell:SetData()
            self.tabItems[activityId] = cell
            if table.count(self.tabItems) == #self.activityList then
                self.view:OnGroupCellLoadFinish()
            end
        end)
    end
end

local function SetAllCellDestroy(self)
    self.tabContainerN:RemoveComponents(ActivityListItem)
    if self.modelTabs~=nil then
        for k,v in pairs(self.modelTabs) do
            if v ~= nil then
                self:GameObjectDestroy(v)
            end
        end
    end
end

local function SelectTab(self, actId)
    if self.tabItems[actId] then
        self.tabItems[actId]:OnClick()
    end
end

local function SetUnSelect(self, id)
    self.tabItems[id]:SetUnSelect()
end

local function SetSelect(self, id)
    self.tabItems[id]:SetSelect()
end


ActivityTabGroupCell.OnCreate = OnCreate
ActivityTabGroupCell.OnDestroy = OnDestroy
ActivityTabGroupCell.OnAddListener = OnAddListener
ActivityTabGroupCell.OnRemoveListener = OnRemoveListener

ActivityTabGroupCell.RefreshGroup = RefreshGroup
ActivityTabGroupCell.RefreshTabs = RefreshTabs
ActivityTabGroupCell.SelectTab = SelectTab
ActivityTabGroupCell.SetAllCellDestroy = SetAllCellDestroy
ActivityTabGroupCell.SetUnSelect = SetUnSelect
ActivityTabGroupCell.SetSelect = SetSelect

return ActivityTabGroupCell