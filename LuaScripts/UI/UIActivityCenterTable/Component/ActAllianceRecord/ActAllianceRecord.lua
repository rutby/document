---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2023/10/8 17:54
---
local ActAllianceRecord = BaseClass("ActAllianceRecord", UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization

local title_path = "safeArea/title"
local info_path = "safeArea/Info"
local title_1_path= "safeArea/title1"
local midLayer1_path = "safeArea/middleLayer1"
local box_btn_path = "safeArea/ImageIcon"
local date_path = "safeArea/middleLayer1/EndTime"
local timeDesc_path = "safeArea/middleLayer1/layout/timeDesc"
local des_path = "safeArea/middleLayer1/des"
local attackBtn_path = "safeArea/middleLayer1/jumpBtn"
local attackBtnTxt_path = "safeArea/middleLayer1/jumpBtn/jumpBtnTxt"
local midLayer2_path = "safeArea/middleLayer2"
local des_2_path = "safeArea/middleLayer2/des2"
local record_btn_path = "safeArea/Group_Button/recordBtn"
local record_txt_path = "safeArea/Group_Button/recordBtn/recordBtnTxt"
local reward_btn_path = "safeArea/Group_Button/rewardBtn"
local reward_txt_path = "safeArea/Group_Button/rewardBtn/rewardBtnTxt"
local cur_btn_path = "safeArea/Group_Button/curBtn"
local cur_txt_path = "safeArea/Group_Button/curBtn/curBtn_text"
local red_dot_path = "safeArea/Group_Button/curBtn/curBtn_redPoint"
local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

local function OnDestroy(self)
    self:DeleteTimer()
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function ComponentDefine(self)
    self.title_text = self:AddComponent(UITextMeshProUGUIEx, title_path)
    self.info_btn = self:AddComponent(UIButton, info_path)
    self.info_btn:SetOnClick(function()
        self:OnInfoClick()
    end)
    self.title_1_text = self:AddComponent(UITextMeshProUGUIEx, title_1_path)
    self.midLayer1 = self:AddComponent(UIBaseContainer, midLayer1_path)
    self.midLayer2 = self:AddComponent(UIBaseContainer, midLayer2_path)
    self.date_text = self:AddComponent(UITextMeshProUGUIEx, date_path)
    self.timeDesc = self:AddComponent(UITextMeshProUGUIEx, timeDesc_path)
    self.timeDesc:SetLocalText(300648)
    self.des = self:AddComponent(UITextMeshProUGUIEx,des_path)
    self.des_2 = self:AddComponent(UITextMeshProUGUIEx,des_2_path)
    self.des_2:SetLocalText(111242)
    self.attackBtnN = self:AddComponent(UIButton, attackBtn_path)
    self.attackBtnN:SetOnClick(function()
        self:OnClickAttackBtn()
    end)
    self.attackBtnTxtN = self:AddComponent(UITextMeshProUGUIEx, attackBtnTxt_path)
    self.attackBtnTxtN:SetLocalText(110003)
    self.record_btn = self:AddComponent(UIButton, record_btn_path)
    self.record_btn:SetOnClick(function()
        self:OnClickRecordBtn()
    end)
    self.record_txt = self:AddComponent(UITextMeshProUGUIEx, record_txt_path)
    self.record_txt:SetLocalText(111238)
    self.reward_btn = self:AddComponent(UIButton, reward_btn_path)
    self.reward_btn:SetOnClick(function()
        self:OnClickRewardBtn()
    end)
    self.reward_txt = self:AddComponent(UITextMeshProUGUIEx, reward_txt_path)
    self.reward_txt:SetLocalText(111239)
    self.cur_btn = self:AddComponent(UIButton, cur_btn_path)
    self.cur_btn:SetOnClick(function()
        self:OnClickCurBtn()
    end)
    self.cur_txt = self:AddComponent(UITextMeshProUGUIEx, cur_txt_path)
    self.cur_txt:SetLocalText(111243)
    self.red_dot = self:AddComponent(UIBaseContainer, red_dot_path)
    self.red_dot:SetActive(false)
    self.box_btn = self:AddComponent(UIButton, box_btn_path)
    self.box_btn:SetOnClick(function()
        self:OnClickBoxBtn()
    end)
    self.timer = nil
    self.timer_action = function(temp)
        self:RefreshTime()
    end
    self.endTime = 0
end

local function ComponentDestroy(self)

end

local function DataDefine(self)
end

local function DataDestroy(self)

end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.WorldAllianceCityDetail, self.SetRewardState)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
    self:RemoveUIListener(EventId.WorldAllianceCityDetail, self.SetRewardState)
end
local function SetRewardState(self)
    self.isFirst = false
    local cityDetail = DataCenter.WorldPointDetailManager:GetAllianceCityData(self.cityId)
    if cityDetail~=nil and cityDetail.firstOccupyInfo == nil then
        local cityInfo = DataCenter.WorldAllianceCityDataManager:GetAllianceCityDataByCityId(self.cityId)
        if cityInfo == nil then
            self.isFirst = true
        end
    end
end
local function SetData(self, actId)
    self.actId = actId
    self.endTime = 0
    self.pos = nil
    self.cityId = 0
    self.isFirst = false
    self.isDeclare = false
    self.red_dot:SetActive(DataCenter.WorldAllianceCityRecordManager:GetNeedShowState())
    SFSNetwork.SendMessage(MsgDefines.GetAllianceCityKillRank)
    DataCenter.ActivityListDataManager:SetActivityVisitedEndTime(self.actId)
    self.actData = DataCenter.ActivityListDataManager:GetActivityDataById(actId)
    self.title_text:SetLocalText(self.actData.name)
    self.title_1_text:SetLocalText(self.actData.desc_info)
    self:RefreshData()
end
local function RefreshTime(self)
    if self.endTime >0 then
        local curTime = UITimeManager:GetInstance():GetServerTime()
        local deltaTime = self.endTime - curTime
        if deltaTime>0 then
            self.date_text:SetText(UITimeManager:GetInstance():MilliSecondToFmtString(deltaTime))
        else
            self:DeleteTimer()
            self:RefreshData()
        end
    end
end
local function RefreshData(self)
    self.endTime = 0
    self.pos = nil
    self.cityId = 0
    self.isFirst = false
    self.isDeclare = false
    if self.actData~=nil then
        local data = DataCenter.AllianceDeclareWarManager:GetSelfDeclareWarData()
        if data then
            local curTime = UITimeManager:GetInstance():GetServerTime()
            local endTime = tonumber(data.et)
            if curTime < endTime then
                self.isDeclare = true
                local cityId = tonumber(data.content)
                self.cityId = cityId
                local template = DataCenter.AllianceCityTemplateManager:GetTemplate(cityId)
                if template~=nil then
                    SFSNetwork.SendMessage(MsgDefines.WorldGetAllianceCityDetail,cityId,LuaEntry.Player:GetSelfServerId())
                    self.endTime = endTime
                    local pos = template.pos
                    self.pos = template.center
                    local level = template.level
                    local name = template.name
                    local str = Localization:GetString("111240",Localization:GetString("310128", level, Localization:GetString(name)),"("..pos.x..","..pos.y..")")
                    self.des:SetText(str)
                end
            end
        end
        if self.endTime>0 then
            self.midLayer1:SetActive(true)
            self.midLayer2:SetActive(false)
            self:AddTimer()
            self:RefreshTime()
        else
            self.midLayer2:SetActive(true)
            self.midLayer1:SetActive(false)
        end
    end
end

local function OnInfoClick(self)
    UIUtil.ShowIntro(Localization:GetString("100239"), "", Localization:GetString(self.actData.story))
end


local function DeleteTimer(self)
    if self.timer ~= nil then
        self.timer:Stop()
        self.timer = nil
    end
end

local function AddTimer(self)
    if self.timer == nil then
        self.timer = TimerManager:GetInstance():GetTimer(1, self.timer_action , self, false,false,false)
    end

    self.timer:Start()
end

local function OnClickAttackBtn(self)
    if self.pos~=nil then
        local position = SceneUtils.TileToWorld(self.pos, ForceChangeScene.World)
        GoToUtil.CloseAllWindows()
        GoToUtil.GotoWorldPos(position,nil,nil,function()
            WorldArrowManager:GetInstance():ShowArrowEffect(0,position,ArrowType.Building)
        end)
        
    end
end


local function OnClickRecordBtn(self)
    local list = DataCenter.WorldAllianceCityRecordManager:GetRecordList()
    if list~=nil and #list>0 then
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIRuinsHistoryRecord,{anim = true,isBlur = true})
    else
        UIUtil.ShowTipsId(111258)
    end
    
end
local function OnClickRewardBtn(self)
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIRuinsRewardPreview,{anim = true,isBlur = true})
end
local function OnClickCurBtn(self)
    local RankData = DataCenter.WorldAllianceCityRecordManager:GetLatestRecord()
    if RankData~=nil then
        local uuid = RankData.uuid
        DataCenter.WorldAllianceCityRecordManager:OnClickRankView(RankData.time)
        self.red_dot:SetActive(false)
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIRuinsRankDetail,{anim = true,isBlur = true},uuid,true)
    else
        UIUtil.ShowTipsId(111258)
    end
end
local function OnClickBoxBtn(self)
    if self.isDeclare == false then
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIRuinsRewardPreview,{anim = true,isBlur = true})
        return
    end
    if self.isFirst ==false then
        UIUtil.ShowTipsId(111256)
        return
    end
    if self.cityId~=nil and self.cityId>0 then
        local level = GetTableData(TableName.WorldCity, self.cityId, "level")
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIRuinRewardDetail,{anim = true,isBlur = true},level,self.cityId)
        --local x = self.box_btn.transform.position.x
        --local y = self.box_btn.transform.position.y
        --local isLeft = true
        --UIManager:GetInstance():OpenWindow(UIWindowNames.UIRuinRewardTip,self.cityId,x,y,isLeft)
    else
        UIUtil.ShowTipsId(111259)
    end
    
end
ActAllianceRecord.OnCreate = OnCreate
ActAllianceRecord.OnDestroy = OnDestroy
ActAllianceRecord.OnEnable = OnEnable
ActAllianceRecord.OnDisable = OnDisable
ActAllianceRecord.ComponentDefine = ComponentDefine
ActAllianceRecord.ComponentDestroy = ComponentDestroy
ActAllianceRecord.DataDefine = DataDefine
ActAllianceRecord.DataDestroy = DataDestroy
ActAllianceRecord.OnAddListener = OnAddListener
ActAllianceRecord.OnRemoveListener = OnRemoveListener
ActAllianceRecord.RefreshTime =RefreshTime
ActAllianceRecord.RefreshData = RefreshData
ActAllianceRecord.AddTimer =AddTimer
ActAllianceRecord.SetData = SetData
ActAllianceRecord.OnInfoClick = OnInfoClick
ActAllianceRecord.DeleteTimer = DeleteTimer
ActAllianceRecord.OnClickAttackBtn =OnClickAttackBtn
ActAllianceRecord.OnClickRecordBtn = OnClickRecordBtn
ActAllianceRecord.OnClickRewardBtn = OnClickRewardBtn
ActAllianceRecord.OnClickCurBtn = OnClickCurBtn
ActAllianceRecord.OnClickBoxBtn = OnClickBoxBtn
ActAllianceRecord.SetRewardState= SetRewardState
return ActAllianceRecord