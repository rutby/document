---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2023/1/13 1:01
---SeasonPassPrivilegeItem.lua


local SeasonPassPrivilegeItem = BaseClass("SeasonPassPrivilegeItem", UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization
local RewardUtil = require "Util.RewardUtil"
local UIHeroTipsView = require "UI.UIHeroTips.View.UIHeroTipsView"

local icon_path = "icon"
local name_path = "name"
local desc_path = "desc"
local statusTxt_path = "status"
local extraCount_path = "icon/count"
local claimBtn_path = "claimBtn"
local claimBtnTxt_path = "claimBtn/claimBtnTxt"
local infoBtn_path = "infoBtn"

-- 创建
local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

-- 销毁
local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

--控件的定义
local function ComponentDefine(self)
    self.iconN = self:AddComponent(UIImage, icon_path)
    self.nameN = self:AddComponent(UIText, name_path)
    self.descN = self:AddComponent(UIText, desc_path)
    self.statusN = self:AddComponent(UIText, statusTxt_path)
    self.extraCountN = self:AddComponent(UIText, extraCount_path)
    self.claimBtnN = self:AddComponent(UIButton, claimBtn_path)
    self.claimBtnN:SetOnClick(function()
        self:OnClickClaimBtn()
    end)
    self.claimBtnTxtN = self:AddComponent(UIText, claimBtnTxt_path)
    self.claimBtnTxtN:SetLocalText(371058)
    self.infoBtnN = self:AddComponent(UIButton, infoBtn_path)
    self.infoBtnN:SetOnClick(function()
        self:OnClickInfoBtn()
    end)
end

--控件的销毁
local function ComponentDestroy(self)

end

--变量的定义
local function DataDefine(self)
    
end

--变量的销毁
local function DataDestroy(self)
    
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.DesertForceRefresh, self.RefreshAll)

end

local function OnRemoveListener(self)
    self:RemoveUIListener(EventId.DesertForceRefresh, self.RefreshAll)
    base.OnRemoveListener(self)
end

local function SetData(self, activityId, reward)
    self.activityId = activityId
    self.curReward = reward
    self.extraAwardType = nil

    local activityInfo = DataCenter.ActivityListDataManager:GetActivityDataById(tostring(self.activityId))
    if activityInfo then
        local strArr = string.split(activityInfo.para1, ";")--金币；水晶
        if strArr then
            if #strArr > 0 and strArr[1] == self.curReward.itemId then
                self.extraAwardType = 1
            elseif #strArr > 1 and strArr[2] == self.curReward.itemId then
                self.extraAwardType = 0
            end
        end
    end

    self:RefreshAll()
end

local function RefreshAll(self)
    if not self.activityId or not self.curReward then
        return
    end
    if IsNull(self.gameObject) then
        return
    end
    
    local icon = RewardUtil.GetPic(RewardType.GOODS, self.curReward.itemId)
    self.iconN:LoadSprite(icon)
    local goods = DataCenter.ItemTemplateManager:GetItemTemplate(self.curReward.itemId)
    self.nameN:SetLocalText(goods.name)
    self.descN:SetLocalText(goods.description)
    --if self.isActived then
    --    self.statusN:SetLocalText(280124)
    --else
    --    self.statusN:SetText(Localization:GetString("300505", self.curReward.level))
    --end
    self:RefreshExtraCount()

    if self.extraAwardType == 1 or self.extraAwardType == 0 then
        self.infoBtnN:SetActive(true)
    else
        self.infoBtnN:SetActive(false)
    end
end

local function RefreshExtraCount(self)
    local count = 0
    local percent = 0
    if self.extraAwardType then
        local extra = DataCenter.SeasonPassManager:GetPrivilegeExtraRewards(self.extraAwardType)
        if extra then
            for i, v in ipairs(extra) do
                count = count + v.count
            end
        end
        if self.extraAwardType == 0 then
            percent = LuaEntry.Effect:GetGameEffect(EffectDefine.GAME_EFFECT_30242)
        elseif self.extraAwardType == 1 then
            percent = LuaEntry.Effect:GetGameEffect(EffectDefine.GAME_EFFECT_30241)
        end
        --if percent > 0 then
        --    local extra = DataCenter.SeasonPassManager:GetPrivilegeExtraRewards(self.extraAwardType)
        --    if extra and extra[1] then
        --        count = math.modf(extra[1].count * percent / 100)
        --    end
        --end
    end
    self.isActived = percent > 0
    if count > 0 then
        self.extraCountN:SetText(string.GetFormattedStr(count))
        if self.isActived then
            self.statusN:SetText("")
            self.claimBtnN:SetActive(true)
        else
            self.statusN:SetText(Localization:GetString("300505", self.curReward.level))
            self.claimBtnN:SetActive(false)
        end
    else
        self.extraCountN:SetText("")
        self.claimBtnN:SetActive(false)
        if self.isActived then
            self.statusN:SetLocalText(280124)
        else
            self.statusN:SetText(Localization:GetString("300505", self.curReward.level))
        end
    end
end

local function OnClickClaimBtn(self)
    if self.extraAwardType then
        SFSNetwork.SendMessage(MsgDefines.SeasonForceGetBattlePassReward, self.extraAwardType)
    end
end

local function OnClickInfoBtn(self)
    local param = UIHeroTipsView.Param.New()
    param.content = Localization:GetString("320632")
    param.dir = UIHeroTipsView.Direction.RIGHT
    param.defWidth = 300
    param.pivot = 0.5
    param.position = self.infoBtnN.transform.position + Vector3.New(20, 0, 0)
    param.bindObject = self.gameObject
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIHeroTips, { anim = false }, param)
end

SeasonPassPrivilegeItem.OnCreate = OnCreate 
SeasonPassPrivilegeItem.OnDestroy = OnDestroy
SeasonPassPrivilegeItem.ComponentDefine = ComponentDefine
SeasonPassPrivilegeItem.ComponentDestroy = ComponentDestroy
SeasonPassPrivilegeItem.DataDefine = DataDefine
SeasonPassPrivilegeItem.DataDestroy = DataDestroy
SeasonPassPrivilegeItem.OnAddListener = OnAddListener
SeasonPassPrivilegeItem.OnRemoveListener = OnRemoveListener

SeasonPassPrivilegeItem.SetData = SetData
SeasonPassPrivilegeItem.RefreshAll = RefreshAll
SeasonPassPrivilegeItem.RefreshExtraCount = RefreshExtraCount
SeasonPassPrivilegeItem.OnClickClaimBtn = OnClickClaimBtn
SeasonPassPrivilegeItem.OnClickInfoBtn = OnClickInfoBtn

return SeasonPassPrivilegeItem