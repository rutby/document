---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by .
--- DateTime:
---
local UIActMineCave = BaseClass("UIActMineCave",UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization

function UIActMineCave:OnCreate()
    base.OnCreate(self)
    self:ComponentDefine()
end

function UIActMineCave:ComponentDefine()
    self._activityName_txt = self:AddComponent(UIText,"rect/Txt_ActivityName")
    self.txt_time = self:AddComponent(UIText,"rect/NotStarted/Txt_Time")

    self.btn = self:AddComponent(UIButton,"rect/Btn_Go")
    self.btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:ClickBtn()
    end)
    self.btn_txt = self:AddComponent(UIText,"rect/Btn_Go/Txt_Go")
    self.btn_txt:SetLocalText(110003)
    self.txt_des1 = self:AddComponent(UIText,"rect/Txt_des1")
    self.txt_des2 = self:AddComponent(UIText,"rect/Txt_des2")
    self.txt_time_des = self:AddComponent(UIText,"rect/Txt_timeDes")
    self._tips_btn = self:AddComponent(UIButton, "rect/Btn_Tips")
    self._tips_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:ClickTip()
    end)

    self.timer = nil
    self.timer_action = function(temp)
        self:RefreshTime()
    end
end

function UIActMineCave:ComponentDestroy()
    self.timer_action = nil
    self:DeleteTimer()
end

function UIActMineCave:OnDestroy()
    self:ComponentDestroy()
    base.OnDestroy(self)
end

function UIActMineCave:OnEnable()
    base.OnEnable(self)
end

function UIActMineCave:OnDisable()
    base.OnDisable(self)
end


function UIActMineCave:SetData(activityId)
    self._activityName_txt:SetLocalText(373110)
    self.txt_des1:SetLocalText(373111)
    self.txt_des2:SetLocalText(373112)
    
    self.data = DataCenter.ActivityListDataManager:GetActivityDataById(activityId)
    if self.data~=nil then
        local startT = UITimeManager:GetInstance():TimeStampToDayForLocal(self.data.startTime)
        local endT = UITimeManager:GetInstance():TimeStampToDayForLocal(self.data.endTime)
        self.txt_time_des:SetText(startT .. "-" .. endT)

        self:AddTimer()
        self:RefreshTime()
    else
        self.txt_time:SetText("")
    end
end

function UIActMineCave:ClickTip()
    UIUtil.ShowIntro(Localization:GetString(self.data.name), Localization:GetString("100239"), Localization:GetString("302196"))
end

function UIActMineCave:ClickBtn()
    DataCenter.DailyActivityManager:JumpToActOverview(ActivityOverviewType.MineCave)
end

function UIActMineCave:DeleteTimer()
    if self.timer ~= nil then
        self.timer:Stop()
        self.timer = nil
    end
end

function UIActMineCave:AddTimer()
    if self.timer == nil then
        self.timer = TimerManager:GetInstance():GetTimer(1, self.timer_action , self, false,false,false)
    end

    self.timer:Start()
end

function UIActMineCave:RefreshTime()
    local curTime = UITimeManager:GetInstance():GetServerTime()
    if self.data.endTime - curTime then
        self.txt_time:SetText(UITimeManager:GetInstance():MilliSecondToFmtString(self.data.endTime - curTime))
    else
        self.txt_time:SetText("")
        self:DeleteTimer()
    end
   
end

return UIActMineCave