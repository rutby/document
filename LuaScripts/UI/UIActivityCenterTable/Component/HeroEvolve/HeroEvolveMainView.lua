---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2023/3/25 14:42
---

local HeroEvolveMainView = BaseClass("HeroEvolveMainView", UIBaseView)
local base = UIBaseView
local HeroEvolveChoose = require "UI.UIActivityCenterTable.Component.HeroEvolve.HeroEvolveChoose.HeroEvolveChoose"
local HeroEvolveHeroInfo = require "UI.UIActivityCenterTable.Component.HeroEvolve.HeroEvolveHeroInfo.HeroEvolveHeroInfo"
local Localization = CS.GameEntry.Localization
local UIHeroTipsView = require "UI.UIHeroTips.View.UIHeroTipsView"
local title_path = "offset/title"
local info_btn_path = "offset/title/infoBtn"
local hero_choose_path = "offset/heroChoose"
local hero_info_path = "offset/heroInfo"

-- 创建
local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
    HeroEvolveController:GetInstance():SetForceShowChoose(false)
    DataCenter.HeroEvolveActivityManager:AutoDoHeroEvolve()
    DataCenter.HeroEvolveActivityManager:SetIsNew()
end

-- 销毁
local function OnDestroy(self)
    HeroEvolveController:GetInstance():SetForceShowChoose(false)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

-- 显示
local function OnEnable(self)
    base.OnEnable(self)
end

-- 隐藏
local function OnDisable(self)
    base.OnDisable(self)
end


local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.HeroEvolveChoose, self.HeroEvolveChooseHandler)
    self:AddUIListener(EventId.HeroEvolveHeroInfoBack, self.HeroEvolveHeroInfoBackHandler)
end


local function OnRemoveListener(self)
    self:RemoveUIListener(EventId.HeroEvolveChoose, self.HeroEvolveChooseHandler)
    self:RemoveUIListener(EventId.HeroEvolveHeroInfoBack, self.HeroEvolveHeroInfoBackHandler)
    base.OnRemoveListener(self)
end

--控件的定义
local function ComponentDefine(self)
    self.titleN = self:AddComponent(UIText, title_path)
    self.infoBtnN = self:AddComponent(UIButton, info_btn_path)
    self.infoBtnN:SetOnClick(function()
        self:OnClickInfoBtn()
    end)
    self.heroChoosePanel = self:AddComponent(HeroEvolveChoose, hero_choose_path)
    
    self.heroInfoPanel = self:AddComponent(HeroEvolveHeroInfo, hero_info_path)
end

--控件的销毁
local function ComponentDestroy(self)
    self:HideHeroChoosePanel()
    self:HideHeroInfoPanel()
end

--变量的定义
local function DataDefine(self)

end

--变量的销毁
local function DataDestroy(self)

end


local function SetData(self, activityId)
    self.activityId = activityId
    self.activityInfo = DataCenter.ActivityListDataManager:GetActivityDataById(tostring(self.activityId))
    if self.activityInfo == nil then
        return
    end
    self:RefreshTitle()
    self:RefreshRight()
end

local function RefreshTitle(self)
    self.titleN:SetText(Localization:GetString(self.activityInfo.name))
end

local function OnClickInfoBtn(self)
    local scaleFactor = UIManager:GetInstance():GetScaleFactor()
    local position = self.infoBtnN.transform.position + Vector3.New(0, -30, 0) * scaleFactor

    local param = UIHeroTipsView.Param.New()
    param.content = Localization:GetString("361096")
    param.dir = UIHeroTipsView.Direction.BELOW
    param.defWidth = 400
    param.pivot = 0.85
    param.position = position
    param.bindObject = self.gameObject
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIHeroTips, { anim = false }, param)

end

local function RefreshRight(self)
    local isChoose = DataCenter.HeroEvolveActivityManager:IsHeroChoose()
    local forceShowChoose = HeroEvolveController:GetInstance():IsForceShowChoose()
    if not forceShowChoose and isChoose then
        self:HideHeroChoosePanel()
        self:RefreshHeroInfoPanel()
    else
        self:HideHeroInfoPanel()
        self:RefreshHeroChoosePanel()
    end
end

local function RefreshHeroChoosePanel(self)
    self.heroChoosePanel:SetActive(true)
    self.heroChoosePanel:SetData(self.activityId)
end

local function HideHeroChoosePanel(self)
    if self.heroChoosePanel ~= nil then
        self.heroChoosePanel:SetActive(false)
    end
end

local function RefreshHeroInfoPanel(self)
    self.heroInfoPanel:SetActive(true)
    self.heroInfoPanel:SetData(self.activityId)
end

local function HideHeroInfoPanel(self)
    if self.heroInfoPanel ~= nil then
        self.heroInfoPanel:SetActive(false)
    end
end

local function HeroEvolveChooseHandler(self)
    self:RefreshRight()
end

local function HeroEvolveHeroInfoBackHandler(self)
    self:RefreshRight()
end

HeroEvolveMainView.RefreshHeroInfoPanel = RefreshHeroInfoPanel
HeroEvolveMainView.HideHeroInfoPanel = HideHeroInfoPanel
HeroEvolveMainView.OnCreate = OnCreate
HeroEvolveMainView.OnDestroy = OnDestroy
HeroEvolveMainView.OnAddListener = OnAddListener
HeroEvolveMainView.OnRemoveListener = OnRemoveListener
HeroEvolveMainView.ComponentDefine = ComponentDefine
HeroEvolveMainView.ComponentDestroy = ComponentDestroy
HeroEvolveMainView.DataDefine = DataDefine
HeroEvolveMainView.DataDestroy = DataDestroy
HeroEvolveMainView.OnEnable = OnEnable
HeroEvolveMainView.OnDisable = OnDisable
HeroEvolveMainView.RefreshTitle = RefreshTitle
HeroEvolveMainView.SetData = SetData
HeroEvolveMainView.OnClickInfoBtn = OnClickInfoBtn
HeroEvolveMainView.RefreshRight = RefreshRight
HeroEvolveMainView.RefreshHeroChoosePanel = RefreshHeroChoosePanel
HeroEvolveMainView.HideHeroChoosePanel = HideHeroChoosePanel
HeroEvolveMainView.HeroEvolveChooseHandler = HeroEvolveChooseHandler
HeroEvolveMainView.HeroEvolveHeroInfoBackHandler = HeroEvolveHeroInfoBackHandler

return HeroEvolveMainView