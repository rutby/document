---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2023/3/25 14:46
---


local HeroSkillTab = BaseClass("HeroSkillTab", UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization
local HeroEvolveSkillIcon = require "UI.UIActivityCenterTable.Component.HeroEvolve.HeroEvolveHeroInfo.Component.HeroEvolveSkillIcon"

local title_text_path = "skillTitle"
local name_text_path = "SkillTextHeroName"
local desc_path = "SkillTextNickName"
local camp_icon_path = "ImgCamp"
local arrow_path = "Root/Arrow"
local skill_count = 5

local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
end

local function ComponentDefine(self)
    self.title_text = self:AddComponent(UIText, title_text_path)
    self.title_text:SetLocalText(161009)

    self.skillDesc = self:AddComponent(UIBaseContainer, "Root")
    self.textSkillName = self:AddComponent(UIText, "Root/TextSkillName")
    self.textSkillType = self:AddComponent(UIText, "Root/TextSkillType")
    self.textSkillDesc = self:AddComponent(UIText, "Root/TextSkillDesc")
    self.textSubTitle2 = self:AddComponent(UIText, "Root/TextSubTitle2")
    self.textEffect    = self:AddComponent(UIText, "Root/TextEffect")

    self.skills = {}
    for i = 1, skill_count do
        local skillIcon = self:AddComponent(HeroEvolveSkillIcon, "SkillContent/Skill"..i)
        table.insert(self.skills, skillIcon)
    end

    self.name_text = self:AddComponent(UIText, name_text_path)
    self.desc = self:AddComponent(UIText, desc_path)
    self.camp_icon = self:AddComponent(UIImage, camp_icon_path)
    self.arrow = self:AddComponent(UIImage, arrow_path)
end

local function ComponentDestroy(self)

end

local function OnDestroy(self)
    self:ComponentDestroy()
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    self:HideSkillDesc()
    base.OnDisable(self)
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.HeroEvolveSkillIconSelect, self.OnSelectEvent)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
    self:RemoveUIListener(EventId.HeroEvolveSkillIconSelect, self.OnSelectEvent)
end

local function SetData(self)
    self.data = HeroEvolveController:GetInstance():GetHeroSkillTabInfo()
    self:RefreshView()
end

local function RefreshView(self)
    self.name_text:SetLocalText(self.data.name)
    self.desc:SetLocalText(self.data.desc)
    self.camp_icon:LoadSprite(self.data.camp_icon)

    self:RefreshSkillIcons()
    self:RefreshSkill()
end

local function OnSelectEvent(self, skillId)
    self.curSelectSkillId = skillId
    self:RefreshSkill()
end

local function HideSkillDesc(self)
    self.curSelectSkillId = nil
    self.skillDesc:SetActive(false)
end

local function RefreshSkill(self)
    self.skillDesc:SetActive(self.curSelectSkillId ~= nil)
    if self.curSelectSkillId == nil then
        return
    end
    --self.arrow
    for k, v in ipairs(self.data.skillList) do
        if v.skillId == self.curSelectSkillId then
            local pos = self.arrow.transform.position
            pos.x = self.skills[k].transform.position.x
            self.arrow.transform.position = pos
            break
        end
    end
    local skillId = self.curSelectSkillId
    local skillLevel = 10
    local skillType2 = tonumber(GetTableData(TableName.SkillTab, skillId, 'type2'))
    if skillType2 == 11 then
        skillLevel = 1
    end
    local skillName = Localization:GetString(GetTableData(TableName.SkillTab, skillId, 'name'))
    local skillType = Localization:GetString(GetTableData(TableName.SkillTab, skillId, 'type_des'))
    local skillDesc, effectDesc = HeroUtils.GetSkillDescStr(skillId, skillLevel)

    self.textSkillName:SetText(skillName)
    self.textSkillType:SetText(skillType)
    self.textSkillDesc:SetText(skillDesc)
    if skillType2 ~= 11 then
        self.textSubTitle2:SetLocalText(150166)
        self.textEffect:SetText(effectDesc)
    end

    self.textSubTitle2:SetActive(skillType2 ~= 11)
    self.textEffect:SetActive(skillType2 ~= 11)
end

local function RefreshSkillIcons(self)
    for k, v in ipairs(self.skills) do
        local data = self.data.skillList[k]
        v:SetActive(data ~= nil)
        if data ~= nil then
            v:SetData(data)
        end
    end
end

HeroSkillTab.OnCreate = OnCreate
HeroSkillTab.OnDestroy = OnDestroy
HeroSkillTab.OnEnable = OnEnable
HeroSkillTab.OnDisable = OnDisable
HeroSkillTab.ComponentDefine =ComponentDefine
HeroSkillTab.ComponentDestroy =ComponentDestroy
HeroSkillTab.OnAddListener =OnAddListener
HeroSkillTab.OnRemoveListener =OnRemoveListener
HeroSkillTab.SetData = SetData
HeroSkillTab.RefreshView = RefreshView
HeroSkillTab.RefreshSkillIcons = RefreshSkillIcons
HeroSkillTab.RefreshSkill = RefreshSkill
HeroSkillTab.OnSelectEvent = OnSelectEvent
HeroSkillTab.HideSkillDesc = HideSkillDesc

return HeroSkillTab