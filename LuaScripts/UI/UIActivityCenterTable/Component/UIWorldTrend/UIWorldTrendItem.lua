---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zzl.
--- DateTime: 
---
local UIWorldTrendItem = BaseClass("UIWorldTrendItem", UIBaseContainer)
local UIWorldTrendRewardItem = require "UI.UIActivityCenterTable.Component.UIWorldTrend.UIWorldTrendRewardItem"
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization

local Img_ItemBg = "Img_ItemBg"
local Img_Side = "Img_Side"
local Txt_Title = "Img_ItemBg/Txt_Title"
local Txt_Complete = "Img_ItemBg/Txt_Complete"
local Img_Red = "Img_ItemBg/Rect_Reward/Img_Red"
local Txt_QuestCondition = "Img_ItemBg/Rect_Reward/Txt_QuestCondition"
local Img_RewardBg = "Img_ItemBg/Rect_Reward/Img_RewardBg"
local Txt_QuestState = "Img_ItemBg/Rect_Reward/Txt_QuestState"
local Btn_Reward = "Img_ItemBg/Btn_Reward"
local Txt_Progress = "Img_ItemBg/ProgressSlider/Txt_Progress"
local Txt_Time = "Img_ItemBg/ProgressSlider/Txt_Time"
local ProgressSlider = "Img_ItemBg/ProgressSlider"
local Txt_LvTips = "Img_ItemBg/verticalLayout/Txt_LvTips"
local Txt_RewardState = "Img_ItemBg/verticalLayout/timeLayout/Txt_RewardState"
local Img_ClockTIme = "Img_ItemBg/verticalLayout/timeLayout/Img_ClockTIme"
local timeLayout = "Img_ItemBg/verticalLayout/timeLayout"
local Btn_AcceptReward = "Img_ItemBg/Btn_AcceptReward"
local Txt_AcceptReward = "Img_ItemBg/Btn_AcceptReward/Txt_AcceptReward"
local Btn_FuncBg1 = "Img_ItemBg/ScrollView/Viewport/Content/Btn_FuncBg1"
local Img_FuncUnlock1 = "Img_ItemBg/ScrollView/Viewport/Content/Btn_FuncBg1/Img_FuncUnlock1"
local Img_FuncUnlockCopy1 = "Img_ItemBg/ScrollView/Viewport/Content/Btn_FuncBg1/Img_FuncUnlockCopy1"
local unlockTxt1 = "Img_ItemBg/ScrollView/Viewport/Content/Btn_FuncBg1/Img_FuncUnlock1/unlockTxt1"
local Btn_FuncBg2 = "Img_ItemBg/ScrollView/Viewport/Content/Btn_FuncBg2"
local Img_FuncUnlock2 = "Img_ItemBg/ScrollView/Viewport/Content/Btn_FuncBg2/Img_FuncUnlock2"
local Img_FuncUnlockCopy2 = "Img_ItemBg/ScrollView/Viewport/Content/Btn_FuncBg2/Img_FuncUnlockCopy2"
local unlockTxt2 = "Img_ItemBg/ScrollView/Viewport/Content/Btn_FuncBg2/Img_FuncUnlock2/unlockTxt2"
local Btn_FuncBg3 = "Img_ItemBg/ScrollView/Viewport/Content/Btn_FuncBg3"
local Img_FuncUnlock3 = "Img_ItemBg/ScrollView/Viewport/Content/Btn_FuncBg3/Img_FuncUnlock3"
local Img_FuncUnlockCopy3 = "Img_ItemBg/ScrollView/Viewport/Content/Btn_FuncBg3/Img_FuncUnlockCopy3"
local unlockTxt3 = "Img_ItemBg/ScrollView/Viewport/Content/Btn_FuncBg3/Img_FuncUnlock3/unlockTxt3"
local Rect_ItemEffect = "Img_ItemBg/ScrollView/Viewport/Rect_ItemEffect" --节点已经不存在了
local Btn_Rank = "Img_ItemBg/Btn_Rank"
local Img_Rank = "Img_ItemBg/Btn_Rank/Img_Rank"
local Img_BgIcon = "Img_ItemBg/bgIcon"
local grayImg_path = "Img_ItemBg/gray"
local anim_newOngoing_path = "Img_ItemBg/Anim_NewOngoing" --挂点没了
local allianceTips_path = "Img_ItemBg/Txt_AllianceTips"
local NewBg_path = "Img_ItemBg/NewBg"
local Img_Group = "Img_Group"
local Rect_WeekTitle = "Rect_WeekTitle"
local Img_TitleIcon = "Rect_WeekTitle/Img_TitleIcon"
local Txt_WeekTitle = "Rect_WeekTitle/Txt_WeekTitle"
local Txt_Week = "Rect_WeekTitle/Txt_Week"
local defaultColor = Color32.New(220/255.0, 120/255.0, 39/255.0, 1)
-- 创建
function UIWorldTrendItem:OnCreate()
    base.OnCreate(self)
    self:DataDefine()
    self._itemBg_img    = self:AddComponent(UIImage,Img_ItemBg)
    self._side_img    = self:AddComponent(UIImage,Img_Side)
    self._title_txt     = self:AddComponent(UITextMeshProUGUIEx, Txt_Title)
   -- self._icon_img      = self:AddComponent(UIImage, "Img_Icon")
    self._complete_txt  = self:AddComponent(UITextMeshProUGUIEx, Txt_Complete)
    
    --self._red_img            = self:AddComponent(UIImage,Img_Red)
    --self._questCondition_txt = self:AddComponent(UIText,Txt_QuestCondition)
    self._questState_txt     = self:AddComponent(UITextMeshProUGUIEx,Txt_QuestState)
    self._rewardBg_img       = self:AddComponent(UIImage,Img_RewardBg)
    
    self._progress_txt       = self:AddComponent(UITextMeshProUGUIEx,Txt_Progress)
    self._time_txt           = self:AddComponent(UITextMeshProUGUIEx,Txt_Time)
    self._progress_img       = self:AddComponent(UISlider,ProgressSlider)
    self._lvTips_lv          = self:AddComponent(UITextMeshProUGUIEx,Txt_LvTips)
    self._rewardState_txt    = self:AddComponent(UITextMeshProUGUIEx,Txt_RewardState)
    self._timeLayout         = self:AddComponent(UIBaseContainer,timeLayout)
    self._clockTime_img      = self:AddComponent(UIImage,Img_ClockTIme)
    self._acceptReward_btn   = self:AddComponent(UIButton,Btn_Reward)
    self._acceptReward_txt   = self:AddComponent(UITextMeshProUGUIEx,Txt_AcceptReward)
    self._rect_reward   = self:AddComponent(UIBaseContainer,Btn_AcceptReward)
    
    self.rewardList = {}
    local tempItem = self:AddComponent(UIBaseContainer, "Img_ItemBg/ScrollView/Viewport/Content")
    for i = 1, 3 do
        --self.rewardList[i] = self:AddComponent(UIWorldTrendRewardItem, "ScrollView/Viewport/Content/UIRewardCell"..i)
        self.rewardList[i] = tempItem:AddComponent(UIWorldTrendRewardItem, "UIRewardCell"..i)
        self.rewardList[i]:SetActive(false)
    end
    self.funcList = {}
    local fun1 = {}
    self._funcBg_btn1 = self:AddComponent(UIButton,Btn_FuncBg1)
    self._funcBg_btn1:SetOnClick(function()
        self:OnClickFuncUnlock(1)
    end)
    self._funcUnlock_img1 = self:AddComponent(UIImage,Img_FuncUnlock1)
    self._funcUnlockCopy_img1 = self:AddComponent(UIImage,Img_FuncUnlockCopy1)
    fun1.btn = self._funcBg_btn1
    fun1.Unlock = self._funcUnlock_img1
    fun1.UnlockCopy = self._funcUnlockCopy_img1
    table.insert(self.funcList,fun1)
    local fun2 = {}
    self._funcBg_btn2 = self:AddComponent(UIButton,Btn_FuncBg2)
    self._funcBg_btn2:SetOnClick(function()
        self:OnClickFuncUnlock(2)
    end)
    self._funcUnlock_img2 = self:AddComponent(UIImage,Img_FuncUnlock2)
    self._funcUnlockCopy_img2 = self:AddComponent(UIImage,Img_FuncUnlockCopy2)
    fun2.btn = self._funcBg_btn2
    fun2.Unlock = self._funcUnlock_img2
    fun2.UnlockCopy = self._funcUnlockCopy_img2
    table.insert(self.funcList,fun2)
    local fun3 = {}
    self._funcBg_btn3 = self:AddComponent(UIButton,Btn_FuncBg3)
    self._funcBg_btn3:SetOnClick(function()
        self:OnClickFuncUnlock(3)
    end)
    self._funcUnlock_img3 = self:AddComponent(UIImage,Img_FuncUnlock3)
    self._funcUnlockCopy_img3 = self:AddComponent(UIImage,Img_FuncUnlockCopy3)
    fun3.btn = self._funcBg_btn3
    fun3.Unlock = self._funcUnlock_img3
    fun3.UnlockCopy = self._funcUnlockCopy_img3
    table.insert(self.funcList,fun3)
    self._acceptReward_btn:SetOnClick(function()  
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnBtnClick()
    end)
    
    self._unlockTxt    = self:AddComponent(UITextMeshProUGUIEx,unlockTxt1)
    self._unlockTxt:SetLocalText(170013)
    self._unlockTxt2    = self:AddComponent(UITextMeshProUGUIEx,unlockTxt2)
    self._unlockTxt2:SetLocalText(170013)
    self._unlockTxt3   = self:AddComponent(UITextMeshProUGUIEx,unlockTxt3)
    self._unlockTxt3:SetLocalText(170013)
    
    self._rank_img = self:AddComponent(UIImage,Img_Rank)
    self._rank_btn = self:AddComponent(UIButton,Btn_Rank)
    self._rank_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnClickSendRank()
    end)
    
    self._bgIcon_img = self:AddComponent(UIImage,Img_BgIcon)

    self.grayImgN = self:AddComponent(UIImage, grayImg_path)
    self.grayMat = self.grayImgN:GetMaterial()
    
    --self.anim_newOngoing = self:AddComponent(UIAnimator,anim_newOngoing_path)
    
    --self._itemEffect_rect = self:AddComponent(UIBaseContainer,Rect_ItemEffect)
    
    self._allianceTips_txt = self:AddComponent(UITextMeshProUGUIEx,allianceTips_path)
    
    self._newBg_rect = self:AddComponent(UIBaseContainer,NewBg_path)
    
    self._group_img = self:AddComponent(UIImage,Img_Group)
    self._weekTitle_img = self:AddComponent(UIImage,Rect_WeekTitle)
    self._titleIcon_img = self:AddComponent(UIImage,Img_TitleIcon)
    self._weekTitle_txt = self:AddComponent(UITextMeshProUGUIEx,Txt_WeekTitle)
    self._week_txt = self:AddComponent(UITextMeshProUGUIEx,Txt_Week)
end

function UIWorldTrendItem:DataDefine()
    self.isReceiveReward = false        --是否能领奖
    self.timer = nil
    self.timer_action = function(temp)
        self:RefreshTime()
    end
end

-- 销毁
function UIWorldTrendItem:OnDestroy()
    if self.delayTime then
        self.delayTime:Stop()
        self.delayTime = nil
    end
    if self.delayTime1 then
        self.delayTime1:Stop()
        self.delayTime1 = nil
    end
    self._itemBg_img = nil
    self._side_img = nil
    self._title_txt = nil
    self._complete_txt = nil
    --self._red_img = nil
    --self._questCondition_txt = nil
    self._rewardBg_img = nil
    self._questState_txt = nil
    self._progress_txt = nil
    self._time_txt = nil
    self._progress_img = nil
    self._rewardState_txt = nil
    self._clockTime_img = nil
    self._acceptReward_btn = nil
    self._acceptReward_txt = nil
    self.rewardList = nil
    self._funcUnlock_img = nil
    self._rank_btn = nil
    self:DeleteTimer()
    self.timer_action = nil
    self.isReceiveReward = nil
    self._bgIcon_img = nil
    self._rank_img = nil
    base.OnDestroy(self)
end

-- 显示
function UIWorldTrendItem:OnEnable()
    base.OnEnable(self)
end

-- 隐藏
function UIWorldTrendItem:OnDisable()
    base.OnDisable(self)
end

-- 全部刷新
function UIWorldTrendItem:RefreshData(data,isShowBg)
    self.param = data
    self._newBg_rect:SetActive(false)
    if self.param == nil then
        return
    end
    local template = DataCenter.WorldTrendTemplateManager:GetTemplateById(self.param.id)
    if template == nil  then
        return
    end
    self._bgIcon_img:LoadSprite(template:GetIcon())
    self._title_txt:SetLocalText(template.name)
    self._complete_txt:SetText(template:GetDesc())
    
    --type 7 18 20 联盟相关
    self._rank_btn:SetActive(self.param.type == 7 or self.param.type == 18 or self.param.type == 20)
    for i = 1 ,table.count(self.funcList) do
        self.funcList[i].btn:SetActive(false)
    end
    
    self.isRefresh = true
    --self.anim_newOngoing:SetActive(false)
    if DataCenter.WorldTrendManager.NewOngoing == data.id then
        local id = Setting:GetPrivateInt(SettingKeys.LAST_WORLD_TREDN, 0)
        if id ~= tonumber(data.id) then
            self.isRefresh = false
            self._rewardBg_img:SetMaterial(self.grayMat)
            self._itemBg_img:SetMaterial(self.grayMat)
            self._side_img:SetMaterial(self.grayMat)
            self._rank_img:SetMaterial(self.grayMat)
            self._title_txt:SetColor(Const_Color_Gray)
            self._newBg_rect:SetActive(true)
            Setting:SetPrivateInt(SettingKeys.LAST_WORLD_TREDN, tonumber(data.id))
            self.delayTime = TimerManager:GetInstance():DelayInvoke(function()
                --self.anim_newOngoing:SetActive(true)
                self.delayTime1 = TimerManager:GetInstance():DelayInvoke(function()
                    self._itemBg_img:SetMaterial(nil)
                    self._side_img:SetMaterial(nil)
                    self._rewardBg_img:SetMaterial(nil)
                    self._title_txt:SetColor(defaultColor)
                    self._rank_img:SetMaterial(nil)
                end, 0.7)
            end, 1)
        end
    end
    
    self:SetItemState()
    
    self:SetGroupBg(data,isShowBg)
end

--设置条目状态
function UIWorldTrendItem:SetItemState()
    local template = DataCenter.WorldTrendTemplateManager:GetTemplateById(self.param.id)
    self._progress_img:SetActive(false)
    self._acceptReward_btn:SetActive(false)
    self._timeLayout:SetActive(false)
    self._clockTime_img:SetActive(false)
    self._questState_txt:SetActive(false)
    --self._red_img:SetActive(false)
    self._rewardBg_img:LoadSprite(string.format(LoadPath.UIWorldTrend,"UIWorldTrend_bg_board"))
    self._itemBg_img:LoadSprite(string.format(LoadPath.UIWorldTrend,"UIWorldTrend_icon_board"))
    self._progress_img:SetValue(0)
    self._lvTips_lv:SetActive(false)
    self._lvTips_lv:SetLocalText(302235,self.param.levelLimit)
    self._acceptReward_txt:SetLocalText(170008)
    self:SetRewardState(false)
    self:SetReceiveState(false)
    self:SetUnlockTxt()
    --self._itemEffect_rect:SetActive(false)
    self._rect_reward:SetActive(false)
    self._allianceTips_txt:SetActive(false)

    if self.isRefresh then
        self._itemBg_img:SetMaterial(nil)
        self._side_img:SetMaterial(nil)
        self._rewardBg_img:SetMaterial(nil)
        self._title_txt:SetColor(defaultColor)
        self._rank_img:SetMaterial(nil)
    end
    
    local curTime = UITimeManager:GetInstance():GetServerTime()
    if self.param.status == DataCenter.WorldTrendManager.ServerTrendsStatus.Prepare then
        --未开始
        self:SetReward(true)
        --即将开启
        self._timeLayout:SetActive(true)
        local isAboutToOpen = self.param.startTime > 0 and self.param.startTime > curTime
        if isAboutToOpen then
            --即将开启
            self._rewardState_txt:SetText(UITimeManager:GetInstance():MilliSecondToFmtString(self.param.startTime - curTime))
            CS.UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(self._rewardState_txt.rectTransform)
            self._clockTime_img:SetActive(true)
            --置灰
            self._rewardBg_img:SetMaterial(self.grayMat)
            self._itemBg_img:SetMaterial(self.grayMat)
            self._side_img:SetMaterial(self.grayMat)
            self._rank_img:SetMaterial(self.grayMat)
            self._title_txt:SetColor(Const_Color_Gray)
            self:AddTimer()
        else
            --未开启
            self._rewardState_txt:SetLocalText(120018)
        end
    elseif self.param.status == DataCenter.WorldTrendManager.ServerTrendsStatus.Ongoing then
        --进行中
        self:SetReward(false)
        if self.param.rewardStatus == DataCenter.WorldTrendManager.ServerTrendsRewardStatus.Received then
            --已领取
            self:InitFinishAcceptReward()
            self._rect_reward:SetActive(true)
        elseif self.param.rewardStatus == DataCenter.WorldTrendManager.ServerTrendsRewardStatus.Unreceived then
            --可领奖
            self._rect_reward:SetActive(true)
            self._acceptReward_btn:SetActive(true)
            --self._red_img:SetActive(true)
            --self._rewardEffect_rect:SetActive(true)
            if self.param.levelLimit > DataCenter.BuildManager.MainLv then
                self.isReceiveReward = false
                self._lvTips_lv:SetActive(true)
            else
                self.isReceiveReward = true
            end
            if self.isReceiveReward then
                self._rewardBg_img:LoadSprite(string.format(LoadPath.UIWorldTrend,"UIWorldTrend_bg_board1"))
                self._itemBg_img:LoadSprite(string.format(LoadPath.UIWorldTrend,"world_icon_board_h"))
            end
            self:SetReceiveState(self.isReceiveReward)
            --self._itemEffect_rect:SetActive(self.isReceiveReward)
            self._timeLayout:SetActive(true)
            self._rewardState_txt:SetText(Localization:GetString("390979",UITimeManager:GetInstance():TimeStampToDayForLocal(self.param.finishTime)))   --于xx时间完成
        elseif self.param.rewardStatus == DataCenter.WorldTrendManager.ServerTrendsRewardStatus.NotSuccess then
            --任务未完成
            self._progress_txt:SetLocalText(GameDialogDefine.SPLIT, self.param.taskNum, self.param.taskNeedNum)
            if self.param.endTime == 0 then
                self._time_txt:SetText("")
            else
                self._time_txt:SetText(UITimeManager:GetInstance():MilliSecondToFmtString(self.param.endTime - curTime))
                --开启倒计时
                self:RefreshTime()
                self:AddTimer()
            end
            self._progress_img:SetActive(true)
            self._progress_img:SetValue(self.param.taskNum/self.param.taskNeedNum)
        end
    elseif self.param.status == DataCenter.WorldTrendManager.ServerTrendsStatus.Fail then
        --截止时间未完成
        self:SetReward(false)
        self._timeLayout:SetActive(true)
        self._rewardState_txt:SetText(template:GetQuestTypeContent())   --未达成或者所在联盟未达成
    elseif self.param.status == DataCenter.WorldTrendManager.ServerTrendsStatus.Finish then
        --已完成
        self._rect_reward:SetActive(true)
        self:SetReward(false)
        if self.param.type == 7 or self.param.type == 18 or self.param.type == 20 then
            self:SetAllianceTips()
        end
        if self.param.rewardStatus == DataCenter.WorldTrendManager.ServerTrendsRewardStatus.NotJoin then
            self:InitFinishAcceptReward()
        elseif self.param.rewardStatus == DataCenter.WorldTrendManager.ServerTrendsRewardStatus.Unreceived then
            --可领奖
            --self._rewardEffect_rect:SetActive(true)
            if self.param.levelLimit > DataCenter.BuildManager.MainLv then
                self.isReceiveReward = false
                self._lvTips_lv:SetActive(true)
            else
                self._acceptReward_btn:SetActive(true)
                self.isReceiveReward = true
                --self._red_img:SetActive(true)
            end
            if self.isReceiveReward then
                self._rewardBg_img:LoadSprite(string.format(LoadPath.UIWorldTrend,"UIWorldTrend_bg_board1"))
                self._itemBg_img:LoadSprite(string.format(LoadPath.UIWorldTrend,"world_icon_board_h"))
            end
            self:SetReceiveState(self.isReceiveReward)
            --self._itemEffect_rect:SetActive(self.isReceiveReward)
            self._timeLayout:SetActive(true)
            self._rewardState_txt:SetText(Localization:GetString("390979",UITimeManager:GetInstance():TimeStampToDayForLocal(self.param.finishTime)))   --于xx时间完成
        elseif self.param.rewardStatus == DataCenter.WorldTrendManager.ServerTrendsRewardStatus.Received then
            --已领奖
            self:InitFinishAcceptReward()
        end
    end
end

function UIWorldTrendItem:SetGroupBg(data,isShowBg)
    if not isShowBg then
        if data then
            data.show_type = ""
        end
    end
    if data and data.show_type ~= "" then
        local str = string.split(data.show_type,";")
        local firstPath = "world_img_title2"
        local lastPath = "world_img_title4"
        local normalPath = "world_img_title3" 
        local titlePath = "world_img_title1"
        local group  = tonumber(str[1])
        if group == 2 or (group + 1) % 3 == 0 then
            firstPath = "world_img_2title2"
            lastPath = "world_img_2title4"
            normalPath = "world_img_2title3"
            titlePath = "world_img_2title1"
        elseif tonumber(str[1]) % 3 == 0 then
            firstPath = "world_img_3title2"
            lastPath = "world_img_3title4"
            normalPath = "world_img_3title3"
            titlePath = "world_img_3title1"
        end
        if tonumber(str[4]) == 1 then
            self._weekTitle_img:SetActive(true)
            self._week_txt:SetLocalText(372632,str[1])
            self._weekTitle_img:LoadSprite(string.format(LoadPath.UIWorldTrend,titlePath))
            self._titleIcon_img:LoadSprite(string.format(LoadPath.UIGlory,str[3]))
            self._weekTitle_txt:SetLocalText(tonumber(str[2]))
        else
            self._weekTitle_img:SetActive(false)
        end
        if data:IsFirstGroup(tonumber(str[4])) then
            self._group_img:LoadSprite(string.format(LoadPath.UIWorldTrend,firstPath))
            self._group_img:SetAnchoredPosition(Vector2.New(-5,-69.5))
            self._group_img:SetSizeDelta({x = 440,y = 596})
        elseif DataCenter.WorldTrendManager:CheckIsLastGroup(tonumber(str[1]),tonumber(str[4])) then  
            self._group_img:LoadSprite(string.format(LoadPath.UIWorldTrend,lastPath))
            self._group_img:SetAnchoredPosition(Vector2.New(2,-69.5))
            self._group_img:SetSizeDelta({x = 432,y = 596})
        else
            self._group_img:LoadSprite(string.format(LoadPath.UIWorldTrend,normalPath))
            local count = DataCenter.WorldTrendManager:GetGroupCount(tonumber(str[1]))
            if count == 3 then
                self._group_img:SetAnchoredPosition(Vector2.New(0.5,-69.5))
                self._group_img:SetSizeDelta({x = 429,y = 596})
            elseif count == 4 then
                if tonumber(str[4]) == 2 then
                    self._group_img:SetAnchoredPosition(Vector2.New(0.4,-69.5))
                    self._group_img:SetSizeDelta({x = 429,y = 596})
                elseif tonumber(str[4]) == 3 then
                    self._group_img:SetAnchoredPosition(Vector2.New(0.4,-69.5))
                    self._group_img:SetSizeDelta({x = 429.5,y = 596})
                end
            end
        end
        self._group_img:SetActive(true)
    else
        self._group_img:SetActive(false)
        self._weekTitle_img:SetActive(false)
    end
end

--初始化已完成已领奖状态
function UIWorldTrendItem:InitFinishAcceptReward()
    self._timeLayout:SetActive(true)
    self:SetRewardState(true)
    self._rewardState_txt:SetText(Localization:GetString("390979",UITimeManager:GetInstance():TimeStampToDayForLocal(self.param.finishTime)))
end

function UIWorldTrendItem:SetAllianceTips()
    local rankInfo = DataCenter.WorldTrendManager.rankInfo
    local cond = ""
    if rankInfo and next(rankInfo) then
        self._allianceTips_txt:SetActive(true)
        for i = 1 ,table.count(rankInfo) do
            if i > 1 then
                cond = cond .. "、"
            end
            cond = cond .."["..rankInfo[i].abbr.."]"..rankInfo[i].fullName
        end
    end
    self._allianceTips_txt:SetText(Localization:GetString("302723")..cond)
end

--设置奖励
function UIWorldTrendItem:SetReward(isGary,isReceive)
    if self.param.rewardList then
        for i = 1, #self.param.rewardList do
            if self.rewardList[i] then
                self.rewardList[i]:SetActive(true)
                self.rewardList[i]:RefreshData(self.param.rewardList[i])
                self.rewardList[i]:SetQuestState(isGary)
            end
        end
        if self.param.functionIds and next(self.param.functionIds) then
            for i = 1 ,table.count(self.param.functionIds) do
                if self.funcList[i] then
                    self.funcList[i].btn:SetActive(true)
                    local template = DataCenter.WorldTrendTemplateManager:GetFuncInfoById(self.param.functionIds[i])
                    self.funcList[i].Unlock:LoadSprite(template:GetIcon(), nil, function()
                        self.funcList[i].Unlock:SetNativeSize()
                    end)
                    self.funcList[i].UnlockCopy:SetActive(isGary)
                    self.funcList[i].UnlockCopy:LoadSprite(template:GetIcon(), nil, function()
                        self.funcList[i].UnlockCopy:SetNativeSize()
                    end)
                end
            end
        end
    end
end

--解锁单独处理
function UIWorldTrendItem:SetUnlockTxt()
    if self.param.functionIds ~= 0 then
        local curTime = UITimeManager:GetInstance():GetServerTime()
        if self.param.endTime ~= 0 and self.param.endTime < curTime then
            self._unlockTxt:SetActive(true)
            self._unlockTxt2:SetActive(true)
            self._unlockTxt3:SetActive(true)
        else
            self._unlockTxt:SetActive(false)
            self._unlockTxt2:SetActive(false)
            self._unlockTxt3:SetActive(false)
        end
    end
end

--设置奖励状态
function UIWorldTrendItem:SetRewardState(isReceive)
    if self.param.rewardList then
        for i = 1, #self.param.rewardList do
            if self.rewardList[i] then
                self.rewardList[i]:SetRewardState(isReceive)
            end
        end
    end
end

--设置是否可领奖设置特效
function UIWorldTrendItem:SetReceiveState(isReceive)
    if self.param.rewardList then
        for i = 1, #self.param.rewardList do
            if self.rewardList[i] then
                self.rewardList[i]:SetReceiveState(isReceive)
            end
        end
    end
    --self._itemEffect_rect:SetActive(isReceive)
end

function UIWorldTrendItem:AddTimer()
    if self.param.endTime == 0 then
        return
    end
    if self.timer == nil then
        self.timer = TimerManager:GetInstance():GetTimer(1, self.timer_action , self, false,false,false)
    end
    self.timer:Start()
end

function UIWorldTrendItem:DeleteTimer()
    if self.timer ~= nil then
        self.timer:Stop()
        self.timer = nil
    end
end

function UIWorldTrendItem:RefreshTime()
    local curTime = UITimeManager:GetInstance():GetServerTime()
    --未开始
    if self.param.startTime > curTime then
        self._rewardState_txt:SetText(UITimeManager:GetInstance():MilliSecondToFmtString(self.param.startTime - curTime))
    elseif self.param.startTime - curTime <= 0 or self.param.endTime > curTime  then
        --进行中
        self._timeLayout:SetActive(false)
        self._progress_img:SetActive(true)
        self:SetReward(false)
        self._time_txt:SetText(UITimeManager:GetInstance():MilliSecondToFmtString((self.param.endTime - curTime)))
    elseif self.param.endTime - curTime <= 0 then
        --已结束
        self:DeleteTimer()
        self:SetItemState()
        self:SetUnlockTxt()
    end
end

--请求领奖
function UIWorldTrendItem:OnBtnClick()
    if self.isReceiveReward then
        DataCenter.WorldTrendManager:SendServerTrendsReward(self.param.id)
    else
        UIUtil.ShowTips(Localization:GetString("302235",self.param.levelLimit))
    end
end

function UIWorldTrendItem:OnClickFuncUnlock(index)
    if self.param.functionIds and next(self.param.functionIds) and self.param.functionIds[index] then
        local template = DataCenter.WorldTrendTemplateManager:GetFuncInfoById(self.param.functionIds[index])
        local param = {}
        param["title"] = template:GetName()
        param["desc"] = template:GetDesc()
        param["alignObject"] = self.funcList[index].Unlock
        param.type = "desc"
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIItemTips,{anim = true}, param)
    end
end

--请求排行榜信息
function UIWorldTrendItem:OnClickSendRank()
    DataCenter.WorldTrendManager:SetParam(self.param)
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIWorldTrendRank,{anim = true},self.param.id)
    --DataCenter.WorldTrendManager:SendServerTrendsRank(self.param.id)
end


return UIWorldTrendItem