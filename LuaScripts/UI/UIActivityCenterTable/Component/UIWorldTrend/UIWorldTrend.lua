---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zzl.
--- DateTime:
--- 天下大势
local UIWorldTrendItem = require "UI.UIActivityCenterTable.Component.UIWorldTrend.UIWorldTrendItem"
local UIWorldTrendContent = require "UI.UIActivityCenterTable.Component.UIWorldTrend.UIWorldTrendContent"
local UIWorldTrendView = BaseClass("UIWorldTrendView",UIBaseView)
local base = UIBaseView
local safeContent = "safeArea"
local Content = "safeArea/ScrollView/Viewport/Content"
local ScrollView = "safeArea/ScrollView"
local bg_path = "Bg1"
local weekContent = "Root"
function UIWorldTrendView:OnCreate()
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
end

function UIWorldTrendView:ComponentDefine()
    
    self.bg = self:AddComponent(UIImage,bg_path)
    
    self.content = self:AddComponent(UIBaseContainer, Content)

    self.scroll_view = self:AddComponent(UIScrollView, ScrollView)
    self.scroll_view:SetOnItemMoveIn(function(itemObj, index)
        self:OnCreateCell(itemObj, index)
    end)

    self.scroll_view:SetOnItemMoveOut(function(itemObj, index)
        self:OnDeleteCell(itemObj, index)
    end)
    self.safeContent = self:AddComponent(UIBaseContainer,safeContent)
    self.weekContent = self:AddComponent(UIWorldTrendContent,weekContent)
end

function UIWorldTrendView:DataDefine()
    self.data = {}
    self.modelTask = {}
    self.cellList = {}
end

function UIWorldTrendView:OnDestroy()
    self:ClearScroll()
    self.content = nil
    base.OnDestroy(self)
end

function UIWorldTrendView:OnEnable()
    base.OnEnable(self)
end

function UIWorldTrendView:OnDisable()
    base.OnDisable(self)
end

function UIWorldTrendView:OnAddListener()
    base.OnAddListener(self)
    self:AddUIListener(EventId.WorldTrendRefresh, self.OnRefresh)
    self:AddUIListener(EventId.WorldTrendUpdate, self.UpdateEvent)
end

function UIWorldTrendView:OnRemoveListener()
    base.OnRemoveListener(self)
    self:RemoveUIListener(EventId.WorldTrendRefresh, self.OnRefresh)
    self:RemoveUIListener(EventId.WorldTrendUpdate, self.UpdateEvent)
end

function UIWorldTrendView:SetData(activityId,id)
    DataCenter.WorldTrendManager:RequestWorldTrendServerData()
end

function UIWorldTrendView:OnRefresh()
    self.data = DataCenter.WorldTrendManager:GetDataInfo()
    self.isShowBg = true
    self.weekList = {}
    local targetIndex = DataCenter.WorldTrendManager:CheckJumpCell()
    if self.data and next(self.data) then
        for i = 1 ,table.count(self.data) do
            --type 7 18 20 联盟相关
            if self.data[i].type == 7 or self.data[i].type == 18 or self.data[i].type == 20 then
                DataCenter.WorldTrendManager:SendServerTrendsRank(self.data[i].id)
            end
            if self.data[i].show_type == "" or self.data[i].show_type == "0" then
                self.isShowBg = false
            else
                local str = string.split(self.data[i].show_type,";")
                if self.weekList[tonumber(str[1])] == nil then
                    self.weekList[tonumber(str[1])] = {}
                    table.insert(self.weekList[tonumber(str[1])],self.data[i])
                else
                    table.insert(self.weekList[tonumber(str[1])],self.data[i])
                end
            end
        end
        if self.isShowBg then
            self.bg:LoadSprite(string.format(LoadPath.UIWorldTrendBg,"world_bg_blue"))
            self.weekContent:SetActive(true)
            self.safeContent:SetActive(false)
            local week,target = 1,1
            if targetIndex and targetIndex ~= 1 then
                for i = 1, #self.weekList do
                    local list = self.weekList[i]
                    for j = 1, #list do
                        if targetIndex == list[j].id then
                            week = i
                            target = j
                        end
                    end
                end
            end
            self.weekContent:ReInit(self.weekList,week,target)
        else
            self.bg:LoadSprite(string.format(LoadPath.UIWorldTrendBg,"UIWorldTrend_bg"))
            self.weekContent:SetActive(false)
            self.safeContent:SetActive(true)
            self.scroll_view:SetTotalCount(#self.data)
            local jumpIndex = nil
            for i = 1, #self.data do
                if self.data[i].id == targetIndex then
                    jumpIndex = i
                    break
                end
            end
            if jumpIndex and jumpIndex > 4 then
                jumpIndex = jumpIndex - 1
            end
            self.scroll_view:RefillCells(jumpIndex)
        end
    end
end

--{{{
function UIWorldTrendView:OnCreateCell(itemObj, index)
    itemObj.name = tostring(index)
    local cellItem = self.scroll_view:AddComponent(UIWorldTrendItem, itemObj)
    local taskConf = self.data[index]
    if taskConf then
        cellItem:RefreshData(taskConf,self.isShowBg)
        self.cellList[self.data[index].id] = cellItem
    end
end

function UIWorldTrendView:OnDeleteCell(itemObj, index)
    self.scroll_view:RemoveComponent(itemObj.name, UIWorldTrendItem)
end

function UIWorldTrendView:ClearScroll()
    self.scroll_view:ClearCells()
    self.scroll_view:RemoveComponents(UIWorldTrendItem)
end
--}}}

function UIWorldTrendView:UpdateEvent(id)
    self.data = DataCenter.WorldTrendManager:GetDataInfo()
    if self.isShowBg then
        self.weekList = {}
        if self.data and next(self.data) then
            for i = 1 ,table.count(self.data) do
                if self.data[i].show_type ~= "" then
                    local str = string.split(self.data[i].show_type,";")
                    if self.weekList[tonumber(str[1])] == nil then
                        self.weekList[tonumber(str[1])] = {}
                        table.insert(self.weekList[tonumber(str[1])],self.data[i])
                    else
                        table.insert(self.weekList[tonumber(str[1])],self.data[i])
                    end
                end
            end
            self.weekContent:ReInit(self.weekList)
        end
    else
        if next(self.cellList) then
            for i = 1, #self.data do
                if self.data[i].id == tostring(id) then
                    self.cellList[tostring(id)]:RefreshData(self.data[i],self.isShowBg)
                    break
                end
            end
        end
    end
end

return UIWorldTrendView