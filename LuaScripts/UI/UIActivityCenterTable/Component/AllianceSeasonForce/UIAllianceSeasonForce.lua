---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zzl.
--- DateTime: 
---

local UIAllianceSeasonForce = BaseClass("UIAllianceSeasonForce", UIBaseView)
local base = UIBaseView
local RankListItem = require "UI.UIActivityCenterTable.Component.AllianceSeasonForce.RankListItem"
local AllianceFlagItem = require "UI.UIAlliance.UIAllianceFlag.Component.AllianceFlagItem"
local Localization = CS.GameEntry.Localization
local SFiveCamp = {Localization:GetString("111062"),Localization:GetString("111064"),Localization:GetString("111063")}
local tabSelect_img = "Assets/Main/Sprites/UI/Common/New/Common_btn_tab_open.png"
local tabUnSelect_img = "Assets/Main/Sprites/UI/Common/New/Common_btn_tab_close.png"
local tabUnSelect_color= Color.New(183/255,102/255,48/255,1)
--local tabUnSelect_shadow= Color.New(255/255,255/255,255/255,0)
local tabSelect_color= Color.New(255/255,255/255,255/255,1)
local tabSelect_shadow= Color.New(128/255,56/255,24/255,1)
local tabSelect_pos = {x = 0,y = 7}
local tabUnSelect_pos = {x = 0,y = 0}
function UIAllianceSeasonForce:OnCreate()
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
end

function UIAllianceSeasonForce:OnDestroy()
    self:ClearScroll()
    self:DataDestroy()
    base.OnDestroy(self)
end

function UIAllianceSeasonForce:OnEnable()
    base.OnEnable(self)
end

function UIAllianceSeasonForce:OnDisable()
    base.OnDisable(self)

end

function UIAllianceSeasonForce:ComponentDefine()

    self._actName_txt = self:AddComponent(UIText, "RightView/Top/Txt_ActName")
    self.intro_btn = self:AddComponent(UIButton, "RightView/Top/Txt_ActName/infoBtn")
    self.intro_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnIntroClick()
    end)

    self._desc_txt = self:AddComponent(UIText,"RightView/Top/Txt_ActDesc")
    
    self._endTime_txt = self:AddComponent(UIText,"RightView/Top/Txt_ActEndTime")

    self._time_txt = self:AddComponent(UIText,"RightView/Top/Txt_ActTime")
    
    self._noRankTips_txt = self:AddComponent(UIText,"RightView/Txt_NoRank")
    
    self.name_des = self:AddComponent(UIText,"RightView/ImgBg/select/nameDes")
    self._country_txt = self:AddComponent(UIText,"RightView/ImgBg/select/country")
    self._desertDesc_txt = self:AddComponent(UIText,"RightView/ImgBg/select/Txt_DesertDesc")
    self._desertTime_txt = self:AddComponent(UIText,"RightView/ImgBg/select/Txt_DesertTime")
    self._sFiveCamp_txt = self:AddComponent(UIText,"RightView/ImgBg/select/Txt_SFiveCamp")
    
    self.ScrollView = self:AddComponent(UIScrollView, "RightView/ImgBg/ScrollView")
    self.ScrollView:SetOnItemMoveIn(function(itemObj, index)
        self:OnRankItemMoveIn(itemObj, index)
    end)
    self.ScrollView:SetOnItemMoveOut(function(itemObj, index)
        self:OnRankItemMoveOut(itemObj, index)
    end)
    
    self._reward_btn = self:AddComponent(UIButton,"RightView/Btn_Reward")
    self._reward_txt = self:AddComponent(UIText,"RightView/Btn_Reward/Txt_Reward")
    self._reward_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnClickRewardBtn()
    end)
    
    self._alliance_btn = self:AddComponent(UIButton,"RightView/Tab/Btn_Alliance")
    self._alliance_txt = self:AddComponent(UIText,"RightView/Tab/Btn_Alliance/Txt_Alliance")
    self._alliance_txt:SetLocalText(110553)
    self._alliance_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnClickChangeBtn(1)
    end)
    self._person_btn = self:AddComponent(UIButton,"RightView/Tab/Btn_Person")
    self._person_txt = self:AddComponent(UIText,"RightView/Tab/Btn_Person/Txt_Person")
    self._person_txt:SetLocalText(110552)
    self._person_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnClickChangeBtn(2)
    end)

    self._personKill_btn = self:AddComponent(UIButton,"RightView/Tab/Btn_PersonKill")           --个人击杀
    self._personKill_txt = self:AddComponent(UIText,"RightView/Tab/Btn_PersonKill/Txt_PersonKill")
    self._personKill_txt:SetLocalText(111103)
    self._personKill_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnClickChangeBtn(3)
    end)

    self._wreck_btn = self:AddComponent(UIButton,"RightView/Tab/Btn_Wreck")                     --个人破坏
    self._wreck_txt = self:AddComponent(UIText,"RightView/Tab/Btn_Wreck/Txt_Wreck")
    self._wreck_txt:SetLocalText(111104)
    self._wreck_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnClickChangeBtn(4)
    end)


    self._selfRank_txt = self:AddComponent(UIText,"RightView/ImgBg/selfObj/Txt_SelfRank")
    self._selfAllianceName_txt = self:AddComponent(UIText,"RightView/ImgBg/selfObj/Txt_SelfAllianceName")
    self._selfAllianceLeader_txt = self:AddComponent(UIText,"RightView/ImgBg/selfObj/Txt_SelfAllianceLeader")
    self._selfForce_txt = self:AddComponent(UIText,"RightView/ImgBg/selfObj/Txt_SelfForce")
    self._selfCitys_txt = self:AddComponent(UIText,"RightView/ImgBg/selfObj/Txt_SelfCitys")
    self._selfCountry_img = self:AddComponent(UIImage,"RightView/ImgBg/selfObj/Img_SelfCountry")
    self._allianceFlag_rect = self:AddComponent(UIBaseContainer,"RightView/ImgBg/selfObj/allianceFlag")
    self.allianceFlag = self:AddComponent(AllianceFlagItem,"RightView/ImgBg/selfObj/allianceFlag/AllianceFlag")
    
    self._selfSFiveAllianceCamp_txt = self:AddComponent(UIText,"RightView/ImgBg/selfObj/Txt_SelfSFiveAllianceCamp")
    
    self.player_flag = self:AddComponent(UIBaseContainer,"RightView/ImgBg/selfObj/playerFlag")
    self.player_img = self:AddComponent(UIPlayerHead, "RightView/ImgBg/selfObj/playerFlag/UIPlayerHead/HeadIcon")
    self.playerHeadFg = self:AddComponent(UIImage, "RightView/ImgBg/selfObj/playerFlag/UIPlayerHead/Foreground")

    self.sFiveCamp_Drop = self:AddComponent(UIBaseContainer, "RightView/S5FiveCamp")
    self.dropdown = self:AddComponent(UIDropdown, "RightView/S5FiveCamp/Dropdown")
    self.dropdown:SetOnValueChanged(function()
        self:OnValueChange()
    end)
end

function UIAllianceSeasonForce:DataDefine()
    self.rankType = 1
end

function UIAllianceSeasonForce:DataDestroy()
    
end

function UIAllianceSeasonForce:OnAddListener()
    base.OnAddListener(self)
    self:AddUIListener(EventId.GetRankRefresh, self.OnRefresh)
    self:AddUIListener(EventId.GetAllianceSeasonScoreRank, self.OnGetAllianceSeasonScoreRank)
    self:AddUIListener(EventId.DesertForceRank, self.RefreshSeasonForce)
    self:AddUIListener(EventId.EdenUserRank, self.RefreshEdenUser)
end

function UIAllianceSeasonForce:OnRemoveListener()
    base.OnRemoveListener(self)
    self:RemoveUIListener(EventId.GetRankRefresh, self.OnRefresh)
    self:RemoveUIListener(EventId.GetAllianceSeasonScoreRank, self.OnGetAllianceSeasonScoreRank)
    self:RemoveUIListener(EventId.DesertForceRank, self.RefreshSeasonForce)
    self:RemoveUIListener(EventId.EdenUserRank, self.RefreshEdenUser)
end

function UIAllianceSeasonForce:SetData(activityId,actId)
    self.activityId = activityId
    self._noRankTips_txt:SetActive(false)
    self.isAlliance = true  --默认是联盟
    self.rankType = 1
    self.tempCampList = nil
    self._alliance_btn:LoadSprite(tabSelect_img)
    self._person_btn:LoadSprite(tabUnSelect_img)
    self._alliance_txt:SetColor(tabSelect_color)
    self._person_txt:SetColor(tabUnSelect_color)
    
    self._alliance_txt.transform:Set_localPosition(0,7,0)
    self._person_txt.transform:Set_localPosition(0,0,0)
    self._personKill_btn:SetActive(false)
    self._wreck_btn:SetActive(false)
    self._sFiveCamp_txt:SetActive(false)
    self._selfSFiveAllianceCamp_txt:SetActive(false)
    self.sFiveCamp_Drop:SetActive(false)
    local seasonId = DataCenter.SeasonDataManager:GetSeasonId()
    if seasonId == 1 then
        self._person_btn:SetActive(false)
        SFSNetwork.SendMessage(MsgDefines.GetRank,RankType.AllianceSeasonForce)
    elseif seasonId == 5 then
        self._person_btn:SetActive(true)
        SFSNetwork.SendMessage(MsgDefines.GetRank,RankType.AllianceSeasonForce)
        self._sFiveCamp_txt:SetActive(true)
        self._selfSFiveAllianceCamp_txt:SetActive(true)
        self._personKill_btn:SetActive(true)
        self._wreck_btn:SetActive(true)
        self._personKill_btn:LoadSprite(tabUnSelect_img)
        self._wreck_btn:LoadSprite(tabUnSelect_img)
        self._personKill_txt:SetColor(tabUnSelect_color)
        self._wreck_txt:SetColor(tabUnSelect_color)
       
        self._personKill_txt:SetAnchoredPosition(tabUnSelect_pos)
        self._wreck_txt:SetAnchoredPosition(tabUnSelect_pos)
        self.sFiveCamp_Drop:SetActive(true)
        self:RefreshDropdown()
    elseif seasonId >= 2 and seasonId < 5 then
        self._person_btn:SetActive(true)
        SFSNetwork.SendMessage(MsgDefines.GetAllianceSeasonScoreRank)
    end
    local actListData = DataCenter.ActivityListDataManager:GetActivityDataById(self.activityId)
    self.actListData = actListData
    if actListData then
        self:RefreshTitle(actListData)
    end
end

function UIAllianceSeasonForce:OnRefreshTop()
    self.player_flag:SetActive(false)
    local seasonId = DataCenter.SeasonDataManager:GetSeasonId()
    local allianceData = DataCenter.AllianceBaseDataManager:GetAllianceBaseData()
    if allianceData~=nil and LuaEntry.Player:IsInAlliance()  then
        self._selfAllianceLeader_txt:SetText(allianceData.leaderName)
        self._selfAllianceName_txt:SetLocalText(311026,allianceData.abbr,allianceData.allianceName)
        local AlCities = DataCenter.WorldAllianceCityDataManager:GetCitiesByAlId(LuaEntry.Player.allianceId)
        if seasonId ~= 5 then
            self._selfCitys_txt:SetText(table.count(AlCities))
        end
        self._allianceFlag_rect:SetActive(true)
        self.allianceFlag:SetData(allianceData.icon)
    else
        self._selfAllianceName_txt:SetText("-")
        self._selfAllianceLeader_txt:SetText("-")
        self._selfCitys_txt:SetText("-")
        self._allianceFlag_rect:SetActive(false)
    end
    if LuaEntry.Player:IsHideCountryFlag() or seasonId == 5 then
        self._country_txt:SetActive(false)
        self._selfCountry_img:SetActive(false)
    else
        if allianceData~=nil and LuaEntry.Player:IsInAlliance()  then
            self._country_txt:SetActive(true)
            self._selfCountry_img:SetActive(true)
            local countryConfig = DataCenter.NationTemplateManager:GetNationTemplate(allianceData:GetCountryFlagTemplate())
            self._selfCountry_img:LoadSprite(countryConfig:GetNationFlagPath())
        else
            self._selfCountry_img:SetActive(false)
        end
    end
end

--刷新
function UIAllianceSeasonForce:OnRefresh(message)
    self:OnRefreshTop()
    local seasonId = DataCenter.SeasonDataManager:GetSeasonId()
    self.isAlliance = true
    self.rankList = message["allianceRanking"]
    if self.rankList and table.count(self.rankList) > 0 then
        self._noRankTips_txt:SetActive(false)
        --找自己的排行信息
        local data = nil
        local index = "-"
        local allianceData = DataCenter.AllianceBaseDataManager:GetAllianceBaseData()
        if allianceData~=nil and LuaEntry.Player:IsInAlliance()  then
            for i = 1 ,table.count(self.rankList) do
                if self.rankList[i].uid == allianceData.uid then
                    data = self.rankList[i]
                    index = i
                    break
                end
            end
        end
        self._selfForce_txt:SetActive(true)
        if data then
            self._selfRank_txt:SetText(index)
            if seasonId == 5 then
                self._selfForce_txt:SetText(string.GetFormattedSeperatorNum(data.power or 0))
                self._selfCitys_txt:SetText(string.GetFormattedSeperatorNum(data.force or 0))
            else
                self._selfForce_txt:SetText(data.force)
            end
        else
            self._selfRank_txt:SetText("-")
            self._selfForce_txt:SetText("-")
        end
        self.ScrollView:SetTotalCount(#self.rankList)
        self.ScrollView:RefillCells()
    else
        self._noRankTips_txt:SetActive(true)
        self._noRankTips_txt:SetLocalText(110535)
    end
end

function UIAllianceSeasonForce:OnGetAllianceSeasonScoreRank(message)
    local isAllianceScore = false
    local seasonId = DataCenter.SeasonDataManager:GetSeasonId()
    if seasonId >= 2 and seasonId < 5 then
        isAllianceScore = true
    end
    if not isAllianceScore then
        return
    end
    self:OnRefreshTop()
    self.isAlliance = true
    self.rankList = message["rankList"]
    if self.rankList and table.count(self.rankList) > 0 then
        self._noRankTips_txt:SetActive(false)
        if message["selfRank"] and message["selfRank"] > 0 then
            self._selfRank_txt:SetText(message["selfRank"])
        else
            self._selfRank_txt:SetText("-")
        end
        self._selfForce_txt:SetActive(true)
        local data = nil
        local allianceData = DataCenter.AllianceBaseDataManager:GetAllianceBaseData()
        if allianceData~=nil and LuaEntry.Player:IsInAlliance()  then
            for i = 1 ,table.count(self.rankList) do
                if self.rankList[i].allianceId == allianceData.uid then
                    data = self.rankList[i]
                    break
                end
            end
        end
        if data then
            self._selfForce_txt:SetText(string.GetFormattedSeperatorNum(data.power))
        end
        self._selfCitys_txt:SetText(string.GetFormattedSeperatorNum(message["selfScore"] or 0))
        self.ScrollView:SetTotalCount(#self.rankList)
        self.ScrollView:RefillCells()
    else
        self._noRankTips_txt:SetActive(true)
        self._noRankTips_txt:SetLocalText(110535)
    end
end

function UIAllianceSeasonForce:OnRankItemMoveIn(itemObj, index)
    itemObj.name = tostring(index)
    local cellItem = self.ScrollView:AddComponent(RankListItem, itemObj)
    
    cellItem:SetItemShow(self.tempCampList and self.tempCampList[index] or self.rankList[index],index,self.isAlliance,self.rankType)
end
function UIAllianceSeasonForce:OnRankItemMoveOut(itemObj, index)
    self.ScrollView:RemoveComponent(itemObj.name, RankListItem)
end
function UIAllianceSeasonForce:ClearScroll()
    self.ScrollView:ClearCells()
    self.ScrollView:RemoveComponents(RankListItem)
end

--活动标题
function UIAllianceSeasonForce:RefreshTitle(actListData)
    self._actName_txt:SetLocalText(actListData.name)
    self._desc_txt:SetLocalText(actListData.desc_info)
    
    self._desertDesc_txt:SetActive(true)
    self.name_des:SetLocalText(390288)
    self._country_txt:SetLocalText(143589)
    self._reward_txt:SetLocalText(110467)
    local seasonId = DataCenter.SeasonDataManager:GetSeasonId()
    if seasonId == 1 then
        self._desertDesc_txt:SetLocalText(110524)
    elseif seasonId >= 2 then
        self._desertTime_txt:SetLocalText(110524)
        self._desertDesc_txt:SetLocalText(110528)
        if seasonId == 5 then
            self._sFiveCamp_txt:SetLocalText(111102)
            --self._selfSFiveAllianceCamp_txt:SetActive(false)
        end
    end
end

--排行榜奖励
function UIAllianceSeasonForce:OnClickRewardBtn()
    UIManager:GetInstance():OpenWindow(UIWindowNames.UISeasonAllianceRewardDisplayMain)
end

--切换联盟|个人   个人为势力值排行  联盟为积分排行   s5添加个人杀敌和个人破坏
function UIAllianceSeasonForce:OnClickChangeBtn(type)
    if self.rankType == type then
        return
    end
    self:ClearScroll()
    self.rankType = type
    self.tempCampList = nil
    local seasonId = DataCenter.SeasonDataManager:GetSeasonId()
    if seasonId == 5 then
        self.dropdown:SetValue(0)
    end
    self._alliance_btn:LoadSprite(type == 1 and  tabSelect_img or tabUnSelect_img)
    self._person_btn:LoadSprite(type == 2 and  tabSelect_img or tabUnSelect_img)
    self._personKill_btn:LoadSprite(type == 3 and  tabSelect_img or tabUnSelect_img)
    self._wreck_btn:LoadSprite(type == 4 and  tabSelect_img or tabUnSelect_img)
    self._alliance_txt:SetColor(type == 1 and  tabSelect_color or tabUnSelect_color)
    self._person_txt:SetColor(type == 2 and  tabSelect_color or tabUnSelect_color)
    self._personKill_txt:SetColor(type == 3 and  tabSelect_color or tabUnSelect_color)
    self._wreck_txt:SetColor(type == 4 and  tabSelect_color or tabUnSelect_color)
    self._alliance_txt:SetAnchoredPosition(type == 1 and tabSelect_pos or tabUnSelect_pos)
    self._person_txt:SetAnchoredPosition(type == 2 and tabSelect_pos or tabUnSelect_pos)
    self._personKill_txt:SetAnchoredPosition(type == 3 and tabSelect_pos or tabUnSelect_pos)
    self._wreck_txt:SetAnchoredPosition(type == 4 and tabSelect_pos or tabUnSelect_pos)
   
    self._sFiveCamp_txt:SetActive(seasonId == 5)
    self._selfSFiveAllianceCamp_txt:SetActive(seasonId == 5 and type == 1)
    if type == 1 then
        self:RefreshTitle(self.actListData)
        if seasonId >= 2 and seasonId < 5 then
            SFSNetwork.SendMessage(MsgDefines.GetAllianceSeasonScoreRank)
        elseif seasonId == 5 then
            SFSNetwork.SendMessage(MsgDefines.GetRank,RankType.AllianceSeasonForce)
        end
        if seasonId == 1 then
            self._desertTime_txt:SetLocalText(110525)
        else
            self._desertTime_txt:SetLocalText(110524)
        end
    elseif type == 2 then
        self._actName_txt:SetLocalText(110455)
        if seasonId >= 2 then
            SFSNetwork.SendMessage(MsgDefines.DesertForceServerRank)
        end
        self._desertTime_txt:SetLocalText(110453)
    elseif type == 3 then
        self._actName_txt:SetLocalText(111171)
        SFSNetwork.SendMessage(MsgDefines.GetEdenUserRank,1)    --杀敌
        self._desertTime_txt:SetLocalText(111162)
    elseif type == 4 then
        self._actName_txt:SetLocalText(111172)
        SFSNetwork.SendMessage(MsgDefines.GetEdenUserRank,2)    --破坏
        self._desertTime_txt:SetLocalText(111163)
    end
end

function UIAllianceSeasonForce:RefreshPerson()
    self.isAlliance = false
    self.name_des:SetLocalText(100184)

    self._desertDesc_txt:SetActive(false)
    self._allianceFlag_rect:SetActive(false)
    self._selfForce_txt:SetActive(false)
    self.player_flag:SetActive(true)
    self.player_img:SetData(LuaEntry.Player:GetUid(),LuaEntry.Player:GetPic(),LuaEntry.Player.picVer)
    local fgImg = LuaEntry.Player:GetHeadBgImg()
    if not string.IsNullOrEmpty(fgImg) then
        self.playerHeadFg:SetActive(true)
        self.playerHeadFg:LoadSprite(fgImg)
    else
        self.playerHeadFg:SetActive(false)
    end
    if LuaEntry.Player:IsHideCountryFlag() then
        self._country_txt:SetActive(false)
        self._selfCountry_img:SetActive(false)
    else
        local countryConfig = DataCenter.NationTemplateManager:GetNationTemplate(LuaEntry.Player.countryFlag)
        self._selfCountry_img:LoadSprite(countryConfig:GetNationFlagPath())
    end
    self._selfAllianceName_txt:SetText(LuaEntry.Player:GetName())
    local allianceData = DataCenter.AllianceBaseDataManager:GetAllianceBaseData()
    if allianceData~=nil and LuaEntry.Player:IsInAlliance()  then
        self._selfAllianceLeader_txt:SetText("["..allianceData.abbr.."]"..allianceData.allianceName)
    else
        self._selfAllianceLeader_txt:SetText("-")
    end
end

--个人势力值
function UIAllianceSeasonForce:RefreshSeasonForce()
    self:RefreshPerson()
    local selfForceValue = DataCenter.DesertDataManager:GetSelfDesertForceNum()
    self._selfCitys_txt:SetText(string.GetFormattedSeperatorNum(selfForceValue))
    self._noRankTips_txt:SetActive(true)
    self._noRankTips_txt:SetLocalText(110534)
    local list = DataCenter.DesertDataManager:GetDesertRankList()
    self._selfRank_txt:SetText(list.selfRanking or "-")
    self:ClearScroll()
    if list and list.rankList then
        self.rankList = list.rankList
        if self.rankList and table.count(self.rankList) > 0 then
            self.ScrollView:SetTotalCount(#self.rankList)
            self.ScrollView:RefillCells()
            self._noRankTips_txt:SetActive(false)
        end
    end
end

--s5个人杀敌和个人破坏
function UIAllianceSeasonForce:RefreshEdenUser()
    self:RefreshPerson()

    local list = DataCenter.GloryManager:GetSFiveEdenUserRank()
    if list.selfRanking == -1 then
        self._selfRank_txt:SetText("-")
    else
        self._selfRank_txt:SetText(list.selfRanking)
    end
    self._selfCitys_txt:SetText(string.GetFormattedSeperatorNum(list.selfScore))
    self:ClearScroll()
    self._noRankTips_txt:SetActive(true)
    self._noRankTips_txt:SetLocalText(110534)
    if list and list.rankList then
        self.rankList = list.rankList
        if self.rankList and table.count(self.rankList) > 0 then
            self.ScrollView:SetTotalCount(#self.rankList)
            self.ScrollView:RefillCells()
            self._noRankTips_txt:SetActive(false)
        end
    end
end

function UIAllianceSeasonForce:OnIntroClick()
    local story = self.actListData.story
    local seasonId = DataCenter.SeasonDataManager:GetSeasonId()
    if seasonId == 1 then
        story = "110980"
    elseif seasonId == 5 then
        story = "111157"
    end
    UIUtil.ShowIntro(Localization:GetString(self.actListData.name), Localization:GetString("100239"),Localization:GetString(story))
end

function UIAllianceSeasonForce:RefreshDropdown()
    self.dropdown:Clear()
    self.dropdown:AddList(SFiveCamp)
    self.dropdown:SetValue(0)
end

function UIAllianceSeasonForce:OnValueChange()
    self:ClearScroll()
    self._noRankTips_txt:SetActive(false)
    if self.rankType == 1 then
        self._noRankTips_txt:SetLocalText(110535)
    else
        self._noRankTips_txt:SetLocalText(110534)
    end
    if self.dropdown:GetValue() == 0 then
        if #self.rankList > 0 then
            self.ScrollView:SetTotalCount(#self.rankList)
            self.ScrollView:RefillCells()
        else
            self._noRankTips_txt:SetActive(true)
        end
    else
        self.tempCampList = {}
        for i = 1, table.count(self.rankList) do
            if self.rankType == 1 then
                if self.rankList[i].camp == self.dropdown:GetValue() then
                    table.insert(self.tempCampList,self.rankList[i])
                end
            else
                local camp = DataCenter.GloryManager:GetCampByAllianceId(self.rankList[i].allianceId)
                if camp and camp ~= 0 and camp == self.dropdown:GetValue() then
                    table.insert(self.tempCampList,self.rankList[i])
                end
            end
        end
        if #self.tempCampList > 0 then
            self.ScrollView:SetTotalCount(#self.tempCampList)
            self.ScrollView:RefillCells()
        else
            self._noRankTips_txt:SetActive(true)
        end
    end
end

return UIAllianceSeasonForce