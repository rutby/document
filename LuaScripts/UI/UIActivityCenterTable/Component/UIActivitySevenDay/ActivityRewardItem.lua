---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by guqu.
--- DateTime: 2020/10/21 15:08
---
local ActivityRewardItem = BaseClass("ActivityRewardItem", UIBaseContainer)
local base = UIBaseContainer

local item_heroquality_path = "UICommonItem/clickBtn/HeroQuality"
local item_quality_path = "UICommonItem/clickBtn/ImgQuality"
local item_icon_path = "UICommonItem/clickBtn/ItemIcon"
local num_text_path = "UICommonItem/clickBtn/NumText"
local flag_path = "UICommonItem/clickBtn/FlagGo"
local flag_text_path = "UICommonItem/clickBtn/FlagGo/FlagText"
local rece_img_path = "UICommonItem/clickBtn/ImgRece"
local btn_path ="UICommonItem/clickBtn"
local extra_path = "UICommonItem/clickBtn/ImgExtra"
local itemBg_path = "UICommonItem/clickBtn/item_bg"
local img_firstKill = "UICommonItem/clickBtn/Img_FirstKill"

-- 创建
local function OnCreate(self)
    base.OnCreate(self)
    self.item_heroQuality = self:AddComponent(UIImage,item_heroquality_path)
    self.item_quality = self:AddComponent(UIImage, item_quality_path)
    self.item_icon = self:AddComponent(UIImage, item_icon_path)
    self.num_text = self:AddComponent(UITextMeshProUGUI, num_text_path)
    self.flag_text = self:AddComponent(UITextMeshProUGUI, flag_text_path)
    self.flag = self:AddComponent(UIImage,flag_path)
    self.btn = self:AddComponent(UIButton, btn_path)
    self.imgExtra = self:AddComponent(UIImage, extra_path)
    self._img_rece = self:AddComponent(UIImage,rece_img_path)
    self.btn:SetOnClick(function()  
SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnBtnClick()
    end)
    self.itemBg = self:AddComponent(UIBaseContainer,itemBg_path)
    self.img_firstKill = self:AddComponent(UIImage,img_firstKill)
end

-- 销毁
local function OnDestroy(self)
    self.item_quality = nil
    self.item_icon = nil
    self.num_text = nil
    self.flag = nil
    self.flag_text = nil
    self.btn = nil
    self.param = nil
    base.OnDestroy(self)
end

-- 显示
local function OnEnable(self)
    base.OnEnable(self)
end

-- 隐藏
local function OnDisable(self)
    base.OnDisable(self)
end

-- 全部刷新
local function RefreshData(self,data)
    self.param = data
    self.item_heroQuality:SetActive(false)
    self.num_text:SetActive(true)
    self.img_firstKill:SetActive(false)
    if self.param.cost then
        if self.param.cost <= self.param.count then
            self.num_text:SetText(string.GetFormattedStr(self.param.count) .. "/" .. self.param.cost)
        else
            self.num_text:SetText("<color=#FF0000>" ..string.GetFormattedStr(self.param.count) .. "</color>/" .. self.param.cost)
        end
    else
        self.num_text:SetText(self.param.count)
    end
    self.item_quality:SetActive(self.param.itemColor)
    if self.param.itemColor then
        self.item_quality:LoadSprite(self.param.itemColor)
    end
 
    if self.param.extraIcon then
        self.imgExtra:SetActive(true)
        self.imgExtra:LoadSprite(self.param.extraIcon)
    else
        self.imgExtra:SetActive(false)
    end
    if self.param.rewardType == RewardType.SEVENDAY_SCORE then
        self.item_icon:LoadSprite(string.format(LoadPath.UISevenDay,"UI7day_icon_integral"))
        self.item_icon:SetLocalScaleXYZ(0.8,0.8,1)
        self.itemBg:SetActive(false)
    else
        self.item_icon:LoadSprite(self.param.iconName)
        self.item_icon:SetLocalScaleXYZ(1,1,1)
        self.itemBg:SetActive(true)
    end
    self.flag:SetActive(self.param.itemFlag)
    if self.param.itemFlag then
        self.flag_text:SetText(self.param.itemFlag)
    end
    self._img_rece:SetActive(false)
end


local function OnBtnClick(self)
   -- if self.param.itemId ~= nil then
        --if self.param.rewardType == RewardType.GOODS then
    if self.param.itemId ~= nil then
        local param = {}
        param["itemId"] = self.param.itemId
        param["alignObject"] = self.item_icon
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIItemTips,{anim = true}, param)
    elseif self.param.iconName ~= nil then
        local param = {}
        param["itemName"] = self.param.itemName
        param["itemDesc"] = self.param.itemDesc
        param["alignObject"] = self.item_icon
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIItemTips,{anim = true}, param)
    end
        --end
    --end
end


ActivityRewardItem.OnCreate = OnCreate
ActivityRewardItem.OnDestroy = OnDestroy
ActivityRewardItem.OnBtnClick = OnBtnClick
ActivityRewardItem.OnEnable = OnEnable
ActivityRewardItem.OnDisable = OnDisable
ActivityRewardItem.RefreshData = RefreshData

return ActivityRewardItem