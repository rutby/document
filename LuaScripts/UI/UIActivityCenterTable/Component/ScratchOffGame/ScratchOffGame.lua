---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1020.
--- DateTime: 2023/5/23 14:33
---

local ScratchOffGame = BaseClass("ScratchOffGame", UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization
local UICommonItem = require "UI.UICommonItem.UICommonItem"
local Setting = CS.GameEntry.Setting

local activityBg_path = "RightView/CharacterBg"
local activityTitle_path = "RightView/Top/title"
local activitySubTitle_path = "RightView/Top/subTitle"
local remainTime_path = "RightView/Top/remainTime"
local infoBtn_path = "RightView/Top/title/infoBtn"
local scratchOffRecordBtn_path = "RightView/RightTop/scratchOffRecordBtn"
local scratchOffRecordTxt_path = "RightView/RightTop/scratchOffRecordBtn/scratchOffRecordTxt"
local scratchOffRankBtn_path = "RightView/RightTop/scratchOffRankBtn"
local scratchOffRankTxt_path = "RightView/RightTop/scratchOffRankBtn/scratchOffRankTxt"
local scratchOffRankNumTxt_path = "RightView/RightTop/scratchOffRankBtn/scratchOffRankNum"
local slider_path = "RightView/Bottom/RewardBg/SliderProcessBar"
local scoreProcessTxt_path = "RightView/Bottom/RewardBg/SliderProcessBar/scoreProcessTxt"
local extraRewardDesTxt_path = "RightView/Bottom/RewardBg/SliderProcessBar/extraRewardDesTxt"
local extraRewardIconImg_path = "RightView/Bottom/RewardBg/extraRewardBg/extraRewardIconImg"
local scratchOffRewardDetailBtn_path = "RightView/Bottom/RewardBg/scratchOffRewardDetailBtn"
local scratchOffRewardDetailTxt_path = "RightView/Bottom/RewardBg/scratchOffRewardDetailBtn/scratchOffRewardDetailTxt"
local itemRewardTxt_path = "RightView/Bottom/RewardBg/itemRewardTxt"
local luckyIconsTxt_path = "RightView/Bottom/RewardBg/luckyIconsTxt"
local currentPoolTxt_path = "RightView/Bottom/RewardBg/currentPoolTxt"
local currentPoolNumTxt_path = "RightView/Bottom/RewardBg/currentPoolNumTxt"
local oneDrawBtn_path = "RightView/Bottom/oneDrawBtn"
local oneDrawTxt_path = "RightView/Bottom/oneDrawBtn/Root/oneDrawTxt"
local oneDrawNumTxt_path = "RightView/Bottom/oneDrawBtn/Root/oneDrawNumTxt"
local oneDrawPropIconImg_path = "RightView/Bottom/oneDrawBtn/Root/oneDrawNumTxt/oneDrawPropIcon"
local oneDrawFreeRed_path = "RightView/Bottom/oneDrawBtn/Root/Img_FreeRed"
local tenDrawBtn_path = "RightView/Bottom/tenDrawBtn"
local tenDrawTxt_path = "RightView/Bottom/tenDrawBtn/Root/tenDrawTxt"
local tenDrawNumTxt_path = "RightView/Bottom/tenDrawBtn/Root/tenDrawNumTxt"
local tenDrawPropIconImg_path = "RightView/Bottom/tenDrawBtn/Root/tenDrawNumTxt/tenDrawPoropIcon"
local tenDrawFree_path = "RightView/Bottom/tenDrawBtn/Root/tenDrawFree"
local tenDrawDiscountTxt_path = "RightView/Bottom/tenDrawBtn/Root/tenDrawFree/tenDrawDiscountTxt"
local remainNumTxt_path = "RightView/Bottom/remainNumTxt"
local skipBtn_path = "RightView/Bottom/skipBtn"
local skipTxt_path = "RightView/Bottom/skipBtn/skipTxt"
local skipMark_path = "RightView/Bottom/skipBtn/skipMark"
local resIconImg_path = "RightView/RightTop/NeedResRoot/resIcon"
local resNumTxt_path = "RightView/RightTop/NeedResRoot/resNum"
local addResBtn_path = "RightView/RightTop/NeedResRoot/rectAdd/addResBtn"
local sliderEff_path = "RightView/Bottom/RewardBg/SliderProcessBar/FillArea/sliderEff"
local scratchAnim_path = "RightView/Bottom/RewardBg/scratchAnim"
local scratchOffImg_path = "RightView/Bottom/RewardBg/scratchOffImg"
local icon1_path = "RightView/Bottom/RewardBg/icon1"
local icon2_path = "RightView/Bottom/RewardBg/icon2"
local icon3_path = "RightView/Bottom/RewardBg/icon3"
local commonResItem_path = "RightView/Bottom/RewardBg/UICommonItem"
local luckyBtn_path = "RightView/Bottom/RewardBg/luckyIconsTxt/Button"
local switchHeroBtn_path = "RightView/Bottom/switchHeroBtn"
local switchHeroTxt_path = "RightView/Bottom/switchHeroBtn/switchHeroTxt"
local switchRed_path = "RightView/Bottom/switchHeroBtn/switchRed"

function ScratchOffGame : OnCreate()
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

function ScratchOffGame : OnDestroy()
    self:DelCountDownTimer()
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

function ScratchOffGame  : DataDefine()
    self.skipAnim = false
end

function ScratchOffGame : DataDestroy()
    self.skipAnim = nil
end

function ScratchOffGame : ComponentDefine()
    self.activityBg = self:AddComponent(UIImage, activityBg_path)
    
    self.activityTitle = self:AddComponent(UIText, activityTitle_path)
    self.activitySubTitle = self:AddComponent(UIText, activitySubTitle_path)
    self.remainTimeTxt = self:AddComponent(UIText, remainTime_path)
    self.infoBtn = self:AddComponent(UIButton, infoBtn_path)
    self.infoBtn:SetOnClick(function()
        self:OnClickInfoBtn()
    end)
    
    self.scratchOffRecordBtn = self:AddComponent(UIButton, scratchOffRecordBtn_path)
    self.scratchOffRecordBtn:SetOnClick(function()
        self:OnClickScratchOffRecordBtn()
    end)
    self.scratchOffRecordTxt = self:AddComponent(UIText, scratchOffRecordTxt_path)
    self.scratchOffRecordTxt:SetLocalText(372925)

    self.scratchOffRankBtn = self:AddComponent(UIButton, scratchOffRankBtn_path)
    self.scratchOffRankBtn:SetOnClick(function()
        self:OnClickScratchOffRankBtn()
    end)
    self.scratchOffRankTxt = self:AddComponent(UIText, scratchOffRankTxt_path)
    self.scratchOffRankTxt:SetLocalText(390040)
    self.scratchOffRankNumTxt = self:AddComponent(UIText, scratchOffRankNumTxt_path)

    self.extraRewardIconImg = self:AddComponent(UIImage, extraRewardIconImg_path)
    
    self.scratchOffRewardDetailBtn = self:AddComponent(UIButton, scratchOffRewardDetailBtn_path)
    self.scratchOffRewardDetailBtn:SetOnClick(function()
        self:OnClickScratchOffRewardDetailBtn()
    end)
    self.scratchOffRewardDetailTxt = self:AddComponent(UIText, scratchOffRewardDetailTxt_path)
    self.scratchOffRewardDetailTxt:SetLocalText(372929)
    
    self.slider = self:AddComponent(UISlider, slider_path)
    self.scoreProcessTxt = self:AddComponent(UIText, scoreProcessTxt_path)
    self.extraRewardDesTxt = self:AddComponent(UIText, extraRewardDesTxt_path)
    self.extraRewardDesTxt:SetLocalText(372926)
    
    self.itemRewardTxt = self:AddComponent(UIText, itemRewardTxt_path)
    self.itemRewardTxt:SetLocalText(372512)
    self.luckyIconsTxt = self:AddComponent(UIText, luckyIconsTxt_path)
    self.luckyIconsTxt:SetLocalText(372927)
    self.currentPoolTxt = self:AddComponent(UIText, currentPoolTxt_path)
    self.currentPoolTxt:SetLocalText(372928)
    self.currentPoolNumTxt = self:AddComponent(UIText, currentPoolNumTxt_path)
    
    self.oneDrawBtn = self:AddComponent(UIButton, oneDrawBtn_path)
    self.oneDrawBtn:SetOnClick(function()
        self:OnClickDrawBtn(0)
    end)
    self.oneDrawTxt = self:AddComponent(UIText, oneDrawTxt_path)
    self.oneDrawTxt:SetText(Localization:GetString("372930", "1"))
    self.oneDrawNumTxt = self:AddComponent(UIText, oneDrawNumTxt_path)
    
    self.oneDrawPropIconImg = self:AddComponent(UIImage, oneDrawPropIconImg_path)
    self.oneDrawFreeRed = self:AddComponent(UIBaseContainer, oneDrawFreeRed_path)
    
    self.tenDrawBtn = self:AddComponent(UIButton, tenDrawBtn_path)
    self.tenDrawBtn:SetOnClick(function() 
        self:OnClickDrawBtn(1)
    end)
    self.tenDrawTxt = self:AddComponent(UIText, tenDrawTxt_path)
    self.tenDrawTxt:SetText(Localization:GetString("372930", "10"))
    self.tenDrawNumTxt = self:AddComponent(UIText, tenDrawNumTxt_path)
    self.tenDrawPropIconImg = self:AddComponent(UIImage, tenDrawPropIconImg_path)
    self.tenDrawFree = self:AddComponent(UIBaseContainer, tenDrawFree_path)
    self.tenDrawDiscountTxt = self:AddComponent(UIText, tenDrawDiscountTxt_path)

    self.remainNumTxt = self:AddComponent(UIText, remainNumTxt_path)
    
    self.skipBtn = self:AddComponent(UIButton, skipBtn_path)
    self.skipBtn:SetOnClick(function()
        self:OnClickSkipBtn()
    end)
    self.skipTxt = self:AddComponent(UIText, skipTxt_path)
    self.skipTxt:SetLocalText(372228)
    self.skipMark = self:AddComponent(UIBaseContainer, skipMark_path)
    
    self.resIconImg = self:AddComponent(UIImage, resIconImg_path)
    self.resNumTxt = self:AddComponent(UIText, resNumTxt_path)
    --self.addResBtn = self:AddComponent(UIImage, addResBtn_path)
    --self.addResBtn:SetOnClick(function()
    --    self:OnClickAddResBtn()
    --end)
    
    self.sliderEff = self:AddComponent(UIBaseContainer, sliderEff_path)
    self.sliderEff:SetActive(false)
    
    self.scratchAnim = self:AddComponent(UIAnimator, scratchAnim_path)
    self.scratchAnim:SetActive(false)
    self.scratchOffImg = self:AddComponent(UIBaseContainer, scratchOffImg_path)
    
    self.icon1 = self:AddComponent(UIImage, icon1_path)
    self.icon2 = self:AddComponent(UIImage, icon2_path)
    self.icon3 = self:AddComponent(UIImage, icon3_path)
    self.commonResItem = self:AddComponent(UICommonItem, commonResItem_path)
    
    self.luckyBtn = self:AddComponent(UIButton, luckyBtn_path)
    self.luckyBtn:SetOnClick(function()
        self:OnClickLuckyBtn()
    end)
    
    self.switchHeroBtn = self:AddComponent(UIButton, switchHeroBtn_path)
    self.switchHeroBtn:SetOnClick(function()
        self:OnSwitchHeroBtn()
    end)
    self.switchHeroTxt = self:AddComponent(UIText, switchHeroTxt_path)
    self.switchHeroTxt:SetLocalText(321120)
    self.switchRed = self:AddComponent(UIBaseContainer, switchRed_path)
end

function ScratchOffGame : OnEnable()
    base.OnEnable(self)
end

function ScratchOffGame : ComponentDestroy()
    
end

function ScratchOffGame : SetData(activityId, id)
    self.activityId = id
    self.actId = activityId

    if not self.activityId then
        return
    end
    self.activityInfo = DataCenter.ActivityListDataManager:GetActivityDataById(tostring(self.activityId))
    if not self.activityInfo then
        return
    end
    --剩余时间
    DataCenter.ActivityListDataManager:SetActivityVisitedEndTime(self.activityId)
    self.endTime = self.activityInfo.endTime
    self:AddCountDownTimer()

    --切换按钮红点
    local clickSwitch = Setting:GetBool(SettingKeys.MINING_CLICK_SWITCH..self.activityId..self.activityInfo.startTime, false)
    self.switchRed:SetActive(not clickSwitch)
    --跳过按钮
    self.skipAnim = Setting:GetBool(SettingKeys.SCRATCH_SKIP_ANIM, false)
    self.skipMark:SetActive(self.skipAnim)

    SFSNetwork.SendMessage(MsgDefines.GetScratchOffGameActivityInfo, self.activityId)
    SFSNetwork.SendMessage(MsgDefines.GetScratchOffGameRankInfo, self.activityId)
end

function ScratchOffGame : RefreshAll()
    if IsNull(self.gameObject) then
        return
    end

    self.activityTitle:SetLocalText(self.activityInfo.name)
    self.activitySubTitle:SetLocalText(self.activityInfo.desc_info)

    self.activityTemplate = DataCenter.ScratchOffGameManager:GetActivityTemplate(self.activityId)
    self.activityParamInfo =  DataCenter.ScratchOffGameManager:GetActivityParamInfo(self.activityId)

    self.chooseHeroIndex = self.activityParamInfo.chooseIndex
    local bgIcon = self.activityTemplate.heroPicList[self.chooseHeroIndex]
    local path = string.format("Assets/Main/TextureEx/UIScratchOff/%s",bgIcon)
    self.activityBg:LoadSprite(path, nil, function()
        self.activityBg:SetNativeSize()
    end)
    
    self.extraRewardIconImg:LoadSprite(self.activityTemplate.extraRewardIconPath[self.chooseHeroIndex])
    
    local curScore = tonumber(self.activityParamInfo.score)
    local maxScore = tonumber(self.activityParamInfo.extraRewardScore)
    self.slider:SetValue(curScore / maxScore)
    self.scoreProcessTxt:SetText(self.activityParamInfo.score.."/"..self.activityParamInfo.extraRewardScore)
    self.currentPoolNumTxt:SetText(string.GetFormattedSeperatorNum(self.activityParamInfo.diamondPool))
    
    local oneDrawNum = 0
    if self.activityParamInfo.oneLotteryCount > 0 then
        oneDrawNum = self.activityTemplate.oneDrawCostNum
        self.oneDrawBtn:LoadSprite(string.format(LoadPath.CommonNewPath,"Common_btn_yellow101"))
        
        self.oneDrawNumTxt:SetText(tostring(oneDrawNum))
        self.oneDrawFreeRed:SetActive(false)
    else
        oneDrawNum = self.activityTemplate.oneDrawFreeCostNum
        self.oneDrawBtn:LoadSprite(string.format(LoadPath.CommonNewPath,"Common_btn_green101"))
        
        self.oneDrawNumTxt:SetLocalText(130126)
        self.oneDrawFreeRed:SetActive(true)
    end
    self.oneDrawCostNum = tonumber(oneDrawNum)
    self.oneDrawPropIconImg:LoadSprite(self.activityTemplate.costItemIconPath)
    
    local tenDrawNum = 0
    if self.activityParamInfo.tenLotteryCount > 0 then
        tenDrawNum = self.activityTemplate.tenDrawCostNum
        self.tenDrawFree:SetActive(false)
    else
        tenDrawNum = self.activityTemplate.tenDrawFreeCostNum
        self.tenDrawFree:SetActive(true)
        local percent = 100 - Mathf.Ceil(100 * tonumber(self.activityTemplate.tenDrawFreeCostNum) / tonumber(self.activityTemplate.tenDrawCostNum))
        self.tenDrawDiscountTxt:SetText("-"..percent.."%")
    end
    self.tenDrawCostNum = tonumber(tenDrawNum)
    self.tenDrawNumTxt:SetText(tostring(tenDrawNum))
    self.tenDrawPropIconImg:LoadSprite(self.activityTemplate.costItemIconPath)

    self.remainNum = self.activityParamInfo:GetRemainLotteryCount()
    self.remainNumTxt:SetText(Localization:GetString("372931", self.remainNum))

    self:RefreshRes()
end

function ScratchOffGame : RefreshRes()
    self.costItemType = tonumber(self.activityTemplate.costItemType)
    self.costItemId = tonumber(self.activityTemplate.costItemId)
    self.resIconImg:LoadSprite(self.activityTemplate.costItemIconPath)
    if self.costItemType == 1 then   --资源 都是钻石
        local tempCount = LuaEntry.Player.gold
        self.resNumTxt:SetText(string.GetFormattedSeperatorNum(tempCount))
    elseif self.costItemType == 2 then --道具
        local tempCount = DataCenter.ItemData:GetItemCount(self.costItemId)
        self.resNumTxt:SetText(string.GetFormattedSeperatorNum(tempCount))
    end
end

function ScratchOffGame : OnClickInfoBtn()
    UIUtil.ShowIntro(Localization:GetString(self.activityInfo.name), Localization:GetString("100239"),Localization:GetString(self.activityInfo.story))
end

function ScratchOffGame : OnClickScratchOffRecordBtn()
    UIManager:GetInstance():OpenWindow(UIWindowNames.ScratchOffRecordPage, self.activityId)
end

function ScratchOffGame : OnClickScratchOffRankBtn()
    UIManager:GetInstance():OpenWindow(UIWindowNames.ScratchOffRankPage, self.activityId)
end

function ScratchOffGame : OnClickScratchOffRewardDetailBtn()
    UIManager:GetInstance():OpenWindow(UIWindowNames.ScratchOffRewardDetailPage, self.activityId, 1)
end

function ScratchOffGame : OnClickDrawBtn(drawType)
    --判断抽取次数是否足够
    if drawType == 0 then
        if self.remainNum < 1 then
            UIUtil.ShowTipsId(372304)
            return
        end
    else
        if self.remainNum < 10 then
            UIUtil.ShowTipsId(372304)
            return
        end
    end
    --判断抽取花费道具是否足够
    if self.costItemType == 1 then   --资源 都是钻石
        local tempCount = LuaEntry.Player.gold
        if drawType == 0 and tempCount < self.oneDrawCostNum then
            GoToUtil.GotoPayTips()
            return
        elseif  drawType == 1 and tempCount < self.tenDrawCostNum then
            GoToUtil.GotoPayTips()
            return
        end
    elseif self.costItemType == 2 then --道具
        local tempCount = DataCenter.ItemData:GetItemCount(self.costItemId)
        if drawType == 0 and tempCount < self.oneDrawCostNum then
            UIUtil.ShowTipsId(120021)
            local lackTab = {}
            local param = {}
            param.type = ResLackType.Item
            param.id = self.costItemId
            param.targetNum = self.oneDrawCostNum
            table.insert(lackTab, param)
            GoToResLack.GoToItemResLackList(lackTab)
            return
        elseif  drawType == 1 and tempCount < self.tenDrawCostNum then
            UIUtil.ShowTipsId(120021)
            local lackTab = {}
            local param = {}
            param.type = ResLackType.Item
            param.id = self.costItemId
            param.targetNum = self.tenDrawCostNum
            table.insert(lackTab, param)
            GoToResLack.GoToItemResLackList(lackTab)
            return
        end
    end
    
    SFSNetwork.SendMessage(MsgDefines.GetScratchOffGameLotteryRes, self.activityId, drawType)
end

function ScratchOffGame : OnClickSkipBtn()
    self.skipAnim = not self.skipAnim
    self.skipMark:SetActive(self.skipAnim)
    Setting:SetBool(SettingKeys.SCRATCH_SKIP_ANIM, self.skipAnim)
end

function ScratchOffGame : AddCountDownTimer()
    self.CountDownTimerAction = function()
        self:RefreshRemainTime()
    end

    if self.countDownTimer == nil then
        self.countDownTimer = TimerManager:GetInstance():GetTimer(1, self.CountDownTimerAction , self, false,false,false)
    end
    self.countDownTimer:Start()
    self:RefreshRemainTime()
end

function ScratchOffGame : RefreshRemainTime()
    local curTime = UITimeManager:GetInstance():GetServerTime()
    local remainTime = self.endTime - curTime
    if remainTime >= 0 then
        self.remainTimeTxt:SetText(UITimeManager:GetInstance():MilliSecondToFmtString(remainTime))
    else
        self.remainTimeTxt:SetText("")
    end
end

function ScratchOffGame : DelCountDownTimer()
    self.CountDownTimerAction = nil
    if self.countDownTimer ~= nil then
        self.countDownTimer:Stop()
        self.countDownTimer = nil
    end
end

function ScratchOffGame : OpenGetRewardPage()
    self.scratchOffImg:SetActive(false)
    
    local firstScratchOffResInfo = DataCenter.ScratchOffGameManager:GetFirstScratchOffResInfo(self.activityId)
    self.commonResItem:ReInit(firstScratchOffResInfo.commonResItemInfo)
    self.icon1:LoadSprite(firstScratchOffResInfo.icon1)
    self.icon2:LoadSprite(firstScratchOffResInfo.icon2)
    self.icon3:LoadSprite(firstScratchOffResInfo.icon3)
    if self.skipAnim then
        UIManager:GetInstance():OpenWindow(UIWindowNames.ScratchOffGameGetRewardPage, self.activityId)
    else
        self.scratchAnim:SetActive(true)
        local ret1,time1 = self.scratchAnim:PlayAnimationReturnTime("V_ui_guaguaka_cachu")
        TimerManager:GetInstance():DelayInvoke(function()
            UIManager:GetInstance():OpenWindow(UIWindowNames.ScratchOffGameGetRewardPage, self.activityId)
        end, time1)
    end
end

function ScratchOffGame : OnClickAddResBtn()
    
end

function ScratchOffGame : RefreshRank()
    local rankInfo = DataCenter.ScratchOffGameManager:GetRankInfoByActId(self.activityId)
    if rankInfo then
        if rankInfo.selfRank > 0 and rankInfo.selfRank < 4 then
            self.scratchOffRankBtn:LoadSprite("Assets/Main/Sprites/UI/UIAlliance/rank/UIactivity_ranking_big0" .. rankInfo.selfRank)
            self.scratchOffRankNumTxt:SetText("")
        else
            self.scratchOffRankBtn:LoadSprite("Assets/Main/Sprites/UI/UIAlliance/rank/UIgolo_btn_rankinga")
            if rankInfo.selfRank > 0 then
                self.scratchOffRankNumTxt:SetText(rankInfo.selfRank)
            else
                self.scratchOffRankNumTxt:SetText("-")
            end
        end
        return
    end
end

function ScratchOffGame : ShowExtraReward()
    self.sliderEff:SetActive(false)
    self.sliderEff:SetActive(true)
    local num = self.activityTemplate.extraRewardItemNum[self.chooseHeroIndex]
    local iconPath = self.activityTemplate.extraRewardIconPath[self.chooseHeroIndex]
    UIUtil.DoFly(RewardType.GOODS, num, iconPath, self.extraRewardIconImg.transform.position, Vector3.New(0,0,0))
end

function ScratchOffGame : OnDisable()
    base.OnDisable(self)
    self.sliderEff:SetActive(false)
end

function ScratchOffGame : OnBackToScratchOff()
    self.scratchAnim:SetActive(false)
    self.scratchOffImg:SetActive(true)
end

function ScratchOffGame : OnClickLuckyBtn()
    UIManager:GetInstance():OpenWindow(UIWindowNames.ScratchOffRewardDetailPage, self.activityId, 2)
end

function ScratchOffGame : OnSwitchHeroBtn()
    Setting:SetBool(SettingKeys.MINING_CLICK_SWITCH..self.activityId..self.activityInfo.startTime, true)
    self.switchRed:SetActive(false)
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIScratchSelectHero,{anim = true}, self.activityTemplate.heroIdList, self.activityId)
end

function ScratchOffGame : SwitchHero()
    self.chooseHeroIndex = self.activityParamInfo.chooseIndex
    local bgIcon = self.activityTemplate.heroPicList[self.chooseHeroIndex]
    local path = string.format("Assets/Main/TextureEx/UIScratchOff/%s",bgIcon)
    self.activityBg:LoadSprite(path, nil, function()
        self.activityBg:SetNativeSize()
    end)

    self.extraRewardIconImg:LoadSprite(self.activityTemplate.extraRewardIconPath[self.chooseHeroIndex])
end

function ScratchOffGame : OnAddListener()
    base.OnAddListener(self)
    self:AddUIListener(EventId.ScratchOffGameActivityParamUpdate, self.RefreshAll)
    self:AddUIListener(EventId.ScratchOffGameRewardLotteryInfoUpdate, self.OpenGetRewardPage)
    self:AddUIListener(EventId.ScratchOffGameRankInfoUpdate, self.RefreshRank)
    self:AddUIListener(EventId.ScratchOffGameGetExtraReward, self.ShowExtraReward)
    self:AddUIListener(EventId.BackToScratchOff, self.OnBackToScratchOff)
    self:AddUIListener(EventId.UpdateGold, self.RefreshRes)
    self:AddUIListener(EventId.ScratchOffGameSelectedHeroUpdate, self.SwitchHero)
end

function ScratchOffGame : OnRemoveListener()
    self:RemoveUIListener(EventId.ScratchOffGameActivityParamUpdate, self.RefreshAll)
    self:RemoveUIListener(EventId.ScratchOffGameRewardLotteryInfoUpdate, self.OpenGetRewardPage)
    self:RemoveUIListener(EventId.ScratchOffGameRankInfoUpdate, self.RefreshRank)
    self:RemoveUIListener(EventId.ScratchOffGameGetExtraReward, self.ShowExtraReward)
    self:RemoveUIListener(EventId.BackToScratchOff, self.OnBackToScratchOff)
    self:RemoveUIListener(EventId.UpdateGold, self.RefreshRes)
    self:RemoveUIListener(EventId.ScratchOffGameSelectedHeroUpdate, self.SwitchHero)
    base.OnRemoveListener(self)
end

return ScratchOffGame