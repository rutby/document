---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zzl.
--- DateTime: 
---

local UISeasonWeekCard = BaseClass("UISeasonWeekCard", UIBaseView)
local base = UIBaseView
local UISeasonWeekReward = require "UI/UIActivityCenterTable/Component/SeasonWeekCard/UISeasonWeekReward"
local UIGiftPackagePoint = require "UI.UIGiftPackage.Component.UIGiftPackagePoint"
local Localization = CS.GameEntry.Localization
local UIGray = CS.UIGray

local CardState = { NotBuy = 1, BuyNotRece = 2 ,Gray = 3}
function UISeasonWeekCard:OnCreate()
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
end

function UISeasonWeekCard:OnDestroy()
    self:DeleteTimer()
    self:DataDestroy()
    base.OnDestroy(self)
end

function UISeasonWeekCard:OnEnable()
    base.OnEnable(self)
end

function UISeasonWeekCard:OnDisable()
    base.OnDisable(self)

end

function UISeasonWeekCard:ComponentDefine()

    self._actName_txt = self:AddComponent(UIText, "Root/Txt_ActName")
    --活动说明
    self.intro_btn = self:AddComponent(UIButton, "Root/Txt_ActName/Intro")
    self.intro_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
         self:OnIntroClick()
    end)
    self._desc_txt = self:AddComponent(UIText,"Root/Txt_Desc")

    self.iconList = {}
    for i = 1 ,6 do
        self.iconList[i] = {}
        self.iconList[i].btn = self:AddComponent(UIButton,"Root/Rect_Img/Btn_bg"..i)
        self.iconList[i].icon = self:AddComponent(UIImage,"Root/Rect_Img/Btn_bg"..i.."/Btn_Icon"..i)
        self.iconList[i].name = self:AddComponent(UIText,"Root/Rect_Img/Btn_bg"..i.."/Txt_Name"..i)
        self.iconList[i].btn:SetOnClick(function()
            SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
            self:OnClickInfo(i)
        end)
    end

    self._tips_txt = self:AddComponent(UIText,"Root/Txt_Tips")

    self._giftReward_rect = self:AddComponent(UIBaseContainer,"Root/Rect_GiftReward")

    self._one_btn = self:AddComponent(UIButton,"Root/Btn_One")
    self._one_txt = self:AddComponent(UIText,"Root/Btn_One/Txt_BtnOne")
    self._buy_txt = self:AddComponent(UIText,"Root/Btn_One/Txt_Buy")
    self._red_btn = self:AddComponent(UIBaseContainer,"Root/Btn_One/Rect_OnGetRed")
    self._one_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnBtnClick()
    end)

    self._time_rect = self:AddComponent(UIBaseContainer,"Root/NotStarted")
    self._time_txt = self:AddComponent(UIText,"Root/NotStarted/Txt_EndTime")

    self.freePackageBtnAnimN = self:AddComponent(UIAnimator, "Root/freePackageBtn")
    self.freePackageBtnN = self:AddComponent(UIButton, "Root/freePackageBtn")
    self.freePackageBtnN:SetOnClick(function()
        self:OnClickClaimFreePackage()
    end)
    self.freePackageOpenN = self:AddComponent(UIImage, "Root/freePackageBtn/opened")
    self.freePackageUnopenN = self:AddComponent(UIImage, "Root/freePackageBtn/unopen")
    self.freeTxtN = self:AddComponent(UIText, "Root/freePackageBtn/freeTxt")
    self.point_rect = self:AddComponent(UIGiftPackagePoint,"Root/Btn_One/UIGiftPackagePoint")
end

function UISeasonWeekCard:DataDefine()
    self.timer = nil
    self.timer_action = function(temp)
        self:RefreshTime(temp)
    end
    self.timer_actionBoss = function(temp)
        self:RefreshBossTime(temp)
    end
end

function UISeasonWeekCard:DataDestroy()
    self:SetAllCellDestroy()
end

function UISeasonWeekCard:OnAddListener()
    base.OnAddListener(self)
    self:AddUIListener(EventId.OnRefreshSeasonCard, self.OnRefresh)
    self:AddUIListener(EventId.SeasonWeekCardBuy, self.BuyCardHandle)
    self:AddUIListener(EventId.SeasonWeekCardReward, self.GetRewardHandle)
    self:AddUIListener(EventId.UpdateGiftPackData, self.RefreshShowReward)
end

function UISeasonWeekCard:OnRemoveListener()
    base.OnRemoveListener(self)
    self:RemoveUIListener(EventId.OnRefreshSeasonCard, self.OnRefresh)
    self:RemoveUIListener(EventId.SeasonWeekCardBuy, self.BuyCardHandle)
    self:RemoveUIListener(EventId.SeasonWeekCardReward, self.GetRewardHandle)
    self:RemoveUIListener(EventId.UpdateGiftPackData, self.RefreshShowReward)
end

function UISeasonWeekCard:SetData(activityId,actId)
    self.activityId = activityId
    self.freePackageBtnAnimN:Play("V_ui_zhoukabaoxiang_default", 0, 0)
    SFSNetwork.SendMessage(MsgDefines.GetSeasonWeekCardInfo, activityId)
    local actListData = DataCenter.ActivityListDataManager:GetActivityDataById(self.activityId)
    self.actListData = actListData
    if actListData then
        self:RefreshTitle(actListData)
        local iconData = actListData.para1
        local str = string.split(iconData,"|")
        for i = 1 ,table.count(str) do
            local item = string.split(str[i],";")
            self.iconList[i].icon:LoadSprite(string.format("Assets/Main/Sprites/UI/UISeasonWeekCard/%s",item[1]))
            self.iconList[i].name:SetLocalText(item[2])
        end
    end
    self.actData = DataCenter.ActSeasonWeekCardData:GetInfoByActId(tonumber(self.activityId))
    if self.actData and next(self.actData) then
        self:RefreshTop()
    end
end

--刷新
function UISeasonWeekCard:OnRefresh()
    self.actData = DataCenter.ActSeasonWeekCardData:GetInfoByActId(tonumber(self.activityId))
    if self.actData and next(self.actData) then
        local curTime = UITimeManager:GetInstance():GetServerTime()
        --是否购买了周卡
        if self.actData.cardInfo and next(self.actData.cardInfo) and self.actData.cardInfo.endTime ~= 0 and curTime < self.actData.cardInfo.endTime then
            self._tips_txt:SetLocalText(372523)
            self._time_rect:SetActive(true)
            self:RefreshTime(self.actData.cardInfo.endTime)
            self:AddTimer(self.actData.cardInfo.endTime)
            ----是否可领取付费奖励
            if self.actData.cardInfo.lastReceiveTime == 0 then
                --还没有领取过
                self.cardState = CardState.BuyNotRece
            else
                --上次领奖与现在是同一天，不可再领奖
                if UITimeManager:GetInstance():IsSameDayForServer(curTime // 1000, self.actData.cardInfo.lastReceiveTime // 1000) then
                    self.cardState = CardState.Gray
                else
                    self.cardState = CardState.BuyNotRece
                end
            end
            self:RefreshGiftReward(self.actData.reward)
        else
            self._tips_txt:SetLocalText(372521)
            self._time_rect:SetActive(false)
            self.cardState = CardState.NotBuy
            --礼包显示奖励
            local packs = GiftPackManager.get(self.actData.exchangeId)
            if packs then
                self.rewardList = DataCenter.RewardManager:ParsePackReward(packs)
                self:RefreshGiftReward(self.rewardList)
            end
        end
        self:RefreshTop()
        self:RefreshBtn()
    end
end

function UISeasonWeekCard:RefreshShowReward()
    if self.actData then
        local curTime = UITimeManager:GetInstance():GetServerTime()
        if self.actData.cardInfo and self.actData.cardInfo.endTime and self.actData.cardInfo.endTime ~= 0 and curTime < self.actData.cardInfo.endTime then
            self:RefreshGiftReward(self.actData.reward)
        else
            local packs = GiftPackManager.get(self.actData.exchangeId)
            if packs then
                self.rewardList = DataCenter.RewardManager:ParsePackReward(packs)
                self:RefreshGiftReward(self.rewardList)
            end
        end
    end
end

function UISeasonWeekCard:OnClickInfo(index)
    local iconData = self.actListData.para1
    local str = string.split(iconData,"|")
    local item = string.split(str[index],";")
    local param = {}
    param.type = "desc"
    param.desc = Localization:GetString(item[3])
    param.alignObject = self.iconList[index].btn
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIItemTips, {anim = true}, param)
end

--{{{活动时间
function UISeasonWeekCard:AddTimer(endTime)
    if self.timer == nil then
        self.timer = TimerManager:GetInstance():GetTimer(1, self.timer_action ,endTime , false,false,false)
    end
    self.timer:Start()
end

function UISeasonWeekCard:RefreshTime(endTime)
    local curTime = UITimeManager:GetInstance():GetServerTime()
    if endTime < curTime then
        self:DeleteTimer()
        self.actEnd = true
    else
        self._time_txt:SetText(UITimeManager:GetInstance():MilliSecondToFmtString(endTime - curTime))
        self.actEnd = false
    end
end

function UISeasonWeekCard:DeleteTimer()
    if self.timer ~= nil then
        self.timer:Stop()
        self.timer = nil
    end
end
--}}}


--活动标题
function UISeasonWeekCard:RefreshTitle(actListData)
    self._actName_txt:SetLocalText(actListData.name)
    self._desc_txt:SetLocalText(actListData.desc_info)
end

--按钮刷新
function UISeasonWeekCard:RefreshBtn()
    self.point_rect:SetActive(false)
    if self.cardState == CardState.NotBuy then
        self._one_txt:SetActive(false)
        self._buy_txt:SetActive(true)
        local packs = GiftPackManager.get(self.actData.exchangeId)
        if packs then
            local price = DataCenter.PayManager:GetDollarText(packs:getPrice(), packs:getProductID())
            self._buy_txt:SetText(price)
            self._red_btn:SetActive(false)
            self._one_btn:LoadSprite(string.format(LoadPath.CommonNewPath,"Common_btn_yellow101"))
            UIGray.SetGray(self._one_btn.transform, false, true)
            --积分
            self.point_rect:RefreshPoint(packs)
        end
    elseif self.cardState == CardState.BuyNotRece then
        self._one_txt:SetActive(true)
        self._buy_txt:SetActive(false)
        self._one_btn:LoadSprite(string.format(LoadPath.CommonNewPath,"Common_btn_green101"))
        self._one_txt:SetLocalText(170004)
        self._red_btn:SetActive(true)
        UIGray.SetGray(self._one_btn.transform, false, true)
    elseif self.cardState == CardState.Gray then
        self._one_txt:SetActive(true)
        self._buy_txt:SetActive(false)
        self._one_btn:LoadSprite(string.format(LoadPath.CommonNewPath,"Common_btn_green101"))
        self._one_txt:SetLocalText(170003)
        self._red_btn:SetActive(false)
        UIGray.SetGray(self._one_btn.transform, true, false)
    end
end

--{{{
--显示奖励刷新
function UISeasonWeekCard:RefreshGiftReward(rewardList)
    self:SetAllCellDestroy()
    self.model = {}
    for i = 1, table.count(rewardList) do
        --复制基础prefab，每次循环创建一次
        self.model[i] = self:GameObjectInstantiateAsync(UIAssets.UISeasonWeekReward, function(request)
            if request.isError then
                return
            end
            local go = request.gameObject;
            go.gameObject:SetActive(true)
            go.transform:SetParent(self._giftReward_rect.transform)
            go.transform:Set_localScale(1,1,1)
            go.name ="showReward" .. i
            local cell = self._giftReward_rect:AddComponent(UISeasonWeekReward,go.name)
            cell:ReInit(rewardList[i])
        end)
    end
end

function UISeasonWeekCard:SetAllCellDestroy()
    self._giftReward_rect:RemoveComponents(UISeasonWeekReward)
    if self.model~=nil then
        for k,v in pairs(self.model) do
            if v ~= nil then
                self:GameObjectDestroy(v)
            end
        end
    end
end
--}}}

--{{{免费礼包
function UISeasonWeekCard:RefreshTop()
    self.isGet = true
    local curTime = UITimeManager:GetInstance():GetServerTime()
    if self.actData.cardInfo and next(self.actData.cardInfo) then
        if self.actData.cardInfo.lastReceiveFreeTime == 0 then
            self.freePackageBtnAnimN:Play("V_ui_zhoukabaoxiang_01_idle", 0, 0)
            self.freePackageOpenN:SetActive(false)
            self.freePackageUnopenN:SetActive(true)
            self.freeTxtN:SetLocalText(320227)
        else
            --上次领奖与现在是同一天，不可再领奖
            if UITimeManager:GetInstance():IsSameDayForServer(curTime // 1000, self.actData.cardInfo.lastReceiveFreeTime // 1000) then
                self.freePackageBtnAnimN:Play("V_ui_zhoukabaoxiang_01_opened", 0, 0)
                self.freePackageOpenN:SetActive(true)
                self.freePackageUnopenN:SetActive(false)
                self.freeTxtN:SetLocalText(170003)
                self.isGet =false
            else
                self.freePackageBtnAnimN:Play("V_ui_zhoukabaoxiang_01_idle", 0, 0)
                self.freePackageOpenN:SetActive(false)
                self.freePackageUnopenN:SetActive(true)
                self.freeTxtN:SetLocalText(320227)
            end
        end
    else
        --cardinfo不存在话免费领
        self.freePackageBtnAnimN:Play("V_ui_zhoukabaoxiang_01_idle", 0, 0)
        self.freePackageOpenN:SetActive(false)
        self.freePackageUnopenN:SetActive(true)
        self.freeTxtN:SetLocalText(320227)
    end
 
end

function UISeasonWeekCard:OnClickClaimFreePackage()
    if self.isGet then
        self.freePackageBtnAnimN:Play("V_ui_zhoukabaoxiang_01_open", 0, 0)
        self.claimFreeTimer = TimerManager:GetInstance():DelayInvoke(function()
            SFSNetwork.SendMessage(MsgDefines.ReceiveSeasonWeekCardReward, self.activityId,1)
            self.claimFreeTimer = nil
        end, 0.5)
    else
        UIUtil.ShowTipsId(170003)
    end
end
--}}}

--购买
function UISeasonWeekCard:BuyCardHandle()
    self.cardState = CardState.BuyNotRece
    self.actData = DataCenter.ActSeasonWeekCardData:GetInfoByActId(tonumber(self.activityId))
    self:RefreshBtn()
    self:RefreshGiftReward(self.actData.reward)
    self._time_rect:SetActive(true)
    self:RefreshTime(self.actData.cardInfo.endTime)
    self:AddTimer(self.actData.cardInfo.endTime)
    self._tips_txt:SetLocalText(372523)
end

--领奖
function UISeasonWeekCard:GetRewardHandle(type)
    self.actData = DataCenter.ActSeasonWeekCardData:GetInfoByActId(tonumber(self.activityId))
    if type == 1 then
        self:RefreshTop()
    elseif type == 2 then
        self.cardState = CardState.Gray
        self:RefreshBtn()
    end
end

function UISeasonWeekCard:OnBtnClick()
    if self.cardState == CardState.NotBuy then
        local packs = GiftPackManager.get(self.actData.exchangeId)
        if packs then
            --检查赛季结束时间
            local activityInfo = DataCenter.RobotWarsManager:GetActivityInfo()
            if activityInfo then
                local seasonEndTime = activityInfo.settleEndTime
                local curTime = UITimeManager:GetInstance():GetServerTime()
                if seasonEndTime ~= 0 and seasonEndTime - curTime <= OneDayTime * 6000 then
                    UIUtil.ShowMessage(Localization:GetString("320802"), 2, GameDialogDefine.CONFIRM, GameDialogDefine.CANCEL, function()
                        DataCenter.PayManager:CallPayment(packs, UIWindowNames.UIActivityCenterTable)
                    end)
                    return
                end
            end
            DataCenter.PayManager:CallPayment(packs, UIWindowNames.UIActivityCenterTable)
        end
    elseif self.cardState == CardState.BuyNotRece then
        if self.actEnd then
            return UIUtil.ShowTipsId(370100)
        end
        SFSNetwork.SendMessage(MsgDefines.ReceiveSeasonWeekCardReward, self.activityId,2)
    end
end

function UISeasonWeekCard:OnIntroClick()
    UIUtil.ShowIntro(Localization:GetString(self.actListData.name), Localization:GetString("100239"),Localization:GetString(self.actListData.story))
end

return UISeasonWeekCard