---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zzl.
--- DateTime: 
---
local UIActivitySevenDayItem = BaseClass("UIActivitySevenDayItem",UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization
local RewardUtil = require "Util.RewardUtil"
local ActivityRewardItem = require "UI.UIActivityCenterTable.Component.ActivityRewardItem"
local UIGray = CS.UIGray
local Txt_Name = "Txt_Name"
local Txt_Score = "scoreItem/Txt_Score"
local Txt_TaskTarget = "Txt_TaskTarget"
local Btn_Reward = "Btn_Reward"
local Txt_Reward = "Btn_Reward/Txt_Reward"
local Txt_Gray = "Btn_Reward/Txt_Gray"
local Btn_Go = "Btn_Go"
local Txt_Go = "Btn_Go/Txt_Go"
local Btn_Locked = "Btn_Locked"
local Txt_Locked = "Btn_Locked/Txt_Locked"
local Txt_Completed = "Txt_Completed"
local Img_Completed = "Img_Completed"
local Img_integral = "scoreItem/Img_integral"
local Rect_Reward = "Rect_Reward"
local flyPos_path = "RectFlyPos/flyPos"
function UIActivitySevenDayItem:OnCreate()
    base.OnCreate(self)
    
    --任务名称
    self._name_txt = self:AddComponent(UITextMeshProUGUIEx,Txt_Name)

    --任务积分
    self._score_txt  = self:AddComponent(UITextMeshProUGUIEx,Txt_Score)
    
    self._taskTarget_txt = self:AddComponent(UITextMeshProUGUIEx,Txt_TaskTarget)

    self._reward_btn = self:AddComponent(UIButton,Btn_Reward)
    self._reward_txt = self:AddComponent(UITextMeshProUGUIEx,Txt_Reward)
    self._gray_txt = self:AddComponent(UITextMeshProUGUIEx,Txt_Gray)
    self._gray_txt:SetLocalText(170004) 
    self._reward_txt:SetLocalText(170004) 
    self._reward_btn:SetOnClick(function()
        self:OnClickReward()
    end)

    self._go_btn = self:AddComponent(UIButton,Btn_Go)
    self._go_txt = self:AddComponent(UITextMeshProUGUIEx,Txt_Go)
    self._go_txt:SetLocalText(110003) 
    self._go_btn:SetOnClick(function()
        self:OnClickGo()
    end)
    
    self._locked_btn = self:AddComponent(UIButton, Btn_Locked)
    UIGray.SetGray(self._locked_btn.transform, true)
    self._locked_txt = self:AddComponent(UITextMeshProUGUIEx, Txt_Locked)
    self._locked_txt:SetLocalText(120050)
    
    self._completed_img = self:AddComponent(UIImage, Img_Completed)
    --self._completed_txt = self:AddComponent(UITextMeshProUGUIEx,Txt_Completed)
    --self._completed_txt:SetLocalText(170008) 

    self.rewardRect = self:AddComponent(UIBaseContainer, Img_integral)

    self.content = self:AddComponent(UIBaseContainer,Rect_Reward)

    self.flyPosList = {}
    for i = 1,5 do
        self.flyPosList[i] = self:AddComponent(UIBaseContainer, flyPos_path..i)
    end
end

function UIActivitySevenDayItem:OnDestroy()
    self:SetAllCellDestroy()
    self._name_txt = nil
    self._score_txt = nil
    
    base.OnDestroy(self)
end

function UIActivitySevenDayItem:OnEnable()
    base.OnEnable(self)
end

function UIActivitySevenDayItem:OnDisable()

    base.OnDisable(self)
end

function UIActivitySevenDayItem:RefreshData(param)
    self.param = param
    self.taskId = param.taskId
    self.taskValue = DataCenter.TaskManager:FindTaskInfo(self.taskId)
    self.template = LocalController:instance():getLine(DataCenter.QuestTemplateManager:GetTableName(), self.taskId)
    if param.day > DataCenter.ActivityListDataManager:GetSevenDayList().days then
        -- 未解锁
        self._reward_btn:SetActive(false)
        self._go_btn:SetActive(false)
        self._locked_btn:SetActive(true)
        --self._completed_txt:SetActive(false)
        self._completed_img:SetActive(false)
    else
        local state = self.taskValue.state
        if state == 2 then
            --已领取
            self._reward_btn:SetActive(false)
            self._go_btn:SetActive(false)
            self._locked_btn:SetActive(false)
            --self._completed_txt:SetActive(true)
            self._completed_img:SetActive(true)
        elseif state == 1 then
            --可领取
            self._reward_btn:SetActive(true)
            self._go_btn:SetActive(false)
            self._locked_btn:SetActive(false)
            --self._completed_txt:SetActive(false)
            self._completed_img:SetActive(false)
            self._reward_txt:SetActive(true)
            self._gray_txt:SetActive(false)
            UIGray.SetGray(self._reward_btn.transform, false, true)
        else
            self._locked_btn:SetActive(false)
            --self._completed_txt:SetActive(false)
            self._completed_img:SetActive(false)
            --前往
            if self.template.gotype2 > 0 then
                self._go_btn:SetActive(true)
                self._reward_btn:SetActive(false)
            else
                self._reward_btn:SetActive(true)
                self._go_btn:SetActive(false)
                self._reward_txt:SetActive(false)
                self._gray_txt:SetActive(true)
                UIGray.SetGray(self._reward_btn.transform, true, false)
            end
        end
    end

    -- local isProcess = questXml:GetInt("progress")
    local process = ""
    local feizi = self.taskValue.num        
    local feimu = self.template.para2
    if (feizi - feimu) >= 0 then
        feizi = feimu
    end
    feizi = string.GetFormattedSeperatorNum(feizi)
    feimu = string.GetFormattedStr(feimu)
    process = "("..feizi.."/"..feimu..")"
    self._name_txt:SetText(DataCenter.QuestTemplateManager:GetDesc(self.template))

    --已领取
    if self.taskValue.state == 2 then
        self._taskTarget_txt:SetActive(false)
    else
        self._taskTarget_txt:SetActive(true)
        self._taskTarget_txt:SetText(process)
    end
    
    self._score_txt:SetText(param.point)

    self:RefreshReward(self.taskValue.rewardList)
end

function UIActivitySevenDayItem:GetDesc(desc,desctype,para1,para2)
    local show1 = nil
    local show2 = nil
    if desctype == QuestDescType.Normal then
        show1 = para1
        show2 = para2
    elseif desctype == QuestDescType.Build then
        show1 = Localization:GetString(GetTableData(DataCenter.BuildTemplateManager:GetTableName(), para1 + para2,"name"))
        show2 = para2
    elseif desctype == QuestDescType.Train then
        local template = DataCenter.ArmyTemplateManager:GetArmyTemplate(para1)
        if template ~= nil then
            show1 = Localization:GetString(template.name)
        end
        show2 = para2
    elseif desctype == QuestDescType.HeroUpStar then
        show1 = Localization:GetString(GetTableData(TableName.NewHeroesQuality, para1, "name"))
        show2 = para2
    elseif desctype == QuestDescType.Resource then
        local template = DataCenter.ResourceTemplateManager:GetResourceTemplate(para1)
        if template ~= nil then
            show1 = Localization:GetString(template.name)
        end
        show2 = para2
    elseif desctype == QuestDescType.Science then
        local baseId = CommonUtil.GetScienceBaseType(para1)
        local level = CommonUtil.GetScienceLv(para1)
        local template = DataCenter.ScienceTemplateManager:GetScienceTemplate(baseId,level)
        if template ~= nil then
            show1 = Localization:GetString(template.name)
        end
        show2 = para2
    elseif desctype == QuestDescType.Monster then
        local level = DataCenter.MonsterTemplateManager:GetTableValue(para1, "level")
        local name = DataCenter.MonsterTemplateManager:GetTableValue(para1, "name")
        show1 = Localization:GetString(GameDialogDefine.MONSTER_LEVEL_NAME,level,Localization:GetString(name))
        show2 = para2
    else
        show1 = para1
        show2 = para2
    end

    local empty1 = show1 == nil or show1 == ""
    local empty2 = show2 == nil or show2 == ""
    if show1 ~= "" and type(show1) == "number" then
        show1 = string.GetFormattedSeperatorNum(show1)
    end
    if show2 ~= "" and type(show2) == "number"  then
        show2 = string.GetFormattedSeperatorNum(show2)
    end
    if empty1 and empty2 then
        return Localization:GetString(desc)
    else
        return Localization:GetString(desc,show1,show2)
    end
end

function UIActivitySevenDayItem:SetAllCellDestroy()
    self.content:RemoveComponents(ActivityRewardItem)
    if self.model~=nil then
        for k,v in pairs(self.model) do
            if v ~= nil then
                self:GameObjectDestroy(v)
            end
        end
    end
end

function UIActivitySevenDayItem:RefreshReward(list)
    self:SetAllCellDestroy()
    self.showList = self.view.ctrl:RewardItemList(list)
    self.model = {}
    local param = {}
    param.count = self.param.point
    param.rewardType = RewardType.SEVENDAY_SCORE
    table.insert(self.showList,param)
    if self.showList ~= nil then
        for i = 1, table.length(self.showList) do
            --复制基础prefab，每次循环创建一次
            self.model[i] = self:GameObjectInstantiateAsync(UIAssets.UICommonItemSize, function(request)
                if request.isError then
                    return
                end
                local go = request.gameObject;
                --go.gameObject:SetActive(true)
                go.transform:SetParent(self.content.transform)
                go.transform:Set_localScale(1, 1, 1)
                go.transform:Set_sizeDelta(100, 100)
                --go.transform:Set_localPosition(0, -50,0)
                go.name ="item" .. i
                local cell = self.content:AddComponent(ActivityRewardItem,go.name)
                cell:RefreshData(self.showList[i])
            end)
        end

        for i = 1,#self.showList do
            self.showList[i].iconImg = self.flyPosList[i]
        end
    end
end

--任务奖励
function UIActivitySevenDayItem:GetForward()
    local tempType = {}
    for i, v in ipairs(self.taskValue.rewardList) do
        if v.rewardType == RewardType.METAL or v.rewardType == RewardType.WATER or v.rewardType == RewardType.ELECTRICITY then
            tempType = {ResourceType.Metal,ResourceType.Electricity,ResourceType.Water}
            break
        end
    end
    EventManager:GetInstance():Broadcast(EventId.RefreshTopResByPickUp,tempType)
    for i, v in ipairs(self.taskValue.rewardList) do
        local rewardType = v.rewardType
        local itemId = v.itemId
        local pic =RewardUtil.GetPic(v.rewardType,itemId)
        local img = self.showList[i].iconImg
        if pic~="" then
            UIUtil.DoFly(tonumber(rewardType),3,pic,img.transform.position,Vector3.New(0,0,0))
        end
    end
end

function UIActivitySevenDayItem:OnClickReward()
    self:GetForward()
    self.view.ctrl:GetSevenDayTaskReward(self.taskId)
end

function UIActivitySevenDayItem:OnClickGo()
    GoToUtil.GoToByQuestId(self.template)
end

return UIActivitySevenDayItem