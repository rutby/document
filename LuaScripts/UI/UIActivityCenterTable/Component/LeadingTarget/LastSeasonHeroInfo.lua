---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2023/1/30 17:16
---


local LastSeasonHeroInfo = BaseClass("LastSeasonHeroInfo", UIBaseContainer)
local base = UIBaseContainer

local LastSeasonHeroInfoCell = require "UI.UIActivityCenterTable.Component.LeadingTarget.LastSeasonHeroInfoCell"
--local LastSeasonHeroInfoCell = require "UI.UIHero2.Common.UIHeroCellBig"
local title_path = "HeroInfoTitle"
local goal_path = "HeroInfoSubTitle"
local scroll_view_path = "HeroInfoScrollView"
local confirm_btn_path = "ConfirmBtn"
local confirm_btn_text_path = "ConfirmBtn/ConfirmBtnText"
local getReward_btn_path = "GetRewardBtn"
local getReward_btn_text_path = "GetRewardBtn/GetRewardBtnText"
local ani_path = ""
local AnimationName = {
    AnimationName_Move_In = "UI_HeroRestartFrame_movein",
    AnimationName_Move_Out = "UI_HeroRestartFrame_moveout",
}

-- 创建
local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

-- 销毁
local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

--控件的定义
local function ComponentDefine(self)
    self.titleN = self:AddComponent(UITextMeshProUGUI, title_path)
    --self.titleN:SetLocalText(372556)
    self.goalTxtN = self:AddComponent(UITextMeshProUGUI, goal_path)
    local seasonId = DataCenter.SeasonDataManager:GetSeasonId() or 0
    self.goalTxtN:SetLocalText(372557, seasonId - 1)
    --self.animator = self.transform:Find(ani_path):GetComponent(typeof(CS.UnityEngine.Animator))
    self.animator = self:AddComponent(UIAnimator, ani_path)
    self.scroll_view = self:AddComponent(UIScrollView, scroll_view_path)
    self.scroll_view:SetOnItemMoveIn(function(itemObj, index)
        self:OnCreateCell(itemObj, index)
    end)
    self.scroll_view:SetOnItemMoveOut(function(itemObj, index)
        self:OnDeleteCell(itemObj, index)
    end)

    self.confirm_btn = self:AddComponent(UIButton, confirm_btn_path)
    self.confirm_btn_text = self:AddComponent(UITextMeshProUGUI, confirm_btn_text_path)
    self.confirm_btn_text:SetLocalText(GameDialogDefine.CONFIRM)
    self.confirm_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnConfirmClick()
    end)

    self.getReward_btn = self:AddComponent(UIButton, getReward_btn_path)
    self.getReward_btn_text = self:AddComponent(UITextMeshProUGUI, getReward_btn_text_path)
    self.getReward_btn_text:SetLocalText(372573)
    self.getReward_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnConfirmClick()
    end)
end

--控件的销毁
local function ComponentDestroy(self)
    self:ClearScroll()
    if self.delayTimer then
        self.delayTimer:Stop()
        self.delayTimer = nil
    end
end

--变量的定义
local function DataDefine(self)
    self.dataList = {}
    self.isInit = true
end

--变量的销毁
local function DataDestroy(self)
    self.dataList = {}
    self.isInit = true
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.GetLastSeasonHeroRecordInfoSuccess, self.ShowCells)
end

local function OnRemoveListener(self)
    self:RemoveUIListener(EventId.GetLastSeasonHeroRecordInfoSuccess, self.ShowCells)
    base.OnRemoveListener(self)
end

local function OnCreateCell(self,itemObj, index)
    itemObj.name = tostring(index)
    local cellItem = self.scroll_view:AddComponent(LastSeasonHeroInfoCell, itemObj)
    local data =  self.dataList[index]
    cellItem:SetData(data, self.isInit)
end

local function OnDeleteCell(self,itemObj, index)
    self.scroll_view:RemoveComponent(itemObj.name, LastSeasonHeroInfoCell)
end

local function ClearScroll(self)
    self.scroll_view:ClearCells()
    self.scroll_view:RemoveComponents(LastSeasonHeroInfoCell)
end

local function ShowCells(self)
    self:GenerateData()
    self:ClearScroll()
    local count = #self.dataList
    if count == 0 then
        return
    end
    self.scroll_view:SetTotalCount(count)
    self.scroll_view:RefillCells()
    self.isInit = false
end

-- 显示
local function OnEnable(self)
    self.isInit = true
    base.OnEnable(self)
end

-- 隐藏
local function OnDisable(self)
    base.OnDisable(self)
end


local function GetHeroInfoDataFromServer(self)
    SFSNetwork.SendMessage(MsgDefines.GetLastSeasonHeroRecordInfo)
end

local function RefreshView(self, activityName, isNew)
    local seasonId = DataCenter.SeasonDataManager:GetSeasonId() or 0
    self.titleN:SetLocalText(activityName, seasonId - 1)
    self.confirm_btn:SetActive(isNew ~= true)
    self.getReward_btn:SetActive(isNew == true)

    local data = DataCenter.HeroDataManager:GetLastSeasonHeroRecordInfo()
    if data == nil then
        self:GetHeroInfoDataFromServer()
    else
        self:ShowCells()
    end
end

local function GenerateData(self)
    self.dataList = {}
    local all = DataCenter.HeroDataManager:GetLastSeasonHeroRecordInfo()
    if all == nil then
        return
    end
    local rankIds = {}
    LocalController:instance():visitTable(TableName.HeroMilitaryRank,function(id,lineData)
        local lv = lineData["level"]
        local stage = lineData["stage"]
        local key = lv.."_"..stage
        rankIds[key] = lineData["id"]
    end)
    for _, v in ipairs(all) do
        local tmp = {}
        tmp.heroId = v.heroId
        tmp.rarity = GetTableData(HeroUtils.GetHeroXmlName(), v.heroId, 'rarity')
        tmp.quality = v.qua
        tmp.level = v.lev
        tmp.maxLv = v.maxLv
        local key = v.rankLv.."_"..v.stage
        tmp.rankLv = rankIds[key] or 1
        
        table.insert(self.dataList, tmp)
    end
    table.sort(self.dataList, function (k, v)
        if k.rarity ~= v.rarity then
             return k.rarity < v.rarity
        end
        if k.quality ~= v.quality then
            return k.quality > v.quality
        end
        if k.level ~= v.level then
            return k.level > v.level
        end
        return toInt(k.heroId) > toInt(v.heroId)
    end)
end

local function OnConfirmClick(self)
    local ret,time = self.animator:PlayAnimationReturnTime(AnimationName.AnimationName_Move_Out)
    if ret then
        if self.delayTimer then
            return
        end
        local allComp = self.scroll_view:GetComponents(LastSeasonHeroInfoCell)
        for _, v in ipairs(allComp) do
            if v then
                v:ShowCloseAnimation()
            end
        end
        self.delayTimer = TimerManager:GetInstance():DelayInvoke(function()
            if self.delayTimer then
                self.delayTimer:Stop()
                self.delayTimer = nil
            end
            if self.clickFun ~= nil then
                self.clickFun()
            end
        end, time)
    else
        if self.clickFun ~= nil then
            self.clickFun()
        end
    end
end

local function SetClickFun(self, clickFun)
    self.clickFun = clickFun
end

LastSeasonHeroInfo.OnCreate = OnCreate
LastSeasonHeroInfo.OnDestroy = OnDestroy
LastSeasonHeroInfo.ComponentDefine = ComponentDefine
LastSeasonHeroInfo.ComponentDestroy = ComponentDestroy
LastSeasonHeroInfo.DataDefine = DataDefine
LastSeasonHeroInfo.DataDestroy = DataDestroy
LastSeasonHeroInfo.OnAddListener = OnAddListener
LastSeasonHeroInfo.OnRemoveListener = OnRemoveListener
LastSeasonHeroInfo.OnCreateCell = OnCreateCell
LastSeasonHeroInfo.OnDeleteCell = OnDeleteCell
LastSeasonHeroInfo.ClearScroll = ClearScroll
LastSeasonHeroInfo.ShowCells = ShowCells
LastSeasonHeroInfo.GetHeroInfoDataFromServer = GetHeroInfoDataFromServer
LastSeasonHeroInfo.RefreshView = RefreshView
LastSeasonHeroInfo.GenerateData = GenerateData
LastSeasonHeroInfo.OnConfirmClick = OnConfirmClick
LastSeasonHeroInfo.SetClickFun = SetClickFun
LastSeasonHeroInfo.OnEnable = OnEnable
LastSeasonHeroInfo.OnDisable = OnDisable

return LastSeasonHeroInfo