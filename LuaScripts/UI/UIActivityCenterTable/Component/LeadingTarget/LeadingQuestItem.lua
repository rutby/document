---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2022/1/13 11:51
---

local LeadingQuestItem = BaseClass("LeadingQuestItem", UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization
local UIGray = CS.UIGray
local RewardUtil = require "Util.RewardUtil"
local LeadingQuestResItem = require "UI.UIActivityCenterTable.Component.LeadingTarget.LeadingQuestResItem"
local title_path = "Txt_Name"
local prog_path = "Txt_TaskTarget"
local content_path = "Rect_Reward"
local claimBtn_path = "Btn_Reward"
local claimBtnTxt_path = "Btn_Reward/Txt_Reward"
local claimedTxt_path = "Txt_Completed"
local claimedImg_path = "Img_Completed"
local grayImg_path = "Btn_Reward/gray"
local go_btn_path = "Btn_Go"
local go_text_path = "Btn_Go/Txt_Go"
local bg_path = ""

-- 创建
local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

-- 销毁
local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

--控件的定义
local function ComponentDefine(self)
    self.titleN = self:AddComponent(UITextMeshProUGUI, title_path)
    self.titleN:SetLocalText(372133)
    self.progN = self:AddComponent(UITextMeshProUGUI, prog_path)
    self.contentN = self:AddComponent(UIBaseContainer, content_path)
    self.claimBtnN = self:AddComponent(UIButton, claimBtn_path)
    self.claimBtnN:SetOnClick(function()
        self:OnClickClaimReward()
    end)
    self.claimBtnImgN = self:AddComponent(UIImage, claimBtn_path)
    self.claimBtnTxtN = self:AddComponent(UITextMeshProUGUI, claimBtnTxt_path)
    self.claimBtnTxtN:SetLocalText(170004)
    --self.claimedTxtN = self:AddComponent(UITextMeshProUGUI, claimedTxt_path)
    --self.claimedTxtN:SetLocalText(170008)
    self.claimedImgN = self:AddComponent(UIImage, claimedImg_path)
    self.grayImgN = self:AddComponent(UIImage, grayImg_path)
    self.grayMat = self.grayImgN:GetMaterial()
    self.goBtnN = self:AddComponent(UIButton, go_btn_path)
    self.goBtnN:SetOnClick(function()
        self:OnGoClick()
    end)
    self.goBtnTxtN = self:AddComponent(UITextMeshProUGUI, go_text_path)
    self.goBtnTxtN:SetLocalText(110003)
    self.bgN = self:AddComponent(UIImage, bg_path)
end

--控件的销毁
local function ComponentDestroy(self)
    self:SetAllCellDestroy()
    self.titleN = nil 
    self.progN = nil
    self.contentN = nil
    self.claimBtnN = nil
    self.claimBtnTxtN = nil
    --self.claimedTxtN = nil
    self.goBtnN = nil
    self.goBtnTxtN = nil
    self.bgN = nil
end

--变量的定义
local function DataDefine(self)
    self.taskInfo = nil
    self.taskValue = nil
    self.showList = nil
    self.listenerInited = nil
    self.isPreview = false
end

--变量的销毁
local function DataDestroy(self)
    self.taskInfo = nil
    self.taskValue = nil
    self.showList = nil
    self.listenerInited = nil
    self.isPreview = false
end

local function OnAddListener(self)
    base.OnAddListener(self)
    --self:AddUIListener(EventId.MainTaskSuccess, self.TryShowClaimEff)

end

local function OnRemoveListener(self)
    if self.listenerInited then
        self:RemoveUIListener(EventId.MainTaskSuccess, self.TryShowClaimEff)
        self.listenerInited = false
    end
    base.OnRemoveListener(self)
end


local function SetItem(self, taskId, bgPath, getFlyPos, isPreview,isOther,activityData)
    self.taskId = taskId
    self.getFlyPos = getFlyPos
    self.taskInfo = LocalController:instance():getLine(DataCenter.QuestTemplateManager:GetTableName(), taskId)
    self.taskValue = DataCenter.TaskManager:FindTaskInfo(taskId)
    self.isPreview = isPreview == true
    self.titleN:SetText(DataCenter.QuestTemplateManager:GetDesc(self.taskInfo, true, isPreview))

    local progNum = self.taskValue.num
    local targetNum = self.taskInfo.para2
    progNum = math.min(progNum, targetNum)
    progNum = string.GetFormattedSeperatorNum(progNum)
    targetNum = string.GetFormattedSeperatorNum(targetNum)
    self.progN:SetText(progNum.."/"..targetNum)

    local state = self.taskValue.state
    if state == 2 then
        --已领取
        --self.claimedTxtN:SetActive(true)
        self.claimedImgN:SetActive(true)
        self.claimBtnN:SetActive(false)
        self.goBtnN:SetActive(false)
    elseif state == 1 then
        --可领取
        --self.claimedTxtN:SetActive(false)
        self.claimedImgN:SetActive(false)
        self.claimBtnN:SetActive(true)
        UIGray.SetGray(self.claimBtnN.transform, false, true)
        --self.claimBtnImgN:SetMaterial(nil)--self.grayMat)
        self.goBtnN:SetActive(false)
    else
        --self.claimedTxtN:SetActive(false)
        self.claimedImgN:SetActive(false)
        --检查配置前往是否存在
        if not self.taskInfo.gotype2 or self.taskInfo.gotype2 == QuestGoType.None or not self.taskInfo.gopara or table.count(self.taskInfo.gopara) < 1 then
            self.claimBtnN:SetActive(false)
            self.goBtnN:SetActive(false)
        elseif self.taskInfo.gotype2 == QuestGoType.GoSearchEnemy or activityData.sub_type == ActivityEnum.ActivitySubType.ActivitySubType_2 then
            self.claimBtnN:SetActive(false)
            self.goBtnN:SetActive(true)
        else
            self.claimBtnN:SetActive(true)
            UIGray.SetGray(self.claimBtnN.transform, true, false)
            self.goBtnN:SetActive(false)
        end
    end
    if isPreview then
        --self.claimedTxtN:SetActive(false)
        self.claimedImgN:SetActive(false)
        UIGray.SetGray(self.claimBtnN.transform, true, true)
        self.progN:SetText("")
    else
        if isOther then
            self.progN:SetActive(self.taskInfo.progressshow == "1")
        else
            self.progN:SetActive(true)
        end
    end
    if not string.IsNullOrEmpty(bgPath) then
        self.bgN:LoadSprite(bgPath)
    end

    self:RefreshReward(self.taskValue.rewardList)
end

local function RefreshReward(self, list)
    self:SetAllCellDestroy()
    self.showList = self.view.ctrl:RewardItemList(list)
    self.model = {}
    if self.showList ~= nil then
        for i = 1, table.length(self.showList) do
            --复制基础prefab，每次循环创建一次
            self.model[i] = self:GameObjectInstantiateAsync(UIAssets.LeadingQuestResItem, function(request)
                if request.isError then
                    return
                end
                local go = request.gameObject;
                --go.gameObject:SetActive(true)
                go.transform:SetParent(self.contentN.transform)
                go.transform:Set_localScale(0.65, 0.65,0.65)
                --go.transform:Set_localPosition(0, -50,0)
                go.name ="item" .. i
                local cell = self.contentN:AddComponent(LeadingQuestResItem,go.name)
                cell:RefreshData(self.showList[i])
                self.showList[i].iconImg = go.transform:Find("UICommonItem/clickBtn/ItemIcon")
            end)
        end
    end
end

local function SetAllCellDestroy(self)
    self.contentN:RemoveComponents(LeadingQuestResItem)
    if self.model~=nil then
        for k,v in pairs(self.model) do
            if v ~= nil then
                self:GameObjectDestroy(v)
            end
        end
    end
end

local function TryShowClaimEff(self, tempTaskId)
    if self.listenerInited then
        self:RemoveUIListener(EventId.MainTaskSuccess, self.TryShowClaimEff)
        self.listenerInited = false
    end
    if self.taskId and self.taskValue and self.taskId == tempTaskId then
        local tempType = {}
        for i, v in ipairs(self.taskValue.rewardList) do
            if v.rewardType == RewardType.METAL or v.rewardType == RewardType.WATER or v.rewardType == RewardType.ELECTRICITY then
                tempType = {ResourceType.Metal,ResourceType.Electricity,ResourceType.Water}
                break
            end
        end
        EventManager:GetInstance():Broadcast(EventId.RefreshTopResByPickUp,tempType)
        
        for i, v in ipairs(self.taskValue.rewardList) do
            local rewardType = v.rewardType
            local itemId = v.itemId
            local pic =RewardUtil.GetPic(v.rewardType,itemId)
            local img = self.showList[i].iconImg
            if pic~="" then
                local pos = Vector3.New(0,0,0)
                if self.getFlyPos then
                    self.getFlyPos(itemId, pos)
                end
                UIUtil.DoFly(tonumber(rewardType),3,pic,img.transform.position,pos)
            end
        end

        EventManager:GetInstance():Broadcast(EventId.OnClaimRewardEffFinish)
        
    end
end


local function OnClickClaimReward(self)
    if self.isPreview then
        UIUtil.ShowTipsId(110558)
        return
    end
    if self.taskValue.state == 1 then
        self:AddUIListener(EventId.MainTaskSuccess, self.TryShowClaimEff)
        self.listenerInited = true
        self.view.ctrl:GetSevenDayTaskReward(self.taskId)
    end
end

local function OnGoClick(self)
    GoToUtil.GoToByQuestId(self.taskInfo)
end

LeadingQuestItem.OnCreate = OnCreate
LeadingQuestItem.OnDestroy = OnDestroy
LeadingQuestItem.ComponentDefine = ComponentDefine
LeadingQuestItem.ComponentDestroy = ComponentDestroy
LeadingQuestItem.DataDefine = DataDefine
LeadingQuestItem.DataDestroy = DataDestroy
LeadingQuestItem.OnAddListener = OnAddListener
LeadingQuestItem.OnRemoveListener = OnRemoveListener

LeadingQuestItem.SetItem = SetItem
LeadingQuestItem.RefreshReward = RefreshReward
LeadingQuestItem.SetAllCellDestroy = SetAllCellDestroy
LeadingQuestItem.TryShowClaimEff = TryShowClaimEff
LeadingQuestItem.OnClickClaimReward = OnClickClaimReward
LeadingQuestItem.OnGoClick = OnGoClick

return LeadingQuestItem