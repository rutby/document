---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zzl.
--- DateTime: 
---

local UISeasonRank = BaseClass("UISeasonRank", UIBaseView)
local base = UIBaseView
local RankListItem = require "UI.UIActivityCenterTable.Component.SeasonRank.RankListItem"
local Localization = CS.GameEntry.Localization

function UISeasonRank:OnCreate()
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
end

function UISeasonRank:OnDestroy()
    self:ClearScroll()
    self:DeleteTimer()
    self:DataDestroy()
    base.OnDestroy(self)
end

function UISeasonRank:OnEnable()
    base.OnEnable(self)
end

function UISeasonRank:OnDisable()
    base.OnDisable(self)

end

function UISeasonRank:ComponentDefine()

    self._actName_txt = self:AddComponent(UIText, "RightView/Top/Txt_ActName")
    self.intro_btn = self:AddComponent(UIButton, "RightView/Top/Txt_ActName/infoBtn")
    self.intro_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnIntroClick()
    end)

    self._desc_txt = self:AddComponent(UIText,"RightView/Top/Txt_ActDesc")
    
    self._endTime_txt = self:AddComponent(UIText,"RightView/Top/Txt_ActEndTime")

    self._time_txt = self:AddComponent(UIText,"RightView/Top/Txt_ActTime")

    self._noRankTips_txt = self:AddComponent(UIText,"RightView/Txt_NoRankTips")
    
    self.name_des = self:AddComponent(UIText,"RightView/ImgBg/select/nameDes")
    self._country_txt = self:AddComponent(UIText,"RightView/ImgBg/select/country")
    self._desertDesc_txt = self:AddComponent(UIText,"RightView/ImgBg/select/Txt_DesertDesc")
    self._desertTime_txt = self:AddComponent(UIText,"RightView/ImgBg/select/Txt_DesertTime")
    
    self.ScrollView = self:AddComponent(UIScrollView, "RightView/ImgBg/ScrollView")
    self.ScrollView:SetOnItemMoveIn(function(itemObj, index)
        self:OnRankItemMoveIn(itemObj, index)
    end)
    self.ScrollView:SetOnItemMoveOut(function(itemObj, index)
        self:OnRankItemMoveOut(itemObj, index)
    end)
    
    self._reward_btn = self:AddComponent(UIButton,"RightView/Btn_Reward")
    self._reward_txt = self:AddComponent(UIText,"RightView/Btn_Reward/Txt_Reward")
    self._reward_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnClickRewardBtn()
    end)
    
    self._selfRank_txt = self:AddComponent(UIText,"RightView/ImgBg/selfObj/Txt_SelfRank")
    self._selfName_txt = self:AddComponent(UIText,"RightView/ImgBg/selfObj/Txt_SelfName")
    self._selfAllianceName_txt = self:AddComponent(UIText,"RightView/ImgBg/selfObj/Txt_SelfAllianceName")
    self._selfDesertTime_txt = self:AddComponent(UIText,"RightView/ImgBg/selfObj/Txt_SelfDesertTime")
    self._selfDesert_txt = self:AddComponent(UIText,"RightView/ImgBg/selfObj/Txt_SelfDesert")
    self._selfCountry_img = self:AddComponent(UIImage,"RightView/ImgBg/selfObj/Img_SelfCountry")
    self.player_img = self:AddComponent(UIPlayerHead, "RightView/ImgBg/selfObj/playerFlag/UIPlayerHead/HeadIcon")
    self.playerHeadFg = self:AddComponent(UIImage, "RightView/ImgBg/selfObj/playerFlag/UIPlayerHead/Foreground")
end

function UISeasonRank:DataDefine()
    self.timer = nil
    self.timer_action = function(temp)
        self:RefreshTime(temp)
    end
end

function UISeasonRank:DataDestroy()
   
end

function UISeasonRank:OnAddListener()
    base.OnAddListener(self)
    self:AddUIListener(EventId.GetRankRefresh, self.OnRefresh)
end

function UISeasonRank:OnRemoveListener()
    base.OnRemoveListener(self)
    self:RemoveUIListener(EventId.GetRankRefresh, self.OnRefresh)
end

function UISeasonRank:SetData(activityId,actId)
    self.activityId = activityId
    self._noRankTips_txt:SetActive(false)
    SFSNetwork.SendMessage(MsgDefines.GetRank,RankType.SeasonDesert)
    local actListData = DataCenter.ActivityListDataManager:GetActivityDataById(self.activityId)
    self.actListData = actListData
    if actListData then
        self:RefreshTitle(actListData)
        self:RefreshTime(actListData.endTime)
        self:AddTimer(actListData.endTime)
    end

    self.player_img:SetData(LuaEntry.Player:GetUid(),LuaEntry.Player:GetPic(),LuaEntry.Player.picVer)
    self._selfName_txt:SetText(LuaEntry.Player:GetName())
    local allianceData = DataCenter.AllianceBaseDataManager:GetAllianceBaseData()
    if allianceData~=nil and LuaEntry.Player:IsInAlliance()  then
        self._selfAllianceName_txt:SetText("["..allianceData.abbr.."]"..allianceData.allianceName)
    else
        self._selfAllianceName_txt:SetText("-")
    end
    local fgImg = LuaEntry.Player:GetHeadBgImg()
    if not string.IsNullOrEmpty(fgImg) then
        self.playerHeadFg:SetActive(true)
        self.playerHeadFg:LoadSprite(fgImg)
    else
        self.playerHeadFg:SetActive(false)
    end
    if LuaEntry.Player:IsHideCountryFlag() then
        self._country_txt:SetActive(false)
        self._selfCountry_img:SetActive(false)
    else
        local countryConfig = DataCenter.NationTemplateManager:GetNationTemplate(LuaEntry.Player.countryFlag)
        self._selfCountry_img:LoadSprite(countryConfig:GetNationFlagPath())
    end
end

--刷新
function UISeasonRank:OnRefresh(message)
    self.rankList = message["rankArr"]

    if self.rankList and table.count(self.rankList) > 0 then
        self._noRankTips_txt:SetActive(false)
        --找自己的排行信息
        local data = nil
        for i = 1 ,table.count(self.rankList) do
            if self.rankList[i].uid == LuaEntry.Player:GetUid() then
                data = self.rankList[i]
                break
            end
        end
        if data then
            self._selfRank_txt:SetText(data.rank)
            self._selfDesert_txt:SetText(data.level)
            self._selfDesertTime_txt:SetText(UITimeManager:GetInstance():TimeStampToTimeForServerMinute(data.time))
        else
            self._selfRank_txt:SetText("-")
            self._selfDesert_txt:SetText("-")
            self._selfDesertTime_txt:SetText("-")
        end
        self.ScrollView:SetTotalCount(#self.rankList)
        self.ScrollView:RefillCells()
    else
        self._noRankTips_txt:SetActive(true)
        self._noRankTips_txt:SetLocalText(110534)
    end
end

function UISeasonRank:OnRankItemMoveIn(itemObj, index)
    itemObj.name = tostring(index)
    local cellItem = self.ScrollView:AddComponent(RankListItem, itemObj)
    cellItem:SetItemShow(self.rankList[index])
end
function UISeasonRank:OnRankItemMoveOut(itemObj, index)
    self.ScrollView:RemoveComponent(itemObj.name, RankListItem)
end
function UISeasonRank:ClearScroll()
    self.ScrollView:ClearCells()
    self.ScrollView:RemoveComponents(RankListItem)
end

--{{{活动时间
function UISeasonRank:AddTimer(endTime)
    if self.timer == nil then
        self.timer = TimerManager:GetInstance():GetTimer(1, self.timer_action ,endTime , false,false,false)
    end
    self.timer:Start()
end

function UISeasonRank:RefreshTime(endTime)
    local curTime = UITimeManager:GetInstance():GetServerTime()
    if endTime < curTime then
        self:DeleteTimer()
        self.actEnd = true
    else
        self._endTime_txt:SetText(UITimeManager:GetInstance():MilliSecondToFmtString(endTime - curTime))
        self.actEnd = false
    end
end

function UISeasonRank:DeleteTimer()
    if self.timer ~= nil then
        self.timer:Stop()
        self.timer = nil
    end
end
--}}}


--活动标题
function UISeasonRank:RefreshTitle(actListData)
    self._actName_txt:SetLocalText(actListData.name)
    self._desc_txt:SetLocalText(actListData.desc_info)
    local startT = UITimeManager:GetInstance():TimeStampToDayForLocal(actListData.startTime)
    local endT = UITimeManager:GetInstance():TimeStampToDayForLocal(actListData.endTime)
    self._time_txt:SetText(startT .. "-" .. endT)
    
    self.name_des:SetLocalText(100184)
    self._country_txt:SetLocalText(143589)
    self._desertDesc_txt:SetLocalText(110465)
    self._desertTime_txt:SetLocalText(110466)
    self._reward_txt:SetLocalText(110467)
end

function UISeasonRank:OnClickRewardBtn()
    UIManager:GetInstance():OpenWindow(UIWindowNames.UISeasonRankReward,self.activityId)
end

function UISeasonRank:OnIntroClick()
    UIUtil.ShowIntro(Localization:GetString(self.actListData.name), Localization:GetString("100239"),Localization:GetString(self.actListData.story))
end

return UISeasonRank