---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by admin.
--- DateTime: 2024/3/29 12:15
---
local UIActivityTipView = BaseClass("UIActivityTipItem",UIBaseView)
local base = UIBaseView

local tip_obj_path = "tip_obj"
local title_text_path = "tip_obj/title_text"
local goto_btn_path = "tip_obj/goto_btn"
local goto_btnText_path = "tip_obj/goto_btn/btn_text"

function UIActivityTipView:OnCreate()
    base.OnCreate(self)
    local param = self:GetUserData()
    self.showData = param[1]
    self.tip_obj = self:AddComponent(UIBaseContainer,tip_obj_path)
    self.title_text = self:AddComponent(UITextMeshProUGUIEx,title_text_path)
    self.goto_btn = self:AddComponent(UIButton,goto_btn_path)
    self.goto_btn:SetOnClick(function()
        self:OnClickGotoBtn()
    end)
    self.goto_btnText = self:AddComponent(UITextMeshProUGUIEx,goto_btnText_path)
end

function UIActivityTipView:OnEnable()
    base.OnEnable(self)
    self:RefreshData()
    self.timer_action = function()
		self.ctrl:CloseSelf()
		DataCenter.ActivityTipManager:GetCurrentShowTip()
    end
    self:AddTimer()
end

function UIActivityTipView:AddTimer()
    if self.timer == nil then
        self.timer = TimerManager:GetInstance():GetTimer(5, self.timer_action, self, false,false,false)
    end
    self.timer:Start()
end

function UIActivityTipView:DeleteTimer()
    if self.timer ~= nil then
        self.timer:Stop()
        self.timer = nil
    end
end

function UIActivityTipView:RefreshData()
    if self.showData then
        self.entranceType = self.showData.entranceType
        self.title_text:SetLocalText(self.showData.tipsId)
        self.goto_btnText:SetLocalText(self.showData.btnName)
        local pos = DataCenter.ActivityTipManager:GetCurPosByEntranceType(self.entranceType)
        local scaleFactor = UIManager:GetInstance():GetScaleFactor()
        self.tip_obj.transform.position = pos +  Vector3.New( - 171 ,-22, 0) * scaleFactor
        DataCenter.ActivityTipManager:SetLocalDataByCondition(self.showData.entranceType,self.showData.conditionType,self.showData.activityType)
    end
end

function UIActivityTipView:OnClickGotoBtn()
    if self.ctrl then
        self.ctrl:CloseSelf()
    end
    DataCenter.ActivityTipManager:ClickGoToEvent(self.showData)
end

function UIActivityTipView:OnDisable()
    self:DeleteTimer()
    self.timer_action = nil
    base.OnDisable(self)
end

function UIActivityTipView:OnDestroy()
    
    base.OnDestroy(self)
end

return UIActivityTipView