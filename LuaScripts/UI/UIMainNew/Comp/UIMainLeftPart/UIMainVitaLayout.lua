---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 24/1/2024 上午11:59
---
local UIMainVitaMatter = require "UI.UIMainNew.Comp.UIMainLeftPart.UIMainVitaMatter"
local UIMainVitaLayout = BaseClass("UIMainVitaLayout", UIBaseContainer)
local base = UIBaseContainer
local MAX_COUNT = 5
local layout_path = ""
local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
end

local function OnDestroy(self)
    self:DataDestroy()
    self:ComponentDestroy()
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function ComponentDefine(self)
    self.layout = self:AddComponent(UIBaseContainer,layout_path)
end

local function ComponentDestroy(self)

end

local function DataDefine(self)
    self.showCount = 0
    self.modelCount = 0 --只增不减
    self.model = {}
end

local function DataDestroy(self)
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.VitaMatterChange, self.OnVitaChange)
end

local function OnRemoveListener(self)
    self:RemoveUIListener(EventId.VitaMatterChange, self.OnVitaChange)
    base.OnRemoveListener(self)
end

function UIMainVitaLayout:RemoveAll()
    self.layout:RemoveComponents(UIMainVitaMatter)
    if self.model~=nil then
        for k,v in pairs(self.model) do
            if v ~= nil then
                self:GameObjectDestroy(v)
            end
        end
    end
    self.model = {}
    self.showCount = 0
end
function UIMainVitaLayout:OnVitaChange()
    self:TryShowNext()
end

function UIMainVitaLayout:TryShowNext()
    if self.showCount >= MAX_COUNT then
        return 
    end
    local matter = DataCenter.VitaManager:PopMatter()
    if matter ~= VitaDefines.Matter.None then
        self.showCount =self.showCount+1
        local modelIndex =self.modelCount+1
        self.modelCount = modelIndex
        if self.model[modelIndex]== nil then
            self.model[modelIndex] = self:GameObjectInstantiateAsync(UIAssets.UIVitaMatter, function(request)
                if request.isError then
                    return
                end
                local go = request.gameObject;
                go.gameObject:SetActive(true)
                go.transform:SetParent(self.layout.transform)
                go.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
                local nameStr = tostring(NameCount)
                go.name = nameStr
                NameCount = NameCount + 1
                local cell = self.layout:AddComponent(UIMainVitaMatter,nameStr)
                cell:ReInit(modelIndex,nameStr,matter,function(idx,itemName)
                    self:RemoveItem(idx,itemName)
                end)
            end)
        end
    end
end

function UIMainVitaLayout:RemoveItem(index,name)
    self.layout:RemoveComponent(name,UIMainVitaMatter)
    local inst = self.model[index]
    if inst~=nil then
        self:GameObjectDestroy(inst)
        self.model[index] = nil
    end
    self.showCount = self.showCount -1
    if self.showCount<0 then
        self.showCount = 0
    end
    self:TryShowNext()
end



UIMainVitaLayout.OnCreate = OnCreate
UIMainVitaLayout.OnDestroy = OnDestroy
UIMainVitaLayout.OnEnable = OnEnable
UIMainVitaLayout.OnDisable = OnDisable
UIMainVitaLayout.ComponentDefine = ComponentDefine
UIMainVitaLayout.ComponentDestroy = ComponentDestroy
UIMainVitaLayout.DataDefine = DataDefine
UIMainVitaLayout.DataDestroy = DataDestroy
UIMainVitaLayout.OnAddListener = OnAddListener
UIMainVitaLayout.OnRemoveListener = OnRemoveListener

UIMainVitaLayout.ReInit = ReInit
UIMainVitaLayout.TryNext = TryNext
UIMainVitaLayout.Play = Play

return UIMainVitaLayout