---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2024/2/5 17:04
---

local UIMainPopupPackageBtn = BaseClass("UIMainPopupPackageBtn", UIBaseContainer)
local base = UIBaseContainer

local this_path = ""
local icon_path = "Icon"
local time_path = "TimeBg/Time"

local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function ComponentDefine(self)
    self.btn = self:AddComponent(UIButton, this_path)
    self.btn:SetOnClick(function()
        self:OnClick()
    end)
    self.icon_image = self:AddComponent(UIImage, icon_path)
    self.time_text = self:AddComponent(UITextMeshProUGUIEx, time_path)
end

local function ComponentDestroy(self)
    
end

local function DataDefine(self)
    
end

local function DataDestroy(self)
    
end

local function OnAddListener(self)
    base.OnAddListener(self)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
end

local function SetData(self, packId)
    local pack = GiftPackManager.get(packId)
    if pack == nil then
        self:SetActive(false)
        return
    end

    self.packId = packId
    local imgName = pack:getPopupImageH()
    local config = PopupPackageConfig[imgName] or PopupPackageConfig["Default"]
    self.icon_image:LoadSprite(string.format(LoadPath.UIMain, config.MainIcon))
end

local function TimerAction(self)
    local pack = GiftPackManager.get(self.packId)
    if pack == nil then
        self:SetActive(false)
        return
    end
    
    local curTime = UITimeManager:GetInstance():GetServerTime()
    local endTime = pack:getEndTime()
    local restTime = endTime - curTime
    if restTime > 0 then
        local restTimeStr = UITimeManager:GetInstance():MilliSecondToFmtString(restTime)
        self.time_text:SetText(restTimeStr)
    else
        self:SetActive(false)
    end
end

local function OnClick(self)
    local pack = GiftPackManager.get(self.packId)
    if pack == nil then
        return
    end
    
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIPopupPackage, { anim = true, isBlur = true }, pack)
end

UIMainPopupPackageBtn.OnCreate = OnCreate
UIMainPopupPackageBtn.OnDestroy = OnDestroy
UIMainPopupPackageBtn.OnEnable = OnEnable
UIMainPopupPackageBtn.OnDisable = OnDisable
UIMainPopupPackageBtn.ComponentDefine = ComponentDefine
UIMainPopupPackageBtn.ComponentDestroy = ComponentDestroy
UIMainPopupPackageBtn.DataDefine = DataDefine
UIMainPopupPackageBtn.DataDestroy = DataDestroy
UIMainPopupPackageBtn.OnAddListener = OnAddListener
UIMainPopupPackageBtn.OnRemoveListener = OnRemoveListener

UIMainPopupPackageBtn.SetData = SetData
UIMainPopupPackageBtn.TimerAction = TimerAction
UIMainPopupPackageBtn.OnClick = OnClick

return UIMainPopupPackageBtn