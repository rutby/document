---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2022/9/27 21:05
---

local UISelectArmyItem = BaseClass("UISelectArmyItem", UIBaseContainer)
local base = UIBaseContainer

local icon_path = "soldierIcon"
local level_path = "levelTxt"
local name_path = "soldierName"
local slider_path = "Slider"
local num_path = "InputField"

local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    self.icon_image = self:AddComponent(UIImage, icon_path)
    self.level_text = self:AddComponent(UIText, level_path)
    self.name_text = self:AddComponent(UIText, name_path)
    self.slider = self:AddComponent(UISlider,slider_path)
    self.slider:SetOnValueChanged(function (value)
        self:OnSliderChange(value)
    end)
    self.num_input = self:AddComponent(UIInput, num_path)
    self.num_input:SetOnEndEdit(function (value)
        self:OnNumInput(value)
    end)
end

local function ComponentDestroy(self)
    self.icon_image = nil
    self.level_text = nil
    self.name_text = nil
    self.slider = nil
    self.num_input = nil
end

local function DataDefine(self)
    self.data = nil
    self.onValueChanged = nil
end

local function DataDestroy(self)
    self.data = nil
    self.onValueChanged = nil
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function OnAddListener(self)
    base.OnAddListener(self)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
end

local function SetData(self, data)
    self.data = data
    
    local template = DataCenter.ArmyTemplateManager:GetArmyTemplate(data.id)
    self.icon_image:LoadSprite(string.format(LoadPath.SoldierIcons, template.icon))
    self.level_text:SetText(template.level)
    self.name_text:SetLocalText(template.name)
end

local function SetCurCount(self, count)
    local val = count / self.data.count
    if math.abs(self.slider:GetValue() - val) > 0.01 then
        self.slider:SetValue(val)
    end
    if tonumber(self.num_input:GetText()) ~= count then
        self.num_input:SetText(count)
    end
end

local function SetOnValueChanged(self, onValueChanged)
    self.onValueChanged = onValueChanged
end

local function OnSliderChange(self, value)
    local count = Mathf.Round(self.data.count * value)
    if self.onValueChanged then
        self.onValueChanged(self.data.id, count)
    end
end

local function OnNumInput(self, value)
    local count = tonumber(value) or 0
    if self.onValueChanged then
        self.onValueChanged(self.data.id, count)
    end
end

UISelectArmyItem.OnCreate= OnCreate
UISelectArmyItem.OnDestroy = OnDestroy
UISelectArmyItem.ComponentDefine = ComponentDefine
UISelectArmyItem.ComponentDestroy = ComponentDestroy
UISelectArmyItem.DataDefine = DataDefine
UISelectArmyItem.DataDestroy = DataDestroy
UISelectArmyItem.OnEnable = OnEnable
UISelectArmyItem.OnDisable = OnDisable
UISelectArmyItem.OnAddListener = OnAddListener
UISelectArmyItem.OnRemoveListener = OnRemoveListener

UISelectArmyItem.SetData = SetData
UISelectArmyItem.SetCurCount = SetCurCount
UISelectArmyItem.SetOnValueChanged = SetOnValueChanged

UISelectArmyItem.OnSliderChange = OnSliderChange
UISelectArmyItem.OnNumInput = OnNumInput

return UISelectArmyItem