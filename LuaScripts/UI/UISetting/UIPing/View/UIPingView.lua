---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2022/9/6 15:12
---
local UIPingView = BaseClass("UIPingView", UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization
local PingItem = require "UI.UISetting.UIPing.Component.PingItem"
local title_path = "UICommonMidPopUpTitle/bg_mid/titleText"
local close_path = "UICommonMidPopUpTitle/bg_mid/CloseBtn"
local return_path = "UICommonMidPopUpTitle/panel"
local input_path = "InputField"
local redemption_btn_path = "ConfirmBtn"
local content_path = "ScrollView/Viewport/Content"
local function OnCreate(self)
    base.OnCreate(self)
    self.title_text = self:AddComponent(UITextMeshProUGUIEx,title_path)
    self.title_text:SetText("Ping")
    self.close_btn = self:AddComponent(UIButton, close_path)
    self.close_btn:SetOnClick(function() self.ctrl:CloseSelf() end)
    self.return_btn = self:AddComponent(UIButton, return_path)
    self.return_btn:SetOnClick(function() self.ctrl:CloseSelf() end)
    self.input = self:AddComponent(UIInput, input_path)
    self.redemption_btn = self:AddComponent(UIButton, redemption_btn_path)
    self.redemption_btn:SetOnClick(function()
        self:OnRedemptionBtnClick()
    end)
    self.content = self:AddComponent(UIBaseContainer, content_path)
end

local function OnDestroy(self)
    self.title_text = nil
    self.subtitle_text = nil
    self.intro_text = nil
    self.close_btn = nil
    self.return_btn = nil
    base.OnDestroy(self)
end

local function OnRedemptionBtnClick(self)
    --local temp = self.input:GetText()
    --if temp~=nil and temp~="" and self.pingScript~=nil then
    --    self.pingScript:StartPing(list[1],0,1)
    --    self.pingScript:StartPing(list[2],0,2)
    --    self.pingScript:StartPing(list[3],0,3)
    --else
    --    UIUtil.ShowTips("need input port")
    --end
    --self.pingScript:CreatePing(list[1],function(time)
    --    Logger.LogError("ping time"..time)
    --end)
end


local function OnEnable(self)
    base.OnEnable(self)
    self:Refresh()
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function OnAddListener(self)
    base.OnAddListener(self)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
end

local function Refresh(self)
    self:SetAllCellDestroy()
    self.modelCount =0
    for i = 1, table.length(ProxyList) do
        self.modelCount= self.modelCount+1
        self.model[self.modelCount] = self:GameObjectInstantiateAsync(UIAssets.PingItem, function(request)
            if request.isError then
                return
            end
            local go = request.gameObject;
            go.gameObject:SetActive(true)
            go.transform:SetParent(self.content.transform)
            go.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
            local nameStr = tostring(NameCount)
            go.name = nameStr
            NameCount = NameCount + 1
            local cell = self.content:AddComponent(PingItem,nameStr)
            cell:InitData(ProxyList[i],ProxyName[i])
        end)

    end
end

local function SetAllCellDestroy(self)
    self.content:RemoveComponents(PingItem)
    if self.model~=nil then
        for k,v in pairs(self.model) do
            if v ~= nil then
                self:GameObjectDestroy(v)
            end
        end
    end
    self.model ={}
end

local function GetPingCount(self)
    local temp = self.input:GetText()
    if temp~=nil and temp~=""then
        return tonumber(temp)
    else
        return 0
    end
end
UIPingView.OnCreate = OnCreate
UIPingView.OnDestroy = OnDestroy
UIPingView.OnEnable = OnEnable
UIPingView.OnDisable = OnDisable

UIPingView.OnAddListener = OnAddListener
UIPingView.OnRemoveListener =OnRemoveListener
UIPingView.OnRedemptionBtnClick = OnRedemptionBtnClick
UIPingView.Refresh = Refresh
UIPingView.SetAllCellDestroy = SetAllCellDestroy
UIPingView.GetPingCount =GetPingCount
return UIPingView