---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by guq.
--- DateTime: 2021/4/26 20:52
---
local UISettingPartSliderCell = BaseClass("UISettingPartSliderCell", UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization
local Setting = CS.GameEntry.Setting
local QualitySettingUtil = require "Util.QualitySettingUtil"

local Param = DataClass("Param", ParamData)
local ParamData =  {
    setType,
}

local push_name_path = "PushName"
local low_des_path = "low"
local mid_des_path = "mid"
local high_des_path = "high"
local slider_path = "Slider"
local low_toggle_path = "Group/lowToggle"
local mid_toggle_path = "Group/midToggle"
local high_toggle_path = "Group/highToggle"
local ImageFill2_path = "Slider/ImageFill2"
local ImageFill3_path = "Slider/ImageFill3"

-- 创建
local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
end

-- 销毁
local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

-- 显示
local function OnEnable(self)
    base.OnEnable(self)
end

-- 隐藏
local function OnDisable(self)
    base.OnDisable(self)
end


--控件的定义
local function ComponentDefine(self)
    self.push_name = self:AddComponent(UITextMeshProUGUIEx, push_name_path)
    self.low_des = self:AddComponent(UITextMeshProUGUIEx, low_des_path)
    self.mid_des = self:AddComponent(UITextMeshProUGUIEx, mid_des_path)
    self.high_des = self:AddComponent(UITextMeshProUGUIEx, high_des_path)
    self.slider = self:AddComponent(UISlider, slider_path)
    self.level = Setting:GetInt(SettingKeys.SCENE_GRAPHIC_LEVEL, EnumQualityLevel.High)
    self.slider:SetValue(self.level - 1)
    self.low_toggle = self:AddComponent(UIToggle, low_toggle_path)
    self.low_toggle:SetIsOn(self.level ==1)
    self.mid_toggle = self:AddComponent(UIToggle, mid_toggle_path)
    self.mid_toggle:SetIsOn(self.level ==2)
    self.high_toggle = self:AddComponent(UIToggle, high_toggle_path)
    self.high_toggle:SetIsOn(self.level ==3)
    self.low_toggle:SetOnValueChanged(function(tf)
        if tf then
            self:ToggleControlBorS()
        end
    end)
    self.mid_toggle:SetOnValueChanged(function(tf)
        if tf then
            self:ToggleControlBorS()
        end
    end)
    self.high_toggle:SetOnValueChanged(function(tf)
        if tf then
            self:ToggleControlBorS()
        end
    end)
    self.low_des:SetLocalText(129079) 
    self.mid_des:SetLocalText(129080) 
    self.high_des:SetLocalText(129081) 
    
    self.imgFill2 = self:AddComponent(UIBaseContainer, ImageFill2_path)
    self.imgFill3 = self:AddComponent(UIBaseContainer, ImageFill3_path)
    self.imgFill2:SetActive(self.level >= 2)
    self.imgFill3:SetActive(self.level >= 3)
end

--控件的销毁
local function ComponentDestroy(self)
    self.push_name = nil
    self.push_des = nil
    self.slider = nil
    self.low_des = nil
    self.mid_des = nil
    self.high_des = nil
end

--变量的定义
local function DataDefine(self)
    self.param = {}
    self.level = GlobalShaderLod.HIGH
end

--变量的销毁
local function DataDestroy(self)
    self.param = nil
    self.level = nil
end

-- 全部刷新
local function ReInit(self,param)
    self.param = param
    self:SetName()

end


local function SetName(self)
    if self.param.setType == SettingSetType.ShaderLod then
        --self.push_name:SetText("Set Global Shader LOD")
        self.push_name:SetLocalText(280005)
    end
end


--local function SetQuality(self,state)
--    if self.level~= state then
--        self.level = state
--        Logger.Log("set shaderLod".. state)
--        CS.SceneManager.World:SetGlobalShaderLOD(state)
--    end
--    --if state == GlobalShaderLod.HIGH then
--    --    self.slider:SetValue(1)
--    --elseif state == GlobalShaderLod.MIDDLE then
--    --    self.slider:SetValue(0.5)
--    --elseif state == GlobalShaderLod.LOW then
--    --    self.slider:SetValue(0)
--    --end
--end

local function ToggleControlBorS(self)
    if self.low_toggle:GetIsOn() then
        self.level = 1
        QualitySettingUtil.SetSettingGroup(self.level)
    elseif self.mid_toggle:GetIsOn() then
        self.level = 2
        QualitySettingUtil.SetSettingGroup(self.level)
    elseif self.high_toggle:GetIsOn() then
        self.level = 3
        QualitySettingUtil.SetSettingGroup(self.level)
    end
    Logger.Log("set quality level ", (self.level))
    self.slider:SetValue(self.level - 1)
    self.imgFill2:SetActive(self.level >= 2)
    self.imgFill3:SetActive(self.level >= 3)
end


UISettingPartSliderCell.OnCreate= OnCreate
UISettingPartSliderCell.OnDestroy= OnDestroy
UISettingPartSliderCell.Param = Param
UISettingPartSliderCell.OnEnable= OnEnable
UISettingPartSliderCell.OnDisable=OnDisable
UISettingPartSliderCell.ComponentDefine= ComponentDefine
UISettingPartSliderCell.ComponentDestroy = ComponentDestroy
UISettingPartSliderCell.DataDefine =DataDefine
UISettingPartSliderCell.DataDestroy =DataDestroy
UISettingPartSliderCell.ReInit =ReInit
UISettingPartSliderCell.SetName =SetName
UISettingPartSliderCell.ToggleControlBorS =ToggleControlBorS
return UISettingPartSliderCell