---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2023/3/10 14:34
---

local UIMasteryEntrance = BaseClass("UIMasteryEntrance", UIBaseContainer)
local base = UIBaseContainer

local this_path = ""
local name_path = "Name"
local red_path = "RedDot"
local red_num_path = "RedDot/RedNum"

local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    self.btn = self:AddComponent(UIButton, this_path)
    self.btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnClick()
    end)
    self.name_text = self:AddComponent(UIText, name_path)
    self.name_text:SetLocalText(110722)
    self.red_go = self:AddComponent(UIBaseContainer, red_path)
    self.red_num_text = self:AddComponent(UIText, red_num_path)
end

local function ComponentDestroy(self)
    self.btn = nil
    self.name_text = nil
    self.red_go = nil
    self.red_num_text = nil
end

local function DataDefine(self)
    
end

local function DataDestroy(self)
    
end

local function OnEnable(self)
    base.OnEnable(self)
    self:ReInit()
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.MasteryLearn, self.ReInit)
    self:AddUIListener(EventId.MasteryChangePlan, self.ReInit)
    self:AddUIListener(EventId.MasteryUpdate, self.ReInit)
    self:AddUIListener(EventId.MasteryReset, self.ReInit)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
    self:RemoveUIListener(EventId.MasteryLearn, self.ReInit)
    self:RemoveUIListener(EventId.MasteryChangePlan, self.ReInit)
    self:RemoveUIListener(EventId.MasteryUpdate, self.ReInit)
    self:RemoveUIListener(EventId.MasteryReset, self.ReInit)
end

local function ReInit(self,changePlan)
    if changePlan and changePlan == 1 then
        return
    end
    if not DataCenter.MasteryManager:Enabled() or DataCenter.MasteryManager:IsHideEntrance() then
        self:SetActive(false)
        return
    end
    self:SetActive(true)
    local restPoint = DataCenter.MasteryManager:GetRestPoint()
    self.red_num_text:SetText(restPoint)
    self.red_go:SetActive(restPoint > 0)
end

local function OnClick(self)
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIMastery, { anim = true, UIMainAnim = UIMainAnimType.AllHide })
end

UIMasteryEntrance.OnCreate= OnCreate
UIMasteryEntrance.OnDestroy = OnDestroy
UIMasteryEntrance.ComponentDefine = ComponentDefine
UIMasteryEntrance.ComponentDestroy = ComponentDestroy
UIMasteryEntrance.DataDefine = DataDefine
UIMasteryEntrance.DataDestroy = DataDestroy
UIMasteryEntrance.OnEnable = OnEnable
UIMasteryEntrance.OnDisable = OnDisable
UIMasteryEntrance.OnAddListener = OnAddListener
UIMasteryEntrance.OnRemoveListener = OnRemoveListener

UIMasteryEntrance.ReInit = ReInit
UIMasteryEntrance.Refresh = Refresh

UIMasteryEntrance.OnClick = OnClick

return UIMasteryEntrance