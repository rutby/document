---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2023/3/10 11:35
---

local UIMasteryLevel = BaseClass("UIMasteryLevel", UIBaseContainer)
local base = UIBaseContainer
local UIHeroTipView = require "UI.UIHero2.UIHeroTip.View.UIHeroTipView"
local Localization = CS.GameEntry.Localization

local level_path = "Level"
local info_path = "Level/Info"
local slider_path = "Slider"
local exp_path = "Exp"
local add_path = "Add"

local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    self.level_text = self:AddComponent(UIText, level_path)
    self.info_btn = self:AddComponent(UIButton, info_path)
    self.info_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnInfoClick()
    end)
    self.slider = self:AddComponent(UISlider, slider_path)
    self.exp_text = self:AddComponent(UIText, exp_path)
    self.add_btn = self:AddComponent(UIButton, add_path)
    self.add_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnAddClick()
    end)
end

local function ComponentDestroy(self)
    self.level_text = nil
    self.info_btn = nil
    self.slider = nil
    self.exp_text = nil
    self.add_text = nil
end

local function DataDefine(self)
    
end

local function DataDestroy(self)
    
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function OnAddListener(self)
    base.OnAddListener(self)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
end

local function Refresh(self)
    local data = DataCenter.MasteryManager:GetData()
    self.level_text:SetText("Lv." .. data.level)
    self.exp_text:SetText(string.GetFormattedSeperatorNum(data.exp) .. "/" .. string.GetFormattedSeperatorNum(data.needExp))
    self.slider:SetValue(data.exp / data.needExp)
    self.add_btn:SetActive(DataCenter.MasteryManager:GetRestExpToMaxLevel() > 0)
end

local function OnInfoClick(self)
    local season = DataCenter.SeasonDataManager:GetSeason() or 0
    local cur = DataCenter.MasteryManager:GetSeasonMaxLevel(season)
    local next = DataCenter.MasteryManager:GetSeasonMaxLevel(season + 1)
    if next == 0 then
        next = cur
    end
    
    local param = UIHeroTipView.Param.New()
    param.content = string.format("%s: <color=#88E437>%s</color>\n%s: <color=#88E437>%s</color>",
        Localization:GetString("110705"), cur, Localization:GetString("110706"), next)
    param.dir = UIHeroTipView.Direction.ABOVE
    param.defWidth = 350
    param.pivot = 0.5
    param.position = self.info_btn.transform.position + Vector3.New(0, 15, 0)
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIHeroTip, { anim = false }, param)
end

local function OnAddClick(self)
    local data = DataCenter.MasteryManager:GetData()
    GoToResLack.GotoMasteryPoint(data.needExp,1)
end

UIMasteryLevel.OnCreate= OnCreate
UIMasteryLevel.OnDestroy = OnDestroy
UIMasteryLevel.ComponentDefine = ComponentDefine
UIMasteryLevel.ComponentDestroy = ComponentDestroy
UIMasteryLevel.DataDefine = DataDefine
UIMasteryLevel.DataDestroy = DataDestroy
UIMasteryLevel.OnEnable = OnEnable
UIMasteryLevel.OnDisable = OnDisable
UIMasteryLevel.OnAddListener = OnAddListener
UIMasteryLevel.OnRemoveListener = OnRemoveListener

UIMasteryLevel.Refresh = Refresh

UIMasteryLevel.OnInfoClick = OnInfoClick
UIMasteryLevel.OnAddClick = OnAddClick

return UIMasteryLevel