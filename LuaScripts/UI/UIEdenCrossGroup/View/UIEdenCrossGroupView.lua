---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2023/9/12 17:14
---
local UIEdenCrossGroupView = BaseClass("UIEdenCrossGroupView", UIBaseView)
local base = UIBaseView
local EdenGroupCell = require "UI.UIEdenCrossGroup.Component.EdenGroupCell"
local title_text_path = "UICommonMidPopUpTitle/bg_mid/titleText"
local return_btn_path = "UICommonMidPopUpTitle/panel"
local close_btn_path = "UICommonMidPopUpTitle/bg_mid/CloseBtn"
local scroll_view_path = "ScrollView"

function UIEdenCrossGroupView:OnCreate()
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
    self:ReInit()
end

function UIEdenCrossGroupView:OnDestroy()
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

function UIEdenCrossGroupView:OnEnable()
    base.OnEnable(self)
end

function UIEdenCrossGroupView:OnDisable()
    base.OnDisable(self)
end

function UIEdenCrossGroupView:ComponentDefine()
    self.title_text = self:AddComponent(UITextMeshProUGUIEx, title_text_path)
    self.return_btn = self:AddComponent(UIButton, return_btn_path)
    self.return_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)
    self.close_btn = self:AddComponent(UIButton, close_btn_path)
    self.close_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)
    self.scroll_view = self:AddComponent(UIScrollView, scroll_view_path)
    self.scroll_view:SetOnItemMoveIn(function(itemObj, index)
        self:OnCellMoveIn(itemObj, index)
    end)
    self.scroll_view:SetOnItemMoveOut(function(itemObj, index)
        self:OnCellMoveOut(itemObj, index)
    end)
end

function UIEdenCrossGroupView:ComponentDestroy()

end

function UIEdenCrossGroupView:DataDefine()
    self.list = {}
end

function UIEdenCrossGroupView:DataDestroy()
    self.list = {}
end

function UIEdenCrossGroupView:OnAddListener()
    base.OnAddListener(self)
end

function UIEdenCrossGroupView:OnRemoveListener()
    base.OnRemoveListener(self)
end

function UIEdenCrossGroupView:ReInit()
    self.title_text:SetLocalText(GameDialogDefine.GLORY_GROUP)
    self:ShowCells()
end

function UIEdenCrossGroupView:ShowCells()
    self:ClearScroll()
    self:GetDataList()
    local count = table.count(self.list)
    if count > 0 then
        self.scroll_view:SetTotalCount(count)
        self.scroll_view:RefillCells()
    end
end

function UIEdenCrossGroupView:ClearScroll()
    self.scroll_view:ClearCells()--清循环列表数据
    self.scroll_view:RemoveComponents(EdenGroupCell)--清循环列表gameObject
end

function UIEdenCrossGroupView:OnCellMoveIn(itemObj, index)
    itemObj.name = tostring(index)
    local item = self.scroll_view:AddComponent(EdenGroupCell, itemObj)
    item:ReInit(self.list[index])
end

function UIEdenCrossGroupView:OnCellMoveOut(itemObj, index)
    self.scroll_view:RemoveComponent(itemObj.name, EdenGroupCell)
end

function UIEdenCrossGroupView:GetDataList()
    self.list = {}
    local showButton,bindActType = self:GetUserData()
    self.bindType = bindActType
    local template = DataCenter.SeasonDataManager:GetEdenWarServerGroup()
    if self.bindType == ActivityEnum.ActivityType.EdenAllianceCrossActMine then
        template = DataCenter.SeasonDataManager:GetEdenCrossWarServerGroup()
    end
    if template ~= nil then
        for k,v in pairs(template) do
            local param = {}
            param.serverId = k
            local serverId = toInt(k)
            if DataCenter.AccountManager:CheckIsInServerList(serverId) then
                param.showBtn = false
                if showButton ==1 then
                    param.showBtn = true
                end
                table.insert(self.list, param)
            end
        end
    end
end

return UIEdenCrossGroupView