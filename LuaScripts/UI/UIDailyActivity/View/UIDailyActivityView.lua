---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2021/9/15 16:38
---UIDailyActivityView

local base = UIBaseView--Variable
local UIDailyActivity = BaseClass("UIDailyActivity", base)--Variable
local Localization = CS.GameEntry.Localization

local BarterShopNoticeMain = require "UI.UIActivityCenterTable.Component.BarterShopNotice.BarterShopNoticeMain"--沙虫boss
local MineCaveMain = require "UI.UIActivityCenterTable.Component.MineCave.MineCaveMain"--矿洞
local PuzzleMain = require "UI.UIActivityCenterTable.Component.Puzzle.PuzzleMain"--藏宝图（寻宝）
local ArenaMain = require "UI.UIActivityCenterTable.Component.ArenaMain.ArenaMain"--竞技场

local PanelConfig = {
    [EnumActivity.RallyBossAct.Type] = {
        Prefab = UIAssets.BarterShopNotice,
        Script = BarterShopNoticeMain,
    },
    [EnumActivity.MineCave.Type] = {
        Prefab = UIAssets.MineCave,
        Script = MineCaveMain,
    },
    [ActivityEnum.ActivityType.Puzzle] = {
        Prefab = UIAssets.UIActivityPuzzle,
        Script = PuzzleMain,
    },
    [EnumActivity.Arena.Type] = {
        Prefab = UIAssets.ArenaMain,
        Script = ArenaMain,
    },
}


local panelContainer_path = "ImgBg/RightView"
local backBtn_path = "ImgBg/BtnClose"


local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
    self:InitUI()
end

local function OnDestroy(self)
    self:DataDestroy()
    self:ComponentDestroy()
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    if self.uiMainAnimTemp then
        local mainWindow = UIManager:GetInstance():GetWindow(UIWindowNames.UIMain)
        if mainWindow and mainWindow.View:GetAnim() ~= self.uiMainAnimTemp then
            mainWindow.View:PlayAnim(self.uiMainAnimTemp)
        end
        self.uiMainAnimTemp = nil
    end
    
    base.OnDisable(self)
end

--[[
local function OnAddListener(self)
    base.OnAddListener(self)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
end
--]]

local function ComponentDefine(self)
    self.backBtnN = self:AddComponent(UIButton, backBtn_path)
    self.backBtnN:SetOnClick(function()
        self:OnClickBackBtn()
    end)
    self.panelContainerN = self:AddComponent(UIBaseContainer, panelContainer_path)
    
end

local function ComponentDestroy(self)
    self.backBtnN = nil
    self.panelContainerN = nil
end

local function DataDefine(self)
    self.model = nil
    self.activityType = nil
    self.activityId = nil
    self.uiMainAnimTemp = nil
end

local function DataDestroy(self)
    --self:ClearPanel()
    self.model = nil
    self.activityType = nil
    self.activityId = nil
end

local function InitUI(self)
    local overviewType,isArrow = self:GetUserData()
    local overviewActParam = OverviewTypeToDailyActivity[overviewType]
    if not overviewActParam then
        return
    end
    if overviewType == 8 and isArrow then
        self.isArrow = true
    end
    self.activityType = overviewActParam.Type
    self.activityId = overviewActParam.ActId

    if not self.activityId then
        local actList = DataCenter.ActivityListDataManager:GetActivityDataByType(self.activityType)
        if actList and #actList > 0 then
            self.activityId = actList[1].id
        end
    end

    self:RefreshAll()
end

local function RefreshAll(self)
    if not PanelConfig[self.activityType] then
        return
    end
    local script = PanelConfig[self.activityType].Script
    local prefab = PanelConfig[self.activityType].Prefab
    local uiMainAnim = PanelConfig[self.activityType].UIMainAnim

    self.model = self:GameObjectInstantiateAsync(prefab, function(request)
        if request.isError then
            return
        end
        local go = request.gameObject
        go.transform:SetParent(self.panelContainerN.transform)
        go.transform.localScale = ResetScale
        go.name = self.activityType
        local cell = self.panelContainerN:AddComponent(script, go.name)
        cell:SetActive(true)
        self.curPanel = cell
        self:SetPanelData(self.curPanel)
    end)

    if uiMainAnim then
        local mainWindow = UIManager:GetInstance():GetWindow(UIWindowNames.UIMain)
        if mainWindow then
            self.uiMainAnimTemp = mainWindow.View:GetAnim()
            mainWindow.View:PlayAnim(uiMainAnim)
        end
    end
end

local function SetPanelData(self)
    if self.curPanel and self.curPanel.SetData then
        self.curPanel:SetData(self.activityId)
    end
end

local function ClearPanel(self)
    self.panelContainerN:RemoveComponents()
    if self.model~=nil then
        self:GameObjectDestroy(self.model)
    end
    self.model = nil
end

local function OnClickBackBtn(self)
    self.ctrl:CloseSelf()
end


UIDailyActivity.OnCreate = OnCreate 
UIDailyActivity.OnDestroy = OnDestroy
UIDailyActivity.OnEnable = OnEnable
UIDailyActivity.OnDisable = OnDisable
--UIDailyActivity.OnAddListener = OnAddListener
--UIDailyActivity.OnRemoveListener = OnRemoveListener
UIDailyActivity.ComponentDefine = ComponentDefine
UIDailyActivity.ComponentDestroy = ComponentDestroy
UIDailyActivity.DataDefine = DataDefine
UIDailyActivity.DataDestroy = DataDestroy

UIDailyActivity.InitUI = InitUI
UIDailyActivity.RefreshAll = RefreshAll
UIDailyActivity.ClearPanel = ClearPanel
UIDailyActivity.SetPanelData = SetPanelData
UIDailyActivity.OnClickBackBtn = OnClickBackBtn

return UIDailyActivity