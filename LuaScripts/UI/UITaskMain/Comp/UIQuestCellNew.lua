---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2021/8/18 20:31
---
local UIQuestCellNew = BaseClass("UIQuestCellNew", UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization
local TaskRewardItem = require "UI.UITaskMain.Comp.TaskRewardItem"
local RewardUtil = require "Util.RewardUtil"

local desText_path = "Bg/TaskName"
local goBtn_path = "Bg/GoButton"
local goText_path = "Bg/GoButton/goText"
local rewardItem_path = "Bg/rewardContent/item"
local imgCompleted_path = "Bg/imgCompleted"
local anim_path = "Bg"

local maxRewardItemCount = 4

-- 创建
local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

-- 销毁
local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

-- 显示
local function OnEnable(self)
    base.OnEnable(self)
end

-- 隐藏
local function OnDisable(self)
    base.OnDisable(self)
end

--控件的定义
local function ComponentDefine(self)
    self.bgImg = self:AddComponent(UIImage, anim_path)
    local goTextMat = self.transform:Find("Bg/GoButton/goTextMat")
    self.goTextMat = goTextMat:GetComponent(typeof(CS.UnityEngine.MeshRenderer))
    self.imgComplete = self:AddComponent(UIBaseContainer, imgCompleted_path)
    self.quest_des_text = self:AddComponent(UITextMeshProUGUIEx, desText_path)

    self.goBtn = self:AddComponent(UIButton, goBtn_path)
    self.goBtn:SetOnClick(function()
        self:OnClickGoBtn()
    end)
    self.goBtnText = self:AddComponent(UITextMeshProUGUIEx, goText_path)
    self.goBtnImg = self:AddComponent(UIImage, goBtn_path)
    for i = 1,maxRewardItemCount do
        local item = self:AddComponent(TaskRewardItem, rewardItem_path..i)
        table.insert(self.rewardItemList, item)
    end
    
    --self.anim = self:AddComponent(UIAnimator, anim_path)
end


--控件的销毁
local function ComponentDestroy(self)
    self.imgComplete = nil
    self.quest_title_text = nil
    self.quest_des_text = nil
end

--变量的定义
local function DataDefine(self)
    self.param = {}
    self.rewardItemList = {}
end

--变量的销毁
local function DataDestroy(self)
    self.param = nil
    self.rewardItemList = nil
end

-- 全部刷新
local function ReInit(self,param)
    self.param = param
    self.template = LocalController:instance():getLine(DataCenter.QuestTemplateManager:GetTableName(), param.id)
    self:RefreshState()
    self:ShowRewardCell()
end


local function RefreshState(self)
    local questData = self:GetQuestData()
    if questData ~= nil then
        local progressshow = GetTableData(DataCenter.QuestTemplateManager:GetTableName(), questData.id, "progressshow",  0)
        local str = ""
        if progressshow == 1 then
            local cur,all = self:ShowProcess()
            if all ~=nil then
                str = string.format("(%d/%d)",cur,all)
            end
        end
        self.quest_des_text:SetText(DataCenter.QuestTemplateManager:GetDesc(self.template, true)..str)
        if questData.state == TaskState.CanReceive then
            self.goBtn:SetActive(true)
            self.goBtnImg:LoadSprite(string.format(LoadPath.CommonNewPath, "Common_btn_green71"))
            self.goBtnText:SetMaterial(self.goTextMat.sharedMaterials[2])
            self.goBtnText:SetLocalText(170004)
            self.imgComplete:SetActive(false)
            --self.bgImg:LoadSprite("Assets/Main/Sprites/UI/UITaskMain/task_bg_di02_2.png")
        elseif questData.state == TaskState.NoComplete then
            self.goBtn:SetActive(true)
            self.goBtnImg:LoadSprite(string.format(LoadPath.CommonNewPath, "Common_btn_blue_samll"))
            self.goBtnText:SetMaterial(self.goTextMat.sharedMaterials[1])
            self.goBtnText:SetLocalText(110003)
            self.imgComplete:SetActive(false)
            --self.bgImg:LoadSprite("Assets/Main/Sprites/UI/UITaskMain/task_bg_di02.png")
        else
            self.claimBtn:SetActive(false)
            self.goBtn:SetActive(false)
            self.imgComplete:SetActive(true)
            --self.bgImg:LoadSprite("Assets/Main/Sprites/UI/UITaskMain/task_bg_di02.png")
        end
        if self.param.taskType == 0 then -- 主线
            self.bgImg:LoadSprite("Assets/Main/Sprites/UI/UITaskMain/task_bg_di02_2.png")
        else
            self.bgImg:LoadSprite("Assets/Main/Sprites/UI/UITaskMain/task_bg_di02.png")
        end
        self:SetActive(true)
    end
end

local function GetForward(self,id)
	if id~=self.param.id then
	   return
	end
	local questData = self:GetQuestData()
    --刷新顶部资源
    local tempType = {}
    for i, v in ipairs(questData.rewardList) do
        if v.rewardType == RewardType.METAL or v.rewardType == RewardType.WATER or v.rewardType == RewardType.ELECTRICITY then
            table.insert(tempType,RewardToResType[v.rewardType])
        end
    end
    EventManager:GetInstance():Broadcast(EventId.RefreshTopResByPickUp,tempType)
    for i = 1, Mathf.Min(table.count(questData.rewardList), maxRewardItemCount) do
        local v = questData.rewardList[i]
		local rewardType = v.rewardType
		local itemId = v.itemId
		local pic =RewardUtil.GetPic(rewardType,itemId)
		if pic~="" then
            UIUtil.DoFly(tonumber(rewardType),5,pic,self.rewardItemList[i].transform.position,Vector3.New(0,0,0))
		end
	end
end

local function OnClickGoBtn(self)
    local questData = self:GetQuestData()
    if questData ~= nil then 
        if questData.state == TaskState.NoComplete then -- 跳转
            DataCenter.TaskManager:RecordLastTaskId(self.template.id)
            SoundUtil.PlayEffect(SoundAssets.Music_Effect_Click_Task_Goto)
            local triggerId = tostring(self.param.id)
            if DataCenter.GuideManager:CheckDoTriggerGuide(GuideTriggerType.QuestGoto,triggerId) then
            else
                UIManager.Instance:DestroyWindow(UIWindowNames.UITaskMain)
                GoToUtil.GoToByQuestId(LocalController:instance():getLine(DataCenter.QuestTemplateManager:GetTableName(), self.param.id))
            end
        elseif questData.state == TaskState.CanReceive then -- 领取
            if self.isAnim == true then
                return
            end
            CS.GameEntry.Sound:PlayEffect(SoundAssets.Music_Effect_Common_GetReward)
            self:GetForward(self.param.id)
            DataCenter.TaskManager:SetMainTaskState(self.param.id)
            self.param.callBack(self.param.taskType == 0, self.param.index)
            EventManager:GetInstance():Broadcast(EventId.UpdateChatQuestRed,self.num)
            SFSNetwork.SendMessage(MsgDefines.TaskRewardGet,{id = self.param.id})
            --self:SetActive(false)
        end
    end
end

local function ShowProcess(self)
    local cur = 0
    local all = self.template.para2
    local questData = self:GetQuestData()
    if questData ~= nil then
        cur = questData.num
    end
    if cur > all then
        cur = all
    end
    return cur,all
end

local function ShowRewardCell(self)
    for i = 1,maxRewardItemCount do
        local item = self.rewardItemList[i]
        item:SetActive(self.param.rewardList ~= nil and i <= #self.param.rewardList)
        if self.param.rewardList ~= nil and i <= #self.param.rewardList then
            local rewardParam = self.param.rewardList[i]
            local param = {}
            param.rewardType = rewardParam.rewardType
            param.itemId = rewardParam.itemId
            param.count = rewardParam.count
            item:ReInit(param)
        end
    end
end

local function GetQuestData(self)
    if self.template.type == QuestType.Main or self.template.type == QuestType.SeasonChapter then
        return DataCenter.TaskManager:FindTaskInfo(self.param.id)
    end
end

local function PlayAnim(self, name)
    local success, time = self.anim:PlayAnimationReturnTime(name)
    return time
end

function UIQuestCellNew : SetIsAnim(value)
    self.isAnim = value
end

UIQuestCellNew.OnCreate = OnCreate
UIQuestCellNew.OnDestroy = OnDestroy
UIQuestCellNew.OnEnable = OnEnable
UIQuestCellNew.OnDisable = OnDisable
UIQuestCellNew.ComponentDefine = ComponentDefine
UIQuestCellNew.ComponentDestroy = ComponentDestroy
UIQuestCellNew.DataDefine = DataDefine
UIQuestCellNew.DataDestroy = DataDestroy
UIQuestCellNew.ReInit = ReInit
UIQuestCellNew.ShowProcess = ShowProcess
UIQuestCellNew.RefreshState = RefreshState
UIQuestCellNew.ShowRewardCell = ShowRewardCell
UIQuestCellNew.GetQuestData = GetQuestData
UIQuestCellNew.GetForward=GetForward
UIQuestCellNew.OnClickGoBtn = OnClickGoBtn
UIQuestCellNew.OnClickClaimBtn = OnClickClaimBtn
UIQuestCellNew.PlayAnim = PlayAnim

return UIQuestCellNew