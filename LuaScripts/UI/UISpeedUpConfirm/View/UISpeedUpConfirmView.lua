---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2021/8/3 14:09
---
local UISpeedUpConfirmView = BaseClass("UISpeedUpConfirmView", UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization

local close_btn_path = "UICommonMiniPopUpTitle/Bg_mid/CloseBtn"
local title_text_path = "UICommonMiniPopUpTitle/Bg_mid/titleText"
local clock_icon_path = "clock_icon"
local confirm_content_text_path = "content_text"
local confirm_btn_path = "confirm_btn"
local gold_num_text_path = "confirm_btn/btnTxt_yellow_mid_new/txt2"
local gold_confirm_text_path = "confirm_btn/btnTxt_yellow_mid_new/Txt1"
local gold_icon_path = "confirm_btn/btnTxt_yellow_mid_new/txt2/icon"
local resource_icon_path = "UIMainTopResourceCell/root/resourceIcon"
local resource_num_path = "UIMainTopResourceCell/root/resourceNum"

local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
    self:ReInit()
end

-- 销毁
local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    self.close_btn = self:AddComponent(UIButton, close_btn_path)
    self.title_text = self:AddComponent(UITextMeshProUGUIEx, title_text_path)
    self.confirm_content_text = self:AddComponent(UIText, confirm_content_text_path)
    self.confirm_btn = self:AddComponent(UIButton, confirm_btn_path)
    self.gold_num_text = self:AddComponent(UIText, gold_num_text_path)
    self.gold_confirm_text = self:AddComponent(UIText, gold_confirm_text_path)
    self.clock_icon = self:AddComponent(UIImage, clock_icon_path)
    self.gold_icon = self:AddComponent(UIImage, gold_icon_path)
    self.resource_icon = self:AddComponent(UIImage, resource_icon_path)
    self.resource_num = self:AddComponent(UIText, resource_num_path)
    self.confirm_btn:SetOnClick(function()  
    SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:SendMsg()
    end)

    self.close_btn:SetOnClick(function()  
            self.ctrl:CloseSelf()
    end)
end

local function ComponentDestroy(self)
    self.close_btn = nil
    self.title_text = nil
    self.confirm_content_text = nil
    self.confirm_btn = nil
    self.gold_num_text = nil
    self.gold_confirm_text = nil
    self.clock_icon = nil
    self.gold_icon = nil
    self.resource_icon = nil
    self.resource_num = nil
end

local function DataDefine(self)
    self.para = nil
    self.endTime = nil
    self.icon = nil
    self.isGuide = false
end

local function DataDestroy(self)
    self.para = nil
    self.endTime = nil
    self.icon = nil
    self.isGuide = nil
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.UpdateGold, self.UpdateGoldSignal)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
    self:RemoveUIListener(EventId.UpdateGold, self.UpdateGoldSignal)
end

local function ReInit(self)
    self.title_text:SetLocalText(GameDialogDefine.PROMPT_TITLE) 
    local endTime, icon, type, para1, para2 = self:GetUserData()
    self.type = type
    self.endTime = endTime
    self.icon = icon
    self.para1 = para1
    self.speedUpItemId = para2
    self:CheckIsInGuide()
    if self.icon ~= nil then
        self.clock_icon:LoadSprite(self.icon)
    end
end

local function Update(self)
    if self.endTime ~= nil then
        local curTime = UITimeManager:GetInstance():GetServerTime()
        local leftTime = math.ceil(self.endTime - curTime) / 1000.0
        if leftTime <= 0 then
            self.ctrl:CloseSelf()
        else
            self:UpdateGoldSignal()
        end
    end
end

local function SendMsg(self)
    local type = self.type
    
    local gold = LuaEntry.Player.gold
    local needGold = self:GetCurrentNeedGold()
    if needGold > gold then
        GoToUtil.GotoPayTips()
        return
    end
    if type == MsgDefines.QueueCcdMNew then
        local function SendQueueCcd()
            if self.isGuide then
                local sfsParam = {}
                sfsParam.queueList = {}
                table.insert(sfsParam.queueList,self.para1)
                DataCenter.GuideManager:SendSaveGuideMessage(FreeSpeed,SaveGuideDoneValue)
                SFSNetwork.SendMessage(MsgDefines.FreeSpeedQueue,sfsParam)
            else
                SFSNetwork.SendMessage(MsgDefines.QueueCcdMNew, {qUUID = self.para1, itemIDs = "", isGold = IsGold.UseGold })
            end
        end

        UIUtil.ShowUseDiamondConfirm(TodayNoSecondConfirmType.BuyUseDialog,Localization:GetString(GameDialogDefine.USE_GOLF_TIP_DES), 2, GameDialogDefine.CONFIRM, GameDialogDefine.CANCEL, SendQueueCcd, function()
            end)
    end
    self.ctrl:CloseSelf()
end

local function GetCurrentNeedGold(self)
    local curTime = UITimeManager:GetInstance():GetServerTime()
    local leftTime = (self.endTime - curTime) / 1000
    leftTime = math.max(leftTime, 0)
    local needGold = CommonUtil.GetTimeDiamondCost(math.ceil(leftTime))
    return needGold
end

local function UpdateGoldSignal(self)
    local gold = LuaEntry.Player.gold
    local needGold = self:GetCurrentNeedGold()
    self.gold_num_text:SetText(string.GetFormattedSeperatorNum(needGold))
    self.gold_confirm_text:SetLocalText(GameDialogDefine.COMPLETE_IMMEDIATELY) 
    self.confirm_content_text:SetLocalText(GameDialogDefine.GOLD_SPEEDUP_HINT) 

    self.gold_icon:LoadSprite(DataCenter.ResourceManager:GetResourceIconByType(ResourceType.Gold));
    if needGold > gold then
        self.gold_num_text:SetColor(RedColor)
    else
        self.gold_num_text:SetColor(WhiteColor)
    end
end

--local function UpdateItemSignal(self, itemNum, isEnough)
--    self.gold_num_text:SetText(string.GetFormattedSeperatorNum(itemNum))
--    local item = DataCenter.ItemTemplateManager:GetItemTemplate(self.speedUpItemId);
--    
--    if item ~= nil then
--        self.gold_icon:LoadSprite(string.format(LoadPath.ItemPath, item.icon))
--        self.resource_icon:LoadSprite(string.format(LoadPath.ItemPath, item.icon))
--    end
--    self.gold_num_text:SetColor(WhiteColor)
--    local itemTotalNum = DataCenter.ItemData:GetItemCount(self.speedUpItemId)
--
--    self.resource_num:SetText(string.GetFormattedSeperatorNum(itemTotalNum))
--
--    if isEnough == true then
--        self.gold_confirm_text:SetLocalText(GameDialogDefine.COMPLETE_IMMEDIATELY) 
--        self.confirm_content_text:SetLocalText(GameDialogDefine.GOLD_SPEEDUP_HINT) 
--        self.gold_num_text:SetColor(WhiteColor)
--    else
--        self.confirm_content_text:SetLocalText(130317) 
--        self.gold_num_text:SetColor(Color.New(234/255, 66/255, 66/255, 1))
--        --self.gold_confirm_text:SetText(Localization:GetString("130318", string.GetFormattedSeperatorNum(math.floor(totalTime / 60))))
--        self.gold_confirm_text:SetLocalText(GameDialogDefine.COMPLETE_IMMEDIATELY) 
--    end
--end

local function CheckIsInGuide(self)
    self.isGuide = DataCenter.GuideManager:GetSaveGuideValue(FreeSpeed) == nil and DataCenter.GuideManager:InGuide() and CS.SceneManager:IsInCity()
end

UISpeedUpConfirmView.OnCreate = OnCreate
UISpeedUpConfirmView.OnDestroy = OnDestroy
UISpeedUpConfirmView.ComponentDefine = ComponentDefine
UISpeedUpConfirmView.ComponentDestroy = ComponentDestroy
UISpeedUpConfirmView.DataDefine = DataDefine
UISpeedUpConfirmView.DataDestroy = DataDestroy
UISpeedUpConfirmView.OnAddListener = OnAddListener
UISpeedUpConfirmView.OnRemoveListener = OnRemoveListener
UISpeedUpConfirmView.ReInit = ReInit
UISpeedUpConfirmView.Update = Update
UISpeedUpConfirmView.SendMsg = SendMsg
UISpeedUpConfirmView.UpdateGoldSignal = UpdateGoldSignal
--UISpeedUpConfirmView.UpdateItemSignal = UpdateItemSignal
UISpeedUpConfirmView.GetCurrentNeedGold = GetCurrentNeedGold
UISpeedUpConfirmView.CheckIsInGuide = CheckIsInGuide

return UISpeedUpConfirmView