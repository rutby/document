---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2023/2/15 12:15
---

local UIHeroIntensifyItem = BaseClass("UIHeroIntensifyItem", UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization

local bg_path = "Bg"
local id_path = "Bg/Id"
local icon_path = "Bg/Icon"
local name_path = "Bg/Name"
local level_path = "Bg/LevelBg/Level"
local levelBg_path = "Bg/LevelBg"
local red_path = "Bg/Red"
local lock_path = "Bg/Lock"
local unlock_path = "Bg/Unlock"
local unlock_icon_path = "Bg/Unlock/UnlockIcon"
local random_path = "Bg/Random"
local line_path = "Line%s"

local DefaultPic = 
{
    [HeroCamp.MAFIA] = "UIrecruit_img_camp2",
    [HeroCamp.UNION] = "UIrecruit_img_camp1",
    [HeroCamp.NEW_HUMAN] = "UIrecruit_img_camp3",
    [HeroCamp.ZELOT] = "UIrecruit_img_camp4",
}
local UnlockDuration = 1.25

local NameColor =
{
    [1] = Color.New(234/255, 219/255, 255/255, 1),
    [2] = Color.New(255/255, 255/255, 255/255, 1),
    [3] = Color.New(237/255, 203/255, 176/255, 1),
}

local NameShadowColor =
{
    [1] = Color.New(86/255, 56/255, 155/255, 1),
    [2] = Color.New(93/255, 91/255, 136/255, 1),
    [3] = Color.New(73/255, 39/255, 9/255, 1),
}

local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    self.bg_btn = self:AddComponent(UIButton, bg_path)
    self.bg_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnClick()
    end)
    self.id_text = self:AddComponent(UIText, id_path)
    self.icon_image = self:AddComponent(UIImage, icon_path)
    self.name_text = self:AddComponent(UIText, name_path)
    self.level_text = self:AddComponent(UIText, level_path)
    self.level_bg_image = self:AddComponent(UIImage, levelBg_path)
    self.red_go = self:AddComponent(UIBaseContainer, red_path)
    self.lock_image = self:AddComponent(UIImage, lock_path)
    self.unlock_image = self:AddComponent(UIImage, unlock_path)
    self.unlock_icon_anim = self:AddComponent(UIAnimator, unlock_icon_path)
    self.random_go = self:AddComponent(UIBaseContainer, random_path)
    self.line_goes = {}
    self.line_images = { ["H"] = {}, ["V"] = {}, ["R"] = {} }
    for i = -1, 5 do
        self.line_goes[i] = self:AddComponent(UIBaseContainer, string.format(line_path, i))
        for _, s in ipairs({ "H" , "V", "R" }) do
            local tf = self.line_goes[i].transform:Find(s)
            if tf then
                table.insert(self.line_images[s], tf:GetComponent(typeof(CS.UnityEngine.UI.Image)))
            end
        end
    end
end

local function ComponentDestroy(self)
    self.bg_btn = nil
    self.id_text = nil
    self.icon_image = nil
    self.name_text = nil
    self.level_text = nil
    self.red_go = nil
    self.lock_image = nil
    self.unlock_image = nil
    self.unlock_icon_anim = nil
    self.random_go = nil
end

local function DataDefine(self)
    self.id = 0
    self.camp = -1
    self.template = nil
    self.data = nil
    self.state = HeroIntensifyState.Normal
    self.unlockTimer = nil
end

local function DataDestroy(self)
    self.id = nil
    self.camp = nil
    self.template = nil
    self.data = nil
    self.state = nil
    if self.unlockTimer then
        self.unlockTimer:Stop()
        self.unlockTimer = nil
    end
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function OnAddListener(self)
    base.OnAddListener(self)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
end

local function SetData(self, id)
    self.id = id
    self.index = 0
    self:Refresh()
end

local function SetCamp(self, camp)
    self.camp = camp
    self.bg_btn:LoadSprite("Assets/Main/Sprites/UI/UIHeroStation/UIStationed_bg_picboard_" .. camp)
    self.level_bg_image:LoadSprite("Assets/Main/Sprites/UI/UIHeroStation/UIStationed_bg_levelboard_" .. camp)
    self.unlock_image:LoadSprite("Assets/Main/Sprites/UI/UIHeroStation/UIStationed_bg_piczhezhao_" .. camp)
    self.lock_image:LoadSprite("Assets/Main/Sprites/UI/UIHeroStation/UIStationed_bg_piczhezhao_" .. camp)
    self.name_text:SetColor(NameColor[camp])
    if self.state == HeroIntensifyState.ToRandom or self.state == HeroIntensifyState.NeedBuildingLevel or self.state == HeroIntensifyState.NeedSeason then
        self.icon_image:LoadSprite(string.format(LoadPath.HeroRecruitPath, DefaultPic[camp]))
    end
    for _, s in ipairs({ "H", "V", "R" }) do
        for _, image in ipairs(self.line_images[s]) do
            image:LoadSprite(string.format("Assets/Main/Sprites/UI/UIHeroStation/UIStationed_line_%s_%s", camp, s))
        end
    end
end

local function SetIndex(self, index)
    self.index = index
end

local function ShowLine(self, show)
    local t = self.index >= 2 and (self.index - 2) % 6 or -1
    for i = -1, 5 do
        self.line_goes[i]:SetActive(show and i == t)
    end
end

local function ShowNameOnly(self)
    self.red_go:SetActive(false)
    self.bg_btn:SetInteractable(false)
    self.name_text:SetLocalText(self.showTemplate.name)
    self.id_text:SetText("")
    self.level_bg_image:SetActive(false)
    self.random_go:SetActive(false)
    self.lock_image:SetActive(false)
    self.unlock_image:SetActive(false)
    self.unlock_icon_anim:Play("Idle", 0, 0)
end

local function Refresh(self)
    if self.id ~= nil then
        self.data = DataCenter.HeroIntensifyManager:GetData(self.id)
        self.template = DataCenter.HeroIntensifyManager:GetTemplate(self.id, self.data.level)
        self.showTemplate = self.data:GetShowTemplate()
        self.state = self.data:GetState()
        local camp = GetTableData(HeroUtils.GetHeroXmlName(), self.template.heroId, "camp")
        self:SetCamp(camp)

        self.id_text:SetText(self.id .. "|" .. self.data.rid)
        self.id_text:SetActive(CS.CommonUtils.IsDebug())
        self.red_go:SetActive(self.data:CanShowRed())
        self.bg_btn:SetInteractable(true)
        self.unlock_icon_anim:Play("Idle", 0, 0)
        if self.state == HeroIntensifyState.Normal then
            local curVal = self.showTemplate.effectVals[1] or 0
            local effectNumType = self.showTemplate.descs[1].type
            local curValStr = DataCenter.BuildManager:GetEffectNumWithoutSymbolByType(toInt(curVal), effectNumType)
            self.name_text:SetText(string.format("%s <color=#BCEE23>%s</color>", Localization:GetString(self.showTemplate.name), curValStr))
            self.icon_image:LoadSprite(string.format(LoadPath.HeroRecruitPath, self.showTemplate.pic))
            self.level_bg_image:SetActive(true)
            self.level_text:SetText("Lv." .. self.data.level)
            self.random_go:SetActive(false)
            self.lock_image:SetActive(false)
            self.unlock_image:SetActive(false)
        elseif self.state == HeroIntensifyState.Unlocked then
            self.name_text:SetLocalText(130056)
            self.icon_image:LoadSprite(string.format(LoadPath.HeroRecruitPath, self.showTemplate.pic))
            self.level_bg_image:SetActive(false)
            self.random_go:SetActive(false)
            self.lock_image:SetActive(false)
            self.unlock_image:SetActive(true)
        elseif self.state == HeroIntensifyState.ToRandom then
            self.name_text:SetLocalText(100290)
            self.icon_image:LoadSprite(string.format(LoadPath.HeroRecruitPath, DefaultPic[camp]))
            self.level_bg_image:SetActive(false)
            self.random_go:SetActive(true)
            self.lock_image:SetActive(false)
            self.unlock_image:SetActive(false)
        else
            self.name_text:SetLocalText(120105)
            self.icon_image:LoadSprite(string.format(LoadPath.HeroRecruitPath, DefaultPic[camp]))
            self.level_bg_image:SetActive(false)
            self.random_go:SetActive(false)
            self.lock_image:SetActive(true)
            self.unlock_image:SetActive(false)
        end
    else
        self.id_text:SetActive(false)
        self.red_go:SetActive(false)
        self.bg_btn:SetInteractable(false)
        self.unlock_icon_anim:Play("Idle", 0, 0)
        self.name_text:SetLocalText(120105)
        self.icon_image:LoadSprite(string.format(LoadPath.HeroRecruitPath, DefaultPic[self.camp]))
        self.level_bg_image:SetActive(false)
        self.random_go:SetActive(false)
        self.lock_image:SetActive(true)
        self.unlock_image:SetActive(false)
    end
end

local function OnClick(self)
    if self.state == HeroIntensifyState.Normal then
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIHeroIntensifyDetail, { anim = true }, self.id, false)
    elseif self.state == HeroIntensifyState.Unlocked then
        if not DataCenter.HeroIntensifyManager.isUnlocking then
            DataCenter.HeroIntensifyManager.isUnlocking = true
            self.unlock_icon_anim:Play("Rotate", 0, 0)
            local id = self.id
            if self.unlockTimer == nil then
                self.unlockTimer = TimerManager:GetInstance():DelayInvoke(function()
                    self.unlock_icon_anim:Play("Idle", 0, 0)
                    self.unlockTimer = nil
                    DataCenter.HeroIntensifyManager:SendIntensify(id, HeroIntensifyCostType.Open)
                end, UnlockDuration)
            end
        end
    elseif self.state == HeroIntensifyState.ToRandom then
        DataCenter.HeroIntensifyManager:SendIntensifyRandomEffect(self.id)
    elseif self.state == HeroIntensifyState.NeedSeason then
        --UIUtil.ShowTips(Localization:GetString("136001", self.template.unlockSeason + 1))
    elseif self.state == HeroIntensifyState.NeedBuildingLevel then
        --UIUtil.ShowTips(Localization:GetString("136002", DataCenter.HeroIntensifyManager:GetUnlockBuildingLevel()))
    end
end

UIHeroIntensifyItem.OnCreate= OnCreate
UIHeroIntensifyItem.OnDestroy = OnDestroy
UIHeroIntensifyItem.ComponentDefine = ComponentDefine
UIHeroIntensifyItem.ComponentDestroy = ComponentDestroy
UIHeroIntensifyItem.DataDefine = DataDefine
UIHeroIntensifyItem.DataDestroy = DataDestroy
UIHeroIntensifyItem.OnEnable = OnEnable
UIHeroIntensifyItem.OnDisable = OnDisable
UIHeroIntensifyItem.OnAddListener = OnAddListener
UIHeroIntensifyItem.OnRemoveListener = OnRemoveListener

UIHeroIntensifyItem.SetData = SetData
UIHeroIntensifyItem.SetCamp = SetCamp
UIHeroIntensifyItem.SetIndex = SetIndex
UIHeroIntensifyItem.ShowLine = ShowLine
UIHeroIntensifyItem.ShowNameOnly = ShowNameOnly
UIHeroIntensifyItem.Refresh = Refresh
UIHeroIntensifyItem.OnClick = OnClick

return UIHeroIntensifyItem