---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 24224.
--- DateTime: 2022/12/12 16:02
---
local SeasonAllianceRewardTab  = require "UI.UISeason.UISeasonAllianceRewardDisplayDetail.Component.SeasonAllianceRewardTab"
local SeasonRewardStampItem = require "UI.UISeason.UISeasonAllianceRewardDisplayDetail.Component.SeasonRewardStampItem"
local SeasonAllianceRewardFlag = require "UI.UISeason.UISeasonAllianceReward.Component.SeasonAllianceRewardFlag"
local RewardItem = require "UI.UIWorldPoint.Component.WorldPointRewardItem"
local UIHeroTipView = require "UI.UIHero2.UIHeroTip.View.UIHeroTipView"

local UISeasonAllianceRewardDisplayDetailView = BaseClass("UISeasonAllianceRewardDisplayDetailView",UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization
function UISeasonAllianceRewardDisplayDetailView:OnCreate()
    base.OnCreate(self)
    self.stageIndex,self.topIndex = self:GetUserData()
    self.rewardMap = self.ctrl:GetRewardMap(self.topIndex)
    self:ComponentDefine()
    self:DataDefine()
end

function UISeasonAllianceRewardDisplayDetailView:ComponentDefine()
    self._close_btn = self:AddComponent(UIButton,"safeArea/Back")
    self._close_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self.ctrl:CloseSelf()
    end)
    self._title_txt = self:AddComponent(UIText,"safeArea/Title")
    self._title_txt:SetLocalText(110295)
    self.allianceFlag = self:AddComponent(SeasonAllianceRewardFlag,"content/alliance/rewardBg/Bg")
    self.stageSubIndex = 1
    self.flagToggleGroup = self:AddComponent(UIBaseContainer,"content/alliance/ToggleGroup")
    self.toggleTab1 = self:AddComponent(UIToggle,"content/alliance/ToggleGroup/ToggleTab1")
    self.toggleTab1:SetIsOn(true)
    self.toggleTab1:SetOnValueChanged(function(tf)
        if tf then
            self:ToggleControlBorS()
        end
    end)
    self.toggleTab1_text_hide = self:AddComponent(UIText,"content/alliance/ToggleGroup/ToggleTab1/Background/toggleLabelHide1")
    self.toggleTab1_text_show = self:AddComponent(UIText,"content/alliance/ToggleGroup/ToggleTab1/Background/Checkmark/toggleLabelShow1")
    self.toggleTab2 = self:AddComponent(UIToggle,"content/alliance/ToggleGroup/ToggleTab2")
    self.toggleTab2:SetIsOn(false)
    self.toggleTab2:SetOnValueChanged(function(tf)
        if tf then
            self:ToggleControlBorS()
        end
    end)
    self.toggleTab2_text_hide = self:AddComponent(UIText,"content/alliance/ToggleGroup/ToggleTab2/Background/toggleLabelHide2")
    self.toggleTab2_text_show = self:AddComponent(UIText,"content/alliance/ToggleGroup/ToggleTab2/Background/Checkmark/toggleLabelShow2")

    self.toggleTab3 = self:AddComponent(UIToggle,"content/alliance/ToggleGroup/ToggleTab3")
    self.toggleTab3:SetIsOn(false)
    self.toggleTab3:SetOnValueChanged(function(tf)
        if tf then
            self:ToggleControlBorS()
        end
    end)
    self.toggleTab3_text_hide = self:AddComponent(UIText,"content/alliance/ToggleGroup/ToggleTab3/Background/toggleLabelHide3")
    self.toggleTab3_text_show = self:AddComponent(UIText,"content/alliance/ToggleGroup/ToggleTab3/Background/Checkmark/toggleLabelShow3")
    self.toggleList = {}
    self.toggleLabelList = {}
    self.tabIndex = 1
    local toggle1 = self:AddComponent(UIToggle,"content/right/Toggle_tittle_group/Toggle1")
    toggle1:SetIsOn(true)
    toggle1:SetOnValueChanged(function(tf)
        if tf then
            self:ToggleTrigger()
        end
    end)
    table.insert(self.toggleList,toggle1)
    local toggleLabel1 = self:AddComponent(SeasonAllianceRewardTab,"content/right/Toggle_tittle_group/Toggle1")
    toggleLabel1:InitTab(1)
    toggleLabel1:initLabelState(true)
    table.insert(self.toggleLabelList,toggleLabel1)
    local toggle2 = self:AddComponent(UIToggle,"content/right/Toggle_tittle_group/Toggle2")
    toggle2:SetIsOn(false)
    toggle2:SetOnValueChanged(function(tf)
        if tf then
            self:ToggleTrigger()
        end
    end)
    table.insert(self.toggleList,toggle2)
    local toggleLabel2 = self:AddComponent(SeasonAllianceRewardTab,"content/right/Toggle_tittle_group/Toggle2")
    toggleLabel2:InitTab(2)
    toggleLabel2:initLabelState(false)
    table.insert(self.toggleLabelList,toggleLabel2)
    local toggle3 = self:AddComponent(UIToggle,"content/right/Toggle_tittle_group/Toggle3")
    toggle3:SetIsOn(false)
    toggle3:SetOnValueChanged(function(tf)
        if tf then
            self:ToggleTrigger()
        end
    end)
    table.insert(self.toggleList,toggle3)
    local toggleLabel3 = self:AddComponent(SeasonAllianceRewardTab,"content/right/Toggle_tittle_group/Toggle3")
    toggleLabel3:InitTab(3)
    toggleLabel3:initLabelState(false)
    table.insert(self.toggleLabelList,toggleLabel3)
    local toggle4 = self:AddComponent(UIToggle,"content/right/Toggle_tittle_group/Toggle4")
    toggle4:SetIsOn(false)
    toggle4:SetOnValueChanged(function(tf)
        if tf then
            self:ToggleTrigger()
        end
    end)
    table.insert(self.toggleList,toggle4)
    local toggleLabel4 = self:AddComponent(SeasonAllianceRewardTab,"content/right/Toggle_tittle_group/Toggle4")
    toggleLabel4:InitTab(4)
    toggleLabel4:initLabelState(false)
    table.insert(self.toggleLabelList,toggleLabel4)
    self.reward_title = self:AddComponent(UIText,"content/right/rewardTitle")
    self.reward_title:SetText(Localization:GetString("110294"))
    self.infoBtnN = self:AddComponent(UIButton, "content/right/rewardTitle/infoBtn")
    self.infoBtnN:SetOnClick(function()
        self:OnClickInfoBtn()
    end)
    self.stamp_txt = self:AddComponent(UIText,"content/right/GameObject/stampObj/Text_stamp_Title")
    self.stamp_txt:SetText(Localization:GetString("100549"))
    self.stamp1 = self:AddComponent(SeasonRewardStampItem,"content/right/GameObject/stampObj/stampImg1")
    self.stamp2 = self:AddComponent(SeasonRewardStampItem,"content/right/GameObject/stampObj/stampImg2")
    self.Text_title = self:AddComponent(UIText,"content/right/GameObject/rewardObj/title/titleText")
    self.Text_title:SetText(Localization:GetString("104191"))
    self.Text_reward = self:AddComponent(UIText,"content/right/GameObject/rewardObj/title/Text_num/Text_reward")
    self.Text_reward:SetText(Localization:GetString("370101",""))
    self.Text_num = self:AddComponent(UIText,"content/right/GameObject/rewardObj/title/Text_num")
    self.reward_layout = self:AddComponent(UIBaseContainer,"content/right/GameObject/rewardObj/ScrollView/Viewport/Content")
    self.Text_task = self:AddComponent(UIText,"content/right/taskObj/bg/Text_task")
    self.Task_title = self:AddComponent(UIText,"content/right/taskObj/Tasktitle")
    self.Task_title:SetText(Localization:GetString("110320"))

    self._left_btn = self:AddComponent(UIButton,"content/alliance/left")
    self._left_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnLeftClick()
    end)
    self._right_btn = self:AddComponent(UIButton,"content/alliance/right")
    self._right_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnRightClick()
    end)
end

function UISeasonAllianceRewardDisplayDetailView:DataDefine()
    self.stampList = {}
    local k11 = LuaEntry.DataConfig:TryGetStr("hero_reset", "k11")
    if not string.IsNullOrEmpty(k11) then
        local vec = string.split(k11, ";")
        if #vec>0 then
            for i=1 ,#vec do
                local id = tonumber(vec[i])
                if id~=nil then
                    self.stampList[id] = 1
                end
                
            end
        end
    end
    self.noShowViewList= {}
    local k12 = LuaEntry.DataConfig:TryGetStr("hero_reset", "k12")
    if not string.IsNullOrEmpty(k12) then
        local vec = string.split(k12, ";")
        if #vec>0 then
            for i=1 ,#vec do
                local id = tonumber(vec[i])
                if id~=nil then
                    self.noShowViewList[id] = 1
                end

            end
        end
    end
end

function UISeasonAllianceRewardDisplayDetailView:OnDestroy()
    self:ClearItemCell()
    base.OnDestroy(self)
end

function UISeasonAllianceRewardDisplayDetailView:OnEnable()
    base.OnEnable(self)
    self:InitData()
end

function UISeasonAllianceRewardDisplayDetailView:OnDisable()
    base.OnDisable(self)
end

function UISeasonAllianceRewardDisplayDetailView:OnAddListener()
    base.OnAddListener(self)
end

function UISeasonAllianceRewardDisplayDetailView:OnRemoveListener()
    base.OnRemoveListener(self)
end


function UISeasonAllianceRewardDisplayDetailView:OnLeftClick()
    if self.stageIndex ~=1 then
        self.stageIndex = self.stageIndex-1
        self:InitData()
    end
    CS.UIGray.SetGray(self._left_btn.transform, self.stageIndex == 1, self.stageIndex ~= 1)
    CS.UIGray.SetGray(self._right_btn.transform, self.stageIndex == 3, self.stageIndex ~= 3)
end

function UISeasonAllianceRewardDisplayDetailView:OnRightClick()
    if self.stageIndex ~=3 then
        self.stageIndex = self.stageIndex+1
        self:InitData()
    end
    CS.UIGray.SetGray(self._left_btn.transform, self.stageIndex == 1, self.stageIndex ~= 1)
    CS.UIGray.SetGray(self._right_btn.transform, self.stageIndex == 3, self.stageIndex ~= 3)
end

function UISeasonAllianceRewardDisplayDetailView:InitData()
    local count = 0
    if self.rewardMap[self.stageIndex]~=nil then
        local dic = self.rewardMap[self.stageIndex]
        count = table.count(dic)
    end
    if count>1 then
        self.flagToggleGroup:SetActive(count>1)
        self.toggleTab2:SetActive(count>1)
        self.toggleTab3:SetActive(count>2)
    else
        self.flagToggleGroup:SetActive(false)
    end
    self.stageSubIndex =1
    if self.stageIndex ==3 then
        self.toggleTab1_text_hide:SetText(Localization:GetString("110310"))
        self.toggleTab1_text_show:SetText(Localization:GetString("110310"))
        self.toggleTab2_text_hide:SetText(Localization:GetString("110311"))
        self.toggleTab2_text_show:SetText(Localization:GetString("110311"))
        self.toggleTab3_text_hide:SetText(Localization:GetString("302957"))
        self.toggleTab3_text_show:SetText(Localization:GetString("302957"))
    elseif self.stageIndex ==2 then
        self.toggleTab1_text_hide:SetText(Localization:GetString("302954"))
        self.toggleTab1_text_show:SetText(Localization:GetString("302954"))
        self.toggleTab2_text_hide:SetText(Localization:GetString("302955"))
        self.toggleTab2_text_show:SetText(Localization:GetString("302955"))
    elseif self.stageIndex ==1 then
        self.toggleTab1_text_hide:SetText(Localization:GetString("302952"))
        self.toggleTab1_text_show:SetText(Localization:GetString("302952"))
        self.toggleTab2_text_hide:SetText(Localization:GetString("302953"))
        self.toggleTab2_text_show:SetText(Localization:GetString("302953"))
    end
    self.toggleTab1:SetIsOn(true)
    self:OnViewRefresh()
end

function UISeasonAllianceRewardDisplayDetailView:OnViewRefresh()
    local allianceList = self.ctrl:GetRewardAllianceData(self.stageIndex,self.stageSubIndex,self.topIndex)
    self.allianceFlag:InitData(self.stageIndex,self.stageSubIndex,allianceList,self.topIndex)
    self.stageDataList =self.ctrl:GetStageData(self.stageIndex,self.stageSubIndex,self.topIndex)
    self:SetTaskLabel()
    self:SetRightTab(1)
    self:ToggleTrigger()
    CS.UIGray.SetGray(self._left_btn.transform, self.stageIndex == 1, self.stageIndex ~= 1)
    CS.UIGray.SetGray(self._right_btn.transform, self.stageIndex == 3, self.stageIndex ~= 3)
end

function UISeasonAllianceRewardDisplayDetailView:SetTaskLabel()
    local dialog = self.ctrl:GetRewardConditionDes(self.stageIndex,self.stageSubIndex,self.topIndex)
    self.Text_task:SetLocalText(dialog)
end

function UISeasonAllianceRewardDisplayDetailView:SetRightTab(index)
    if self.toggleLabelList~=nil and self.toggleList~=nil then
        for i = 1,#self.toggleList do
            if i == index then
                self.toggleList[i]:SetIsOn(true)
                self.toggleLabelList[i]:initLabelState(true)
            else
                self.toggleList[i]:SetIsOn(false)
                self.toggleLabelList[i]:initLabelState(false)
            end
        end
    end
end

function UISeasonAllianceRewardDisplayDetailView:ToggleTrigger()
    self.rewardIndex = 1
    local diamondNum = 0
    self:ClearItemCell()
    local stampCount = 0
    self.stamp2:SetActive(false) 
    self.stamp1:SetActive(false)
    --self.stamp_item_des:SetText("")
    if self.stageDataList~=nil then
        for i = 1,#self.toggleList do
            if self.toggleList[i]:GetIsOn() then
                self.toggleLabelList[i]:initLabelState(true)
                self.rewardIndex = i
            else
                self.toggleLabelList[i]:initLabelState(false)  
            end
            local num = 0
            local data = self.stageDataList[i]
            if data~=nil then
                num = data.numTotal
                self.toggleLabelList[i]:SetTotalNum(num)
            end
        end
        local showData = self.stageDataList[self.rewardIndex]
        if showData~=nil then
            diamondNum = showData.diamonds
            local list = self.ctrl:GetRewards(showData.rewardInfo)
            if #list >0 then
                local num =0
                for i = 1, table.length(list) do
                    --复制基础prefab，每次循环创建一次
                    num = num+1
                    local data = list[i]
                    if data.itemId~=nil and self.stampList[tonumber(data.itemId)]~=nil then
                        stampCount = stampCount+1
                        if stampCount ==1 then
                            local str = data.itemName ..  string.format("  <b><size=26>x%s</size></b>", data.count)
                            self.stamp1:SetActive(true)
                            self.stamp1:InitData(data.itemId,data.icon_big,str, data.icon_value)
                        elseif stampCount == 2 then
                            local str = data.itemName ..  string.format("  <b><size=26>x%s</size></b>", data.count)
                            self.stamp2:SetActive(true)
                            self.stamp2:InitData(data.itemId,data.icon_big,str, data.icon_value)
                        end
                        
                    else
                        self.rewardModel[i] = self:GameObjectInstantiateAsync(UIAssets.WorldPointRewardItem, function(request)
                            if request.isError then
                                return
                            end
                            local go = request.gameObject;
                            go.gameObject:SetActive(true)
                            go.transform:SetParent(self.reward_layout.transform)
                            go.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
                            local nameStr = tostring(NameCount)
                            go.name = nameStr
                            NameCount = NameCount + 1
                            local cell = self.reward_layout:AddComponent(RewardItem,nameStr)
                            cell:RefreshData(list[i])
                        end)
                    end

                end
            end
        end
    end
    self.Text_num:SetText(string.GetFormattedSeperatorNum(math.floor(diamondNum)))
end

function UISeasonAllianceRewardDisplayDetailView:ClearItemCell()
    self.reward_layout:RemoveComponents(RewardItem)
    if self.rewardModel~=nil then
        for k,v in pairs(self.rewardModel) do
            if v ~= nil then
                self:GameObjectDestroy(v)
            end
        end
    end
    self.rewardModel ={}
end
function UISeasonAllianceRewardDisplayDetailView:ToggleControlBorS()
    if self.toggleTab1:GetIsOn() then
        self.stageSubIndex =1
    elseif self.toggleTab2:GetIsOn() then
        self.stageSubIndex = 2
    elseif self.toggleTab3:GetIsOn() then
        self.stageSubIndex = 3
    end
    self:OnViewRefresh()
end

function UISeasonAllianceRewardDisplayDetailView:OnClickInfoBtn()
    local scaleFactor = UIManager:GetInstance():GetScaleFactor()
    local position = self.infoBtnN.transform.position + Vector3.New(-30, 0, 0) * scaleFactor

    local param = UIHeroTipView.Param.New()
    param.content = Localization:GetString("110380")
    param.dir = UIHeroTipView.Direction.LEFT
    param.defWidth = 240
    param.pivot = 0.8
    param.position = position
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIHeroTip, { anim = false }, param)
end

return UISeasonAllianceRewardDisplayDetailView