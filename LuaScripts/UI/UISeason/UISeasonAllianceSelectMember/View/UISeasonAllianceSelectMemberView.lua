---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 24224.
--- DateTime: 2022/11/29 21:48
---
local AlMemberSelectCell = require "UI.UISeason.UISeasonAllianceSelectMember.Component.AlMemberSelectCell"
local AllianceRewardTop = require "UI.UISeason.UISeasonAllianceSelectMember.Component.AllianceRewardTop"
local UISeasonAllianceSelectMemberView = BaseClass("UISeasonAllianceSelectMemberView",UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization

local txt_title_path ="UICommonPopUpTitle/bg_mid/titleText"
local close_btn_path = "UICommonPopUpTitle/bg_mid/CloseBtn"
local return_btn_path = "UICommonPopUpTitle/panel"
local scroll_path = "ScrollView"
local set_btn_path = "SetBtn"
local function OnCreate(self)
    base.OnCreate(self)
    self.packageId = self:GetUserData()
    SFSNetwork.SendMessage(MsgDefines.SeasonBalanceMemberList)
    --SFSNetwork.SendMessage(MsgDefines.SeasonBalanceGiveRecord)
    self.txt_title = self:AddComponent(UITextMeshProUGUIEx, txt_title_path)
    self.txt_title:SetText(Localization:GetString("110300"))
    self.close_btn = self:AddComponent(UIButton, close_btn_path)
    self.close_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self.ctrl:CloseSelf()
    end)
    self.return_btn = self:AddComponent(UIButton, return_btn_path)
    self.return_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self.ctrl:CloseSelf()
    end)
    self.top = self:AddComponent(AllianceRewardTop,"Top")
    self.ScrollView = self:AddComponent(UIScrollView, scroll_path)
    self.ScrollView:SetOnItemMoveIn(function(itemObj, index)
        self:OnItemMoveIn(itemObj, index)
    end)
    self.ScrollView:SetOnItemMoveOut(function(itemObj, index)
        self:OnItemMoveOut(itemObj, index)
    end)
    self._set_btn = self:AddComponent(UIButton,set_btn_path)
    self._set_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:SendRewardList()
    end)
    self._set_btn_txt = self:AddComponent(UIText,"SetBtn/getTxt")
    self._set_btn_txt:SetText(Localization:GetString("110304"))
    self._des_txt = self:AddComponent(UIText,"desTxt")
    self._des_txt:SetText(Localization:GetString("110314"))
    self.showDatalist ={}
    self.selectList = {}
end

local function OnDestroy(self)
    self:ClearScroll()
    base.OnDestroy(self)
end


local function OnEnable(self)
    base.OnEnable(self)
    self.top:InitData(self.packageId)
end

local function OnDisable(self)
    base.OnDisable(self)
end


local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.GetSeasonAllianceSendMemberList, self.RefreshList)
    
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
    self:RemoveUIListener(EventId.GetSeasonAllianceSendMemberList, self.RefreshList)
end

local function RefreshList(self)
    self:ClearScroll()
    self.showDatalist = self.ctrl:GetAllMemberList()
    self.menuList = self.ctrl:GetMenuList()
    if #self.showDatalist > 0 then
        self.ScrollView:SetTotalCount(#self.showDatalist)
        self.ScrollView:RefillCells()
    end
end


local function ClearScroll(self)
    self.ScrollView:ClearCells()
    self.ScrollView:RemoveComponents(AlMemberSelectCell)
    self.showDatalist = {}
end

local function OnItemMoveIn(self,itemObj, index)
    itemObj.name = tostring(index)
    local cellItem = self.ScrollView:AddComponent(AlMemberSelectCell, itemObj)
    cellItem:SetItemShow(self.showDatalist[index])
end

local function OnItemMoveOut(self, itemObj, index)
    self.ScrollView:RemoveComponent(itemObj.name, AlMemberSelectCell)
end

local function GetIsInMenu(self,uid)
    return self.menuList[uid]~=nil
end

local function IsInSelectList(self,uid)
    return self.selectList[uid]~=nil
end

local function SetSelectState(self,uid,Add)
    if Add ==true then
        self.selectList[uid] = 1
        self.top:AddMember()
    else
        self.selectList[uid] =  nil
        self.top:DecMember()
    end
end

local function IsEmpty(self)
    return self.top:CheckIsEmpty()
end
local function SendRewardList(self)
    if table.count(self.selectList)>0 then
        local list = self.selectList
        local packageId = self.packageId
        local show  = Setting:GetPrivateInt("SHOW_SEASON_MEMBER_SELECT",0)
        if show<=0 then
            UIUtil.ShowSecondMessage(Localization:GetString("100378"),Localization:GetString("110367"),2,"","", function()
                SFSNetwork.SendMessage(MsgDefines.SeasonBalanceGiveAlliesPackages,packageId,table.keys(list))
                self.ctrl:CloseSelf()
            end, function(needSellConfirm)
                if needSellConfirm== false then
                    Setting:SetPrivateInt("SHOW_SEASON_MEMBER_SELECT",1)
                else
                    Setting:SetPrivateInt("SHOW_SEASON_MEMBER_SELECT",0)
                end
            end)
            return
        end
        SFSNetwork.SendMessage(MsgDefines.SeasonBalanceGiveAlliesPackages,self.packageId,table.keys(self.selectList))
    end
    self.ctrl:CloseSelf()
end

UISeasonAllianceSelectMemberView.OnCreate= OnCreate
UISeasonAllianceSelectMemberView.OnDestroy = OnDestroy
UISeasonAllianceSelectMemberView.SetSelectState = SetSelectState
UISeasonAllianceSelectMemberView.IsInSelectList = IsInSelectList
UISeasonAllianceSelectMemberView.GetIsInMenu =GetIsInMenu
UISeasonAllianceSelectMemberView.OnEnable = OnEnable
UISeasonAllianceSelectMemberView.OnDisable = OnDisable
UISeasonAllianceSelectMemberView.OnAddListener = OnAddListener
UISeasonAllianceSelectMemberView.OnRemoveListener = OnRemoveListener
UISeasonAllianceSelectMemberView.RefreshList = RefreshList
UISeasonAllianceSelectMemberView.ClearScroll = ClearScroll
UISeasonAllianceSelectMemberView.OnItemMoveIn = OnItemMoveIn
UISeasonAllianceSelectMemberView.OnItemMoveOut = OnItemMoveOut
UISeasonAllianceSelectMemberView.SendRewardList = SendRewardList
UISeasonAllianceSelectMemberView.IsEmpty = IsEmpty
return UISeasonAllianceSelectMemberView