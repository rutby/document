---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 24224.
--- DateTime: 2022/11/29 16:00
---
local SeasonAllianceSendRewardObj = require "UI.UISeason.UISeasonAllianceReward.Component.SeasonAllianceSendRewardObj"
local SeasonAllianceRewardFlag = require "UI.UISeason.UISeasonAllianceReward.Component.SeasonAllianceRewardFlag"
local SeasonAllianceDetail = require "UI.UISeason.UISeasonAllianceReward.Component.SeasonAllianceDetail"
local SeasonGetRewardObj = require "UI.UISeason.UISeasonAllianceReward.Component.SeasonGetRewardObj"

local UISeasonAllianceRewardView = BaseClass("UISeasonAllianceRewardView",UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization
function UISeasonAllianceRewardView:OnCreate()
    base.OnCreate(self)
    SFSNetwork.SendMessage(MsgDefines.SeasonBalancePackageViewOpen)
    self:ComponentDefine()
    self:DataDefine()
end

function UISeasonAllianceRewardView:ComponentDefine()
    self._close_btn = self:AddComponent(UIButton,"safeArea/Back")
    self._close_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self.ctrl:CloseSelf()
    end)
    self._title_txt = self:AddComponent(UIText,"safeArea/Title")
    self._title_txt:SetLocalText(110295)
    self.reward_obj = self:AddComponent(SeasonGetRewardObj,"content/right/rewardObj")
    self.sendRewardObj = self:AddComponent(SeasonAllianceSendRewardObj,"content/right/sendRewardObj")
    self.allianceFlag = self:AddComponent(SeasonAllianceRewardFlag,"content/alliance/rewardBg/Bg")
    self.jumpBtn = self:AddComponent(UIButton,"content/alliance/rewardBg/Bg")
    self.jumpBtn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnJumpClick()
    end)
    self.allianceDetail = self:AddComponent(SeasonAllianceDetail,"content/right/allianceDes")
    self.empty_obj = self:AddComponent(UIBaseContainer, "content/right/emptyObj")
    self.empty_txt = self:AddComponent(UIText, "content/right/emptyObj/emptyDes")
    self.empty_txt:SetLocalText(110316)
end

function UISeasonAllianceRewardView:DataDefine()
end

function UISeasonAllianceRewardView:OnDestroy()
    base.OnDestroy(self)
end

function UISeasonAllianceRewardView:OnEnable()
    base.OnEnable(self)
end

function UISeasonAllianceRewardView:OnDisable()
    base.OnDisable(self)
end

function UISeasonAllianceRewardView:OnAddListener()
    base.OnAddListener(self)
    self:AddUIListener(EventId.GetSeasonRewardData, self.RefreshList)
    self:AddUIListener(EventId.OnClaimSeasonRewardSucc, self.RefreshList)
end

function UISeasonAllianceRewardView:OnRemoveListener()
    base.OnRemoveListener(self)
    self:RemoveUIListener(EventId.GetSeasonRewardData,self.RefreshList)
    self:RemoveUIListener(EventId.OnClaimSeasonRewardSucc,self.RefreshList)
end


function UISeasonAllianceRewardView:RefreshList()
    local rewardFlagData = self.ctrl:GetAllianceStage()
    if rewardFlagData~=nil then
        self.allianceFlag:InitData(rewardFlagData.stageType,rewardFlagData.subStageType,nil,rewardFlagData.topRank)
    end
    if  DataCenter.AllianceBaseDataManager:IsSelfLeader() then
        self.sendRewardObj:SetActive(true)
        self.reward_obj:SetActive(false)
        self.empty_obj:SetActive(false)
        self.sendRewardObj:RefreshList()
    else
        local data = self.ctrl:GetSelfRewardList()
        if data~=nil and data.order~=nil then
            self.allianceDetail:SetMemberOrder(data.order)
            self.sendRewardObj:SetActive(false)
            self.reward_obj:SetActive(true)
            self.reward_obj:RefreshList(data)
            self.empty_obj:SetActive(false)
        else
            self.sendRewardObj:SetActive(false)
            self.reward_obj:SetActive(false)
            self.empty_obj:SetActive(true)
        end
    end
end

function UISeasonAllianceRewardView:OnJumpClick()
    local rewardFlagData = self.ctrl:GetAllianceStage()
    if rewardFlagData~=nil then
        if rewardFlagData.stageType>0 then
            UIManager:GetInstance():OpenWindow(UIWindowNames.UISeasonAllianceRewardDisplayDetail,{ anim = true, hideTop = true },rewardFlagData.stageType,rewardFlagData.topRank)
        end
    end
end
return UISeasonAllianceRewardView