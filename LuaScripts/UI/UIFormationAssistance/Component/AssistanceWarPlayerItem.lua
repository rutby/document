---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2021/7/29 12:02
---
local AllianceWarPlayerSoliderItem = require "UI.UIAlliance.UIAllianceAlertDetail.Component.AllianceAlertSoliderItem"
local UIAllianceHeroCell = require "UI.UIChatNew.Component.RadarAlarmCells.UIAllianceHeroCell"
local AssistanceWarPlayerItem = BaseClass("AssistanceWarPlayerItem",UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization

local leader_path = "mainContent/leader"
local name_path = "mainContent/nameTxt"
local power_path = "mainContent/powerTxt"
-- local power_des_path = "mainContent/powerDesTxt"
local state_path= "mainContent/stateTxt"
local sl_Image_path = "mainContent/Image"
local slider_path = "mainContent/Slider"
-- local progress_txt_path = "mainContent/Slider/progressTxt"
local time_txt_path = "mainContent/Slider/TimeTxt"
local cancel_btn_path ="mainContent/returnButton"
local show_btn_path ="mainContent/showButton"
local close_img_path = "mainContent/ImgArrowNormal"
local open_img_path = "mainContent/ImgArrowSelect"
local _content_rect = "mainContent/Content"
local content_path = "armyContent"
local playerHead_path = "mainContent/UIPlayerHead"
local playerHeadIcon_path = "mainContent/UIPlayerHead/HeadIcon"
local playerHeadFg_path = "mainContent/UIPlayerHead/Foreground"
local SliderLength = 210

local function OnCreate(self, uuid)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
    self:SetUuid(uuid)
end

local function OnDestroy(self)
    base.OnDestroy(self)
    self:DataDestroy()
    self:ComponentDestroy()
end

local function ComponentDefine(self)
    self.leader_icon = self:AddComponent(UIImage,leader_path)
    self.name = self:AddComponent(UITextMeshProUGUIEx,name_path)
    self.power = self:AddComponent(UITextMeshProUGUIEx,power_path)
    -- self.power_des = self:AddComponent(UITextMeshProUGUIEx,power_des_path)
    -- self.power_des:SetText(Localization:GetString("130068")..": ")
    self.state = self:AddComponent(UITextMeshProUGUIEx,state_path)
    self.state:SetLocalText(GameDialogDefine.HAD_ARRIVED)
    self.sl_Image = self:AddComponent(UIBaseContainer,sl_Image_path)
    self.slider = self:AddComponent(UISlider,slider_path)
    -- self.progress_txt = self:AddComponent(UITextMeshProUGUIEx,progress_txt_path)
    self.time_txt = self:AddComponent(UITextMeshProUGUIEx,time_txt_path)
    self.close_img = self:AddComponent(UIImage,close_img_path)
    self.open_img = self:AddComponent(UIImage,open_img_path)
    self.cancel_btn = self:AddComponent(UIButton, cancel_btn_path)
    self.cancel_btn:SetOnClick(function ()
        self:OnCancelClick()
    end)
    self.show_btn = self:AddComponent(UIButton, show_btn_path)
    self.show_btn:SetOnClick(function ()
        self:OnShowClick()
    end)
    self.heroCell = self.transform:Find("UIHeroCellSmall")
    self._content_rect = self:AddComponent(UIBaseContainer,_content_rect)
    self.modelHero = {}
    self.content = self:AddComponent(UIBaseContainer,content_path)
    self.playerHead = self:AddComponent(UIBaseContainer, playerHead_path)
    self.playerHeadIcon = self:AddComponent(UIPlayerHead, playerHeadIcon_path)
    self.playerHeadFg = self:AddComponent(UIImage, playerHeadFg_path)
    self.model = {}
end

local function ComponentDestroy(self)
    --self:SetAllCellDestroy()
    --self:SetAllCellDestroyHero()
    
    self.leader_icon = nil
    self.name = nil
    self.power = nil
    -- self.power_des = nil
    self.state = nil
    self.slider = nil
    -- self.progress_txt = nil
    self.time_txt = nil
    self.close_img = nil
    self.open_img = nil
    self.cancel_btn = nil
    self.show_btn = nil
    self.heroCell = nil
    self._content_rect = nil
    self.modelHero = nil
    self.content = nil
    self.playerHead = nil
    self.playerHeadIcon = nil
    self.playerHeadFg = nil
    self.model = nil
end

local function DataDefine(self)
    self.isUpdate = false
    self.lastChangeTextDeltaTime = 0
    self.lastChangeImageDeltaTime = 0
end

local function DataDestroy(self)
    self.isUpdate = nil
    self.lastChangeTextDeltaTime = nil
    self.lastChangeImageDeltaTime = nil
end

local function RefreshData(self)
    self:SetAllCellDestroyHero()
    self.showSolider = false
    self.isUpdate = false
    self.lastChangeTextDeltaTime = 0
    self.lastChangeImageDeltaTime = 0
    self.dataInfo = self.view.ctrl:GetPlayerItemData(self.uuid)
    self.name:SetText(self.dataInfo.ownerName)
    local selfUid = LuaEntry.Player.uid
    self.cancel = false
    if self.view.asType == AssistanceType.Build or self.view.asType == AssistanceType.MainCity or self.view.asType ==  AssistanceType.Desert then
        if selfUid == self.view.ctrl.ownerUid then
            self.cancel = true
        elseif self.dataInfo.ownerUid == selfUid then
            self.cancel = true
        end
    elseif self.view.asType == AssistanceType.AllianceCity or self.view.asType == AssistanceType.AllianceBuild or self.view.asType == AssistanceType.DragonBuilding then
        if DataCenter.AllianceBaseDataManager:IsR4orR5() then
            self.cancel = true
        elseif self.dataInfo.ownerUid == selfUid then
            self.cancel = true
        end
    end
    
    self:RefreshPlayerHead()
    
    --self.leader_icon:SetActive(self.dataInfo.leader)
    self.cancel_btn:SetActive(self.cancel)
    local curTime = UITimeManager:GetInstance():GetServerTime()
    if curTime < self.dataInfo.endTime and curTime > self.dataInfo.startTime then
        
        if self.state:GetActive() then
            self.state:SetActive(false)
        end
        if self.slider:GetActive() == false then
            self.sl_Image:SetActive(true)
            self.slider:SetActive(true)
        end
        self:UpdateSlider()
    else
        if self.state:GetActive() == false then
            self.state:SetActive(true)
        end
        if self.slider:GetActive() then
            self.sl_Image:SetActive(false)
            self.slider:SetActive(false)
        end
    end
    self.open_img:SetActive(true)
    self.close_img:SetActive(false)
    self._content_rect:RemoveComponents(UIAllianceHeroCell)
    --英雄
    local list = self.view.ctrl:GetPlayerSoldierData(self.uuid)
    if list ~= nil then
        for i = 1, table.length(list.heros) do
            --复制基础prefab，每次循环创建一次
            self.modelHero[i] = self:GameObjectInstantiateAsync(UIAssets.AllianceHeroCell, function(request)
                if request.isError then
                    return
                end
                local go = request.gameObject;
                go.gameObject:SetActive(true)
                go.transform:SetParent(self._content_rect.transform)
                go.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
                NameCount = NameCount + 1
                local nameStr = tostring(NameCount)
                go.name = nameStr
                local cell = self._content_rect:AddComponent(UIAllianceHeroCell, go.name)
                cell:ReInit(list.heros[i])
            end)
        end
        local count = 0
        for i = 1, table.length(list.soldiers) do
            count = list.soldiers[i].count + count
        end
        self.power:SetText(count)
    end
end

local function RefreshPlayerHead(self)
    if self.dataInfo then
        local member = DataCenter.AllianceMemberDataManager:GetAllianceMemberByUid(self.dataInfo.ownerUid)
        if member then
            self.playerHeadIcon:SetData(member.uid, member.pic, member.picVer)
            local fgImg = member:GetHeadBgImg()
            if fgImg then
                self.playerHeadFg:SetActive(true)
                self.playerHeadFg:LoadSprite(fgImg)
            else
                self.playerHeadFg:SetActive(false)
            end
        end
    end
end

local function SetUuid(self,uuid)
    self.uuid = uuid
end

local function UpdateSlider(self)
    local curTime = UITimeManager:GetInstance():GetServerTime()
    local deltaTime = 0
    local maxTime = 0
    local dialog = Localization:GetString("390228")
    if self.dataInfo.endTime > curTime then
        self.isUpdate =true
        deltaTime = self.dataInfo.endTime - curTime
        maxTime = self.dataInfo.endTime - self.dataInfo.startTime
    else
        self.isUpdate = false
    end
    if self.isUpdate then
        if TimeBarUtil.CheckIsNeedChangeBar(deltaTime,self.lastChangeImageDeltaTime,maxTime,SliderLength) then
            self.lastChangeImageDeltaTime = deltaTime
            local tempValue = 1 - deltaTime / maxTime
            self.slider:SetValue(tempValue)
        end

        if TimeBarUtil.CheckIsNeedChangeText(deltaTime, self.lastChangeTextDeltaTime) then
            self.lastChangeTextDeltaTime = deltaTime
            if self.dataInfo.status == MarchStatus.BUILD_WORM_HOLE then
                dialog = Localization:GetString("390210")
            end
            -- self.progress_txt:SetText(dialog)
            self.time_txt:SetText(UITimeManager:GetInstance():MilliSecondToFmtString(deltaTime))
        end
    else
        self.lastChangeTextDeltaTime = 0
        self.lastChangeImageDeltaTime = 0
        self.isUpdate = false
        if self.state:GetActive() == false then
            self.state:SetActive(true)
        end
        if self.slider:GetActive() then
            self.slider:SetActive(false)
        end
    end
end

local function Update(self)
    if self.isUpdate then
        self:UpdateSlider()
    end
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function SetAllCellDestroy(self)
    self.content:RemoveComponents(AllianceWarPlayerSoliderItem)
    if next(self.model) then
        for _, v in pairs(self.model) do
            if v ~= nil then
                self:GameObjectDestroy(v)
            end
        end
    end
    self.model = {}
end

local function SetAllCellDestroyHero(self)
    self._content_rect:RemoveComponents(UIAllianceHeroCell)
    if next(self.modelHero) then
        for _, v in pairs(self.modelHero) do
            if v ~= nil then
                self:GameObjectDestroy(v)
            end
        end
    end
    self.modelHero = {}
end

local function OnCancelClick(self)
    if self.cancel then
        if self.dataInfo.ownerUid == LuaEntry.Player.uid then
            self.view.ctrl:OnRetreatClick(self.uuid)
        else
            UIUtil.ShowMessage(Localization:GetString("300031",self.dataInfo.ownerName), 2, "100288", "100289", function() self.view.ctrl:OnRetreatClick(self.uuid) end, nil, nil)
        end
        
    end
    --self.view.ctrl:OnRetreatClick(self.uuid)
end

local function OnShowClick(self)
    self:SetAllCellDestroy()
    if self.showSolider then
        self.open_img:SetActive(true)
        self.close_img:SetActive(false)
        self.showSolider =false
        self.content:SetActive(false)
    else
        self.open_img:SetActive(false)
        self.close_img:SetActive(true)
        self.showSolider =true
        --士兵
        local list = self.view.ctrl:GetPlayerSoldierData(self.uuid)
        if list ~= nil and #list.soldiers > 0 then
            self.content:SetActive(true)
            for i = 1, table.length(list.soldiers) do
                --复制基础prefab，每次循环创建一次
                self.model[i] = self:GameObjectInstantiateAsync(UIAssets.AllianceWarPlayerSoliderItem, function(request)
                    if request.isError then
                        return
                    end
                    local go = request.gameObject;
                    go.gameObject:SetActive(true)
                    go.transform:SetParent(self.content.transform)
                    go.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
                    go.name = "item" .. i
                    local cell = self.content:AddComponent(AllianceWarPlayerSoliderItem, go.name)
                    cell:SetData(list.soldiers[i].armsId, list.soldiers[i].count)
                end)
            end
        else
            self.content:SetActive(false)
        end
    end
end

AssistanceWarPlayerItem.OnCreate = OnCreate
AssistanceWarPlayerItem.OnDestroy = OnDestroy
AssistanceWarPlayerItem.ComponentDefine = ComponentDefine
AssistanceWarPlayerItem.ComponentDestroy = ComponentDestroy
AssistanceWarPlayerItem.DataDefine = DataDefine
AssistanceWarPlayerItem.DataDestroy = DataDestroy
AssistanceWarPlayerItem.OnEnable = OnEnable
AssistanceWarPlayerItem.OnDisable = OnDisable
AssistanceWarPlayerItem.RefreshData = RefreshData
AssistanceWarPlayerItem.SetUuid = SetUuid
AssistanceWarPlayerItem.UpdateSlider = UpdateSlider
AssistanceWarPlayerItem.Update = Update
AssistanceWarPlayerItem.OnCancelClick = OnCancelClick
AssistanceWarPlayerItem.OnShowClick = OnShowClick
AssistanceWarPlayerItem.SetAllCellDestroy = SetAllCellDestroy
AssistanceWarPlayerItem.SetAllCellDestroyHero = SetAllCellDestroyHero
AssistanceWarPlayerItem.RefreshPlayerHead = RefreshPlayerHead
return AssistanceWarPlayerItem