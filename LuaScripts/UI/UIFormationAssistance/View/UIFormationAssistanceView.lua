---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2021/7/28 21:00
---
local AssistanceWarPlayerItem = require "UI.UIFormationAssistance.Component.AssistanceWarPlayerItem"
local JoinAssistanceItem = require "UI.UIFormationAssistance.Component.JoinAssistanceItem"
local UIFormationAssistanceView = BaseClass("UIFormationAssistanceView",UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization

local txt_title_path ="UICommonPopUpTitle/bg_mid/titleText"
local close_btn_path = "UICommonPopUpTitle/bg_mid/CloseBtn"
local content_path = "ImgBg/ScrollView/Viewport/Content"
local return_btn_path = "UICommonPopUpTitle/panel"
local join_obj_path = "ImgBg/JoinAssistanceItem"
local name_txt_path = "ImgBg/mainContent/nameTxt"
local num_txt_path = "ImgBg/mainContent/numTxt"
local info_btn_path = "ImgBg/mainContent/Info"
local headIcon_path = "ImgBg/mainContent/UIPlayerHead/HeadIcon"
local headIconFg_path = "ImgBg/mainContent/UIPlayerHead/Foreground"

local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

local function OnDestroy(self)
    self:DataDestroy()
    self:ComponentDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    self.title = self:AddComponent(UITextMeshProUGUIEx,txt_title_path)
    self.title:SetLocalText(GameDialogDefine.ASSISTANCE)
    self.name_txt = self:AddComponent(UITextMeshProUGUIEx,name_txt_path)
    self.num_txt = self:AddComponent(UITextMeshProUGUIEx,num_txt_path)
    self.info_btn = self:AddComponent(UIButton,info_btn_path)
    self.info_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnInfoClick()
    end)
    self.close_btn = self:AddComponent(UIButton, close_btn_path)
    self.close_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self.ctrl:OnCloseClick()
    end)
    self.return_btn = self:AddComponent(UIButton, return_btn_path)
    self.return_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self.ctrl:OnCloseClick()
    end)
    self.join_obj = self:AddComponent(JoinAssistanceItem,join_obj_path)
    self.content = self:AddComponent(UIBaseContainer,content_path)
    self.headIcon = self:AddComponent(UIPlayerHead, headIcon_path)
    self.headIconFg = self:AddComponent(UIImage, headIconFg_path)
    self.cells = {}
end

local function ComponentDestroy(self)
    self.title = nil
    self.name_txt = nil
    self.num_txt = nil
    self.close_btn = nil
    self.return_btn =nil
    self.join_obj = nil
    self.content = nil
    self.headIcon = nil
    self.headIconFg = nil
    for _, cell in pairs(self.cells) do
        if cell ~= nil then
            self:GameObjectDestroy(cell)
        end
    end
end

local function DataDefine(self)
    self.uuid = nil
    self.asType = nil
    self.ownerUid = nil
    self.pointId = nil
    self.nameCount = 0
end

local function DataDestroy(self)
    self.uuid = nil
    self.asType = nil
    self.ownerUid = nil
    self.pointId = nil
    self.nameCount = nil
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.PlayerMessageInfo, self.OnRefreshPlayerData)
    self:AddUIListener(EventId.GetAssistanceData, self.OnRefresh)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
    self:RemoveUIListener(EventId.PlayerMessageInfo, self.OnRefreshPlayerData)
    self:RemoveUIListener(EventId.GetAssistanceData,self.OnRefresh)
end

local function OnEnable(self)
    base.OnEnable(self)
    self:ReInit()
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function ReInit(self)
    local uuid, playerUid, pointId, asType = self:GetUserData()
    self.uuid = tonumber(uuid)
    self.ownerUid = playerUid
    self.pointId = tonumber(pointId)
    self.asType = asType
    
    self.ctrl:SetUuid(self.uuid, self.ownerUid)
    
    if self.asType == AssistanceType.MainCity or self.asType == AssistanceType.Build or self.asType == AssistanceType.Desert then
        SFSNetwork.SendMessage(MsgDefines.GetNewUserInfo, self.ownerUid)
    end
    SFSNetwork.SendMessage(MsgDefines.AllianceAssistanceInfo, self.uuid, self.asType)
    if self.asType == AssistanceType.AllianceCity then
        self:OnRefreshAllianceCityData()
    elseif self.asType == AssistanceType.AllianceBuild then
        self:OnRefreshAllianceBuildData()
    elseif self.asType == AssistanceType.DragonBuilding then
        self:OnRefreshDragonBuildData()
    end
end

local function OnRefresh(self)
    self:SetAllCellDestroy()
    local data = self.ctrl:GetBuildData(self.asType)
    if self.ownerUid == LuaEntry.Player.uid and self.asType == AssistanceType.MainCity then
        self.join_obj:SetActive(false)
    else
        self.join_obj:SetActive(true)
        self.join_obj:SetState(data.join, data.alreadyHave, data.maxNum > 0)
    end
    local list = self.ctrl:GetPlayerIdList()
    if list ~= nil and table.length(list) > 0 then
        self.num_txt:SetText(Localization:GetString(GameDialogDefine.ASSISTANCE_NUM) .." ".. table.length(list) .. "/" .. data.maxNum)--阿拉伯语，冒号后要加空格
        for i = 1, table.length(list) do
            --复制基础prefab，每次循环创建一次
            self.cells[list[i]] = self:GameObjectInstantiateAsync(UIAssets.UIFormationAssistanceItem, function(request)
                
                if request.isError then
                    return
                end
                
                local go = request.gameObject
                go.gameObject:SetActive(true)
                go.transform:SetParent(self.content.transform)
                go.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)

                self.nameCount = self.nameCount + 1
                local nameStr = tostring(self.nameCount)
                go.name = nameStr
                local cell = self.content:AddComponent(AssistanceWarPlayerItem, nameStr)
                cell.ctrl = self.ctrl
                cell:SetUuid(list[i])
                cell:RefreshData()
            end)
        end
    else
        self.num_txt:SetText(Localization:GetString(GameDialogDefine.ASSISTANCE_NUM) .. " 0/" .. data.maxNum)
    end
    self:RefreshPlayerHead()
end


local function RefreshPlayerHead(self)
    local member = DataCenter.AllianceMemberDataManager:GetAllianceMemberByUid(self.ownerUid)
    if member then
        self.headIcon:SetData(member.uid, member.pic, member.picVer)
        local fgImg = member:GetHeadBgImg()
        if fgImg then
            self.headIconFg:SetActive(true)
            self.headIconFg:LoadSprite(fgImg)
        else
            self.headIconFg:SetActive(false)
        end
    end
end

local function SetAllCellDestroy(self)
    self.content:RemoveComponents(AssistanceWarPlayerItem)
    for _, cell in pairs(self.cells) do
        if cell ~= nil then
            self:GameObjectDestroy(cell)
        end
    end
    self.cells ={}
end

local function OnRefreshPlayerData(self)
    if self.asType == AssistanceType.Build or self.asType == AssistanceType.MainCity or self.asType == AssistanceType.Desert then
        local data = self.ctrl:GetPlayerData(self.ownerUid, self.pointId, self.asType)
        if data ~= nil and data.playerData~=nil then
            local playerName = data.playerData.name
            if data.playerData.alAbbr ~= nil and data.playerData.alAbbr ~= "" then
                playerName = "[" .. data.playerData.alAbbr .. "]" .. data.playerData.name
            end
            if self.asType == AssistanceType.MainCity then
                self.name_txt:SetLocalText(GameDialogDefine.DOME_OF_A, playerName) 
            elseif self.asType == AssistanceType.Build then
                if data.name ~= nil and data.name ~= "" then
                    local buildName = Localization:GetString(data.name)
                    self.name_txt:SetLocalText(GameDialogDefine.B_OF_A, playerName, buildName)
                else
                    self.name_txt:SetLocalText(GameDialogDefine.B_OF_A, playerName, "")
                end
            elseif self.asType == AssistanceType.Desert then
                local buildName = ""
                if data.level>0 then
                    buildName = Localization:GetString(data.name,data.level)
                else
                    buildName = Localization:GetString("110245")
                end
                self.name_txt:SetLocalText(GameDialogDefine.B_OF_A, playerName, buildName)
            end
        end
    end
end

local function OnJoinClick(self)
    self.ctrl:OnJoinClick(self.asType, self.pointId)
end

local function OnRefreshAllianceCityData(self)
    if self.asType == AssistanceType.AllianceCity then
        local data = self.ctrl:GetAllianceCityData(self.pointId)
        if data ~= nil then
            local cityName = Localization:GetString("140205", data.level, data.name)
            local ownerName = ""
            if data.alAbbr ~= nil and data.alAbbr ~= "" then
                ownerName = "[" .. data.alAbbr .. "]" .. data.alName
            end
            self.name_txt:SetLocalText(GameDialogDefine.B_OF_A, ownerName, cityName) 
        end
    end
end
local function OnRefreshAllianceBuildData(self)
    if self.asType == AssistanceType.AllianceBuild then
        local data = self.ctrl:GetAllianceBuildData(self.pointId)
        if data ~= nil then
            local cityName = Localization:GetString(data.name)
            local ownerName = ""
            if data.alAbbr ~= nil and data.alAbbr ~= "" then
                ownerName = "[" .. data.alAbbr .. "]"
            end
            self.name_txt:SetText(ownerName..cityName)
        end
    end
end

local function OnRefreshDragonBuildData(self)
    if self.asType == AssistanceType.DragonBuilding then
        local data = self.ctrl: GetDragonBuildData(self.pointId)
        if data ~= nil then
            local cityName = Localization:GetString(data.name)
            local ownerName = ""
            if data.alAbbr ~= nil and data.alAbbr ~= "" then
                ownerName = "[" .. data.alAbbr .. "]"
            end
            self.name_txt:SetText(ownerName..cityName)
        end
    end
end


local function OnInfoClick(self)
    local param = {}
    param.type = "desc"
    param.isLocal = true
    param.desc = 110222
    param.alignObject = self.info_btn
    param.isModify = true
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIItemTips,{anim = true}, param)
end

UIFormationAssistanceView.OnCreate = OnCreate
UIFormationAssistanceView.OnDestroy = OnDestroy
UIFormationAssistanceView.ComponentDefine = ComponentDefine
UIFormationAssistanceView.ComponentDestroy = ComponentDestroy
UIFormationAssistanceView.DataDefine = DataDefine
UIFormationAssistanceView.DataDestroy = DataDestroy
UIFormationAssistanceView.OnEnable = OnEnable
UIFormationAssistanceView.OnDisable = OnDisable
UIFormationAssistanceView.OnAddListener = OnAddListener
UIFormationAssistanceView.OnRemoveListener = OnRemoveListener
UIFormationAssistanceView.ReInit = ReInit
UIFormationAssistanceView.OnRefresh = OnRefresh
UIFormationAssistanceView.OnRefreshPlayerData = OnRefreshPlayerData
UIFormationAssistanceView.SetAllCellDestroy = SetAllCellDestroy
UIFormationAssistanceView.OnJoinClick = OnJoinClick
UIFormationAssistanceView.OnRefreshAllianceCityData = OnRefreshAllianceCityData
UIFormationAssistanceView.RefreshPlayerHead = RefreshPlayerHead
UIFormationAssistanceView.OnInfoClick = OnInfoClick
UIFormationAssistanceView.OnRefreshAllianceBuildData = OnRefreshAllianceBuildData
UIFormationAssistanceView.OnRefreshDragonBuildData =OnRefreshDragonBuildData
return UIFormationAssistanceView