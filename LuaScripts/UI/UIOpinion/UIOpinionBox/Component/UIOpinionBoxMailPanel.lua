---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2023/11/6 17:00
---

local UIOpinionBoxMailPanel = BaseClass("UIOpinionBoxMailPanel", UIBaseContainer)
local base = UIBaseContainer
local UIOpinionBoxMailItem = require "UI.UIOpinion.UIOpinionBox.Component.UIOpinionBoxMailItem"

local scroll_view_path = "ScrollView"

local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function ComponentDefine(self)
    self.scroll_view = self:AddComponent(UIScrollView, scroll_view_path)
    self.scroll_view:SetOnItemMoveIn(function(itemObj, index)
        self:OnCreateCell(itemObj, index)
    end)
    self.scroll_view:SetOnItemMoveOut(function(itemObj, index)
        self:OnDeleteCell(itemObj, index)
    end)
end

local function ComponentDestroy(self)
    
end

local function DataDefine(self)
    self.items = {}
end

local function DataDestroy(self)

end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.OpinionChooseMail, self.Refresh)
end

local function OnRemoveListener(self)
    self:RemoveUIListener(EventId.OpinionChooseMail, self.Refresh)
    base.OnRemoveListener(self)
end

local function OnCreateCell(self, itemObj, index)
    itemObj.name = tostring(index)
    local item = self.scroll_view:AddComponent(UIOpinionBoxMailItem, itemObj)
    item:SetData(self.data.mails[index])
    self.items[index] = item
end

local function OnDeleteCell(self, itemObj, index)
    self.scroll_view:RemoveComponent(itemObj.name, UIOpinionBoxMailItem)
    self.items[index] = nil
end

local function ShowScroll(self)
    local count = #self.data.mails
    if count > 0 then
        self.scroll_view:SetActive(true)
        self.scroll_view:SetTotalCount(count)
        self.scroll_view:RefillCells()
    else
        self.scroll_view:SetActive(false)
    end
end

local function Refresh(self)
    self.data = DataCenter.OpinionManager:GetData()
    self:ShowScroll()
end

UIOpinionBoxMailPanel.OnCreate = OnCreate
UIOpinionBoxMailPanel.OnDestroy = OnDestroy
UIOpinionBoxMailPanel.OnEnable = OnEnable
UIOpinionBoxMailPanel.OnDisable = OnDisable
UIOpinionBoxMailPanel.ComponentDefine = ComponentDefine
UIOpinionBoxMailPanel.ComponentDestroy = ComponentDestroy
UIOpinionBoxMailPanel.DataDefine = DataDefine
UIOpinionBoxMailPanel.DataDestroy = DataDestroy
UIOpinionBoxMailPanel.OnAddListener = OnAddListener
UIOpinionBoxMailPanel.OnRemoveListener = OnRemoveListener

UIOpinionBoxMailPanel.OnCreateCell = OnCreateCell
UIOpinionBoxMailPanel.OnDeleteCell = OnDeleteCell
UIOpinionBoxMailPanel.ShowScroll = ShowScroll

UIOpinionBoxMailPanel.Refresh = Refresh

return UIOpinionBoxMailPanel