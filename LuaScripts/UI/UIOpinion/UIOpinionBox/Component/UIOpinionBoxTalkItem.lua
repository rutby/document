---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2023/11/6 17:04
---

local UIOpinionBoxTalkItem = BaseClass("UIOpinionBoxTalkItem", UIBaseContainer)
local base = UIBaseContainer
local UIVitaResidentItem = require "UI.UIVita.Component.UIVitaResidentItem"

local item_path = "Item"
local desc_path = "DescBg/Desc"
local thumb_up_path = "ThumbBg/ThumbUp"
local thumb_down_path = "ThumbBg/ThumbDown"
local go_path = "Go"

local GoType =
{
    UpgradeBuild = 1,
    UpgradeFurniture = 2,
}

local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function ComponentDefine(self)
    self.item = self:AddComponent(UIVitaResidentItem, item_path)
    self.desc_text = self:AddComponent(UITextMeshProUGUIEx, desc_path)
    self.thumb_up_go = self:AddComponent(UIBaseContainer, thumb_up_path)
    self.thumb_down_go = self:AddComponent(UIBaseContainer, thumb_down_path)
    self.go_btn = self:AddComponent(UIButton, go_path)
    self.go_btn:SetOnClick(function()
        self:OnGoClick()
    end)
end

local function ComponentDestroy(self)
    
end

local function DataDefine(self)
    self.data = nil
    self.goFunc = nil
end

local function DataDestroy(self)

end

local function OnAddListener(self)
    base.OnAddListener(self)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
end

local function SetData(self, data)
    self.data = data
    
    self.item:SetData(data.residentId)
    self.desc_text:SetLocalText(data.content)
    self.thumb_up_go:SetActive(data.satisfied == 1)
    self.thumb_down_go:SetActive(data.satisfied == 0)
    self.goFunc = self:GetGoFunc()
    self.go_btn:SetActive(self.goFunc ~= nil)
end

local function GetGoFunc(self)
    local goFunc = nil
    local spls = string.split(self.data.extraInfo or "", ";")
    local type = tonumber(spls[1])
    if type == GoType.UpgradeBuild then
        local bUuid = tonumber(spls[2]) or 0
        local needLevel = tonumber(spls[3]) or 0
        local buildData = DataCenter.BuildManager:GetBuildingDataByUuid(bUuid)
        if buildData and buildData.level < needLevel then
            goFunc = function()
                GoToUtil.GotoCityByBuildUuid(bUuid, WorldTileBtnType.City_Upgrade)
                UIManager:GetInstance():DestroyWindow(UIWindowNames.UIOpinionBox, { anim = true })
            end
        end
    elseif type == GoType.UpgradeFurniture then
        local fUuid = tonumber(spls[2]) or 0
        local needLevel = tonumber(spls[3]) or 0
        local furnitureInfo = DataCenter.FurnitureManager:GetFurnitureByUuid(fUuid)
        if furnitureInfo and furnitureInfo.lv < needLevel then
            goFunc = function()
                GoToUtil.GotoFurniture(fUuid)
                UIManager:GetInstance():DestroyWindow(UIWindowNames.UIOpinionBox, { anim = true })
            end
        end
    end
    return goFunc
end

local function OnGoClick(self)
    self.goFunc()
end

UIOpinionBoxTalkItem.OnCreate = OnCreate
UIOpinionBoxTalkItem.OnDestroy = OnDestroy
UIOpinionBoxTalkItem.OnEnable = OnEnable
UIOpinionBoxTalkItem.OnDisable = OnDisable
UIOpinionBoxTalkItem.ComponentDefine = ComponentDefine
UIOpinionBoxTalkItem.ComponentDestroy = ComponentDestroy
UIOpinionBoxTalkItem.DataDefine = DataDefine
UIOpinionBoxTalkItem.DataDestroy = DataDestroy
UIOpinionBoxTalkItem.OnAddListener = OnAddListener
UIOpinionBoxTalkItem.OnRemoveListener = OnRemoveListener

UIOpinionBoxTalkItem.SetData = SetData
UIOpinionBoxTalkItem.GetGoFunc = GetGoFunc
UIOpinionBoxTalkItem.OnGoClick = OnGoClick

return UIOpinionBoxTalkItem