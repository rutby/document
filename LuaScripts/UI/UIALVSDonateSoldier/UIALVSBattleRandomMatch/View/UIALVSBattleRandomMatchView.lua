---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2023/3/1 14:51
---

local UIALVSBattleRandomMatch = BaseClass("UIALVSBattleRandomMatch", UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization
local AllianceFlagItem = require "UI.UIAlliance.UIAllianceFlag.Component.AllianceFlagItem"

local return_path = "UICommonMiniPopUpTitle/panel"
local close_path = "UICommonMiniPopUpTitle/Bg_mid/CloseBtn"
local title_path = "UICommonMiniPopUpTitle/Bg_mid/titleText"
local rank_path = "Rank"
local rank_icon_path = "RankIcon"
local rank_desc_path = "RankDesc"
local desc_path = "Desc"
local alliance_name_path = "AllianceName"
local power_path = "Power"
local alliance_flag_path = "AllianceFlag"
local declare_btn_path = "Declare"
local declare_text_path = "Declare/DeclareText"
local declare_cost_path = "Declare/DeclareCost"

local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
    self:ReInit()
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function ComponentDefine(self)
    self.return_btn = self:AddComponent(UIButton, return_path)
    self.return_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)
    self.close_btn = self:AddComponent(UIButton, close_path)
    self.close_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)
    self.title_text = self:AddComponent(UITextMeshProUGUIEx, title_path)
    self.title_text:SetLocalText(302839)
    self.rank_text = self:AddComponent(UIText, rank_path)
    self.rank_icon_image = self:AddComponent(UIImage, rank_icon_path)
    self.rank_desc_text = self:AddComponent(UIText, rank_desc_path)
    self.rank_desc_text:SetLocalText(302043)
    self.desc_text = self:AddComponent(UIText, desc_path)
    self.desc_text:SetLocalText(302840)
    self.alliance_name_text = self:AddComponent(UIText, alliance_name_path)
    self.power_text = self:AddComponent(UIText, power_path)
    self.alliance_flag = self:AddComponent(AllianceFlagItem, alliance_flag_path)
    self.declare_btn = self:AddComponent(UIButton, declare_btn_path)
    self.declare_btn:SetOnClick(function()
        self:OnDeclareClick()
    end)
    self.declare_text = self:AddComponent(UIText, declare_text_path)
    self.declare_text:SetLocalText(302812)
end

local function ComponentDestroy(self)
    self.return_btn = nil
    self.close_btn = nil
    self.title_text = nil
    self.rank_text = nil
    self.rank_icon_image = nil
    self.rank_desc_text = nil
    self.desc_text = nil
    self.alliance_name_text = nil
    self.power_text = nil
    self.alliance_flag = nil
    self.declare_btn = nil
    self.declare_text = nil
end

local function DataDefine(self)
    self.data = nil
end

local function DataDestroy(self)
    self.data = nil
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.ALVSRandomMatchReturn, self.OnGloryMatch)
end

local function OnRemoveListener(self)
    self:RemoveUIListener(EventId.ALVSRandomMatchReturn, self.OnGloryMatch)
    base.OnRemoveListener(self)
end

local function ReInit(self)
    DataCenter.ActivityALVSDonateSoldierManager:SendALVSDonateArmyRandomMatchEnemyMessage()
end

local function Refresh(self)
    local data = DataCenter.ActivityALVSDonateSoldierManager:GetRandomDeclareAllianceInfo()
    self.data = data
    if data.rank <= 3 then
        self.rank_text:SetActive(false)
        self.rank_icon_image:SetActive(true)
        self.rank_icon_image:LoadSprite("Assets/Main/Sprites/UI/UIAlliance/rank/UIalliance_rankingbg0" .. data.rank)
    else
        self.rank_text:SetActive(true)
        self.rank_text:SetText(data.rank)
        self.rank_icon_image:SetActive(false)
    end
    self.alliance_name_text:SetText(UIUtil.GetAllianceWholeName(data.serverId, data.abbr, data.name))
    self.power_text:SetText(string.GetFormattedSeperatorNum(data.power))
    self.alliance_flag:SetData(data.icon)
end

local function OnDeclareClick(self)
    if self.data == nil then
        return
    end

    DataCenter.ActivityALVSDonateSoldierManager:SendALVSDonateArmyDeclareWarMessage(self.data.allianceId, 1) -- 1代表随机出来的联盟
    self.ctrl:CloseSelf()
end

local function OnGloryMatch(self)
    self:Refresh()
end

UIALVSBattleRandomMatch.OnCreate = OnCreate
UIALVSBattleRandomMatch.OnDestroy = OnDestroy
UIALVSBattleRandomMatch.OnEnable = OnEnable
UIALVSBattleRandomMatch.OnDisable = OnDisable
UIALVSBattleRandomMatch.ComponentDefine = ComponentDefine
UIALVSBattleRandomMatch.ComponentDestroy = ComponentDestroy
UIALVSBattleRandomMatch.DataDefine = DataDefine
UIALVSBattleRandomMatch.DataDestroy = DataDestroy
UIALVSBattleRandomMatch.OnAddListener = OnAddListener
UIALVSBattleRandomMatch.OnRemoveListener = OnRemoveListener

UIALVSBattleRandomMatch.ReInit = ReInit
UIALVSBattleRandomMatch.Refresh = Refresh
UIALVSBattleRandomMatch.OnDeclareClick = OnDeclareClick

UIALVSBattleRandomMatch.OnGloryMatch = OnGloryMatch

return UIALVSBattleRandomMatch