---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zzl
--- DateTime:
--- 
local UIALVSDonateSoldierOpenRewardView = BaseClass("UIALVSDonateSoldierOpenRewardView", UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization
local UICommonItem = require "UI.UICommonItem.UICommonItem"

local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    local userData = self:GetUserData()
    local stageArr = userData[1] 
    self.scoreReach = userData[2]
    self:ReInit()
    self.idArr, self.goodsMap, self.mergeGoods = self.ctrl:CreateGoodsMap(stageArr)
end

local function OnDestroy(self)
    self:ComponentDestroy()
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
    self:OnRefresh()
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function ComponentDefine(self)
    self.closeBtnN = self:AddComponent(UIButton, "UICommonMiniPopUpTitle/Bg_mid/CloseBtn")
    self.closeBtnN:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)
    self.maskBtnN = self:AddComponent(UIButton, "UICommonMiniPopUpTitle/panel")
    self.maskBtnN:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)
    self.titleTxtN = self:AddComponent(UITextMeshProUGUIEx, "UICommonMiniPopUpTitle/Bg_mid/titleText")

    self.rewardContent = self:AddComponent(UIBaseContainer, "Rect/ScrollView/Viewport/Content")
    
    self._open_btn = self:AddComponent(UIButton,"Rect/Btn_Open")
    self._open_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnClickOpen()
    end)
    self._open_txt = self:AddComponent(UIText,"Rect/Btn_Open/Rect_BtnFive/Txt_OPen")
    self._have_txt = self:AddComponent(UIText,"Rect/Btn_Open/Rect_BtnFive/layout/Txt_Have")
    self._dont_have_txt = self:AddComponent(UIText,"Rect/Btn_Open/Rect_BtnFive/layout/Txt_DontHave")
    self._cost_txt = self:AddComponent(UIText,"Rect/Btn_Open/Rect_BtnFive/layout/Txt_Cost")
    self._cost_img = self:AddComponent(UIImage,"Rect/Btn_Open/Rect_BtnFive/layout/Img_Cost")
    
    self._tips_txt = self:AddComponent(UIText,"Rect/Txt_Tips")
end

local function ComponentDestroy(self)
    self.createBtnTxtN = nil
    self.closeBtnN = nil
end

local function OnAddListener(self)
    base.OnAddListener(self)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
end

local function ReInit(self)
    self.titleTxtN:SetLocalText(372509)
    self._tips_txt:SetLocalText(372793)

    if self.scoreReach == false then
        CS.UIGray.SetGray(self._open_btn.transform, true, false)
    else
        CS.UIGray.SetGray(self._open_btn.transform, false, true)
    end
end

local function OnRefresh(self)
    local goodsId, goodsNum = self:GetShowNeedCount()

    local goods = DataCenter.ItemTemplateManager:GetItemTemplate(goodsId)
    self._cost_img:LoadSprite(string.format(LoadPath.ItemPath,goods.icon))
    
    --获取解锁所需钥匙数
    self._cost_txt:SetText(tostring(goodsNum))
    self._open_txt:SetLocalText(390097) 

    local canOpen = true
    local currentNum = 0
    for goodsId,goodsCount in pairs(self.goodsMap) do
        currentNum = DataCenter.ItemData:GetItemCount(tonumber(goodsId))
        if currentNum < goodsCount then
            canOpen = false
            break
        end
    end
    
    if canOpen == false then
        --如果道具不足 则变红
        self._have_txt:SetActive(false)
        self._dont_have_txt:SetActive(true)
        self._dont_have_txt:SetText(tostring(currentNum))
        self._have_txt:SetColor(Color32.New(180/255, 180/255, 180/255, 255/255))
    else
        self._dont_have_txt:SetActive(false)
        self._have_txt:SetActive(true)
        self._have_txt:SetText(tostring(currentNum))
        self._have_txt:SetColor(Color32.New(255/255, 255/255, 255/255, 255/255))
    end
    self:RefreshReward()

end

--道具奖励
local function RefreshReward(self)
    for k, v in pairs(self.mergeGoods) do
        if not string.IsNullOrEmpty(v) then
            self:GameObjectInstantiateAsync(UIAssets.UICommonItem, function(request)
                if request.isError then
                    return
                end
                local go = request.gameObject
                go:SetActive(true)
                go.transform:SetParent(self.rewardContent.transform)
                go.transform:Set_localScale(0.52, 0.52, 1)
                go.transform:SetAsLastSibling()
                local nameStr = tostring(NameCount)
                go.name = nameStr
                NameCount = NameCount + 1
                local resComp = self.rewardContent:AddComponent(UICommonItem, nameStr)
                local param = {}
                param.rewardType = RewardType.GOODS-- v.rewardType
                param.itemId = tonumber(k)-- rewardParam.itemId
                param.count = v
                resComp:ReInit(param)
            end)
        end
    end
end


local function OnClickOpen(self)
    if self.scoreReach == false then

        return
    end
    --检查所需的道具是否足够
    local canOpen = true
    for goodsId,goodsCount in pairs(self.goodsMap) do
        local currentNum = DataCenter.ItemData:GetItemCount(tonumber(goodsId))
        if currentNum < goodsCount then
            canOpen = false
            break
        end
    end
    
    local idList = {}
    if self.idArr ~= nil then
        for k,v in pairs(self.idArr) do
            table.insert(idList, k)
        end
    else
        canOpen =false
    end

    if canOpen then
        DataCenter.ActivityALVSDonateSoldierManager:OnReceiveStageReward(2, idList)
        self.ctrl:CloseSelf()
    else
        UIUtil.ShowTipsId(120021)
    end
end

local function GetShowNeedCount(self)
    local itemId = 0
    local itemNum = 0

    for k,v in pairs(self.goodsMap) do
        itemId = k
        itemNum = v
        break
    end

    return itemId, itemNum
end

UIALVSDonateSoldierOpenRewardView.OnCreate = OnCreate
UIALVSDonateSoldierOpenRewardView.OnDestroy = OnDestroy
UIALVSDonateSoldierOpenRewardView.OnEnable = OnEnable
UIALVSDonateSoldierOpenRewardView.OnDisable = OnDisable
UIALVSDonateSoldierOpenRewardView.ComponentDefine = ComponentDefine
UIALVSDonateSoldierOpenRewardView.ComponentDestroy = ComponentDestroy
UIALVSDonateSoldierOpenRewardView.OnAddListener = OnAddListener
UIALVSDonateSoldierOpenRewardView.OnRemoveListener = OnRemoveListener
UIALVSDonateSoldierOpenRewardView.ReInit = ReInit
UIALVSDonateSoldierOpenRewardView.OnRefresh = OnRefresh
UIALVSDonateSoldierOpenRewardView.RefreshReward = RefreshReward
UIALVSDonateSoldierOpenRewardView.OnClickOpen = OnClickOpen
UIALVSDonateSoldierOpenRewardView.GetShowNeedCount = GetShowNeedCount

return UIALVSDonateSoldierOpenRewardView