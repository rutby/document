---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2023/2/28 20:32
---

local UIALVSDonateRankView = BaseClass("UIALVSDonateRankView", UIBaseView)
local base = UIBaseView
local UIALVSDonateRankItem = require "UI.UIALVSDonateSoldier.UIALVSDonateRankPanel.Component.UIALVSDonateRankItem"

local title_text_path = "UICommonPopUpTitle/bg_mid/titleText"
local close_btn_path = "UICommonPopUpTitle/bg_mid/CloseBtn"
local rank_path = "Head/Rank"
local filter_path = "Head/Rank/Filter"
local name_path = "Head/Name"
local score_path = "Head/Score"
local sort_path = "Head/Score/Sort"
local scroll_view_path = "ScrollView"
local empty_path = "Empty"

local FilterType =
{
    Whole = 1,
    Ally = 2,
}

local SortType =
{
    Asc = 1,
    Desc = 2,
}

local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    self.rank_text = self:AddComponent(UIText, rank_path)
    self.rank_text:SetLocalText(150118)
    self.filter_btn = self:AddComponent(UIButton, filter_path)
    self.filter_btn:SetOnClick(function()
        self:OnFilterClick()
    end)
    self.name_text = self:AddComponent(UIText, name_path)
    self.name_text:SetLocalText(302129)
    self.score_text = self:AddComponent(UIText, score_path)
    self.score_text:SetLocalText(361001)
    self.sort_btn = self:AddComponent(UIButton, sort_path)
    self.sort_btn:SetOnClick(function()
        self:OnSortClick()
    end)
    self.scroll_view = self:AddComponent(UIScrollView, scroll_view_path)
    self.scroll_view:SetOnItemMoveIn(function(itemObj, index)
        self:OnCreateCell(itemObj, index)
    end)
    self.scroll_view:SetOnItemMoveOut(function(itemObj, index)
        self:OnDeleteCell(itemObj, index)
    end)
    self.empty = self:AddComponent(UIText, empty_path)
    self.title_text = self:AddComponent(UIText, title_text_path)
    self.title_text:SetLocalText(390267)
    self.close_btn = self:AddComponent(UIButton, close_btn_path)
    self.close_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)
end

local function ComponentDestroy(self)
    self.rank_text = nil
    self.filter_btn = nil
    self.name_text = nil
    self.score_text = nil
    self.sort_btn = nil
    self.scroll_view = nil
    self.empty = nil
    self.title_text = nil
    self.close_btn = nil
end

local function DataDefine(self)
    self.dataList = {}
    self.filterType = FilterType.Whole
    self.sortType = SortType.Desc
end

local function DataDestroy(self)
    self.dataList = nil
    self.filterType = nil
    self.sortType = nil
end

local function OnEnable(self)
    base.OnEnable(self)
    self:Refresh()
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function OnAddListener(self)
    base.OnAddListener(self)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
end

local function OnCreateCell(self, itemObj, index)
    itemObj.name = tostring(index)
    local item = self.scroll_view:AddComponent(UIALVSDonateRankItem, itemObj)
    item:SetData(self.dataList[index])
end

local function OnDeleteCell(self, itemObj, index)
    self.scroll_view:RemoveComponent(itemObj.name, UIALVSDonateRankItem)
end

local function ShowScroll(self)
    local count = #self.dataList
    if count > 0 then
        self.scroll_view:SetActive(true)
        self.scroll_view:SetTotalCount(count)
        self.scroll_view:RefillCells()
    else
        self.scroll_view:SetActive(false)
    end
    self.empty:SetActive(count == 0)
end

local function Refresh(self)
    self.rank_text:SetLocalText(self.filterType == FilterType.Whole and 150118 or 302338)
    self.dataList = self:GetDataListInternal()
    self:ShowScroll()
end

local function GetDataListInternal(self)
    local dataList = {}
    local showSelf = self.filterType ~= FilterType.Whole
    self.dataList = DataCenter.ActivityALVSDonateSoldierManager:GetALVSDonateSoldierActivityDataList(showSelf, false)

    for _, v in ipairs(self.dataList) do
        if self.filterType == FilterType.Whole or v.allianceId == LuaEntry.Player.allianceId then
            local data = DeepCopy(v)
            data.serverId = v.serverId
            data.abbr = v.abbr
            data.alName = v.name
            table.insert(dataList, data)
        end
    end

    table.sort(dataList, function(dataA, dataB)
        if dataA.score ~= dataB.score then
            if self.sortType == SortType.Asc then
                return dataA.score < dataB.score
            else
                return dataA.score > dataB.score
            end
        else
            return dataA.uid < dataB.uid
        end
    end)

    for i, data in ipairs(dataList) do
        data.rank = i
    end
    return dataList
end

local function OnFilterClick(self)
    if self.filterType == FilterType.Whole then
        self.filterType = FilterType.Ally
    else
        self.filterType = FilterType.Whole
    end
    self:Refresh()
end

local function OnSortClick(self)
    if self.sortType == SortType.Asc then
        self.sortType = SortType.Desc
    else
        self.sortType = SortType.Asc
    end
    self:Refresh()
end

UIALVSDonateRankView.OnCreate= OnCreate
UIALVSDonateRankView.OnDestroy = OnDestroy
UIALVSDonateRankView.ComponentDefine = ComponentDefine
UIALVSDonateRankView.ComponentDestroy = ComponentDestroy
UIALVSDonateRankView.DataDefine = DataDefine
UIALVSDonateRankView.DataDestroy = DataDestroy
UIALVSDonateRankView.OnEnable = OnEnable
UIALVSDonateRankView.OnDisable = OnDisable
UIALVSDonateRankView.OnAddListener = OnAddListener
UIALVSDonateRankView.OnRemoveListener = OnRemoveListener
UIALVSDonateRankView.OnCreateCell = OnCreateCell
UIALVSDonateRankView.OnDeleteCell = OnDeleteCell
UIALVSDonateRankView.ShowScroll = ShowScroll
UIALVSDonateRankView.ReInit = ReInit
UIALVSDonateRankView.Refresh = Refresh
UIALVSDonateRankView.GetDataListInternal = GetDataListInternal
UIALVSDonateRankView.OnFilterClick = OnFilterClick
UIALVSDonateRankView.OnSortClick = OnSortClick

return UIALVSDonateRankView