---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by mac.
--- DateTime: 10/11/21 2:52 PM
---
local UIMainMailTipsPanelView = BaseClass("UIMainMailTipsPanelView", UIBaseView)
local base = UIBaseView

local _cp_txt_title = "root/TxtName"
local _cp_txt_content = "root/TxtDesc"
local _cp_imgIcon = "root/icon"
local _cp_btn_panel = "Panel"
local _cp_root = "root"

function UIMainMailTipsPanelView:ComponentDefine()
    self._txt_title = self:AddComponent(UIText, _cp_txt_title)
    self._txt_content = self:AddComponent(UIText, _cp_txt_content)
    self._imgicon = self:AddComponent(UIImage, _cp_imgIcon)
    -- self._btn_panel = self:AddComponent(UIButton, _cp_btn_panel)
    -- self._btn_panel:SetOnClick(BindCallback(self, self.OnClickBtn))
    self._root = self:AddComponent(UIBaseContainer, _cp_root)
    self._btnRoot = self:AddComponent(UIButton, _cp_root)
    self._btnRoot:SetOnClick(BindCallback(self, self.OnClickBg))
end

function UIMainMailTipsPanelView:OnClickBtn()
    self.ctrl:CloseSelf()
end

function UIMainMailTipsPanelView:OnClickBg()
    self.ctrl:CloseSelf()
    GoToUtil.GotoOpenView(UIWindowNames.UIMailNew)
end

local Color_Green = Color32.New(53/255.0, 206/255.0, 50/255.0, 1)
local Color_Red = Color32.New(206/255.0, 75/255.0, 50/255.0, 1)

function UIMainMailTipsPanelView:OnCreate()
    base.OnCreate(self)
    self:ComponentDefine()
    local mailId, mailNode = self:GetUserData()
    local mailInfo = DataCenter.MailDataManager:GetMailInfoById(mailId)
    if (mailInfo == nil or mailNode == nil) then
        return
    end
    local mailExt = mailInfo:GetMailExt()
    if (mailExt == nil) then
        return
    end

    self._root.transform.position = mailNode.transform.position + Vector3.New(30, 10, 0)
    
    local imgicon = ""
    local battleWin = true
    if (mailInfo.type == MailType.MAIL_SCOUT_RESULT) then
        imgicon = "UIMain_img_common_btn_guangcha"
    elseif mailInfo.type == MailType.NEW_FIGHT or mailInfo.type == MailType.SHORT_KEEP_FIGHT_MAIL then
        imgicon = "UIMain_img_common_btn_confirm"
        battleWin = mailExt:GetBattleWin()
    end
    self._imgicon:LoadSprite(string.format(LoadPath.UIMainNew,imgicon))
    
    if (battleWin) then
        self._txt_title:SetColor(Color_Green)
    else
        self._txt_title:SetColor(Color_Red)
    end
    
    local mainTitle = MailShowHelper.GetMainTitle(mailInfo)
    self._txt_title:SetText(mainTitle)
    local subTitle = MailShowHelper.GetMailSubTitle(mailInfo)
    self._txt_content:SetText(subTitle)

    self._timer = TimerManager:GetInstance():DelayInvoke(function()
        UIManager.Instance:DestroyWindow(UIWindowNames.UIMainMailTipsPanel)
        self._timer = nil
    end, 3)
    
end

function UIMainMailTipsPanelView:OnDestroy()
    if (self._timer ~= nil) then
        self._timer:Stop()
    end
    self._timer = nil
end






return UIMainMailTipsPanelView