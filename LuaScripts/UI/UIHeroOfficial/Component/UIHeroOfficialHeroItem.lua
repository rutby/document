---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2022/7/27 12:36
---

local UIHeroOfficialHeroItem = BaseClass("UIHeroOfficialHeroItem", UIBaseContainer)
local base = UIBaseContainer
local UIHeroCellSmall = require "UI.UIHero2.Common.UIHeroCellSmall_TextMeshPro"
local Localization = CS.GameEntry.Localization

local btn_path = "Btn"
local hero_path = "UIHeroCellSmall"
local mask_path = "Mask"
local check_path = "Check"
local lock_path = "Lock"
local icon_path = "Head/Icon"
local val_path = "Head/Val"

local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    self.btn = self:AddComponent(UIButton, btn_path)
    self.btn:SetOnClick(function()
        self:OnClick()
    end)
    self.hero = self:AddComponent(UIHeroCellSmall, hero_path)
    self.mask_go = self:AddComponent(UIBaseContainer, mask_path)
    self.val_text = self:AddComponent(UITextMeshProUGUIEx, val_path)
    self.check_go = self:AddComponent(UIBaseContainer, check_path)
    self.lock_go = self:AddComponent(UIBaseContainer, lock_path)
    self.icon_image = self:AddComponent(UIImage, icon_path)
end

local function ComponentDestroy(self)
    self.btn = nil
    self.hero = nil
    self.mask_go = nil
    self.val_text = nil
    self.check_go = nil
    self.lock_go = nil
    self.icon_image = nil
end

local function DataDefine(self)
    self.camp = 0
    self.pos = 0
    self.heroUuid = nil
    self.selected = false
end

local function DataDestroy(self)
    self.camp = nil
    self.pos = nil
    self.heroUuid = nil
    self.selected = nil
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function SetData(self, camp, pos, heroUuid)
    self.camp = camp
    self.pos = pos
    self.heroUuid = heroUuid
    self.hero:SetData(heroUuid, nil ,nil, true)
    self.hero:SetCampActive(false)

    self.selected = false
    self.check_go:SetActive(false)

    local template = DataCenter.HeroOfficialManager:GetTemplate(camp, pos)

    local val = DataCenter.HeroOfficialManager:GetEffectVal(camp, pos, heroUuid)
    if template:GetValType() == "1" then
        val = val .. "%"
    end
    self.val_text:SetText("+" .. val)

    local oldPos = DataCenter.HeroOfficialManager:GetHeroPos(self.heroUuid)
    self.mask_go:SetActive(oldPos ~= nil)
    self.lock_go:SetActive(oldPos ~= nil)

    if DataCenter.HeroOfficialManager:CheckHeroExtraCondition(camp, pos, heroUuid, 2) then
        local icon = HeroUtils.GetTagIconAndName(template.extraCondition[2])
        self.icon_image:LoadSprite(icon)
        self.icon_image:SetActive(true)
    else
        self.icon_image:SetActive(false)
    end
end

local function SetSelected(self, selected)
    if self.selected and not selected then
        self.mask_go:SetActive(false)
        self.check_go:SetActive(false)
        self.lock_go:SetActive(false)
    elseif not self.selected and selected then
        self.mask_go:SetActive(true)
        self.check_go:SetActive(true)
        self.lock_go:SetActive(false)
    end
    self.selected = selected
end

local function SetOnClick(self, onClick)
    self.onClick = onClick
end

local function OnClick(self)
    if self.onClick then
        self.onClick()
    end
end

UIHeroOfficialHeroItem.OnCreate= OnCreate
UIHeroOfficialHeroItem.OnDestroy = OnDestroy
UIHeroOfficialHeroItem.ComponentDefine = ComponentDefine
UIHeroOfficialHeroItem.ComponentDestroy = ComponentDestroy
UIHeroOfficialHeroItem.DataDefine = DataDefine
UIHeroOfficialHeroItem.DataDestroy = DataDestroy
UIHeroOfficialHeroItem.OnEnable = OnEnable
UIHeroOfficialHeroItem.OnDisable = OnDisable

UIHeroOfficialHeroItem.SetData = SetData
UIHeroOfficialHeroItem.SetSelected = SetSelected
UIHeroOfficialHeroItem.SetOnClick = SetOnClick
UIHeroOfficialHeroItem.OnClick = OnClick

return UIHeroOfficialHeroItem