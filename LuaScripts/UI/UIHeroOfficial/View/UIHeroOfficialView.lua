---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2022/7/26 17:59
---

local UIHeroOfficial = BaseClass("UIHeroOfficial", UIBaseView)
local base = UIBaseView
local UIHeroOfficialTab = require "UI.UIHeroOfficial.Component.UIHeroOfficialTab"
local UIHeroOfficialContent = require "UI.UIHeroOfficial.Component.UIHeroOfficialContent"
local UIHeroIntensifyContent = require "UI.UIHeroIntensify.Component.UIHeroIntensifyContent"
local Localization = CS.GameEntry.Localization

local bg_path = "Bg"
local back_path = "safeArea/Back"
local center_path = "safeArea/Center"

local official_path = "safeArea/Center/UIHeroOfficialContent"
local officialBg_path = "safeArea/Center/officialBg"
local top_tab_bg_path = "safeArea/TopTab"
local official_tab_path = "safeArea/TopTab/OfficialTab"
local official_title_path = "safeArea/TopTab/OfficialTab/OfficialTitle"
local official_red_path = "safeArea/TopTab/OfficialTab/OfficialRed"

local intensify_path = "safeArea/Center/UIHeroIntensifyContent"
local intensifyBg_path = "safeArea/Center/intensifyBg"
local intensify_tab_path = "safeArea/TopTab/IntensifyTab"
local intensify_title_path = "safeArea/TopTab/IntensifyTab/IntensifyTitle"
local intensify_red_path = "safeArea/TopTab/IntensifyTab/IntensifyRed"

local tab_list_path = "safeArea/TabList"
local tab_path = "safeArea/TabList/UIHeroOfficialTab_%s"

local TAB_START = 2

local whiteColor = Color.New(255/255, 255/255, 255/255, 1)
local emptyColor = Color.New(213/255, 211/255, 220/255, 0)
local NameColor =
{
    [1] = Color.New(213/255, 211/255, 220/255, 1),
    [2] = Color.New(213/255, 211/255, 220/255, 1),
    [3] = Color.New(255/255, 231/255, 180/255, 1),
}

local NameShadowColor =
{
    [1] = Color.New(61/255, 59/255, 108/255, 1),
    [2] = Color.New(61/255, 59/255, 108/255, 1),
    [3] = Color.New(101/255, 68/255, 26/255, 1),
}


local TopTab =
{
    Official = 1,
    Intensify = 2,
}

local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
    self:ReInit()
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function ComponentDefine(self)
    self.bg_image = self:AddComponent(UIImage, bg_path)
    self.top_tab_bg = self:AddComponent(UIImage, top_tab_bg_path)
    self.back_btn = self:AddComponent(UIButton, back_path)
    self.back_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnBackClick()
    end)
    self.center_image = self:AddComponent(UIImage, center_path)
    
    self.official = self:AddComponent(UIHeroOfficialContent, official_path)
    self.officialBg = self:AddComponent(UIImage, officialBg_path)
    self.official_tab_btn = self:AddComponent(UIButton, official_tab_path)
    self.official_tab_bg = self:AddComponent(UIImage, official_tab_path)
    self.official_tab_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnOfficialTabClick()
    end)
    self.official_title_text = self:AddComponent(UITextMeshProUGUIEx, official_title_path)
    self.official_title_text:SetLocalText(133000)
    CS.UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(self.official_title_text.rectTransform)
    self.official_red_go = self:AddComponent(UIBaseContainer, official_red_path)
    
    self.intensify = self:AddComponent(UIHeroIntensifyContent, intensify_path)
    self.intensifyBg = self:AddComponent(UIImage, intensifyBg_path)
    self.intensify_tab_btn = self:AddComponent(UIButton, intensify_tab_path)
    self.intensify_tab_bg = self:AddComponent(UIImage, intensify_tab_path)
    self.intensify_tab_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnIntensifyTabClick()
    end)
    self.intensify_title_text = self:AddComponent(UITextMeshProUGUIEx, intensify_title_path)
    self.intensify_title_text:SetLocalText(136000)
    CS.UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(self.intensify_title_text.rectTransform)
    self.intensify_red_go = self:AddComponent(UIBaseContainer, intensify_red_path)
    
    self.tab_list_image = self:AddComponent(UIImage, tab_list_path)
    self.tabs = {}
    for _, c in pairs(self.camps) do
        self.tabs[c] = self:AddComponent(UIHeroOfficialTab, string.format(tab_path, c))
        self.tabs[c]:ReInit(c)
        self.tabs[c]:SetOnClick(function()
            SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
            self:OnTabClick(c)
        end)
    end
end

local function ComponentDestroy(self)
    self.bg_image = nil
    self.back_btn = nil
    self.center_image = nil
    
    self.official = nil
    self.official_tab_btn = nil
    self.official_title_text = nil
    self.official_red_go = nil
    
    self.intensify = nil
    self.intensify_tab_btn = nil
    self.intensify_title_text = nil
    self.intensify_red_go = nil
    
    self.tab_list_image = nil
    self.tabs = nil
end

local function DataDefine(self)
    self.topTab = TopTab.Official
    self.camps = DataCenter.HeroOfficialManager:GetCamps()
    self.camp = -1
end

local function DataDestroy(self)
    self.topTab = nil
    self.camps = nil
    self.camp = nil
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.SetHeroOfficial, self.OnSetHeroOfficial)
    self:AddUIListener(EventId.HeroIntensifyUpdate, self.OnHeroIntensifyUpdate)
end

local function OnRemoveListener(self)
    self:RemoveUIListener(EventId.SetHeroOfficial, self.OnSetHeroOfficial)
    self:RemoveUIListener(EventId.HeroIntensifyUpdate, self.OnHeroIntensifyUpdate)
    base.OnRemoveListener(self)
end

local function ReInit(self)
    local topTab = self:GetUserData()
    topTab = topTab or TopTab.Official
    self.topTab = topTab
    self.official:ReInit()
    self.intensify:ReInit()
    for _, camp in pairs(self.camps) do
        self.tabs[camp]:SetActive(true)
    end

    if topTab == TopTab.Official then
        self.tabs[TAB_START]:OnClick()
        self:OnOfficialTabClick()
    elseif topTab == TopTab.Intensify then
        self:OnIntensifyTabClick()
    end

    local intensifyTabUnlockState = DataCenter.HeroIntensifyManager:GetTabUnlockState()
    self.intensify_tab_btn:SetActive(intensifyTabUnlockState ~= HeroIntensifyTabState.Hide)
end

local function SetCamp(self, camp)
    self.camp = camp
    self.bg_image:LoadSprite("Assets/Main/TextureEx/UIHeroStation/UIStationed_bg_" .. camp)
    self.tab_list_image:LoadSprite("Assets/Main/TextureEx/UIHeroStation/UIStationed_tab_" .. camp)
    self.center_image:LoadSprite("Assets/Main/TextureEx/UIHeroStation/UIStationed_center_" .. camp)
    self.officialBg:LoadSprite("Assets/Main/TextureEx/UIHeroStation/UIStationed_center_1_" .. camp)
    self.intensifyBg:LoadSprite("Assets/Main/TextureEx/UIHeroStation/UIStationed_center_2_" .. camp)
    self.top_tab_bg:LoadSprite("Assets/Main/Sprites/UI/UIHeroStation/UIStationed_bg_btn_board_" .. camp)
    self.official_tab_btn:LoadSprite("Assets/Main/Sprites/UI/UIHeroStation/UIStationed_bg_btn_left_" .. camp)
    self.intensify_tab_btn:LoadSprite("Assets/Main/Sprites/UI/UIHeroStation/UIStationed_bg_btn_right_" .. camp)
    self:Refresh()
end

local function Refresh(self)
    if self.official:GetActive() then
        self.official:SetCamp(self.camp)
    end
    if self.intensify:GetActive() then
        self.intensify:SetCamp(self.camp)
    end
    self.official_red_go:SetActive(DataCenter.HeroOfficialManager:HaveEmptySlotAndAvailableHero(self.camp))
    self.intensify_red_go:SetActive(DataCenter.HeroIntensifyManager:GetRedNum(self.camp) > 0)
    for _, c in pairs(self.camps) do
        self.tabs[c]:Refresh()
    end
end

local function RefreshTopTab(self)
    if self.topTab == TopTab.Official then
        self.official_tab_bg:SetColor(whiteColor)
        self.official_title_text:SetColor(whiteColor)
        self.intensify_tab_bg:SetColor(emptyColor)
        self.intensify_title_text:SetColor(NameColor[self.camp])
    elseif self.topTab == TopTab.Intensify then
        self.official_tab_bg:SetColor(emptyColor)
        self.official_title_text:SetColor(NameColor[self.camp])
        self.intensify_tab_bg:SetColor(whiteColor)
        self.intensify_title_text:SetColor(whiteColor)
    end
end

local function CheckAndSelectIntensifyCampTab(self)
    for _, camp in ipairs({ HeroCamp.UNION, HeroCamp.MAFIA, HeroCamp.ZELOT }) do
        if DataCenter.HeroDataManager:HasMaxedOrangeHero(camp) then
            self:OnTabClick(camp)
            break
        end
    end
end

local function OnBackClick(self)
    self.ctrl:CloseSelf()
end

local function OnOfficialTabClick(self)
    self.topTab = TopTab.Official
    self.official:SetActive(true)
    self.official:SetCamp(self.camp)
    self.officialBg:SetActive(true)
    self.intensifyBg:SetActive(false)
    self.intensify:SetActive(false)
    self:RefreshTopTab()
end

local function OnIntensifyTabClick(self)
    local unlockState = DataCenter.HeroIntensifyManager:GetTabUnlockState()
    if unlockState == HeroIntensifyTabState.NeedSeason then
        UIUtil.ShowTips(Localization:GetString("136001", DataCenter.HeroIntensifyManager:GetUnlockSeason()))
        return
    elseif unlockState == HeroIntensifyTabState.NeedBuildingLevel then
        UIUtil.ShowTips(Localization:GetString("136002", DataCenter.HeroIntensifyManager:GetUnlockBuildingLevel()))
        return
    elseif unlockState == HeroIntensifyTabState.NeedHeroMaxed then
        UIUtil.ShowTips(Localization:GetString("136024"))
        return
    end
    
    if self.camp == -1 or not DataCenter.HeroDataManager:HasMaxedOrangeHero(self.camp) then
        self:CheckAndSelectIntensifyCampTab()
    end
    
    self.topTab = TopTab.Intensify
    self.officialBg:SetActive(false)
    self.official:SetActive(false)
    self.intensifyBg:SetActive(true)
    self.intensify:SetActive(true)
    self.intensify:SetCamp(self.camp)
    self:RefreshTopTab()
end

local function OnTabClick(self, camp)
    if self.camp ~= camp then
        if self.topTab == TopTab.Intensify then
            if not DataCenter.HeroDataManager:HasMaxedOrangeHero(camp) then
                if camp == HeroCamp.MAFIA then
                    UIUtil.ShowTipsId(136025)
                elseif camp == HeroCamp.UNION then
                    UIUtil.ShowTipsId(136026)
                elseif camp == HeroCamp.ZELOT then
                    UIUtil.ShowTipsId(136027)
                end
                return
            end
        end
        self.camp = camp
        for _, c in pairs(self.camps) do
            self.tabs[c]:SetIsOn(c == camp)
        end
        self:SetCamp(camp)
        self:RefreshTopTab()
    end
end

local function OnSetHeroOfficial(self)
    self:Refresh()
end

local function OnHeroIntensifyUpdate(self)
    self:Refresh()
end

UIHeroOfficial.OnCreate = OnCreate
UIHeroOfficial.OnDestroy = OnDestroy
UIHeroOfficial.OnEnable = OnEnable
UIHeroOfficial.OnDisable = OnDisable
UIHeroOfficial.ComponentDefine = ComponentDefine
UIHeroOfficial.ComponentDestroy = ComponentDestroy
UIHeroOfficial.DataDefine = DataDefine
UIHeroOfficial.DataDestroy = DataDestroy
UIHeroOfficial.OnAddListener = OnAddListener
UIHeroOfficial.OnRemoveListener = OnRemoveListener

UIHeroOfficial.ReInit = ReInit
UIHeroOfficial.SetCamp = SetCamp
UIHeroOfficial.Refresh = Refresh
UIHeroOfficial.RefreshTopTab = RefreshTopTab
UIHeroOfficial.CheckAndSelectIntensifyCampTab = CheckAndSelectIntensifyCampTab
UIHeroOfficial.OnBackClick = OnBackClick
UIHeroOfficial.OnOfficialTabClick = OnOfficialTabClick
UIHeroOfficial.OnIntensifyTabClick = OnIntensifyTabClick
UIHeroOfficial.OnTabClick = OnTabClick

UIHeroOfficial.OnSetHeroOfficial = OnSetHeroOfficial
UIHeroOfficial.OnHeroIntensifyUpdate = OnHeroIntensifyUpdate

return UIHeroOfficial