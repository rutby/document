---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhangliheng.
--- DateTime: 7/12/21 8:51 PM
---


local UIRewardItem = BaseClass("UIRewardItem", UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization
local UIHeroCellBig = require "UI.UIHero2.Common.UIHeroCellBig"
local UICommonItem = require "UI.UICommonItem.UICommonItem"

local new_icon_path = "Root/InfoPanel/heroContent/new_icon"

local BgColorType =
{
    White = 1,
    Green = 2,
    Blue = 3,
    Purple = 4,
    Orange = 5,
    Red = 6,
}

local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end


local function ComponentDefine(self)
    self.rootNode = self:AddComponent(UIBaseContainer, 'Root')
    self.rootAni = self:AddComponent(UIAnimator, "")
    self.rootAni:Enable(false)
    
    self.infoPanel = self:AddComponent(UIBaseContainer, 'Root/InfoPanel')
    self.heroContent = self:AddComponent(UIBaseContainer, 'Root/InfoPanel/heroContent')
    self.itemContent = self:AddComponent(UIBaseContainer, 'Root/InfoPanel/itemContent')
    self.heroCell = self:AddComponent(UIHeroCellBig, 'Root/InfoPanel/heroContent/UIHeroCellBig')
    self.itemCell = self:AddComponent(UICommonItem, 'Root/InfoPanel/itemContent/UICommonItemSize')
    self.nameTxt = self:AddComponent(UITextMeshProUGUIEx, 'Root/InfoPanel/nameTxtMask/name')

    self.bg = self:AddComponent(UIImage, 'Root/InfoPanel/bg')
    self.frontMask = self:AddComponent(UIImage, 'Root/InfoPanel/frontMask')
    
    self.btn = self:AddComponent(UIButton, '')--Root/InfoPanel/Btn

    --翻开后常驻特效
    self.changzhu_effect_1 = self:AddComponent(UIBaseContainer, 'Root/NodeEffectRoot_1/changzhu_effect_1')
    self.PurplePersistEffect3 = self:AddComponent(UIBaseContainer, 'Root/NodeEffectRoot_1/changzhu_effect_1/PurplePersistEffect3')
    self.GoldenPersistEffect3 = self:AddComponent(UIBaseContainer, 'Root/NodeEffectRoot_1/changzhu_effect_1/GoldenPersistEffect3')

    self.changzhu_effect_2 = self:AddComponent(UIBaseContainer, 'Root/NodeEffectRoot/changzhu_effect_2')
    self.PurpleAppearEffect6 = self:AddComponent(UIBaseContainer, 'Root/NodeEffectRoot/changzhu_effect_2/PurpleAppearEffect6')
    self.GoldenAppearEffect6 = self:AddComponent(UIBaseContainer, 'Root/NodeEffectRoot/changzhu_effect_2/GoldenAppearEffect6')

    --卡牌出现特效
    self.fanpai_effect_1 = self:AddComponent(UIBaseContainer, 'Root/NodeEffectRoot_1/fanpai_effect_1')
    self.PurplePersistEffect2 = self:AddComponent(UIBaseContainer, 'Root/NodeEffectRoot_1/fanpai_effect_1/PurplePersistEffect2')
    self.GoldenPersistEffect2 = self:AddComponent(UIBaseContainer, 'Root/NodeEffectRoot_1/fanpai_effect_1/GoldenPersistEffect2')

    self.fanpai_effect_2 = self:AddComponent(UIBaseContainer, 'Root/NodeEffectRoot/fanpai_effect_2')
    self.PurpleAppearEffect5 = self:AddComponent(UIBaseContainer, 'Root/NodeEffectRoot/fanpai_effect_2/PurpleAppearEffect5')
    self.GoldenAppearEffect5 = self:AddComponent(UIBaseContainer, 'Root/NodeEffectRoot/fanpai_effect_2/GoldenAppearEffect5')

    --卡牌蓄力特效
    self.doudong_effect_1 = self:AddComponent(UIBaseContainer, 'Root/NodeEffectRoot_1/doudong_effect_1')
    self.PurplePersistEffect1 = self:AddComponent(UIBaseContainer, 'Root/NodeEffectRoot_1/doudong_effect_1/PurplePersistEffect1')
    self.GoldenPersistEffect1 = self:AddComponent(UIBaseContainer, 'Root/NodeEffectRoot_1/doudong_effect_1/GoldenPersistEffect1')

    self.doudong_effect_2 = self:AddComponent(UIBaseContainer, 'Root/NodeEffectRoot/doudong_effect_2')
    self.PurplePersistEffect4 = self:AddComponent(UIBaseContainer, 'Root/NodeEffectRoot/doudong_effect_2/PurplePersistEffect4')
    self.GoldenPersistEffect4 = self:AddComponent(UIBaseContainer, 'Root/NodeEffectRoot/doudong_effect_2/GoldenPersistEffect4')
    
    self.new_icon = self:AddComponent(UIBaseContainer, new_icon_path)
    self.btn:SetOnClick(BindCallback(self, self.OnCellClick))
end

local function ComponentDestroy(self)
    self.rootNode = nil
    self.rootAni = nil
    
    self.infoPanel = nil
    self.heroContent = nil
    self.itemContent = nil
    self.heroCell = nil
    self.itemCell = nil
    self.nameTxt = nil

    self.bg = nil
    self.frontMask = nil
    
    self.btn = nil

    --翻开后常驻特效
    self.changzhu_effect_1 = nil
    self.PurplePersistEffect3 = nil
    self.GoldenPersistEffect3 = nil

    self.changzhu_effect_2 = nil
    self.PurpleAppearEffect6 = nil
    self.GoldenAppearEffect6 = nil

    --卡牌出现特效
    self.fanpai_effect_1 = nil
    self.PurplePersistEffect2 = nil
    self.GoldenPersistEffect2 = nil

    self.fanpai_effect_2 = nil
    self.PurpleAppearEffect5 = nil
    self.GoldenAppearEffect5 = nil

    --卡牌蓄力特效
    self.doudong_effect_1 = nil
    self.PurplePersistEffect1 = nil
    self.GoldenPersistEffect1 = nil

    self.doudong_effect_2 = nil
    self.PurpleAppearEffect4 = nil
    self.GoldenAppearEffect4 = nil
end

local function DataDefine(self)
    self.heroUuid = nil
    self.heroId = nil
end

local function DataDestroy(self)
    self.heroUuid = nil
    self.heroId = nil
end

local function UpdateView(self)
    local data = self.data
    local type = data['type']
    self.rewardType = type
    --这个地方转一下，英雄碎片显示成英雄
    if type == 2 then
        local id = data['GoodsId']
        local itemType = GetTableData(TableName.GoodsTab, id, 'type')
        if itemType == GOODS_TYPE.GOODS_TYPE_201 then
            local heroId = tonumber(GetTableData(TableName.GoodsTab, id, 'para1'))
            local heroUuid = DataCenter.HeroDataManager:GetHeroUuidByHeroId(heroId)
            if heroUuid ~= 0 then
                type = 0
                data['uuid'] = heroUuid
            end
            --if not string.IsNullOrEmpty(heroUuid) then
            --    local heroPieces = GetTableData(HeroUtils.GetHeroXmlName(), toInt(itemTemplate.para1), 'hero_pieces')
            --    local vec = string.split(heroPieces, "|")
            --    if table.count(vec) == 2 and toInt(vec[2]) == num then
            --        type = 0
            --        data['uuid'] = heroUuid
            --    end
            --end
        end
    end
    
    self.infoPanel:SetActive(true)
    
    self.heroContent:SetActive(false)
    self.itemContent:SetActive(false)
    
    self:CloseAllEffectShow()

    if type == 0 then --英雄
        local heroUuid = data['uuid']
        local heroData = DataCenter.HeroDataManager:GetHeroByUuid(heroUuid)
        self.heroContent:SetActive(true)
        self.heroCell:InitWithConfigId(heroData.heroId)
        self.heroUuid = heroUuid
        self.quality = heroData.quality
        self.isPurpleHero = heroData.rarity == HeroUtils.RarityType.A
        self.isOrangeHero = heroData.rarity == HeroUtils.RarityType.S
        self.isMaster = heroData.isMaster
        self.nameTxt:SetText(heroData:GetName())

        local color = BgColorType.White
        if heroData.rarity == HeroUtils.RarityType.D then
            color = BgColorType.White
        elseif heroData.rarity == HeroUtils.RarityType.C then
            color = BgColorType.Green
        elseif heroData.rarity == HeroUtils.RarityType.B then
            color = BgColorType.Blue
        elseif heroData.rarity == HeroUtils.RarityType.A then
            color = BgColorType.Purple
        elseif heroData.rarity == HeroUtils.RarityType.S then
            color = BgColorType.Orange
        end
        
        self:SetItemQualityView(color)
        if DataCenter.HeroDataManager:IsNewHero(heroUuid) then
            self.new_icon:SetActive(true)
        else
            self.new_icon:SetActive(false)
        end
        --self:SetHeroEffectShow()
    elseif type == 2 then
        local id = data['GoodsId']
        local num = data['addNumber']
        self.heroId = tonumber(data['fromHero'])
        self.heroId = DataCenter.HeroDataManager:GetHeroUuidByHeroId(self.heroId)

        local param = {}
        param.rewardType = RewardType.GOODS
        param.itemId = id
        param.count = "x" .. num
        self.itemCell:ReInit(param)
        self.itemContent:SetActive(true)

        local itemTemplate = DataCenter.ItemTemplateManager:GetItemTemplate(id)
        local color = itemTemplate.color
        self:SetItemQualityView(color + 1)
        self.nameTxt:SetText(DataCenter.RewardManager:GetNameByType(RewardType.GOODS,id))

        if self.heroId ~= nil then
            --self:SetHeroEffectShow(color)
            self.PurplePersistEffect3:SetActive(false)
            self.GoldenPersistEffect3:SetActive(false)
            self.PurpleAppearEffect6:SetActive(false)
            self.GoldenAppearEffect6:SetActive(false)
        end
    elseif type ==  5 then
        local id = data['id']
        local num = data['num']
        local color = DataCenter.ResourceItemDataManager:GetResourceItemQuality(id)

        local param = {}
        param.rewardType = RewardType.RESOURCE_ITEM
        param.itemId = id
        param.count = "x" .. num
        self.itemCell:ReInit(param)
        self.itemContent:SetActive(true)
        self:SetItemQualityView(color + 1)

        local name = DataCenter.ResourceItemDataManager:GetName(id)
        self.nameTxt:SetText(name)
    else
        self:SetItemQualityView(BgColorType.Red)
        self.nameTxt:SetText("")
    end
end

local function SetItemQualityView(self, quality)
    if quality == BgColorType.Red then
        -- self.bg:LoadSprite(string.format('Assets/Main/Sprites/UI/UIHeroRecruit/cfm_chouka_ka_%s.png', 2))
        -- self.frontMask:LoadSprite(string.format('Assets/Main/Sprites/UI/UIHeroRecruit/cfm_chouka_ka_%s.png', 1))
        self.bg:LoadSprite(string.format(LoadPath.HeroRecruitPath, "Drawcard_icon_card02"))
        self.frontMask:LoadSprite(string.format(LoadPath.HeroRecruitPath, "Drawcard_bg_card030405"))
        self.nameTxt:SetColorRGBA(1, 0.675, 0.6, 1)
    elseif quality == BgColorType.Orange then
        -- self.bg:LoadSprite(string.format('Assets/Main/Sprites/UI/UIHeroRecruit/cfm_chouka_ka_%s.png', 4))
        -- self.frontMask:LoadSprite(string.format('Assets/Main/Sprites/UI/UIHeroRecruit/cfm_chouka_ka_%s.png', 3))
        self.bg:LoadSprite(string.format(LoadPath.HeroRecruitPath, "Drawcard_icon_card05"))
        self.frontMask:LoadSprite(string.format(LoadPath.HeroRecruitPath, "Drawcard_bg_card030405"))
        self.nameTxt:SetColor(QualityColorYellow)
    elseif quality == BgColorType.Purple then
        -- self.bg:LoadSprite(string.format('Assets/Main/Sprites/UI/UIHeroRecruit/cfm_chouka_ka_%s.png', 6))
        -- self.frontMask:LoadSprite(string.format('Assets/Main/Sprites/UI/UIHeroRecruit/cfm_chouka_ka_%s.png', 5))
        self.bg:LoadSprite(string.format(LoadPath.HeroRecruitPath, "Drawcard_icon_card04"))
        self.frontMask:LoadSprite(string.format(LoadPath.HeroRecruitPath, "Drawcard_bg_card030405"))
        self.nameTxt:SetColor(QualityColorPurple)
    elseif quality == BgColorType.Blue then
        -- self.bg:LoadSprite(string.format('Assets/Main/Sprites/UI/UIHeroRecruit/Drawcard_icon_card0%s.png', 3))
        -- self.frontMask:LoadSprite(string.format('Assets/Main/Sprites/UI/UIHeroRecruit/cfm_chouka_ka_%s.png', 7))
        self.bg:LoadSprite(string.format(LoadPath.HeroRecruitPath, "Drawcard_icon_card03"))
        self.frontMask:LoadSprite(string.format(LoadPath.HeroRecruitPath, "Drawcard_bg_card030405"))
        self.nameTxt:SetColor(QualityColorBlue)
    elseif quality == BgColorType.Green then
        -- self.bg:LoadSprite(string.format('Assets/Main/Sprites/UI/UIHeroRecruit/cfm_chouka_ka_%s.png', 10))
        -- self.frontMask:LoadSprite(string.format('Assets/Main/Sprites/UI/UIHeroRecruit/cfm_chouka_ka_%s.png', 9))
        self.bg:LoadSprite(string.format(LoadPath.HeroRecruitPath, "Drawcard_icon_card02"))
        self.frontMask:LoadSprite(string.format(LoadPath.HeroRecruitPath, "Drawcard_bg_card030405"))
        self.nameTxt:SetColor(QualityColorGreen)
    -- elseif quality == BgColorType.White then
    --     self.bg:LoadSprite(string.format('Assets/Main/Sprites/UI/UIHeroRecruit/cfm_chouka_ka_%s.png', 12))
    --     self.frontMask:LoadSprite(string.format('Assets/Main/Sprites/UI/UIHeroRecruit/cfm_chouka_ka_%s.png', 11))
        self.bg:LoadSprite(string.format(LoadPath.HeroRecruitPath, "Drawcard_icon_card02"))
        self.frontMask:LoadSprite(string.format(LoadPath.HeroRecruitPath, "Drawcard_bg_card02"))
        self.nameTxt:SetColor(WhiteColor)
    end
end

local function SetHeroEffectShow(self, rarity)
    -- default val
    local isPurpleHero = self.isPurpleHero
    local isOrangeHero = self.isOrangeHero

    self.isPurpleCard = self.isPurpleHero
    self.isOrangeCard = self.isOrangeHero

    -- input val
    if rarity ~= nil then
        isPurpleHero = rarity == HeroUtils.RarityType.A
        isOrangeHero = rarity == HeroUtils.RarityType.S

        self.isPurpleCard = isPurpleHero
        self.isOrangeCard = isOrangeHero
    end

    self.PurplePersistEffect3:SetActive(isPurpleHero)
    self.GoldenPersistEffect3:SetActive(isOrangeHero)
    self.PurpleAppearEffect6:SetActive(isPurpleHero)
    self.GoldenAppearEffect6:SetActive(isOrangeHero)
    self.PurplePersistEffect2:SetActive(isPurpleHero)
    self.GoldenPersistEffect2:SetActive(isOrangeHero)
    self.PurpleAppearEffect5:SetActive(isPurpleHero)
    self.GoldenAppearEffect5:SetActive(isOrangeHero)
    self.PurplePersistEffect1:SetActive(isPurpleHero)
    self.GoldenPersistEffect1:SetActive(isOrangeHero)
    self.PurplePersistEffect4:SetActive(isPurpleHero)
    self.GoldenPersistEffect4:SetActive(isOrangeHero)
end

local function CloseAllEffectShow(self)
    self.PurplePersistEffect3:SetActive(false)
    self.GoldenPersistEffect3:SetActive(false)
    self.PurpleAppearEffect6:SetActive(false)
    self.GoldenAppearEffect6:SetActive(false)
    self.PurplePersistEffect2:SetActive(false)
    self.GoldenPersistEffect2:SetActive(false)
    self.PurpleAppearEffect5:SetActive(false)
    self.GoldenAppearEffect5:SetActive(false)
    self.PurplePersistEffect1:SetActive(false)
    self.GoldenPersistEffect1:SetActive(false)
    self.PurplePersistEffect4:SetActive(false)
    self.GoldenPersistEffect4:SetActive(false)
end

local function OnCellClick(self)
    if self.callBackFunc ~= nil then
        self.callBackFunc()
    end
end


local function ResetAniVal(self)
    self.rootAni:Enable(false)

    self.rootNode:SetAnchoredPositionXY(0,0)
    self.rootNode:SetEulerAnglesXYZ(0,0,0)
    self.rootNode:SetLocalScaleXYZ(1,1,1)

    self.rootAni:SetAnchoredPositionXY(0,0)
    --self.rootAni:SetEulerAnglesXYZ(0,0,0)
    --self.rootAni:SetLocalScaleXYZ(1,1,1)

    self.infoPanel:SetEulerAnglesXYZ(0,0,0)
end

local function SetCoverView(self)
    self:ResetAniVal()

    self.infoPanel:SetActive(false)

    self.changzhu_effect_1:SetActive(false)
    self.changzhu_effect_2:SetActive(false)
    self.fanpai_effect_1:SetActive(false)
    self.fanpai_effect_2:SetActive(false)
    self.doudong_effect_1:SetActive(false)
    self.doudong_effect_2:SetActive(false)
end

local function SetNormalView(self)
    self:ResetAniVal()

    self.infoPanel:SetActive(true)

    self.changzhu_effect_1:SetActive(true)
    self.changzhu_effect_2:SetActive(true)
    self.fanpai_effect_1:SetActive(false)
    self.fanpai_effect_2:SetActive(false)
    self.doudong_effect_1:SetActive(false)
    self.doudong_effect_2:SetActive(false)
end

local function PlayWaitingOpenAni(self)
    self.rootAni:Enable(true)
    SoundUtil.PlayEffect(SoundAssets.Effect_Recruit_Card_Flip2)
    
    self.rootAni:Play("Eff_UIHeroRecruitRewardNew_doudong", 0, 0)
end

local function PlayOpenAni(self)
    self.rootAni:Enable(true)
    SoundUtil.PlayEffect(SoundAssets.Effect_Recruit_Card_Click)
    self.rootAni:Play("Eff_UIHeroRecruitRewardCellNew_fanpai", 0, 0)
end

local function SetData(self, lotteryId, index, data, callBackFunc)
    self.lotteryId = lotteryId
    self.index = index
    self.data = data
    self.callBackFunc = callBackFunc

    self.heroUuid = nil
    self.heroId = nil

    self:UpdateView()
end

UIRewardItem.OnCreate = OnCreate
UIRewardItem.OnDestroy = OnDestroy
UIRewardItem.OnEnable = OnEnable
UIRewardItem.OnDisable = OnDisable
UIRewardItem.ComponentDefine = ComponentDefine
UIRewardItem.ComponentDestroy = ComponentDestroy
UIRewardItem.DataDefine = DataDefine
UIRewardItem.DataDestroy = DataDestroy
UIRewardItem.UpdateView = UpdateView
UIRewardItem.OnCellClick = OnCellClick

UIRewardItem.SetCoverView = SetCoverView
UIRewardItem.SetNormalView = SetNormalView
UIRewardItem.PlayWaitingOpenAni = PlayWaitingOpenAni
UIRewardItem.PlayOpenAni = PlayOpenAni
UIRewardItem.SetData = SetData
UIRewardItem.ResetAniVal = ResetAniVal
UIRewardItem.SetHeroEffectShow = SetHeroEffectShow
UIRewardItem.CloseAllEffectShow = CloseAllEffectShow
UIRewardItem.SetItemQualityView=SetItemQualityView

return UIRewardItem