---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhangliheng.
--- DateTime: 6/30/21 8:13 PM
---

local UIHeroCellBig = BaseClass("UIHeroCellBig", UIBaseContainer)
local base = UIBaseContainer
local UIHeroEtoileList = require "UI.UIHero2.Common.UIHeroEtoileList"

local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function ComponentDefine(self)
    self.layerNormal = self:AddComponent(UIBaseContainer, 'LayerNormal')
    self.img_quality1 = self:AddComponent(UIImage, 'LayerNormal/ImgQuality1')
    self.img_bg_mask1 = self:AddComponent(UIImage, 'LayerNormal/ImgBgMask1')
    self.img_icon1 = self:AddComponent(UIImage, 'LayerNormal/ImgBgMask1/ImgIcon1')
    self.img_lv_bg1 = self:AddComponent(UIImage, 'LayerNormal/ImgBgMask1/LVBg1')
    self.etoile_list = self:AddComponent(UIHeroEtoileList, "LayerNormal/ImgBgMask1/LVBg1/UIHeroEtoileList")
    
    self.img_camp = self:AddComponent(UIImage, 'ImgCamp')
    self.text_level = self:AddComponent(UITextMeshProUGUIEx, 'TextLevel')
    self.btn_go = self:AddComponent(UIButton, '')
    self.btn_go:SetOnClick(function()  
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnBtnClick()
    end)
    
    self.season = self:AddComponent(UIBaseContainer, "seasonBg")
    self.seasonTxt = self:AddComponent(UITextMeshProUGUIEx, "seasonBg/seasonTxt")
    self.season:SetActive(false)
end

local function ComponentDestroy(self)
end
local function DataDefine(self)
    self.param = nil
    self.callBack = nil
end

local function DataDestroy(self)
    self.param = nil
    self.callBack = nil
end

local function SetData(self, heroUuid, callBack)
    self.param = heroUuid
    self.callBack = callBack

    local heroData = DataCenter.HeroDataManager:GetHeroByUuid(heroUuid)
    local heroConfig = heroData:GetConfig()
    local quality = heroData.quality
    local camp = heroData:GetCamp()
    self.isWaken = heroData:IsWakeUp()
    self.rarity = heroConfig['rarity']
    self:SetQuality(quality, false, not heroData.isMaster,self.isWaken)
    self:SetSeason(heroConfig.season)

    local iconPath = HeroUtils.GetHeroIconPath(heroData.heroId, true)
    
    self.img_icon1:LoadSprite(iconPath)

    self.img_camp:LoadSprite(HeroUtils.GetCampIconPath(camp))
    self.text_level:SetText("Lv." .. tostring(heroData.level))

    local isMaster = heroData.isMaster
    
    local rankId = heroData:GetCurMilitaryRankId()
    self:ToggleLevel(isMaster)
    
    self.etoile_list:SetActive(true)
    self.etoile_list:SetRankId(rankId)
end

local function InitWithHeroPieceItem(self, itemId, callBack)
    self.param = itemId
    self.callBack = callBack
    local item = DataCenter.ItemTemplateManager:GetItemTemplate(itemId)
    local heroConfig = LocalController:instance():getLine(HeroUtils.GetHeroXmlName(), toInt(item.para2))
    if heroConfig == nil then
        return
    end
    local camp = heroConfig.camp
    local quality = heroConfig['init_quality_level']
    self.rarity = heroConfig['rarity']
    self:SetQuality(quality, true, false, false, true)
    
    local iconPath = HeroUtils.GetHeroIconPath(toInt(item.para2), true)
    self.img_icon1:LoadSprite(iconPath)
    self.img_camp:LoadSprite(HeroUtils.GetCampIconPath(camp))
    self:ToggleLevel(false)
    
    self.etoile_list:SetActive(false)
end

local function InitWithConfigId(self, heroId, quality, level,rankId,isWaken, camp)
    self.param = heroId
    local heroConfig = LocalController:instance():getLine(HeroUtils.GetHeroXmlName(), heroId)
    if camp == nil then
        camp = heroConfig.camp
    end
    
    if quality == nil then
        quality = heroConfig['init_quality_level']
    end
    self.rarity = heroConfig['rarity']
    self:SetQuality(quality, level == nil,false,isWaken)
    self:SetSeason(heroConfig.season)

    local iconPath = HeroUtils.GetHeroIconPath(heroId, true)
    
    self.img_icon1:LoadSprite(iconPath)

    self.img_camp:LoadSprite(HeroUtils.GetCampIconPath(camp))
    self.text_level:SetText(level ~= nil and "Lv." .. tostring(level) or '')
end

local function SetQuality(self, quality, hideLv, isPoster, isWaken, isItem)
    if isItem then
        self.layerNormal:SetActive(false)

        local qualityPath = HeroUtils.GetRarityIconPath(self.rarity, true, isWaken)
        self.img_quality1:LoadSprite(qualityPath)
        local qualityMaskPath = self.GetRarityMaskPath(self.rarity, isWaken)
        self.img_bg_mask1:LoadSprite(qualityMaskPath)
        self.etoile_list:SetActive(false)
        return
    end
    self.etoile_list:SetActive(true)
    self.layerNormal:SetActive(true)
    
    local qualityPath = HeroUtils.GetRarityIconPath(self.rarity, true, isWaken)
    local qualityMaskPath = self.GetRarityMaskPath(self.rarity, isWaken)
    --self.img_quality1:LoadSprite(qualityPath)
    self.img_bg_mask1:LoadSprite(qualityMaskPath)
    local lvBgPath = self.GetRarityLvBgPath(self.rarity, isWaken)
    self.img_lv_bg1:LoadSprite(lvBgPath)
end

local function OnBtnClick(self)
    if self.callBack ~= nil then
        self.callBack(self.transform, self.param)
    end
end

local function GetRarityMaskPath(rarity, isWaken)
    if isWaken then
        return string.format(LoadPath.HeroListPath, "ui_quality_mask_cai_big")
    end

    local mask = {
        "ui_quality_mask_orange_big",        --1.橙
        "ui_quality_mask_purple_big",        --2.紫
        "ui_quality_mask_blue_big",          --3.蓝
        "ui_quality_mask_green_big",
        --"ui_quality_mask_cai_big",           --12.彩
    }

    local iconName = mask[rarity]
    return string.format(LoadPath.HeroListPath, iconName)
end

local function GetRarityLvBgPath(rarity, isWaken)
    local path = LoadPath.HeroListPath

    if isWaken then
        return string.format(path, "ui_herolist_lv_cai_bg")
    end

    local bg = {
        "ui_herolist_lv_orange_bg",        --1.橙
        "ui_herolist_lv_purple_bg",        --2.紫
        "ui_herolist_lv_blue_bg",          --3.蓝
        "ui_herolist_lv_green_bg"
        --"ui_herolist_lv_cai_bg",           --12.彩
    }

    local iconName = bg[rarity]
    return string.format(path, iconName)
end

local function GetQualityMaskPath(quality)
    local mask = {
        "ui_quality_mask_green_big",         --1.绿
        "ui_quality_mask_blue_big",          --2.蓝
        "ui_quality_mask_blue_big",          --3.蓝1星
        "ui_quality_mask_purple_big",        --4.紫
        "ui_quality_mask_purple_big",        --5.紫1星
        "ui_quality_mask_orange_big",        --6.橙
        "ui_quality_mask_orange_big",        --7.橙1星
        "ui_quality_mask_red_big",           --8.红
        "ui_quality_mask_red_big",           --9.红1星
        "ui_quality_mask_gold_big",          --10.金
        "ui_quality_mask_gold_big",          --11.金1星
        "ui_quality_mask_cai_big",           --12.彩
        "ui_quality_mask_cai_big",           --13.彩1星
    }

    local iconName = mask[quality]
    return string.format(LoadPath.HeroListPath, iconName)
end

local function GetQualityLvBgPath(quality)
    local bg = {
        "ui_herolist_lv_green_bg",         --1.绿
        "ui_herolist_lv_blue_bg",          --2.蓝
        "ui_herolist_lv_blue_bg",          --3.蓝1星
        "ui_herolist_lv_purple_bg",        --4.紫
        "ui_herolist_lv_purple_bg",        --5.紫1星
        "ui_herolist_lv_orange_bg",        --6.橙
        "ui_herolist_lv_orange_bg",        --7.橙1星
        "ui_herolist_lv_red_bg",           --8.红
        "ui_herolist_lv_red_bg",           --9.红1星
        "ui_herolist_lv_gold_bg",          --10.金
        "ui_herolist_lv_gold_bg",          --11.金1星
        "ui_herolist_lv_cai_bg",           --12.彩
        "ui_herolist_lv_cai_bg",           --13.彩1星
    }

    local iconName = bg[quality]

    local path = LoadPath.HeroListPath
    return string.format(path, iconName)
end

local function GetBottomArrowPath(quality)
    local paths = {
        'ui_herolist_arrow_green',
        'ui_herolist_arrow_blue',
        'ui_herolist_arrow_blue',
        'ui_herolist_arrow_purple',
        'ui_herolist_arrow_purple',
        'ui_herolist_arrow_orange',
        'ui_herolist_arrow_orange',
        'ui_herolist_arrow_red',
        'ui_herolist_arrow_red',
        'ui_herolist_arrow_gold',
        'ui_herolist_arrow_gold',
        'ui_herolist_arrow_cai',
        'ui_herolist_arrow_cai',
    }
    
    local iconName = paths[quality]
    return string.format(LoadPath.HeroListPath, iconName)
end

local function GetCellPos(self)
    return self.layerNormal.transform.position
end

local function GetCellSizeDelta(self)
    return self.layerNormal:GetSizeDelta()
end

local function ToggleLevel(self, t)
    self.text_level:SetActive(t)
    self.img_lv_bg1:SetActive(t)
end

local function GetGuideClickBtn(self)
    return self.btn_go
end

local function SetSeason(self, season)
    self.season:SetActive(season > 0)
    self.seasonTxt:SetText("S"..season)
end

local function CheckHero(self,heroId)
    local heroData = DataCenter.HeroDataManager:GetHeroByUuid(self.param)
    if heroData and heroData.heroId == heroId then
        return self:GetCellPos(),self:GetCellSizeDelta()
    end
    return 0,0
end

local function ShowEtoileList(self, show)
    self.etoile_list:SetActive(show)
end

UIHeroCellBig.SetSeason = SetSeason
UIHeroCellBig.OnCreate = OnCreate
UIHeroCellBig.OnDestroy = OnDestroy
UIHeroCellBig.OnEnable = OnEnable
UIHeroCellBig.OnDisable = OnDisable
UIHeroCellBig.ComponentDefine = ComponentDefine
UIHeroCellBig.ComponentDestroy = ComponentDestroy
UIHeroCellBig.DataDefine = DataDefine
UIHeroCellBig.DataDestroy = DataDestroy

UIHeroCellBig.SetData = SetData
UIHeroCellBig.InitWithConfigId = InitWithConfigId
UIHeroCellBig.SetQuality = SetQuality
UIHeroCellBig.OnBtnClick = OnBtnClick

UIHeroCellBig.GetQualityMaskPath = GetQualityMaskPath
UIHeroCellBig.GetQualityLvBgPath = GetQualityLvBgPath
UIHeroCellBig.GetBottomArrowPath = GetBottomArrowPath

UIHeroCellBig.GetRarityMaskPath = GetRarityMaskPath
UIHeroCellBig.GetRarityLvBgPath = GetRarityLvBgPath

UIHeroCellBig.GetCellPos = GetCellPos
UIHeroCellBig.GetCellSizeDelta = GetCellSizeDelta
UIHeroCellBig.ToggleLevel = ToggleLevel
UIHeroCellBig.GetGuideClickBtn = GetGuideClickBtn
UIHeroCellBig.InitWithHeroPieceItem = InitWithHeroPieceItem
UIHeroCellBig.CheckHero = CheckHero
UIHeroCellBig.ShowEtoileList = ShowEtoileList

return UIHeroCellBig