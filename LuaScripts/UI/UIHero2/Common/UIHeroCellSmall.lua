---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhangliheng.
--- DateTime: 2021/6/17 下午3:15
---


local UIHeroCellSmall = BaseClass("UIHeroCellSmall", UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization
local UIHeroEtoileList = require "UI.UIHero2.Common.UIHeroEtoileList"

local btn_go_path = ""
local img_quality_path = "imgQuality"
local img_quality_fg_path = "imgQualityfg"
local img_camp_path = "imgCamp"
local img_level_bg_path = "LVBg"
local text_level_path = "LVBg/textLevel"
local text_name_path = "textName"
local in_march_obj_path = "inMarchObj"
local in_march_des_path = "inMarchObj/inMarchDes"

local function GetLvBgPath(rarity, isWaken)
    local path = LoadPath.HeroIconsSmallPath

    if isWaken then
        return path.."ui_quality_lvbg_cai"
    end

    local bg = {
        "ui_quality_lvbg_orange",        --1.橙
        "ui_quality_lvbg_purple",        --2.紫
        "ui_quality_lvbg_blue",          --3.蓝
        "ui_quality_lvbg_green",
        --"ui_herolist_lv_cai_bg",           --12.彩
    }

    local iconName = bg[rarity]
    return path..iconName
    --
    --local icons = {
    --    "ui_quality_lvbg_green",
    --    "ui_quality_lvbg_blue",
    --    "ui_quality_lvbg_blue",
    --    "ui_quality_lvbg_purple",
    --    "ui_quality_lvbg_purple",
    --    "ui_quality_lvbg_orange",
    --    "ui_quality_lvbg_orange",
    --    "ui_quality_lvbg_red",
    --    "ui_quality_lvbg_red",
    --    "ui_quality_lvbg_gold",
    --    "ui_quality_lvbg_gold",
    --    "ui_quality_lvbg_cai",
    --    "ui_quality_lvbg_cai",
    --}
    --
    --local iconName = icons[quality]
    --return LoadPath.HeroIconsSmallPath .. iconName
end

local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function ComponentDefine(self)
    --------------------------------------
    self.layerPoster        = self:AddComponent(UIBaseContainer, 'LayerPoster')
    self.imgPosterQualityBg = self:AddComponent(UIImage, 'LayerPoster/ImgPosterQualityBg')
    self.imgPosterQualityFg = self:AddComponent(UIImage, 'LayerPoster/ImgPosterQualityFg')
    self.imgPosterIcon      = self:AddComponent(UIImage, 'LayerPoster/ImgPosterQualityBg/ImgPosterIcon')
    --------------------------------------
    self.season = self:AddComponent(UIBaseContainer, "seasonBg")
    self.seasonTxt = self:AddComponent(UITextMeshProUGUIEx, "seasonBg/seasonTxt")
    self.season:SetActive(false)

    self.imgRarity = self:AddComponent(UIImage, 'ImgRarity')
    self.img_quality = self:AddComponent(UIImage, img_quality_path)
    self.img_quality_fg = self:AddComponent(UIImage, img_quality_fg_path)
    self.img_icon = self:AddComponent(UIImage, 'iconMask/imgIcon')
    self.img_camp = self:AddComponent(UIImage, img_camp_path)
    self.level_bg = self:AddComponent(UIImage, img_level_bg_path)
    self.text_level = self:AddComponent(UITextMeshProUGUIEx, text_level_path)
    self.text_level.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
    self.text_name = self:AddComponent(UITextMeshProUGUIEx, text_name_path)
    self.btn_go = self:AddComponent(UIButton, btn_go_path)
    self.btn_go:SetOnClick(function()  
    SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnBtnClick()
    end)
    self.etoile_list = self:AddComponent(UIHeroEtoileList, "UIHeroEtoileList")
    self.in_march_obj = self:AddComponent(UIImage,in_march_obj_path)
    self.in_march_des = self:AddComponent(UITextMeshProUGUIEx,in_march_des_path)
end

local function ComponentDestroy(self)

end

local function DataDefine(self)
    self.heroUuid = 0
    self.callBack = nil
    self.heroConfigId = 0
    self.heroCallback = nil
end

local function DataDestroy(self)
    self.heroUuid = nil
    self.callBack = nil
    self.heroConfigId = 0
    self.heroCallback = nil
end

local function SetData(self, heroUuid, callBack, showGrade, useOriginalCamp)
    self.heroUuid = heroUuid
    self.callBack = callBack
    
    local heroData = DataCenter.HeroDataManager:GetHeroByUuid(heroUuid)
    assert(heroData ~= nil, 'heroData is nil! heroUuid:' .. tostring(heroUuid))
    local heroConfig = heroData:GetConfig()
    local quality = heroData.quality
    local camp = nil
    if useOriginalCamp then
        camp = heroConfig.camp
    else
        camp = heroData:GetCamp()
    end
    local rarity = heroData.rarity
    local isMaster = heroData.isMaster
    self.rarity = heroConfig['rarity']
    self.isWaken = heroData:IsWakeUp()
    self:SetSeason(heroConfig.season)
    self.imgRarity:LoadSprite(HeroUtils.GetRarityIconName(rarity))
    local iconPath = HeroUtils.GetHeroIconPath(heroData.heroId)
    self.imgPosterIcon:LoadSprite(iconPath)
    self.img_icon:LoadSprite(iconPath)
    if camp~=-1 then
        self.img_camp:SetActive(true)
        self.img_camp:LoadSprite(HeroUtils.GetCampIconPath(camp))
    else
        self.img_camp:SetActive(false)
    end
    
    
    self.text_name:SetLocalText(heroConfig["name"])
    self.text_level:SetText("Lv." .. tostring(heroData.level))

    self:SetQuality(quality, not isMaster,self.isWaken)

    local rankId = heroData:GetCurMilitaryRankId()
    self.etoile_list:SetRankId(rankId)
end

local function InitWithConfigId(self, heroConfigId, quality, level,state,skillInfos,rankId,isWakeUp, heroCallback, camp)
    self.heroConfigId = heroConfigId
    self.heroCallback = heroCallback
    local heroConfig = LocalController:instance():getLine(HeroUtils.GetHeroXmlName(), heroConfigId)
    if camp == nil then
        camp = heroConfig.camp
    end
    if state ~=nil and  state == ArmyFormationState.March then
        self.in_march_des:SetLocalText(120166)
        self.in_march_obj:SetActive(true)
    else
        self.in_march_obj:SetActive(false)
    end
    if quality == nil then
        quality = heroConfig['init_quality_level']
    end
    self:SetSeason(heroConfig.season)
    self.img_icon:LoadSprite(HeroUtils.GetHeroIconPath(heroConfigId))
    if camp~=-1 then
        self.img_camp:SetActive(true)
        self.img_camp:LoadSprite(HeroUtils.GetCampIconPath(camp))
    else
        self.img_camp:SetActive(false)
    end
    self.text_name:SetLocalText(heroConfig["name"])
    self.rarity = heroConfig.rarity
    self:SetQuality(quality,false,isWakeUp)

    if tonumber(level) ~= nil then
        self.level_bg:SetActive(true)
        self.text_level:SetText("Lv." .. level)
    else
        self.level_bg:SetActive(false)
        self.text_level:SetText("")
    end

    local totalLevel = 0
    if skillInfos and next(skillInfos) then
        for _, v in pairs(skillInfos) do
            totalLevel = totalLevel + v.skillLv
        end
    end
    self:SetRank(rankId)
end

local function SetQuality(self, quality, isPoster,isWaken)
    self.img_quality:SetActive(not isPoster)
    self.img_quality_fg:SetActive(not isPoster)
    self.img_icon:SetActive(not isPoster)
    self.level_bg:SetActive(not isPoster)
    self.layerPoster:SetActive(isPoster)
    self:ToggleLevel(not isPoster)
    
    if isPoster then
        self.imgPosterQualityBg:LoadSprite(HeroUtils.GetPosterRarityPath(self.rarity, true, isWaken))
        self.imgPosterQualityFg:LoadSprite(HeroUtils.GetPosterRarityPath(self.rarity, false, isWaken))
        self:ToggleLevel(false)
    else
        local icon = HeroUtils.GetRarityIconPath(self.rarity, false, isWaken)
        local fgIcon = HeroUtils.GetRarityFgIconPath(self.rarity)

        self.img_quality:LoadSprite(icon)
        self.img_quality_fg:LoadSprite(fgIcon)
        self.in_march_obj:LoadSprite(icon)

        self.level_bg:LoadSprite(self.GetLvBgPath(self.rarity, isWaken))
    end
end

local function InitWithConfigIdByPoster(self, heroConfigId, quality, level)
    local heroConfig = LocalController:instance():getLine(HeroUtils.GetHeroXmlName(), heroConfigId)
    local camp = heroConfig.camp
    self.in_march_obj:SetActive(false)
    if quality == nil then
        quality = heroConfig['init_quality_level']
    end
    local iconPath = HeroUtils.GetHeroIconPath(heroConfigId)
    self.imgPosterIcon:LoadSprite(iconPath)
    if camp~=-1 then
        self.img_camp:SetActive(true)
        self.img_camp:LoadSprite(HeroUtils.GetCampIconPath(camp))
    else
        self.img_camp:SetActive(false)
    end
    self.text_name:SetLocalText(heroConfig["name"])
    self.rarity = heroConfig.rarity
    self:SetQuality(quality,true)

    self.level_bg:SetActive(level ~= nil)
    
    self:SetRank()
end

local function SetRank(self, rankId)
    self.etoile_list:SetRankId(rankId)
end

local function SetDisplayLevel(self, level)
    self.text_level:SetText("Lv." .. level)
end


local function OnBtnClick(self)
    if self.callBack ~= nil and self.heroUuid then
        self.callBack(self.transform, self.heroUuid)
    elseif self.heroCallback and self.heroConfigId then
        self.heroCallback(self.heroConfigId)
    end
end

local function SetLvTextBiggest(self)
    self.text_level.transform:Set_localScale(1.3, 1.3, 1.3)
end

local function ToggleRayCast(self, t)
    local empty4Raycast = self.btn_go.transform:GetComponent(typeof(CS.UnityEngine.UI.Empty4Raycast))
    if empty4Raycast ~= nil then
        empty4Raycast.raycastTarget = t
    end
end

local function ToggleLevel(self, t)
    self.level_bg:SetActive(t)
    self.text_level:SetActive(t)
end

local function SetStarActive(self, active)
    self.etoile_list:SetActive(active)
end

local function SetCampActive(self, active)
    if self.img_camp ~= nil then
        self.img_camp:SetActive(active)
    end
end

local function GetLastStarPos(self)
    return Vector3.New(0, 0, 0)
end

local function SetSeason(self, season)
    self.season:SetActive(season > 0)
    self.seasonTxt:SetText("S"..season)
end

function UIHeroCellSmall:SetLevelBgActive(active)
    self.level_bg:SetActive(active)
end

UIHeroCellSmall.SetSeason = SetSeason
UIHeroCellSmall.OnCreate = OnCreate
UIHeroCellSmall.OnDestroy = OnDestroy
UIHeroCellSmall.OnEnable = OnEnable
UIHeroCellSmall.OnDisable = OnDisable
UIHeroCellSmall.ComponentDefine = ComponentDefine
UIHeroCellSmall.ComponentDestroy = ComponentDestroy
UIHeroCellSmall.DataDefine = DataDefine
UIHeroCellSmall.DataDestroy = DataDestroy
UIHeroCellSmall.GetLastStarPos = GetLastStarPos
UIHeroCellSmall.GetLvBgPath = GetLvBgPath

UIHeroCellSmall.SetData = SetData
UIHeroCellSmall.ToggleRayCast = ToggleRayCast
UIHeroCellSmall.InitWithConfigId = InitWithConfigId
UIHeroCellSmall.InitWithConfigIdByPoster = InitWithConfigIdByPoster
UIHeroCellSmall.SetQuality = SetQuality
UIHeroCellSmall.SetRank = SetRank
UIHeroCellSmall.SetDisplayLevel = SetDisplayLevel

UIHeroCellSmall.OnBtnClick = OnBtnClick
UIHeroCellSmall.SetLvTextBiggest = SetLvTextBiggest
UIHeroCellSmall.ToggleLevel = ToggleLevel
UIHeroCellSmall.SetStarActive = SetStarActive
UIHeroCellSmall.SetCampActive = SetCampActive

return UIHeroCellSmall