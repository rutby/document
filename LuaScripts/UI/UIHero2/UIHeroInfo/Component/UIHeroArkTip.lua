---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhangliheng.
--- DateTime: 7/30/21 5:32 PM
---


local UIHeroArkTip = BaseClass("UIHeroArkTip", UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization

local MaxLine = 3

local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    self.root = self:AddComponent(UIBaseContainer, "Root")
    self.textTitle = self:AddComponent(UITextMeshProUGUIEx, "Root/TextTitle")
    self.textTip = self:AddComponent(UITextMeshProUGUIEx, "Root/TextTip")

    self.lines = {}
    for k=1, MaxLine do
        local node = self:AddComponent(UIBaseContainer, 'Root/Line' .. k)
        local textGrade = self:AddComponent(UITextMeshProUGUIEx, node.transform:Find('TextGrade' .. k))
        --local textCondition = self:AddComponent(UITextMeshProUGUIEx, node.transform:Find('TextCondition' .. k))
        local textEffect = self:AddComponent(UITextMeshProUGUIEx, node.transform:Find('TextEffect' .. k))

        table.insert(self.lines, {node = node, textGrade = textGrade, textEffect = textEffect})
    end

    self.textTitle:SetLocalText(161004) 
    self.textTip:SetLocalText(161005) 

    self.btn = self:AddComponent(UIButton, 'Panel')
    self.btn:SetOnClick(BindCallback(self, self.OnClickPanel))
end

local function ComponentDestroy(self)
    self.textTitle = nil
    self.textTip = nil
    self.lines = nil
end

local function SetData(self, heroId, totalLevel)
    --local heroData = DataCenter.HeroDataManager:GetHeroByUuid(heroUuid)
    --local heroId = heroData.heroId
    local lineDataList = HeroUtils.GetArkLines(heroId)
    local dataLen = #lineDataList
    for k, v in ipairs(self.lines) do
        if k > dataLen then
            v.node:SetActive(false)
            goto continue
        end

        v.node:SetActive(true)
        local dt = LocalController:instance():getLine(TableName.HeroArkCore, lineDataList[k])

        local bReach = totalLevel >= tonumber(dt:getValue('condition'))
        
        v.textGrade:SetText((bReach and '<color=#D87A41>' or '<color=#00000090>' ) ..  Localization:GetString('100082') .. dt:getValue('condition') .. ':' .. '</color>')
        local effectArray = string.split(dt['effect'], ';')        
        local effectNum, effectValue = effectArray[1], effectArray[2]
        local effectNameKey = GetTableData(TableName.EffectNumDesc, effectNum, 'des')
        v.textEffect:SetText((bReach and '<color=#653214>' or '<color=#00000090>' ) ..  Localization:GetString(effectNameKey) .. ': ' .. effectValue .. '</color>')
        
        ::continue::
    end
end

local function OnClickPanel(self)
    self:SetActive(false)
end

local function OnEnable(self)
    base.OnEnable(self)
    
    local rootRt = self.root.rectTransform
    DOTween.Kill(rootRt)
    rootRt:Set_localScale(0, 0, 0)
    rootRt:DOScale(Vector3.New(1.1, 1.1, 0), 0.15):OnComplete(function()
        rootRt:DOScale(Vector3.one, 0.1)
    end):SetEase(CS.DG.Tweening.Ease.InOutCubic)
end

UIHeroArkTip.OnCreate = OnCreate
UIHeroArkTip.OnDestroy = OnDestroy
UIHeroArkTip.OnEnable = OnEnable
UIHeroArkTip.ComponentDefine = ComponentDefine
UIHeroArkTip.ComponentDestroy = ComponentDestroy

UIHeroArkTip.SetData = SetData
UIHeroArkTip.OnClickPanel = OnClickPanel


return UIHeroArkTip