---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2023/12/20 18:34
---

local UIHeroQualityUp = BaseClass("UIHeroQualityUp", UIBaseView)
local base = UIBaseView
local UIHeroQualityUpItem = require "UI.UIHero2.UIHeroQualityUp.Component.UIHeroQualityUpItem"
local UIGray = CS.UIGray

local return_path = "UICommonMidPopUpTitle/panel"
local close_path = "UICommonMidPopUpTitle/bg_mid/CloseBtn"
local title_path = "UICommonMidPopUpTitle/bg_mid/titleText"
local scroll_view_path = "ScrollView"
local confirm_path = "Confirm"
local confirm_text_path = "Confirm/ConfirmText"
local auto_path = "Auto"
local auto_text_path = "Auto/AutoText"

local Type =
{
    SameId = 1,
    SameCamp = 2,
}

local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
end

local function OnDestroy(self)
    self:DataDestroy()
    self:ComponentDestroy()
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
    self:ReInit()
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function ComponentDefine(self)
    self.return_btn = self:AddComponent(UIButton, return_path)
    self.return_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)
    self.close_btn = self:AddComponent(UIButton, close_path)
    self.close_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)
    self.title_text = self:AddComponent(UITextMeshProUGUIEx, title_path)
    self.title_text:SetLocalText(110108)
    self.scroll_view = self:AddComponent(UIScrollView, scroll_view_path)
    self.scroll_view:SetOnItemMoveIn(function(itemObj, index)
        self:OnCreateCell(itemObj, index)
    end)
    self.scroll_view:SetOnItemMoveOut(function(itemObj, index)
        self:OnDeleteCell(itemObj, index)
    end)
    self.confirm_btn = self:AddComponent(UIButton, confirm_path)
    self.confirm_btn:SetOnClick(function()
        self:OnConfirmClick()
    end)
    self.confirm_text = self:AddComponent(UITextMeshProUGUIEx, confirm_text_path)
    self.confirm_text:SetLocalText(110006)
    self.auto_btn = self:AddComponent(UIButton, auto_path)
    self.auto_btn:SetOnClick(function()
        self:OnAutoClick()
    end)
    self.auto_text = self:AddComponent(UITextMeshProUGUIEx, auto_text_path)
    self.auto_text:SetLocalText(376062)
end

local function ComponentDestroy(self)

end

local function DataDefine(self)
    self.items = {}
    self.selectedIndexes = {}
end

local function DataDestroy(self)

end

local function OnAddListener(self)
    base.OnAddListener(self)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
end

local function OnCreateCell(self, itemObj, index)
    itemObj.name = tostring(index)
    local item = self.scroll_view:AddComponent(UIHeroQualityUpItem, itemObj)
    item:SetData(self.dataList[index])
    item:SetSelected(table.hasvalue(self.selectedIndexes, index))
    item:SetOnClick(function()
        self:OnItemClick(index)
    end)
    self.items[index] = item
end

local function OnDeleteCell(self, itemObj, index)
    self.scroll_view:RemoveComponent(itemObj.name, UIHeroQualityUpItem)
    self.items[index] = nil
end

local function ShowScroll(self)
    local count = #self.dataList
    if count > 0 then
        self.scroll_view:SetActive(true)
        self.scroll_view:SetTotalCount(count)
        self.scroll_view:RefillCells()
    else
        self.scroll_view:SetActive(false)
    end
end

local function ReInit(self)
    self.param = self:GetUserData()
    local selectedDict = DeepCopy(self.param.selectedDict)
    self.selectedIndexes = {}
    self.dataList = {}
    
    local function TryAddItem(itemId)
        local itemData = DataCenter.ItemData:GetItemById(itemId)
        if itemData then
            for i = 1, itemData.count do
                local data = {}
                data.itemId = itemId
                table.insert(self.dataList, data)
                if selectedDict[itemId] and selectedDict[itemId] > 0 then
                    selectedDict[itemId] = selectedDict[itemId] - 1
                    table.insert(self.selectedIndexes, #self.dataList)
                end
            end
        end
    end
    
    local heroId = self.param.heroData.heroId
    if self.param.type == Type.SameId then
        local itemId = GetTableData(HeroUtils.GetHeroXmlName(), heroId, "poster")
        TryAddItem(itemId)
    elseif self.param.type == Type.SameCamp then
        local heroCamp = self.param.heroData:GetCamp()
        local itemIds = DataCenter.ItemData:GetPosterItemIdsByRarity(heroCamp, self.param.needRarity)
        for _, itemId in ipairs(itemIds) do
            TryAddItem(itemId)
        end
    end
    
    self:ShowScroll()
end

local function Refresh(self)
    local enough = (self.param.needCount == #self.selectedIndexes)
    UIGray.SetGray(self.confirm_btn.transform, not enough, enough)
end

local function OnItemClick(self, index)
    local item = self.items[index]
    if item then
        if table.hasvalue(self.selectedIndexes, index) then
            table.removebyvalue(self.selectedIndexes, index)
            item:SetSelected(false)
        elseif #self.selectedIndexes < self.param.needCount then
            table.insert(self.selectedIndexes, index)
            item:SetSelected(true)
        end
    end
    self:Refresh()
end

local function OnConfirmClick(self)
    local list = {}
    for _, index in ipairs(self.selectedIndexes) do
        local data = self.dataList[index]
        list[data.itemId] = (list[data.itemId] or 0) + 1
    end
    
    if self.param.onConfirm then
        self.param.onConfirm(list)
        self.ctrl:CloseSelf()
    end
end

local function OnAutoClick(self)
    local count = math.min(self.param.needCount - #self.selectedIndexes, #self.dataList)
    for index = 1, #self.dataList do
        if count == 0 then
            break
        end
        if not table.hasvalue(self.selectedIndexes, index) then
            table.insert(self.selectedIndexes, index)
            local item = self.items[index]
            if item then
                item:SetSelected(true)
            end
            count = count - 1
        end
    end
    self:Refresh()
end

UIHeroQualityUp.OnCreate = OnCreate
UIHeroQualityUp.OnDestroy = OnDestroy
UIHeroQualityUp.OnEnable = OnEnable
UIHeroQualityUp.OnDisable = OnDisable
UIHeroQualityUp.ComponentDefine = ComponentDefine
UIHeroQualityUp.ComponentDestroy = ComponentDestroy
UIHeroQualityUp.DataDefine = DataDefine
UIHeroQualityUp.DataDestroy = DataDestroy
UIHeroQualityUp.OnAddListener = OnAddListener
UIHeroQualityUp.OnRemoveListener = OnRemoveListener

UIHeroQualityUp.OnCreateCell = OnCreateCell
UIHeroQualityUp.OnDeleteCell = OnDeleteCell
UIHeroQualityUp.ShowScroll = ShowScroll

UIHeroQualityUp.Type = Type
UIHeroQualityUp.ReInit = ReInit
UIHeroQualityUp.Refresh = Refresh
UIHeroQualityUp.OnItemClick = OnItemClick
UIHeroQualityUp.OnConfirmClick = OnConfirmClick
UIHeroQualityUp.OnAutoClick = OnAutoClick

return UIHeroQualityUp