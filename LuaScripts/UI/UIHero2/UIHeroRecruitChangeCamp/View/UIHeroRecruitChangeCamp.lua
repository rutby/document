---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhangliheng.
--- DateTime: 7/19/21 5:00 PM
---


local UIHeroRecruitChangeCamp = BaseClass("UIHeroRecruitChangeCamp", UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization
local UICampCell = require "UI.UIHero2.UIHeroRecruitChangeCamp.Component.UICampCell"


--创建
local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
    self:OnOpen()
end

-- 销毁
local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    local btnPanel = self:AddComponent(UIButton, 'UICommonMidPopUpTitle/panel')
    btnPanel:SetOnClick(BindCallback(self.ctrl, self.ctrl.CloseSelf))

    self.btnClose = self:AddComponent(UIButton, 'UICommonMidPopUpTitle/bg_mid/CloseBtn')
    self.btnClose:SetOnClick(BindCallback(self.ctrl, self.ctrl.CloseSelf))


    self.textTitle = self:AddComponent(UIText, 'UICommonMidPopUpTitle/bg_mid/titleText')
    self.textTip1 = self:AddComponent(UIText, 'Root/TextTip1')
    --self.textSubTitle = self:AddComponent(UIButton, 'Root/TextSubTitle')
    self.btnChange = self:AddComponent(UIButton, 'Root/BtnChange')
    self.textBtnChange = self:AddComponent(UIText, 'Root/BtnChange/TextBtnChange')

    self.nodeCells = {}
    for i=0, 3 do
        local cell = self:AddComponent(UICampCell, 'Root/Panel/Camp_' .. i)
        self.nodeCells[i] = cell
    end

    self.textFreeNum = self:AddComponent(UIText, 'Root/TextFreeNum')
    self.imgCostItem = self:AddComponent(UIImage, 'Root/ImgCostItem')
    self.textCost    = self:AddComponent(UIText, 'Root/ImgCostItem/TextCost')
    
    self.btnChange:SetOnClick(BindCallback(self, self.OnBtnChangeClick))
    
    
    self.textTitle:SetLocalText(110123) 
    self.textTip1:SetLocalText(110124) 
    self.textBtnChange:SetLocalText(110126) 
end

local function ComponentDestroy(self)
    self.textTitle  = nil
    self.textTip1   = nil
    self.btnChange  = nil
    self.nodeCells  = nil
end

local function DataDefine(self)
    self.costItemId = 0
    self.costItemNum = 0
    self.costItemHave = 0
end

local function DataDestroy(self)

end


local function OnOpen(self)
    self.targetId = self:GetUserData()
    
    self.originId = DataCenter.LotteryDataManager:GetSpecialCampCurLotteryId()
    local costItemId, costItemNum = DataCenter.LotteryDataManager:GetCampChangeCost()
    self.costItemId = costItemId
    self.costItemNum = costItemNum

    self:UpdateView()
end

local function UpdateView(self)
    self.curLotteryData = DataCenter.LotteryDataManager:GetLotteryDataById(self.originId)
    local displayConfig = DataCenter.LotteryDataManager:GetDisplayConfig() 
    
    local curCampId = tonumber(displayConfig:GetCampId(self.originId))
    local nextCampId = tonumber(displayConfig:GetCampId(DataCenter.LotteryDataManager.nextCampLotteryId))

    if self.targetId == nil then
        self.preferredCampId = curCampId
    else
        self.preferredCampId = GetTableData(TableName.HeroRecruit, self.targetId, 'recruit_camp')
    end

    local lotteryId = DataCenter.LotteryDataManager:GetLotteryIdByCamp(self.preferredCampId)
    self.targetId = lotteryId
    
    for k, node in pairs(self.nodeCells) do
        node:SetData(k, curCampId, nextCampId)
        node:ToggleSelect(self.preferredCampId)
    end
    
    self.curCampId = curCampId
    
    local leftFreeCount = DataCenter.LotteryDataManager:GetLeftCampChangeFreeCount()
    self.leftFreeCount = leftFreeCount
    self.textFreeNum:SetActive(leftFreeCount > 0)
    self.imgCostItem:SetActive(leftFreeCount <= 0)
    if leftFreeCount > 0 then
        self.textFreeNum:SetLocalText(110134,  leftFreeCount) 
    else
        self.costItemHave = CommonUtil.GetResOrItemCount(self.costItemId)
        self.imgCostItem:LoadSprite(CommonUtil.GetResOrItemIcon(self.costItemId))
        self.textCost:SetText(self.costItemNum)
        self.textCost:SetColor(self.costItemHave >= self.costItemNum and Color.white or Color.red)
    end
    
end

local function Update(self)
    if self.curLotteryData == nil or not self.curLotteryData:IsShowTime() then
        return
    end

    local curTime = UITimeManager:GetInstance():GetServerTime()
    if curTime >= self.curLotteryData.endTime then
        return
    end
    
    local leftTime = math.max(0, self.curLotteryData.endTime - curTime)
    self.nodeCells[self.curCampId]:UpdateTimeText(UITimeManager:GetInstance():MilliSecondToFmtString(leftTime))
end

local function OnCellClick(self, campId)
    for _, node in pairs(self.nodeCells) do
        node:ToggleSelect(campId)
    end
    
    local lotteryId = DataCenter.LotteryDataManager:GetLotteryIdByCamp(campId)
    assert(lotteryId ~= nil, 'OnCellClick lotteryId is nil! campId:' .. campId)
    
    self.targetId = lotteryId
end


local function OnBtnChangeClick(self)
    local originId = self.originId
    local targetId = self.targetId

    if targetId == originId then
        UIUtil.ShowTipsId(110133) 
        return
    end

    --check cost
    if self.leftFreeCount <= 0 and self.costItemHave < self.costItemNum then
        UIUtil.ShowTipsId(120020) 
        return
    end

    SFSNetwork.SendMessage(MsgDefines.LotteryHeroSwitch, originId, targetId)
    self.ctrl:CloseSelf()
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.RecruitCampChange, self.OnHandleCampSwitch)
end

local function OnRemoveListener(self)
    self:RemoveUIListener(EventId.RecruitCampChange, self.OnHandleCampSwitch)
    base.OnRemoveListener(self)
end

local function OnHandleCampSwitch(self, lotteryId)
    self.originId = DataCenter.LotteryDataManager:GetSpecialCampCurLotteryId()
    self.targetId = self.originId
    self:UpdateView()
end


UIHeroRecruitChangeCamp.OnCreate= OnCreate
UIHeroRecruitChangeCamp.OnDestroy = OnDestroy
UIHeroRecruitChangeCamp.ComponentDefine = ComponentDefine
UIHeroRecruitChangeCamp.ComponentDestroy = ComponentDestroy
UIHeroRecruitChangeCamp.DataDefine = DataDefine
UIHeroRecruitChangeCamp.DataDestroy = DataDestroy

UIHeroRecruitChangeCamp.OnAddListener = OnAddListener
UIHeroRecruitChangeCamp.OnRemoveListener = OnRemoveListener
UIHeroRecruitChangeCamp.OnHandleCampSwitch = OnHandleCampSwitch


UIHeroRecruitChangeCamp.OnOpen = OnOpen
UIHeroRecruitChangeCamp.OnBtnChangeClick = OnBtnChangeClick
UIHeroRecruitChangeCamp.UpdateView = UpdateView
UIHeroRecruitChangeCamp.OnCellClick = OnCellClick
UIHeroRecruitChangeCamp.Update = Update

return UIHeroRecruitChangeCamp