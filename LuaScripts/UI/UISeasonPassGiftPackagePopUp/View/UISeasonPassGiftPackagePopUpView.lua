---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zzl
--- DateTime:
---
local UISeasonPassGiftPackagePopUpView = BaseClass("UISeasonPassGiftPackagePopUpView", UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization
local UICommonItemChange = require "UI.UICommonItem.UICommonItemChange"
local UIGiftPackagePoint = require "UI.UIGiftPackage.Component.UIGiftPackagePoint"


local close_path = "Close"
local back_path = "Back"
local bg_path = "UIScrollPackContent/Bg"
local title_path = "UIScrollPackContent/Title"
local titles_path = "UIScrollPackContent/Txt_Titles"
local time_path = "UIScrollPackContent/TimeBg/Time"
local scroll_view_path = "UIScrollPackContent/ScrollView"
local buy_btn_path = "UIScrollPackContent/BuyButton"
local buy_text_path = "UIScrollPackContent/BuyButton/BuyButtonText"
local reward1_txt_path = "UIScrollPackContent/Txt_Reward1"
local reward2_txt_path = "UIScrollPackContent/Txt_Reward2"
local extra_txt_path = "UIScrollPackContent/Txt_Extra"
local title_s2_txt_path = "UIScrollPackContent/Title_S2"
local title_s3_txt_path = "UIScrollPackContent/Title_S3"

local point_path = "UIScrollPackContent/BuyButton/UIGiftPackagePoint"

local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
    self:ReInit()
end

local function OnDestroy(self)
    self:ClearScroll()
    self:DeleteTimer()
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function ComponentDefine(self)
    self.close_btn = self:AddComponent(UIButton, close_path)
    self.close_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)
    self.back_btn = self:AddComponent(UIButton, back_path)
    self.back_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)

    self.bg_image = self:AddComponent(UIImage, bg_path)
    self.titles_text = self:AddComponent(UIText, titles_path)
    self.titles_text:SetLocalText(309050)
    self.reward1_txt = self:AddComponent(UIText,reward1_txt_path)
    self.reward2_txt = self:AddComponent(UIText,reward2_txt_path)
    self.extra_txt = self:AddComponent(UIText,extra_txt_path)
    self.extra_txt:SetLocalText(309051)
    self._time_txt = self:AddComponent(UIText, time_path)
    self.scroll_view = self:AddComponent(UIScrollView, scroll_view_path)
    self.scroll_view:SetOnItemMoveIn(function(itemObj, index)
        self:OnCreateCell(itemObj, index)
    end)
    self.scroll_view:SetOnItemMoveOut(function(itemObj, index)
        self:OnDeleteCell(itemObj, index)
    end)
    self.buy_btn = self:AddComponent(UIButton, buy_btn_path)
    self.buy_btn:SetOnClick(function()
        self:OnBuyClick()
    end)
    self.buy_text = self:AddComponent(UIText, buy_text_path)
    self.point_rect = self:AddComponent(UIGiftPackagePoint,point_path)
    
    self._titleS2_txt = self:AddComponent(UIText,title_s2_txt_path)
    self._titleS2_txt:SetLocalText(309049)
    self._titleS3_txt = self:AddComponent(UIText,title_s3_txt_path)
    self._titleS3_txt:SetLocalText(309049)
end

local function ComponentDestroy(self)
    self.bg_image = nil
    self._time_txt = nil
    self.scroll_view = nil
    self.buy_btn = nil
    self.buy_text = nil
    self.point_rect = nil
end

local function DataDefine(self)
    self.rewardList = nil
    self.timer = nil
    self.timer_action = function(temp)
        self:RefreshTime(temp)
    end
    self.packageInfo = nil
end

local function DataDestroy(self)
    self.rewardList = nil
    self.timer_action = nil
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.DesertForceRefresh, self.RefreshSeasonPass)
end

local function OnRemoveListener(self)
    self:RemoveUIListener(EventId.DesertForceRefresh, self.RefreshSeasonPass)
    base.OnRemoveListener(self)
end

local function ReInit(self)
    self.actId,self.isGoto = self:GetUserData()
    self.actListData = DataCenter.ActivityListDataManager:GetActivityDataById(tostring(self.actId))
    if self.actListData.type == EnumActivity.SeasonPass.Type then               --赛季pass
        DataCenter.SeasonPassManager:GetExtraRewardsReq()
    end
    local seasonId = DataCenter.SeasonDataManager:GetSeasonId()
    self._titleS2_txt:SetActive(seasonId == 2)
    self._titleS3_txt:SetActive(seasonId >= 3)
    self.bg_image:LoadSprite(string.format("Assets/Main/TextureEx/UISeasonPackage/%s","herogift_bg_s"..seasonId))
    self.buy_btn:SetActive(true)
    self.point_rect:RefreshPoint(nil)
    self.buy_text:SetLocalText(100547)
end

local function RefreshSeasonPass(self)
    local count1 = 0     --金币数量
    local count2 = 0     --晶体箱数量
    local extra1 = DataCenter.SeasonPassManager:GetPrivilegeExtraRewards(1)
    if extra1 then
        for i, v in ipairs(extra1) do
            count1 = count1 + v.count
        end
    end
    local extra2 = DataCenter.SeasonPassManager:GetPrivilegeExtraRewards(0)
    if extra2 then
        for i, v in ipairs(extra2) do
            count2 = count2 + v.count
        end
    end
    self.reward1_txt:SetText(string.GetFormattedSeperatorNum(count1))
    self.reward2_txt:SetText(string.GetFormattedSeperatorNum(count2))
    
    self.actData = DataCenter.SeasonPassManager:GetSeasonPassInfo(tonumber(self.actId))
    if self.actData == nil then
        return
    end
    local list = self.actData:GetSpecialReward()
    self.rewardList = {}
    for i = 1 ,table.count(list) do
        if i < 6 then
            self.rewardList[i] = list[i]
        end
    end
    if self.actListData then
        self:RefreshTime(self.actListData)
        self:AddTimer(self.actListData)
    end
    self:ShowCells()
end


local function ShowCells(self)
    local count = table.count(self.rewardList)
    if count > 0 then
        self.scroll_view:SetTotalCount(count)
        self.scroll_view:RefillCells()
    end
end

local function ClearScroll(self)
    self.scroll_view:ClearCells()
    self.scroll_view:RemoveComponents(UICommonItemChange)
end

local function OnCreateCell(self, itemObj, index)
    itemObj.name = tostring(index)
    local item = self.scroll_view:AddComponent(UICommonItemChange, itemObj)
    item:ReInit(self.rewardList[index])
end

local function OnDeleteCell(self, itemObj, index)
    self.scroll_view:RemoveComponent(itemObj.name, UICommonItemChange)
end

local function AddTimer(self,actListData)
    if self.timer == nil then
        self.timer = TimerManager:GetInstance():GetTimer(1, self.timer_action ,actListData , false,false,false)
    end
    self.timer:Start()
end

local function RefreshTime(self,actListData)
    local curTime = UITimeManager:GetInstance():GetServerTime()
    if actListData.endTime < curTime then
        self:DeleteTimer()
    else
        self._time_txt:SetText(UITimeManager:GetInstance():MilliSecondToFmtString(actListData.endTime - curTime))
    end
end

local function DeleteTimer(self)
    if self.timer ~= nil then
        self.timer:Stop()
        self.timer = nil
    end
end

local function OnBuyClick(self)
    if self.isGoto then
        GoToUtil.CloseAllWindows()
        GoToUtil.GoActWindow(self.actId)
        UIManager:GetInstance():OpenWindow(UIWindowNames.UISeasonPassPackage, self.actId)
    else
        UIManager.Instance:DestroyWindow(UIWindowNames.UISeasonPassGiftPackagePopUp)
        UIManager:GetInstance():OpenWindow(UIWindowNames.UISeasonPassPackage, self.actId)
    end
end

UISeasonPassGiftPackagePopUpView.OnCreate = OnCreate
UISeasonPassGiftPackagePopUpView.OnDestroy = OnDestroy
UISeasonPassGiftPackagePopUpView.ComponentDefine = ComponentDefine
UISeasonPassGiftPackagePopUpView.DataDefine = DataDefine
UISeasonPassGiftPackagePopUpView.DataDestroy = DataDestroy
UISeasonPassGiftPackagePopUpView.OnAddListener = OnAddListener
UISeasonPassGiftPackagePopUpView.OnRemoveListener = OnRemoveListener
UISeasonPassGiftPackagePopUpView.ReInit = ReInit
UISeasonPassGiftPackagePopUpView.RefreshSeasonPass = RefreshSeasonPass
UISeasonPassGiftPackagePopUpView.ShowCells = ShowCells
UISeasonPassGiftPackagePopUpView.ClearScroll = ClearScroll
UISeasonPassGiftPackagePopUpView.OnCreateCell = OnCreateCell
UISeasonPassGiftPackagePopUpView.OnDeleteCell = OnDeleteCell
UISeasonPassGiftPackagePopUpView.OnBuyClick = OnBuyClick
UISeasonPassGiftPackagePopUpView.OnEnable = OnEnable
UISeasonPassGiftPackagePopUpView.OnDisable = OnDisable
UISeasonPassGiftPackagePopUpView.ComponentDestroy = ComponentDestroy
UISeasonPassGiftPackagePopUpView.AddTimer = AddTimer
UISeasonPassGiftPackagePopUpView.RefreshTime = RefreshTime
UISeasonPassGiftPackagePopUpView.DeleteTimer = DeleteTimer
return UISeasonPassGiftPackagePopUpView