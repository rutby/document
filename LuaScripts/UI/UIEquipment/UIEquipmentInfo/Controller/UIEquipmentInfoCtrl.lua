---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2023/2/28 18:20
---

local UIEquipmentInfoCtrl = BaseClass("UIEquipmentInfoCtrl", UIBaseCtrl)
local Localization = CS.GameEntry.Localization

local function CloseSelf(self, notCancelSelect)
    UIManager:GetInstance():DestroyWindow(UIWindowNames.UIEquipmentInfo)
    if notCancelSelect ~= true then
        EventManager:GetInstance():Broadcast(EventId.EquipSelect, nil)
    end
    EventManager:GetInstance():Broadcast(EventId.EquipInfoClose, nil)
end

local function GetPanelData(self, data)
    local equipmentTemplate = DataCenter.EquipmentTemplateManager:GetTemplate(data.equipmentId)
    local result = {}
    local attrList = {}
    result.carIndex = data.carIndex
    result.currentPosUid = data.currentPosUid
    result.selfCarIndex = DataCenter.EquipmentDataManager:GetEquipmentCarIndex(data.equipmentUid)
    if equipmentTemplate ~= nil then
        result.name = equipmentTemplate.name
        result.equipmentUid = data.equipmentUid
        result.equipmentId = data.equipmentId
        result.fromType = data.fromType
        result.type = data.type
        result.pos = data.pos
        attrList = EquipmentUtil.GetEquipmentAttr(data.equipmentId)
        result.icon = EquipmentUtil.GetEquipmentIcon(data.equipmentId)
        result.color = EquipmentUtil.GetEquipmentNameColor(equipmentTemplate.color)
        result.title_bg = EquipmentUtil.GetInfoPanelTitleBG(equipmentTemplate.color)
    else
        result.name = ""
        result.equipmentUid = data.equipmentUid
        result.equipmentId = data.equipmentId
        result.fromType = data.fromType
    end
    result.attrList = attrList
    return result
end

local function IsMarching(self, index)
    local allList = DataCenter.ArmyFormationDataManager:GetArmyFormationList()
    if allList ~= nil then
        for _, v in ipairs(allList) do
            if v.index == index then
                return v.state == ArmyFormationState.March
            end
        end
    end
    return false
end

local function WearEquipment(self, carIndex, suitType, equipmentUid) 
    local marchFlag = self:IsMarching(carIndex)
    local selfCarIndex = DataCenter.EquipmentDataManager:GetEquipmentCarIndex(equipmentUid)
    local selfMarchFlag = false
    if selfCarIndex ~= nil then
        selfMarchFlag = self:IsMarching(selfCarIndex)
    end
    if marchFlag then
        UIUtil.ShowTips(Localization:GetString("270028", carIndex))
        return
    end
    if selfMarchFlag then
        UIUtil.ShowTips(Localization:GetString("270026", selfCarIndex, carIndex))
        return
    end
    if selfCarIndex ~= nil then
        if DataCenter.EquipmentDataManager:IsBuildingEquip(selfCarIndex) then
            local fromBuildId = DataCenter.EquipmentDataManager:GetBuildingIdByCarIndex(selfCarIndex)
            local toBuildId = DataCenter.EquipmentDataManager:GetBuildingIdByCarIndex(carIndex)
            if fromBuildId > 0 and toBuildId > 0 then
                local fromBuild = DataCenter.BuildManager:GetFunbuildByItemID(fromBuildId)
                local toBuild = DataCenter.BuildManager:GetFunbuildByItemID(toBuildId)
                if fromBuild ~= nil and toBuild ~= nil then
                    UIUtil.ShowTips(Localization:GetString("270040",
                            Localization:GetString(GetTableData(DataCenter.BuildTemplateManager:GetTableName(), fromBuildId + fromBuild.level,"name"))
                    , Localization:GetString(GetTableData(DataCenter.BuildTemplateManager:GetTableName(), toBuildId + toBuild.level,"name"))))
                end
            end
        else
            UIUtil.ShowTips(Localization:GetString("270025", selfCarIndex, carIndex))
        end
    end
    DataCenter.EquipmentDataManager:WearCarEquip(carIndex, suitType, equipmentUid)
    self:CloseSelf(true)
end

local function TakeOffEquipment(self, carIndex, suitType, equipmentUid, fromType)
    local marchFlag = self:IsMarching(carIndex)
    if marchFlag then
        UIUtil.ShowTips(Localization:GetString("270027", carIndex))
        return
    end
    DataCenter.EquipmentDataManager:TakeOffEquip(carIndex, suitType, equipmentUid)
    self:CloseSelf(fromType ~= EquipmentConst.EquipmentInfoViewType.EquipmentInfoViewType_Main_View and fromType ~= EquipmentConst.EquipmentInfoViewType.EquipmentInfoViewType_Bag)
end

UIEquipmentInfoCtrl.CloseSelf = CloseSelf
UIEquipmentInfoCtrl.GetPanelData = GetPanelData
UIEquipmentInfoCtrl.WearEquipment = WearEquipment
UIEquipmentInfoCtrl.TakeOffEquipment = TakeOffEquipment
UIEquipmentInfoCtrl.IsMarching = IsMarching

return UIEquipmentInfoCtrl