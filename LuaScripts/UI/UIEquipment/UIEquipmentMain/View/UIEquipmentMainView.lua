---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2023/2/27 15:54
---

local UIEquipmentMainView = BaseClass("UIEquipmentMainView", UIBaseView)
local base = UIBaseView
local UIEquipmentSlot = require "UI.UIEquipment.UIEquipmentMain.Component.UIEquipmentSlot"
local SuitEffect = require "UI.UIEquipment.UIEquipmentMain.Component.SuitEffect"
local EquipmainTabBtn = require "UI.UIEquipment.UIEquipmentMain.Component.EquipmainTabBtn"
local close_btn_path = "safeArea/Back"
local Localization = CS.GameEntry.Localization
local UIHeroTipView = require "UI.UIHero2.UIHeroTip.View.UIHeroTipView"

local toggle_pre_path = "safeArea/TabContent/Btn_"

local suit_effect_path = "safeArea/suit_effect"
local suit_effect_name_path = "safeArea/suit_effect/suit_effect_name"
local suit_effect_prefix_path = "safeArea/suit_effect/suit_effect_"

local equipments_type1_path = "safeArea/equipments/fight"
local equipments_type2_path = "safeArea/equipments/gather"

local fight_equipment_prefix_path = "safeArea/equipments/fight/UIEquipmentMainItem_1"
local gather_equipment_prefix_path = "safeArea/equipments/gather/UIEquipmentMainItem_2"

local tip_btn_path = "safeArea/Title/SubTitle/Common_btn_info"

local title_path = "safeArea/Title"
local sub_title_path = "safeArea/Title/SubTitle"

local gift_btn_path = "safeArea/GetMoreBtn"
local gift_btn_text_path = "safeArea/GetMoreBtn/GetMoreBtnText"

local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
    self:OnOpen()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function ComponentDefine(self)
    self.close_btn = self:AddComponent(UIButton, close_btn_path)
    self.close_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self.ctrl:CloseSelf()
    end)
    
    self.toggleBtns = {}
    for i = EquipmentConst.EquipmentSuitType.Equipment_Suit_Type_Fight, EquipmentConst.EquipmentSuitType.Equipment_Suit_Type_Defence do
        local pathStr = toggle_pre_path..i
        local btn = self:AddComponent(EquipmainTabBtn, pathStr)
        btn:SetData(self.tabButtonData[i])
        btn:SetActive(self.tabButtonData[i].show)
        table.insert(self.toggleBtns, btn)
    end

    self.equipments_type1 = self:AddComponent(UIBaseContainer, equipments_type1_path)
    self.equipments_type2 = self:AddComponent(UIBaseContainer, equipments_type2_path)
    
    self.fightEquipmentSlots = {}
    self.gatherEquipmentSlots = {}

    for i = EquipmentConst.Position.Equipment_Position_Cannon, EquipmentConst.Position.Equipment_Position_Energy_Core do
        local slot = self:AddComponent(UIEquipmentSlot, fight_equipment_prefix_path..i)
        table.insert(self.fightEquipmentSlots, slot)

        local slot1 = self:AddComponent(UIEquipmentSlot, gather_equipment_prefix_path..i)
        table.insert(self.gatherEquipmentSlots, slot1)
    end
    
    self.suit_effect = self:AddComponent(UIBaseContainer, suit_effect_path)
    self.suit_effect_name = self:AddComponent(UITextMeshProUGUIEx, suit_effect_name_path)

    self.suitAttr = {}
    for i = 1, EquipmentConst.MaxSuitAttr do
        local slot = self:AddComponent(SuitEffect, suit_effect_prefix_path..i)
        table.insert(self.suitAttr, slot)
    end

    self.tip_btn = self:AddComponent(UIButton, tip_btn_path)
    self.tip_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnClickTipBtn()
    end)

    self.title = self:AddComponent(UIText, title_path)
    self.title:SetLocalText(270000)
    self.sub_title = self:AddComponent(UIText, sub_title_path)

    self.gift_btn = self:AddComponent(UIButton, gift_btn_path)
    self.gift_btn_text = self:AddComponent(UITextMeshProUGUIEx, gift_btn_text_path)
    self.gift_btn_text:SetLocalText(129253)
    self.gift_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self.ctrl:ShowGiftPanel(self.curSelectType)
    end)
    self.gift_btn_img = self:AddComponent(UIImage, gift_btn_path)
end

local function ComponentDestroy(self)
    if self.delayTimer then
        self.delayTimer:Stop()
        self.delayTimer = nil
    end
end

local function DataDefine(self)
    self.curSelectType = -1
    local buildId, selectType = self:GetUserData()
    self.tabButtonData = self.ctrl:GetTabButtonData(buildId)
end

local function DataDestroy(self)
    self.curSelectType = -1
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.EquipDataUpdate, self.RefreshView)
    self:AddUIListener(EventId.EquipSuitDataUpdate, self.RefreshView)
    self:AddUIListener(EventId.OnPackageInfoUpdated, self.OnPackageInfoUpdatedHandler)
    self:AddUIListener(EventId.EquipmentToggleClick, self.OnToggleClick)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
    self:RemoveUIListener(EventId.EquipSuitDataUpdate, self.RefreshView)
    self:RemoveUIListener(EventId.EquipDataUpdate, self.RefreshView)
    self:RemoveUIListener(EventId.OnPackageInfoUpdated, self.OnPackageInfoUpdatedHandler)
    self:RemoveUIListener(EventId.EquipmentToggleClick, self.OnToggleClick)
end

local function RefreshView(self)
    self.data = self.ctrl:GetPanelData(self.carIndex, self.curSelectType)
    self:RefreshAttr()
    self:RefreshEquipments()
    self:RefreshGiftBtn()
    self:ResetTabRedPoint()
end

local function RefreshAttr(self)
    self.suit_effect:SetActive(self.data.suitIntro ~= nil)
    if self.data.suitIntro ~= nil then
        self.suit_effect_name:SetText(Localization:GetString(self.data.suitIntro.name)..Localization:GetString("270001"))
        for k, v in ipairs(self.suitAttr) do
            local para = self.data.suitIntro.attrList[k]
            v:SetActive(para ~= nil)
            if para then
                v:SetData(para)
            end
        end 
    end
end

local function RefreshEquipments(self)
    self.equipments_type1:SetActive(self.curSelectType == EquipmentConst.EquipmentSuitType.Equipment_Suit_Type_Fight)
    self.equipments_type2:SetActive(self.curSelectType ~= EquipmentConst.EquipmentSuitType.Equipment_Suit_Type_Fight)
    if self.curSelectType == EquipmentConst.EquipmentSuitType.Equipment_Suit_Type_Fight then
        for k, v in ipairs(self.fightEquipmentSlots) do
            v:SetData(self.data.equipments[k])
        end
        --elseif self.curSelectType == EquipmentConst.EquipmentSuitType.Equipment_Suit_Type_Gather then
    else
        for k, v in ipairs(self.gatherEquipmentSlots) do
            v:SetData(self.data.equipments[k])
        end
    end
end

local function OnOpen(self)
    local buildId, selectType = self:GetUserData()
    self.buildId = buildId
    self.carIndex = DataCenter.EquipmentDataManager:GetCarIndexByBuildingId(buildId)
    selectType = selectType or self:GetDefaultSelectType()
    local subTitle = self.ctrl:GetTitleStr(buildId)
    self.sub_title:SetText(subTitle)
    self:OnToggleClick(selectType)
end

local function GetDefaultSelectType(self)
    if self.buildId == BuildingTypes.FUN_BUILD_DEFENCE_CENTER_NEW then
        return EquipmentConst.EquipmentSuitType.Equipment_Suit_Type_Defence
    elseif self.buildId == BuildingTypes.WORM_HOLE_CROSS then
        return EquipmentConst.EquipmentSuitType.Equipment_Suit_Type_Defence
    end
    return EquipmentConst.EquipmentSuitType.Equipment_Suit_Type_Gather
end

local function OnClickTipBtn(self)
    local scaleFactor = UIManager:GetInstance():GetScaleFactor()
    local position = self.tip_btn.transform.position + Vector3.New(0, -30, 0) * scaleFactor

    local param = UIHeroTipView.Param.New()
    local str = self.ctrl:GetTipStr(self.buildId)
    param.content = str
    param.dir = UIHeroTipView.Direction.BELOW
    param.defWidth = 300
    param.pivot = 0.85
    param.position = position
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIHeroTip, { anim = false }, param)
end

local function RefreshGiftBtn(self)
    self.gift_btn:SetActive(self.data.giftData.showGift)
    if self.data.giftData.showGift then
        self.gift_btn_img:LoadSprite(self.data.giftData.giftIcon)
    end
end

local function OnPackageInfoUpdatedHandler(self)
    self.delayTimer = TimerManager:GetInstance():DelayInvoke(function()
        if self.delayTimer then
            self.delayTimer:Stop()
            self.delayTimer = nil
        end
        self:RefreshView()
    end, 0.3)
end

local function OnToggleClick(self, type)
    self.curSelectType = type
    for _, v in ipairs(self.toggleBtns) do
        v:SetSelect(self.curSelectType)
    end
    self:RefreshView()
end

local function ResetTabRedPoint(self)
    local redPoints = self.ctrl:GetTabRedPoint(self.carIndex, self.buildId)
    for _, v in ipairs(self.toggleBtns) do
        v:ShowRedPoint(redPoints[v:GetIndex()] == true)
    end
end

UIEquipmentMainView.ResetTabRedPoint = ResetTabRedPoint
UIEquipmentMainView.OnPackageInfoUpdatedHandler = OnPackageInfoUpdatedHandler
UIEquipmentMainView.OnOpen = OnOpen
UIEquipmentMainView.RefreshAttr= RefreshAttr
UIEquipmentMainView.RefreshEquipments = RefreshEquipments
UIEquipmentMainView.OnCreate = OnCreate
UIEquipmentMainView.OnDestroy = OnDestroy
UIEquipmentMainView.OnEnable = OnEnable
UIEquipmentMainView.OnDisable = OnDisable
UIEquipmentMainView.ComponentDefine = ComponentDefine
UIEquipmentMainView.ComponentDestroy = ComponentDestroy
UIEquipmentMainView.DataDefine = DataDefine
UIEquipmentMainView.DataDestroy = DataDestroy
UIEquipmentMainView.OnAddListener = OnAddListener
UIEquipmentMainView.OnRemoveListener = OnRemoveListener
UIEquipmentMainView.RefreshView = RefreshView
UIEquipmentMainView.OnClickTipBtn = OnClickTipBtn
UIEquipmentMainView.RefreshGiftBtn = RefreshGiftBtn
UIEquipmentMainView.GetDefaultSelectType = GetDefaultSelectType
UIEquipmentMainView.OnToggleClick = OnToggleClick

return UIEquipmentMainView