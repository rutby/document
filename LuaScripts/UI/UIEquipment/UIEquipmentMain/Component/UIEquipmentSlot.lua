---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2023/2/27 15:56
---


local UIEquipmentSlot = BaseClass("UIEquipmentSlot", UIBaseContainer)
local base = UIBaseContainer
local EquipmentCell = require "UI.UIEquipment.Common.EquipmentCell"

local add_btn_path = "Add"
local add_img_path = "Add/AddImage"
local equipment_path = "EquipmentCell"
local red_dot_path = "RedDotWithoutNum"
local up_path = "Up"
local select_path = "SelectIcon"
local empty_icon_path = "Add/EmptyIcon"
local effect_path = "PutOnEffect"

local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    self.add_btn = self:AddComponent(UIButton, add_btn_path)
    self.add_img = self:AddComponent(UIImage, add_img_path)
    self.equipment = self:AddComponent(EquipmentCell, equipment_path)
    self.red_dot = self:AddComponent(UIBaseContainer, red_dot_path)
    self.up = self:AddComponent(UIBaseContainer, up_path)
    self.add_btn:SetOnClick(function()
        self:OnAddClick()
    end)
    self.empty_icon = self:AddComponent(UIImage, empty_icon_path)
    self.select = self:AddComponent(UIImage, select_path)
    self.select:SetActive(false)
    --self.effect = self:AddComponent(UIBaseContainer, effect_path)
    --self.effect:SetActive(false)
end

local function ComponentDestroy(self)
    self:RemoveAddEffect()
end

local function DataDefine(self)

end

local function DataDestroy(self)

end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.EquipSelect, self.OnSelectEvent)
end

local function OnRemoveListener(self)
    self:AddUIListener(EventId.EquipSelect, self.OnSelectEvent)
    base.OnRemoveListener(self)
end

local function SetData(self, data)
    local showEffect = self.data ~= nil and data ~= nil and self.data.uuid == nil and data.uuid ~= nil 
    self.data = data
    self:RefreshView(showEffect)
end

local function OnClickCell(self)
    SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
    local para = {}
    para.equipmentUid = self.data.uuid
    para.equipmentId = self.data.equipmentId
    para.fromType = EquipmentConst.EquipmentInfoViewType.EquipmentInfoViewType_Main_View
    para.carIndex = self.data.carIndex
    para.type = self.data.type
    para.pos = self.data.pos
    local left, right = EquipmentUtil.EquipmentInfoPanelLeftOrRight(para.type, para.pos)
    para.isLeft = left
    para.isRight = right
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIEquipmentInfo, { anim = false, playEffect = false}, para)
    
    local param = {}
    param.type = self.data.type
    param.pos = self.data.pos
    EventManager:GetInstance():Broadcast(EventId.EquipSelect, param)
end

local function OnSelectEvent(self, para)
    self.selectData = para
    self:RefreshSelect()
end

local function RefreshSelect(self)
    self.select:SetActive(self.selectData and self.data and self.selectData.type == self.data.type and self.selectData.pos == self.data.pos)
end

local function RefreshView(self, showEffect)
    self.add_btn:SetActive(self.data.uuid == nil)
    self.equipment:SetActive(self.data.uuid ~= nil)
    self.red_dot:SetActive(self.data.showRedDot)
    self.up:SetActive(not self.data.showRedDot and self.data.showUpgrade)
    --self.effect:SetActive(showEffect == true)
    if self.data.uuid ~= nil then
        self.equipment:SetData(self.data, BindCallback(self, self.OnClickCell))
        self.add_img:SetActive(false)
    else
        self.add_img:SetActive(self.data.showAdd)
        if self.data.emptyIcon ~= nil then
            self.empty_icon:LoadSprite(self.data.emptyIcon)
        end
    end
    if self.data.showRedDot then
        self:ShowAddEffect()
    else
        self:RemoveAddEffect()
    end
end

local function OnAddClick(self)
    local para = {}
    para.carIndex = self.data.carIndex
    para.type = self.data.type
    para.pos = self.data.pos
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIEquipmentChoose, { anim = false, playEffect = false}, para)

    local param = {}
    param.type = self.data.type
    param.pos = self.data.pos
    EventManager:GetInstance():Broadcast(EventId.EquipSelect, param)
end

local function ShowAddEffect(self)
    self:RemoveAddEffect()
    local spr = self.add_img.unity_image
    if spr == nil then
        return
    end
    local fadeTime = 1.0

    local sequence = CS.DG.Tweening.DOTween.Sequence()
    sequence:Append(spr:DOFade(1, 0))
    sequence:Append(spr:DOFade(0.2, fadeTime))
    sequence:Append(spr:DOFade(1, fadeTime))
    sequence:SetLoops(-1)

    self.tweenSequence = sequence
end

local function RemoveAddEffect(self)
    if self.tweenSequence ~= nil then
        self.tweenSequence:Pause()
        self.tweenSequence:Kill()
        self.tweenSequence = nil
        self.add_img:SetAlpha(1)
    end
end

UIEquipmentSlot.ShowAddEffect = ShowAddEffect
UIEquipmentSlot.RemoveAddEffect = RemoveAddEffect
UIEquipmentSlot.OnAddClick = OnAddClick
UIEquipmentSlot.OnAddListener = OnAddListener
UIEquipmentSlot.OnRemoveListener = OnRemoveListener
UIEquipmentSlot.OnCreate= OnCreate
UIEquipmentSlot.OnDestroy = OnDestroy
UIEquipmentSlot.ComponentDefine = ComponentDefine
UIEquipmentSlot.ComponentDestroy = ComponentDestroy
UIEquipmentSlot.DataDefine = DataDefine
UIEquipmentSlot.DataDestroy = DataDestroy
UIEquipmentSlot.SetData = SetData
UIEquipmentSlot.RefreshView = RefreshView
UIEquipmentSlot.OnClickCell = OnClickCell
UIEquipmentSlot.OnSelectEvent = OnSelectEvent
UIEquipmentSlot.RefreshSelect = RefreshSelect

return UIEquipmentSlot