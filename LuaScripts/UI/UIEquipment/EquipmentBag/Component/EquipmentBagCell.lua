---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2023/2/28 15:42
---

local EquipmentBagCell = BaseClass('EquipmentBagCell', UIBaseContainer)
local base = UIBaseContainer
local EquipmentCell = require "UI.UIEquipment.Common.EquipmentCell_TextMeshPro"

local cell_path = "EquipmentCell"

local in_formation_path = "InFormation"
local formation_index_path = "InFormation/FormationIndex"
local lock_path = "lock"
local formation_text_path = "InFormation/FormationIndex/InFormationText"
local up_path = "Up"
local empty_path = "Empty"
local select_path = "SelectIcon"

local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    self.cell = self:AddComponent(EquipmentCell, cell_path)
    self.in_formation = self:AddComponent(UIBaseContainer, in_formation_path)
    self.formation_index = self:AddComponent(UIBaseContainer, formation_index_path)
    self.lock = self:AddComponent(UIBaseContainer, lock_path)
    self.formation_text = self:AddComponent(UITextMeshProUGUIEx, formation_text_path)
    self.up = self:AddComponent(UIBaseContainer, up_path)
    self.empty = self:AddComponent(UIBaseContainer, empty_path)
    self.select = self:AddComponent(UIImage, select_path)
    self.select:SetActive(false)
end

local function ComponentDestroy(self)

end

local function SetData(self, data)
    self.data = data
    if self.data then
        self.empty:SetActive(false)
        self.cell:SetActive(true)
        self.cell:SetData(self.data, BindCallback(self, self.OnClickCell))
        self.lock:SetActive(self.data.uuid == nil)
        self.in_formation:SetActive(self.data.carIndex ~= nil)
        self.formation_index:SetActive(self.data.carIndex ~= nil and EquipmentUtil.IsNormalCarIndex(self.data.carIndex))
        self.up:SetActive(self.data.uuid ~= nil and self.data.showUpgrade)
        if self.data.carIndex then
            self.formation_text:SetText(self.data.carIndex)
        end
    else
        self.empty:SetActive(true)
        self.cell:SetActive(false)
        self.lock:SetActive(false)
        self.in_formation:SetActive(false)
        self.up:SetActive(false)
    end
    self.select:SetActive(false)
end

local function OnClickCell(self)
    if self.data == nil then
        return
    end
    local para = {}
    para.equipmentUid = self.data.uuid
    para.equipmentId = self.data.equipmentId
    para.fromType = EquipmentConst.EquipmentInfoViewType.EquipmentInfoViewType_Bag
    para.carIndex = self.data.carIndex
    if self.data.index > 3 then
        para.isRight = true
        para.posX = self.transform.position.x - 100
    else
        para.isLeft = true
        para.posX = self.transform.position.x + 100
    end

    UIManager:GetInstance():OpenWindow(UIWindowNames.UIEquipmentInfo, { anim = false, playEffect = false}, para)
    self.select:SetActive(true)
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.EquipSelect, self.OnSelectEvent)
end

local function OnRemoveListener(self)
    self:AddUIListener(EventId.EquipSelect, self.OnSelectEvent)
    base.OnRemoveListener(self)
end

local function OnSelectEvent(self, para)
    self.select:SetActive(false)
end

EquipmentBagCell.OnCreate= OnCreate
EquipmentBagCell.OnDestroy = OnDestroy
EquipmentBagCell.ComponentDefine = ComponentDefine
EquipmentBagCell.ComponentDestroy = ComponentDestroy
EquipmentBagCell.SetData = SetData
EquipmentBagCell.OnClickCell = OnClickCell
EquipmentBagCell.OnAddListener = OnAddListener
EquipmentBagCell.OnRemoveListener = OnRemoveListener
EquipmentBagCell.OnSelectEvent = OnSelectEvent

return EquipmentBagCell