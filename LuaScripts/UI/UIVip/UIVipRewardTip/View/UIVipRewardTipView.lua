---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zzl
--- DateTime: 
---
local RewardItem = require "UI.UIVip.UIVipRewardTip.Component.RewardItem"
local UIVipRewardTipView = BaseClass("UIVipRewardTipView",UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization
local Screen = CS.UnityEngine.Screen
local tip_path = "Tips"
local tips_txt_path = "Tips/Anim/TipsTitle"
local right_path = "Tips/Anim/Img_Right"
local left_path = "Tips/Anim/Img_Left"
local content_path = "Tips/Anim/ScrollView/Viewport/Content"
local return_btn_path = "Panel"

local function OnCreate(self)
    base.OnCreate(self)
    local param,posX,posY,reward,cellW,pos = self:GetUserData()
    self.giftType = param
    self.posX = posX
    self.posY = posY
    self.reward = reward
    self.cellW = cellW or 0
    self.pos = pos or 0 
    self.tip_obj = self:AddComponent(UIBaseContainer,tip_path)
    self.tips_txt = self:AddComponent(UITextMeshProUGUIEx,tips_txt_path)
    --self.tips_txt:SetText(self.des)
    self.content = self:AddComponent(UIBaseContainer,content_path)
    self.return_btn = self:AddComponent(UIButton, return_btn_path)
    self.return_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)

    --self._right_img = self:AddComponent(UIImage,right_path)
    self._left_img = self:AddComponent(UIImage,left_path)
    --self.animator = self:AddComponent(UIAnimator, animator_path)
end

local function OnDestroy(self)
    self:SetAllCellDestroy()
    self.tip_obj =nil
    self.content = nil
    self.return_btn =nil
    self.tips_txt =nil
    self.giftType = nil
    self.posX = nil
    self.posY = nil
    self.activityType =nil
    --self._right_img = nil
    self._left_img = nil
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
    self:RefreshData()
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function RefreshData(self)
    local v3 = self.tip_obj.transform.position
    v3.x = self.posX
    v3.y = self.posY
    self.tip_obj.transform.position = v3
    local rectPos = self.tip_obj.rectTransform.anchoredPosition
    local rect = self.tip_obj.rectTransform.rect
    local scale = Screen.height/750
    local screenWidth = Screen.width/scale
    local halfScreenHeight = (750/2)
    --动画的时候会超出屏幕之外。框定范围的时候留一点距离
    halfScreenHeight = halfScreenHeight - 30
    local width = rect.width
    local halfHeight = (rect.height/2)
    --local x = rectPos.x - width/2 - self.cellW/2
    local x = rectPos.x
    local y = rectPos.y - self.cellW
    --if y + halfHeight>halfScreenHeight then
    --    y = halfScreenHeight-halfHeight
    --end
    --if y - halfHeight < -halfScreenHeight then
    --    y = halfHeight-halfScreenHeight
    --end
    local tempAnchoredPosition = Vector2.New(x,y)
    self.tip_obj.rectTransform.anchoredPosition = tempAnchoredPosition
    --self._right_img:SetActive(true)
    --self._right_img.transform.position = {x = --self._right_img.transform.position.x,y = self.pos.y}
    --self._left_img:SetActive(self.isleft)
    --if self.activityType == nil then
        --self.cost:SetActive(false)
    --    if self.isleft then
    --        local tempV = self._left_img.rectTransform.anchoredPosition
    --        tempV.y = rectPos.y - 110
    --        self._left_img.rectTransform.anchoredPosition = tempV
    --    else
    --        local tempV = --self._right_img.rectTransform.anchoredPosition
    --        tempV.y = rectPos.y - 110
    --        --self._right_img.rectTransform.anchoredPosition = tempV
    --    end
    --end

    self.tips_txt:SetText(self.giftType == 1 and Localization:GetString("320232") or Localization:GetString("320202"))
    self:SetAllCellDestroy()
    self.modelwelfare = {}
    local newList = self.ctrl:GetRewardListByType(self.giftType,self.reward)
    if newList ~= nil then
        for i = 1, table.length(newList) do
            --复制基础prefab，每次循环创建一次
            self.modelwelfare[newList[i]] = self:GameObjectInstantiateAsync(UIAssets.ActivityRewardTipCell, function(request)
                if request.isError then
                    return
                end
                local go = request.gameObject;
                go.gameObject:SetActive(true)
                go.transform:SetParent(self.content.transform)
                go.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
                go.name ="item" .. i
                local cell = self.content:AddComponent(RewardItem,go.name)
                cell:RefreshData(newList[i],self.giftType)
            end)
        end
    end
end

local function SetAllCellDestroy(self)
    self.content:RemoveComponents(RewardItem)
    if self.modelwelfare~=nil then
        for k,v in pairs(self.modelwelfare) do
            if v ~= nil then
                self:GameObjectDestroy(v)
            end
        end
    end
end

UIVipRewardTipView.OnCreate= OnCreate
UIVipRewardTipView.OnDestroy = OnDestroy
UIVipRewardTipView.RefreshData = RefreshData
UIVipRewardTipView.OnEnable= OnEnable
UIVipRewardTipView.OnDisable = OnDisable
UIVipRewardTipView.SetAllCellDestroy = SetAllCellDestroy
return UIVipRewardTipView