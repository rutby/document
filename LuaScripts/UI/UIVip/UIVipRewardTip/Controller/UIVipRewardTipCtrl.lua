---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zzl
--- DateTime: 
local UIVipRewardTipCtrl = BaseClass("UIVipRewardTipCtrl", UIBaseCtrl)
local Localization = CS.GameEntry.Localization
local function CloseSelf(self)
    UIManager:GetInstance():DestroyWindow(UIWindowNames.UIVipRewardTip,{anim = true})
end

local function Close(self)
    UIManager:GetInstance():DestroyWindowByLayer(UILayer.Normal)
end

local function GetRewardListByType(self,giftType,reward)
    local showList ={}
    if reward ~= nil then
        --每日免费
        if giftType == 1 then
            table.walk(reward, function(k,v)
                local oneData = {}
                if v.rewardType == RewardType.GOODS then
                    local goods = DataCenter.ItemTemplateManager:GetItemTemplate(v.itemId)
                    if goods ~= nil then
                        oneData.iconName = string.format(LoadPath.ItemPath,goods.icon)
                        oneData.itemColor = DataCenter.ItemTemplateManager:GetToolBgByColor(goods.color)
                        oneData.itemName = DataCenter.ItemTemplateManager:GetName(v.itemId)
                        if goods.type == 3 then
                            local type2 = goods.type2
                            if type2 ~= 999 and goods.para ~= nil and goods.para ~= "" then
                                local res_num = tonumber(goods.para)
                                oneData.itemFlag = string.GetFormattedStr(res_num)
                            end
                        end
                    end
                elseif v.rewardType == RewardType.OIL or v.rewardType == RewardType.METAL
                        or v.rewardType == RewardType.WATER
                        or v.rewardType == RewardType.MONEY or v.rewardType == RewardType.ELECTRICITY or v.rewardType == RewardType.WOOD then
                    oneData.iconName = DataCenter.RewardManager:GetPicByType(param.rewardType)
                    oneData.itemName = Localization:GetString(ResourceTypeTxt[param.rewardType])
                    oneData.itemColor = DataCenter.ItemTemplateManager:GetToolBgByColor(ItemColor.WHITE)
                end
                oneData.count = v.count
                table.insert(showList,oneData)
            end)
        elseif giftType == 2 then
            local info = GiftPackageData.get(tostring(reward))
            --联盟礼物
            local arrAlliance = info:getAllianceGift()
            if arrAlliance ~= nil and #arrAlliance > 0 then
                for k,v in ipairs(arrAlliance) do
                    local arr = string.split(v,";")
                    if #arr > 4 then
                        local param = {}
                        param.iconName = string.format(LoadPath.UIAllianceGift, arr[1])
                        param.itemName = Localization:GetString(arr[2])
                        param.itemDes = arr[3]
                        param.count = arr[4]
                        param.itemColor = DataCenter.ItemTemplateManager:GetToolBgByColor(tonumber(arr[5]))  
                        table.insert(showList,param)
                    end
                end
            end

            -- 英雄
            local heroStr = info:getHeroesStr()
            if (not string.IsNullOrEmpty(heroStr)) then
                local arr = string.split(heroStr, ";")
                if (#arr == 2) then
                    local param = {}
                    param.itemName = HeroUtils.GetHeroNameByConfigId(arr[1])
                    param.count = arr[2]
                    param.iconName = HeroUtils.GetHeroIconPath(arr[1], false)
                    local rarity = GetTableData(HeroUtils.GetHeroXmlName(), arr[1], "rarity")
                    if rarity ~= "" then
                        param.itemColor = HeroUtils.GetRarityIconPath(rarity, false)
                    end
                    table.insert(showList,param)
                end
            end

            -- 普通道具
            local str = info:getItemsStr()
            local _item_use = info:getItemUse()
            if _item_use ~= nil and _item_use ~= "" then
                str = _item_use .. "|" .. str
            end

            local arrMiddle = string.split(str,"|")
            if arrMiddle ~= nil and #arrMiddle > 0 then
                for k,v in ipairs(arrMiddle) do
                    local arr = string.split(v,";")
                    if arr[1] ~= "" then
                        local param = {}
                        param.itemId = arr[1]
                        local goods = DataCenter.ItemTemplateManager:GetItemTemplate(arr[1])
                        if goods ~= nil then
                            param.iconName = string.format(LoadPath.ItemPath,goods.icon)
                            param.itemColor = DataCenter.ItemTemplateManager:GetToolBgByColor(goods.color)
                            param.itemName = DataCenter.ItemTemplateManager:GetName(arr[1])
                            if goods.type == 3 then
                                local type2 = goods.type2
                                if type2 ~= 999 and goods.para ~= nil and goods.para ~= "" then
                                    local res_num = tonumber(goods.para)
                                    param.itemFlag = string.GetFormattedStr(res_num)
                                end
                            end
                        end
                        param.count = arr[2]
                        table.insert(showList,param)
                    end
                end
            end
            
        end
    end
    return showList
end


UIVipRewardTipCtrl.CloseSelf =CloseSelf
UIVipRewardTipCtrl.Close =Close
UIVipRewardTipCtrl.GetRewardListByType =GetRewardListByType

return UIVipRewardTipCtrl