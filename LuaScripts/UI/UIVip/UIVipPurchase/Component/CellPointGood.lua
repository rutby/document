---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zzl.
--- DateTime: 
---
local CellPointGood = BaseClass("CellPointGood", UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization

-- 创建
function CellPointGood:OnCreate()
    base.OnCreate(self)
    
    self._quality_img = self:AddComponent(UIImage,"Rect_item/clickBtn/ImgQuality")
    self._icon_img = self:AddComponent(UIImage,"Rect_item/clickBtn/ItemIcon")
    self._flag_txt = self:AddComponent(UITextMeshProUGUIEx,"Rect_item/clickBtn/FlagGo/FlagText")
    
    self._name_txt = self:AddComponent(UITextMeshProUGUIEx,"Rect_Desc/Name_Txt")
    self._desc_txt = self:AddComponent(UITextMeshProUGUIEx,"Rect_Desc/Desc_Txt")
    
    self._purchase_btn = self:AddComponent(UIButton,"Btn_Purchase")
    self._purchase_txt = self:AddComponent(UITextMeshProUGUIEx,"Btn_Purchase/GameObject/BuyBtnName")
    self._purchase_txt:SetLocalText(110001) 
    self._price_txt = self:AddComponent(UITextMeshProUGUIEx,"Btn_Purchase/GameObject/BuyBtnValue")
    
    self._use_btn = self:AddComponent(UIButton,"Btn_Use")
    self._use_txt = self:AddComponent(UITextMeshProUGUIEx,"Btn_Use/Txt_Use")
    self._use_txt:SetLocalText(110046) 
    
    self._count_txt = self:AddComponent(UITextMeshProUGUIEx,"Txt_Count")
    
    self._batchBuy_rect = self:AddComponent(UIImage,"Rect_BatchBuy")
    self._batchBuy_btn = self:AddComponent(UIButton,"Rect_BatchBuy/Btn_BatchBuy")
    self._batchBuy_txt = self:AddComponent(UITextMeshProUGUIEx,"Rect_BatchBuy/Btn_BatchBuy/Txt_BatchBuy")
    
    self._batchUse_rect = self:AddComponent(UIImage,"Rect_BatchUse")
    self._batchUse_btn = self:AddComponent(UIButton,"Rect_BatchUse/Btn_BatchUse")
    self._batchUse_txt = self:AddComponent(UITextMeshProUGUIEx,"Rect_BatchUse/Btn_BatchUse/Txt_BatchUse")
    self._batchUse_btn:SetOnClick(function()
        self:OnBatchUseClick()
    end)
    
    self._purchase_btn:SetOnClick(function()
       self:OnBuyClick(1)
    end)
    
    self._use_btn:SetOnClick(function()
        self:OnUseClick()
    end)
    
end

-- 销毁
function CellPointGood:OnDestroy()
    self._quality_img = nil
    self._icon_img = nil
    self._flag_txt = nil
    self._name_txt = nil
    self._desc_txt = nil
    self._purchase_btn = nil
    self._purchase_txt = nil
    self._price_txt = nil
    self._use_btn = nil
    self._use_txt = nil
    self._count_txt = nil
    self._batchBuy_rect = nil
    self._batchBuy_btn = nil
    self._batchBuy_txt = nil
    self._batchUse_rect = nil
    self._batchUse_btn = nil
    self._batchUse_txt = nil
    self.item = nil
    self.callBack = nil
    self.index = nil
    base.OnDestroy(self)
end

-- 显示
function CellPointGood:OnEnable()
    base.OnEnable(self)
end

-- 隐藏
function CellPointGood:OnDisable()
    base.OnDisable(self)
end

-- 全部刷新
function CellPointGood:RefreshData(id,callBack,index)
    self.id = tonumber(id)
    self.callBack = callBack
    self.index = index
    self._batchUse_rect:SetActive(false)
    self.item = DataCenter.ItemData:GetItemById(self.id)
    if self.item == nil then
        self._use_btn:SetActive(false)
        self._purchase_btn:SetActive(true)
        self._count_txt:SetActive(false)
    else
        self._use_btn:SetActive(true)
        self._purchase_btn:SetActive(false)
        self._count_txt:SetActive(true)
        self._count_txt:SetLocalText(GameDialogDefine.OWN, self.item.count) 
    end
    local good = DataCenter.ItemTemplateManager:GetItemTemplate(self.id)
    if good ~= nil then
        self._icon_img:LoadSprite(string.format(LoadPath.ItemPath,good.icon))
        self._quality_img:LoadSprite(DataCenter.ItemTemplateManager:GetToolBgByColor(good.color))
        self._flag_txt:SetText(good.para)
        self._name_txt:SetLocalText(good.name, good.para2) 
        self._desc_txt:SetLocalText(good.description) 
        self._price_txt:SetText(good.price)
        self.addPoint = good.para
    end
    self:RefreshBatchUseState()
end

function CellPointGood:UpdateNum(id)
    self.item = DataCenter.ItemData:GetItemById(id)
    if self.item == nil then
        self._use_btn:SetActive(false)
        self._purchase_btn:SetActive(true)
        self._count_txt:SetActive(false)
    else
        self._use_btn:SetActive(true)
        self._purchase_btn:SetActive(false)
        self._count_txt:SetActive(true)
        self._count_txt:SetLocalText(GameDialogDefine.OWN, self.item.count) 
    end
    self:RefreshBatchUseState()
end

function CellPointGood:RefreshBatchUseState()
    self.batchNum = 0
    if self.item and self.item.count > 1 then
        self._batchUse_rect:SetActive(true)
        self._batchUse_txt:SetText("X"..self.item.count)
        self.batchNum = self.item.count
    else
        self._batchUse_rect:SetActive(false)
    end
end

--获取升级到下一级所需该物品数量
function CellPointGood:GetNeedNum()
    if self.addPoint == 0 then
        return
    end                                                        
    local dis = DataCenter.VIPManager:GetNextVipData().point - DataCenter.VIPManager:GetVipData().score - self.addPoint
    local num = math.ceil(dis / self.addPoint) 
    return num
end

--购买并使用
function CellPointGood:OnBuyClick(count)
        --GameEntry.Event.Fire (this, EventId.LFVipItemUseOrBuy);
    local good = DataCenter.ItemTemplateManager:GetItemTemplate(self.id)
    UIUtil.ShowUseDiamondConfirm(TodayNoSecondConfirmType.BuyUseDialog,Localization:GetString(GameDialogDefine.SPEND_SOMETHING_BUY_SOMETHING,
            string.GetFormattedSeperatorNum(good.price),Localization:GetString(GameDialogDefine.DIAMOND),Localization:GetString(good.name, good.para2)),2, GameDialogDefine.CONFIRM, GameDialogDefine.CANCEL,
    function ()
        self.batchNum = 0
        self._use_btn:SetActive(false)
        SFSNetwork.SendMessage(MsgDefines.ItemBuyAndUse, { itemId = tostring(self.id),num = count })
    end)
    --self.batchNum = 0
    --self._use_btn:SetActive(false)
    --SFSNetwork.SendMessage(MsgDefines.ItemBuyAndUse, { itemId = tostring(self.id),num = count })
end

--直接使用
function CellPointGood:OnUseClick()
    self.batchNum = 0
    self._batchUse_rect:SetActive(false)
    self.callBack(self.index)
    self:ShowUseBatch()
    SFSNetwork.SendMessage(MsgDefines.ItemUse, { uuid = self.item.uuid,num = 1  })
end
--使用多个
function CellPointGood:OnBatchUseClick()
    self._batchUse_rect:SetActive(false)
	self.callBack(self.index)
    SFSNetwork.SendMessage(MsgDefines.ItemUse, { uuid = self.item.uuid,num = self.batchNum  })
end

function CellPointGood:OnBatchBuyClick()
    self._batchBuy_rect:SetActive(false)
    self:OnBuyClick(self.batchNum)
end

--GameEntry.Event.Fire (this, EventId.LFVipDataRefresh);
--UseCallBack
function CellPointGood:ShowUseBatch()
    if self.batchNum > 0 then
        self.batchNum = 0
        return
    end
    
    local needNum = self:GetNeedNum()
    if needNum > (self.item.count - 1) then
        needNum = (self.item.count - 1)
    else
        needNum = needNum - 1
    end
    
    self.batchNum = needNum

    if needNum < 1 then
        self._batchUse_rect:SetActive(false)
        return
    end

    self._batchUse_txt:SetText("X"..needNum)
    self._batchUse_rect:SetActive(true)
end

--BuyCallBack
function CellPointGood:ShowBuyBatch()
    if self.batchNum > 0 then
        self.batchNum = 0
        return
    end
    
    local needNum = self:GetNeedNum()
    if needNum > item.count then
        needNum = item.count
    end
    if needNum < 1 then
        self._batchBuy_rect:SetActive(false)
        return
    end

    self._batchBuy_txt:SetText("X"..needNum)
    self._batchBuy_rect:SetActive(false)
end

return CellPointGood