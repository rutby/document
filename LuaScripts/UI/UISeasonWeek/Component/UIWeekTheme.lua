---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2023/3/14 16:44
---

local UIWeekTheme = BaseClass("UIWeekTheme", UIBaseContainer)
local base = UIBaseContainer
local UIWeekThemeItem = require "UI.UISeasonWeek.Component.UIWeekThemeItem"
local UIWeekBuff = require "UI.UISeasonWeek.Component.UIWeekBuff"

local title_path = "Title"
local buff_path = "UIWeekBuff"
local scroll_view_path = "ScrollView"
local content_path = "ScrollView/Viewport/Content"

local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    self.title_text = self:AddComponent(UIText, title_path)
    self.buff = self:AddComponent(UIWeekBuff, buff_path)
    self.scroll_view = self:AddComponent(UIScrollView, scroll_view_path)
    self.scroll_view:SetOnItemMoveIn(function(itemObj, index)
        self:OnCreateCell(itemObj, index)
    end)
    self.scroll_view:SetOnItemMoveOut(function(itemObj, index)
        self:OnDeleteCell(itemObj, index)
    end)
    self.content_go = self:AddComponent(UIBaseContainer, content_path)
end

local function ComponentDestroy(self)
    self.title_text = nil
    self.buff = nil
    self.scroll_view = nil
    self.content_go = nil
end

local function DataDefine(self)
    self.template = nil
    self.dataList = {}
end

local function DataDestroy(self)
    self.template = nil
    self.dataList = nil
end

local function OnEnable(self)
    base.OnEnable(self)
    self:ReInit()
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.SeasonWeekUpdate, self.Refresh)
end

local function OnRemoveListener(self)
    self:RemoveUIListener(EventId.SeasonWeekUpdate, self.Refresh)
    base.OnRemoveListener(self)
end

local function OnCreateCell(self, itemObj, index)
    itemObj.name = tostring(index)
    local item = self.scroll_view:AddComponent(UIWeekThemeItem, itemObj)
    item:SetData(self.dataList[index])
end

local function OnDeleteCell(self, itemObj, index)
    self.scroll_view:RemoveComponent(itemObj.name, UIWeekThemeItem)
end

local function ShowScroll(self)
    local count = #self.dataList
    if count > 0 then
        self.scroll_view:SetTotalCount(count)
        self.scroll_view:RefillCells()
    end
    local rtf = self.content_go.rectTransform
    if count >= 3 then
        self.scroll_view:SetEnable(true)
        rtf.anchorMax = Vector2.New(0, 1)
        rtf.anchorMin = Vector2.New(0, 1)
        rtf.pivot = Vector2.New(0, 1)
        rtf.anchoredPosition = Vector2.New(0, 0)
    else
        self.scroll_view:SetEnable(false)
        rtf.anchorMax = Vector2.New(0, 0)
        rtf.anchorMin = Vector2.New(0, 0)
        rtf.pivot = Vector2.New(0, 0)
        rtf.anchoredPosition = Vector2.zero
    end
    rtf.sizeDelta = Vector2.New(328, 0)
end

local function ClearScroll(self)
    self.scroll_view:ClearCells()
    self.scroll_view:RemoveComponents(UIWeekThemeItem)
end

local function ReInit(self)
    self:Refresh()
end

local function Refresh(self)
    self.buff:Refresh()
    self.template = DataCenter.SeasonWeekManager:GetCurTemplate()
    if self.template then
        self.dataList = self:GetDataListInternal()
        self:ShowScroll()
    else
        self.dataList = {}
        self:ShowScroll()
    end
end

local function GetDataListInternal(self)
    local actList = DataCenter.ActivityListDataManager:GetNowActivityList()
    local dataList = {}
    for _, v in ipairs(self.template.activities) do
        if v.type == 1 then
            if actList[tostring(v.id)] then
                table.insert(dataList, v)
            end
        else
            table.insert(dataList, v)
        end
    end
    return dataList
end

UIWeekTheme.OnCreate= OnCreate
UIWeekTheme.OnDestroy = OnDestroy
UIWeekTheme.ComponentDefine = ComponentDefine
UIWeekTheme.ComponentDestroy = ComponentDestroy
UIWeekTheme.DataDefine = DataDefine
UIWeekTheme.DataDestroy = DataDestroy
UIWeekTheme.OnEnable = OnEnable
UIWeekTheme.OnDisable = OnDisable
UIWeekTheme.OnAddListener = OnAddListener
UIWeekTheme.OnRemoveListener = OnRemoveListener

UIWeekTheme.OnCreateCell = OnCreateCell
UIWeekTheme.OnDeleteCell = OnDeleteCell
UIWeekTheme.ShowScroll = ShowScroll
UIWeekTheme.ClearScroll = ClearScroll

UIWeekTheme.ReInit = ReInit
UIWeekTheme.Refresh = Refresh
UIWeekTheme.GetDataListInternal = GetDataListInternal

return UIWeekTheme