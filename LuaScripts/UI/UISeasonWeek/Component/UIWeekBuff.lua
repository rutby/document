---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2023/8/14 20:59
---

local UIWeekBuff = BaseClass("UIWeekBuff", UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization

local icon_path = "Icon"
local title_path = "Bg/Title"
local time_bg_path = "Bg/TimeBg"
local time_path = "Bg/TimeBg/Time"
local red_path = "Red"

local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    self.icon_btn = self:AddComponent(UIButton, icon_path)
    self.icon_btn:SetOnClick(function()
        self:OnClick()
    end)
    self.title_text = self:AddComponent(UIText, title_path)
    self.time_bg_go = self:AddComponent(UIBaseContainer, time_bg_path)
    self.time_text = self:AddComponent(UIText, time_path)
    self.red_go = self:AddComponent(UIBaseContainer, red_path)
end

local function ComponentDestroy(self)
    self.icon_btn = nil
    self.title_text = nil
    self.time_bg_go = nil
    self.time_text = nil
    self.red_go = nil
end

local function DataDefine(self)
    self.template = nil
    self.data = nil
    self.endTime = 0
    if self.timer == nil then
        self.timer = TimerManager:GetInstance():GetTimer(1, self.TimerAction, self, false, false, false)
        self.timer:Start()
    end
end

local function DataDestroy(self)
    self.template = nil
    self.data = nil
    self.endTime = nil
    if self.timer then
        self.timer:Stop()
        self.timer = nil
    end
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.SeasonWeekUpdate, self.Refresh)
end

local function OnRemoveListener(self)
    self:RemoveUIListener(EventId.SeasonWeekUpdate, self.Refresh)
    base.OnRemoveListener(self)
end

local function Refresh(self)
    self.template = DataCenter.SeasonWeekManager:GetCurTemplate()
    if self.template then
        self.data = DataCenter.SeasonWeekManager:GetData()
        self.title_text:SetLocalText(self.template.name)
        self.red_go:SetActive(self.data:CanReceive())
        if not string.IsNullOrEmpty(self.template.icon) then
            self:SetActive(true)
            self.icon_btn:LoadSprite(string.format(LoadPath.UIGlory, self.template.icon))
            if self.data:HasBuff() then
                self.endTime = self.template:GetEndTime()
                self.title_text:SetLocalText(305000)
                self.time_bg_go:SetActive(true)
                CS.UIGray.SetGray(self.icon_btn.transform, false, true)
            else
                self.endTime = 0
                self.title_text:SetText(Localization:GetString("305000") .. "\n" .. Localization:GetString("305003"))
                self.time_bg_go:SetActive(false)
                CS.UIGray.SetGray(self.icon_btn.transform, true, true)
            end
        else
            self:SetActive(false)
            self.endTime = 0
        end
        self:TimerAction()
        CS.UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(self.time_text.transform)
        CS.UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(self.time_text.transform.parent)
    else
        self.title_text:SetText("")
        self.red_go:SetActive(false)
        self:SetActive(false)
        self.endTime = 0
    end
end

local function TimerAction(self)
    local curTime = UITimeManager:GetInstance():GetServerTime()
    local restTime = toInt(self.endTime - curTime)
    if restTime >= 0 then
        self.time_text:SetText(UITimeManager:GetInstance():MilliSecondToFmtString(restTime))
    elseif restTime == -1 then
        self:Refresh()
    end
end

local function OnClick(self)
    UIManager:GetInstance():OpenWindow(UIWindowNames.UISeasonWeek)
end

UIWeekBuff.OnCreate= OnCreate
UIWeekBuff.OnDestroy = OnDestroy
UIWeekBuff.ComponentDefine = ComponentDefine
UIWeekBuff.ComponentDestroy = ComponentDestroy
UIWeekBuff.DataDefine = DataDefine
UIWeekBuff.DataDestroy = DataDestroy
UIWeekBuff.OnEnable = OnEnable
UIWeekBuff.OnDisable = OnDisable
UIWeekBuff.OnAddListener = OnAddListener
UIWeekBuff.OnRemoveListener = OnRemoveListener

UIWeekBuff.Refresh = Refresh
UIWeekBuff.TimerAction = TimerAction

UIWeekBuff.OnClick = OnClick


return UIWeekBuff