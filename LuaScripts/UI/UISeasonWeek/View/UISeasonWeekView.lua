---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2023/3/14 16:34
---

local UISeasonWeek = BaseClass("UISeasonWeek", UIBaseView)
local base = UIBaseView
local UICommonItemChange = require "UI.UICommonItem.UICommonItemChange"
local UIHeroTipView = require "UI.UIHero2.UIHeroTip.View.UIHeroTipView"
local Localization = CS.GameEntry.Localization

local return_path = "UICommonPanel"
local close_path = "SafeArea/Close"
local name_path = "SafeArea/Name"
local desc_path = "SafeArea/Desc"
local discount_path = "SafeArea/DiscountBg/Discount"
local box_path = "SafeArea/BoxBg/Box"
local stage_path = "SafeArea/BoxBg/Stage"
local stage_desc_path = "SafeArea/BoxBg/StageDesc"
local red_path = "SafeArea/BoxBg/Red"
local pic_path = "SafeArea/PicBg/Pic"
local intro_path = "SafeArea/PicBg/IntroBg/Intro"
local time_path = "SafeArea/PicBg/Time"
local right_desc_path = "SafeArea/RightDesc"
local scroll_view_path = "SafeArea/ScrollView"
local buy_btn_path = "SafeArea/Buy"
local buy_text_path = "SafeArea/Buy/BuyText"
local preview_path = "SafeArea/Preview"
local preview_close_path = "SafeArea/Preview/PreviewClose"
local preview_desc_path = "SafeArea/Preview/PreviewDesc"
local preview_scroll_view_path = "SafeArea/Preview/PreviewScrollView"

local Time1 = 432000000 -- 5天
local Time2 = 259200000 -- 3天

local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
    self:ReInit()
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function ComponentDefine(self)
    self.return_btn = self:AddComponent(UIButton, return_path)
    self.return_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)
    self.close_btn = self:AddComponent(UIButton, close_path)
    self.close_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)
    self.name_text = self:AddComponent(UIText, name_path)
    self.desc_text = self:AddComponent(UIText, desc_path)
    self.discount_text = self:AddComponent(UIText, discount_path)
    self.box_btn = self:AddComponent(UIButton, box_path)
    self.box_btn:SetOnClick(function()
        self:OnBoxClick()
    end)
    self.stage_text = self:AddComponent(UIText, stage_path)
    self.stage_desc_text = self:AddComponent(UIText, stage_desc_path)
    self.red_go = self:AddComponent(UIBaseContainer, red_path)
    self.pic_btn = self:AddComponent(UIButton, pic_path)
    self.pic_btn:SetOnClick(function()
        self:OnPicClick()
    end)
    self.intro_text = self:AddComponent(UIText, intro_path)
    self.time_text = self:AddComponent(UIText, time_path)
    self.right_desc_text = self:AddComponent(UIText, right_desc_path)
    self.scroll_view = self:AddComponent(UIScrollView, scroll_view_path)
    self.scroll_view:SetOnItemMoveIn(function(itemObj, index)
        self:OnCreateCell(itemObj, index)
    end)
    self.scroll_view:SetOnItemMoveOut(function(itemObj, index)
        self:OnDeleteCell(itemObj, index)
    end)
    self.buy_btn = self:AddComponent(UIButton, buy_btn_path)
    self.buy_btn:SetOnClick(function()
        self:OnBuyClick()
    end)
    self.buy_text = self:AddComponent(UIText, buy_text_path)
    self.preview_anim = self:AddComponent(UIAnimator, preview_path)
    self.preview_close_btn = self:AddComponent(UIButton, preview_close_path)
    self.preview_close_btn:SetOnClick(function()
        self:OnPreviewCloseClick()
    end)
    self.preview_desc_text = self:AddComponent(UIText, preview_desc_path)
    self.preview_scroll_view = self:AddComponent(UIScrollView, preview_scroll_view_path)
    self.preview_scroll_view:SetOnItemMoveIn(function(itemObj, index)
        self:OnPreviewCreateCell(itemObj, index)
    end)
    self.preview_scroll_view:SetOnItemMoveOut(function(itemObj, index)
        self:OnPreviewDeleteCell(itemObj, index)
    end)
end

local function ComponentDestroy(self)
    self.return_btn = nil
    self.close_btn = nil
    self.name_text = nil
    self.desc_text = nil
    self.discount_text = nil
    self.box_btn = nil
    self.stage_text = nil
    self.stage_desc_text = nil
    self.red_go = nil
    self.pic_btn = nil
    self.intro_text = nil
    self.time_text = nil
    self.right_desc_text = nil
    self.scroll_view = nil
    self.buy_btn = nil
    self.buy_text = nil
    self.preview_anim = nil
    self.preview_close_btn = nil
    self.preview_desc_text = nil
    self.preview_scroll_view = nil
end

local function DataDefine(self)
    self.template = nil
    self.data = nil
    self.pack = nil
    self.endTime = 0
    self.rewardList = {}
    self.previewRewardList = {}
    if self.timer == nil then
        self.timer = TimerManager:GetInstance():GetTimer(1, self.TimerAction, self, false, false, false)
        self.timer:Start()
    end
end

local function DataDestroy(self)
    self.template = nil
    self.data = nil
    self.pack = nil
    self.endTime = nil
    self.rewardList = nil
    self.previewRewardList = nil
    if self.timer then
        self.timer:Stop()
        self.timer = nil
    end
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.SeasonWeekUpdate, self.OnSeasonWeekUpdate)
end

local function OnRemoveListener(self)
    self:RemoveUIListener(EventId.SeasonWeekUpdate, self.OnSeasonWeekUpdate)
    base.OnRemoveListener(self)
end

local function OnCreateCell(self, itemObj, index)
    itemObj.name = tostring(index)
    local item = self.scroll_view:AddComponent(UICommonItemChange, itemObj)
    item:ReInit(self.rewardList[index])
end

local function OnDeleteCell(self, itemObj, index)
    self.scroll_view:RemoveComponent(itemObj.name, UICommonItemChange)
end

local function ShowScroll(self)
    self.scroll_view:SetTotalCount(#self.rewardList)
    self.scroll_view:RefillCells()
end

local function OnPreviewCreateCell(self, itemObj, index)
    itemObj.name = tostring(index)
    local item = self.preview_scroll_view:AddComponent(UICommonItemChange, itemObj)
    item:ReInit(self.previewRewardList[index])
end

local function OnPreviewDeleteCell(self, itemObj, index)
    self.preview_scroll_view:RemoveComponent(itemObj.name, UICommonItemChange)
end

local function ShowPreviewScroll(self)
    self.preview_scroll_view:SetTotalCount(#self.previewRewardList)
    self.preview_scroll_view:RefillCells()
end

local function ReInit(self)
    self.template = DataCenter.SeasonWeekManager:GetCurTemplate()
    self.data = DataCenter.SeasonWeekManager:GetData()
    self.pack = GiftPackManager.get(self.template.packId)
    self.endTime = self.template:GetEndTime()
    
    self.name_text:SetText(self.pack:getNameText())
    self.desc_text:SetText(self.pack:getDescText())
    self.discount_text:SetText(self.pack:getPercent() .. "%")
    self.stage_text:SetText(#self.data.buffRecords .. "/" .. self.data.needNum)
    self.stage_desc_text:SetLocalText(305002, self.data.needNum)
    self.red_go:SetActive(self.data:CanReceive())
    self.pic_btn:LoadSprite(string.format(LoadPath.UIGlory, self.template.icon))
    self.intro_text:SetLocalText(table.unpack(self.template.show.title))
    self.right_desc_text:SetLocalText(320570)
    self.preview_desc_text:SetLocalText(305002, self.data.needNum)
    self.preview_anim:SetActive(false)
    
    if self.data.rewardStatus == 0 then
        self.box_btn:LoadSprite("Assets/Main/Sprites/UI/UIActivitySummary/UIActivitySummaryPreview_icon_box1")
    else
        self.box_btn:LoadSprite("Assets/Main/Sprites/UI/UIActivitySummary/UIActivitySummaryPreview_icon_box1h")
    end
    
    if self.data:HasBuff() then
        self.buy_btn:SetActive(false)
    else
        self.buy_text:SetText(DataCenter.PayManager:GetDollarText(self.pack:getPrice(), self.pack:getProductID()))
        self.buy_btn:SetActive(true)
    end

    self.rewardList = DataCenter.RewardManager:ParsePackReward(self.pack)
    self:ShowScroll()
    self.previewRewardList = DataCenter.RewardManager:ReturnRewardParamForView(self.data.reward) or {}
    self:ShowPreviewScroll()
    self:TimerAction()
end

local function TimerAction(self)
    local curTime = UITimeManager:GetInstance():GetServerTime()
    local restTime = math.floor(self.endTime - curTime)
    if restTime >= 0 then
        local restTimeStr = UITimeManager:GetInstance():MilliSecondToFmtString(restTime)
        self.time_text:SetText(restTimeStr)
        local color
        if restTime >= Time1 then -- 5天
            color = Color.New(0.58, 0.88, 0.22, 1)
        elseif restTime >= Time2 then -- 3天
            color = Color.New(1.00, 0.92, 0.26, 1)
        else
            color = Color.New(0.95, 0.42, 0.40, 1)
        end
        self.time_text:SetColor(color)
    elseif restTime == -1 then
        self:ReInit()
    end
end

local function OnPicClick(self)
    local param = UIHeroTipView.Param.New()
    param.content = Localization:GetString(table.unpack(self.template.show.desc))
    param.dir = UIHeroTipView.Direction.RIGHT
    param.defWidth = 300
    param.pivot = 0.5
    param.position = self.pic_btn.transform.position + Vector3.New(120, 0, 0)
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIHeroTip, { anim = false }, param)
end

local function OnBuyClick(self)
    local curTime = UITimeManager:GetInstance():GetServerTime()
    local restTime = self.endTime - curTime
    if restTime >= Time2 then
        DataCenter.PayManager:BuyGift(self.pack)
    else
        local param =
        {
            title = Localization:GetString("100378"),
            topDesc = Localization:GetString("305008", UITimeManager:GetInstance():MilliSecondToFmtString(restTime)),
            bottomDesc = Localization:GetString("305009"),
            onConfirm = function()
                DataCenter.PayManager:BuyGift(self.pack)
            end,
            timerAction = function(view)
                local tCurTime = UITimeManager:GetInstance():GetServerTime()
                local tRestTime = self.endTime - tCurTime
                view.top_desc_text:SetLocalText(305008, UITimeManager:GetInstance():MilliSecondToFmtString(tRestTime))
            end,
        }
        UIUtil.ShowUseItemTip(param)
    end
end

local function OnBoxClick(self)
    if self.data:CanReceive() then
        DataCenter.SeasonWeekManager:SendReceiveReward()
    else
        self.preview_anim:SetActive(true)
        self.preview_anim:Play("CommonPopup_movein", 0, 0)
    end
end

local function OnPreviewCloseClick(self)
    self.preview_anim:SetActive(false)
end

local function OnSeasonWeekUpdate(self)
    self:ReInit()
end

UISeasonWeek.OnCreate = OnCreate
UISeasonWeek.OnDestroy = OnDestroy
UISeasonWeek.OnEnable = OnEnable
UISeasonWeek.OnDisable = OnDisable
UISeasonWeek.ComponentDefine = ComponentDefine
UISeasonWeek.ComponentDestroy = ComponentDestroy
UISeasonWeek.DataDefine = DataDefine
UISeasonWeek.DataDestroy = DataDestroy
UISeasonWeek.OnAddListener = OnAddListener
UISeasonWeek.OnRemoveListener = OnRemoveListener

UISeasonWeek.OnCreateCell = OnCreateCell
UISeasonWeek.OnDeleteCell = OnDeleteCell
UISeasonWeek.ShowScroll = ShowScroll
UISeasonWeek.OnPreviewCreateCell = OnPreviewCreateCell
UISeasonWeek.OnPreviewDeleteCell = OnPreviewDeleteCell
UISeasonWeek.ShowPreviewScroll = ShowPreviewScroll

UISeasonWeek.ReInit = ReInit
UISeasonWeek.TimerAction = TimerAction
UISeasonWeek.OnPicClick = OnPicClick
UISeasonWeek.OnBuyClick = OnBuyClick
UISeasonWeek.OnBoxClick = OnBoxClick
UISeasonWeek.OnPreviewCloseClick = OnPreviewCloseClick

UISeasonWeek.OnSeasonWeekUpdate = OnSeasonWeekUpdate

return UISeasonWeek