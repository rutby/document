---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2023/2/8 20:47
---
---

local UIDecorationGiftView = BaseClass("UIDecorationGiftView", UIBaseView)
local base = UIBaseView

local close_path = "Close"
local back_path = "Back"
local goto_btn_path = "GotoBtn"
local goto_btn_text_path = "GotoBtn/GotoBtnText"
local title_text_path = "TitleText"
local time_text_path = "TimeText"

local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
    self:ReInit()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function ComponentDefine(self)
    self.close_btn = self:AddComponent(UIButton, close_path)
    self.close_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self.ctrl:CloseSelf()
    end)
    self.back_btn = self:AddComponent(UIButton, back_path)
    self.back_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self.ctrl:CloseSelf()
    end)

    self.goto_btn = self:AddComponent(UIButton, goto_btn_path)
    self.goto_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnGotoClick()
    end)

    self.goto_btn_text = self:AddComponent(UIText, goto_btn_text_path)
    self.goto_btn_text:SetLocalText(110088)
    
    self.title_text = self:AddComponent(UIText, title_text_path)
    self.title_text:SetLocalText(320764)

    self.time_text = self:AddComponent(UIText, time_text_path)
end

local function ComponentDestroy(self)
    self.close_btn = nil
    self.back_btn = nil
    self.goto_btn = nil
    self.goto_btn_text = nil
    self.title_text = nil
    self.time_text = nil
end

local function DataDefine(self)
    self.activityData = DataCenter.ActivityListDataManager:GetActivityDataById(self:GetUserData())
end

local function DataDestroy(self)

end

local function OnAddListener(self)
    base.OnAddListener(self)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
end

local function Update(self)
    if self.time_text == nil or self.activityData == nil then
        return
    end
    local now = UITimeManager:GetInstance():GetServerTime()
    local leftTime = self.activityData.endTime - now
    if leftTime <= 0 then
        self.ctrl:CloseSelf()
        return
    end
    local leftTimeStr = UITimeManager:GetInstance():MilliSecondToFmtString(leftTime)
    self.time_text:SetText(leftTimeStr)
end

local function OnGotoClick(self)
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIActivityCenterTable, { anim = true, hideTop = true, UIMainAnim = UIMainAnimType.AllHide }, tonumber(self.activityData.id), true)
    self.ctrl:CloseSelf()
end

local function ReInit(self)
    self:Update()
end

UIDecorationGiftView.OnCreate = OnCreate
UIDecorationGiftView.OnDestroy = OnDestroy
UIDecorationGiftView.OnEnable = OnEnable
UIDecorationGiftView.OnDisable = OnDisable
UIDecorationGiftView.ComponentDefine = ComponentDefine
UIDecorationGiftView.ComponentDestroy = ComponentDestroy
UIDecorationGiftView.DataDefine = DataDefine
UIDecorationGiftView.DataDestroy = DataDestroy
UIDecorationGiftView.OnAddListener = OnAddListener
UIDecorationGiftView.OnRemoveListener = OnRemoveListener
UIDecorationGiftView.Update = Update
UIDecorationGiftView.OnGotoClick = OnGotoClick
UIDecorationGiftView.ReInit = ReInit

return UIDecorationGiftView