---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by wsf.
--- DateTime: 2024/1/23 5:23 PM
---

---@class TacticalWeaponSkillItem
local TacticalWeaponSkillItem = BaseClass("TacticalWeaponSkillItem", UIBaseContainer)
local base = UIBaseContainer
local UIHeroSkillItem = require("UI.UILWHero.UIHeroDetailPanel.Component.UIHeroSkillItem")

function TacticalWeaponSkillItem:OnCreate()
    base.OnCreate(self)
    self:ComponentDefine()
end

function TacticalWeaponSkillItem:OnDestroy()
    if not IsNull(self.timer) then
        self.timer:Stop()
        self.timer = nil
    end

    if not IsNull(self.enterTween) then
        self.enterTween:Kill()
        self.enterTween = nil
    end

    if not IsNull(self.tween) then
        self.tween:Kill()
        self.tween = nil
    end

    if not IsNull(self.endTween) then
        self.endTween:Kill()
        self.endTween = nil
    end
    
    self:ComponentDestroy()
    base.OnDestroy(self)
end

function TacticalWeaponSkillItem:ComponentDefine()
    
    self.UIHeroSkillItem = self:AddComponent(UIHeroSkillItem, "UIHeroSkillItem")
    
    self.finish = false
    
    self.state = 1 -- 1 wait; 2 enter; 3 enterFinish
end

function TacticalWeaponSkillItem:ComponentDestroy()
    self.UIHeroSkillItem = nil
end

function TacticalWeaponSkillItem:IsEnterFinish()
    return self.state == 3
end

function TacticalWeaponSkillItem:SetData(skill)

    if self.finish then
        return
    end
    
    self.UIHeroSkillItem:SetData(skill, {showSkillName=false,showSkillLevel=true,showLock=false,showRedPoint=false,showStar=true})
    
    self.UIHeroSkillItem.rectTransform:Set_anchoredPosition(-300, 0)
    
    self.state = 1
    --self:Enter()
end

function TacticalWeaponSkillItem:Enter()
    if not IsNull(self.enterTween) then
        self.enterTween:Kill()
        self.enterTween = nil
    end

    self.state = 2
    self.enterTween = self.UIHeroSkillItem.rectTransform:DOAnchorPosX(0, 0.3):OnComplete(function()
        self.enterTween = nil
        self:EnterFinish()
    end)

    self.timer = TimerManager:GetInstance():DelayInvoke(function()
        self.timer = nil
        self:End()
    end, 2.3)
    
end

function TacticalWeaponSkillItem:EnterFinish()
    self.state = 3

    if self.holder and self.holder.OnSkillEnterFinish then
        self.holder:OnSkillEnterFinish(self)
    end
end

function TacticalWeaponSkillItem:End()

    if self.finish then
        return
    end
    
    self.finish = true
    
    if not IsNull(self.endTween) then
        self.endTween:Kill()
        self.endTween = nil
    end
    
    self.endTween = self.UIHeroSkillItem.rectTransform:DOAnchorPosX(-300, 0.3):OnComplete(function() 
        self.endTween = nil
        self:OnEnd()
    end)
end

function TacticalWeaponSkillItem:OnEnd()

    if self.holder and self.holder.OnSkillItemEnd then
        self.holder:OnSkillItemEnd(self)
    end
    
end

function TacticalWeaponSkillItem:MoveUp(value)
    --local x, y = self.rectTransform:Get_anchoredPosition()
    --
    --self.rectTransform:Set_anchoredPosition(x, y + value)
    if self.finish then
        return
    end

    if not IsNull(self.tween) then
        self.tween:Kill()
        self.tween = nil
    end
    
    self.tween = self.rectTransform:DOAnchorPosY(value, 0.3):OnComplete(function() 
        self.tween = nil
    end)
end

return TacticalWeaponSkillItem