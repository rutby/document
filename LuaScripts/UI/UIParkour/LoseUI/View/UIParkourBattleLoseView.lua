---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by w.
--- DateTime: 2022/11/30 13:00
---

local UIParkourBattleLose = BaseClass("UIParkourBattleLose", UIBaseView)
local base = UIBaseView

local UIStatisticList = require "UI.UIParkour.WinUI.Component.UIParkourBattleStatisticHeroList"
--local UIGrowthList = require "UI.UIParkour.LoseUI.Component.UIParkourBattleResultGrowthList"
local UIPVEPowerLackScrollView = require "UI.UIPVE.UIPVEPowerLack.Component.UIPVEPowerLackScrollView"

function UIParkourBattleLose:OnCreate()
    base.OnCreate(self)
    self:ComponentDefine()
end

function UIParkourBattleLose:ComponentDefine()
    self.canvasGroup = self.transform:Find("Root"):GetComponent(typeof(CS.UnityEngine.CanvasGroup))
    self.canvasGroup.alpha = 0
    self.tryAgainBtn = self:AddComponent(UIButton, "Root/btnLayout/TryAgainBtn")
    self.tryAgainBtn:SetOnClick(function()
        self:OnTryAgainBtnClick()
    end)
    self.tryAgainBtnText = self:AddComponent(UITextMeshProUGUIEx,"Root/btnLayout/TryAgainBtn/TryAgainBtnText")
    self.tryAgainBtnText:SetLocalText(134021)
    self.backBtn = self:AddComponent(UIButton, "Root/btnLayout/BackBtn")
    self.backBtn:SetOnClick(function()
        self:OnBackBtnClick()
    end)
    self.backBtnText = self:AddComponent(UITextMeshProUGUIEx,"Root/btnLayout/BackBtn/BackBtnText")
    self.backBtnText:SetLocalText(321384)
    self.defeatText = self:AddComponent(UITextMeshProUGUIEx,"Root/Top/BattleDefeatPanel_ani/DefeatGo/DefeatText")
    self.defeatText:SetLocalText(311106)

    ------伤害统计及跳转----
    self.tabRoot = self:AddComponent(UIBaseContainer, "Root/Bg/Tabs")
    self.tabBtns =
    {
        self:AddComponent(UIButton, "Root/Bg/Tabs/GuideBtn"),
        self:AddComponent(UIButton, "Root/Bg/Tabs/MakeBtn"),
        self:AddComponent(UIButton, "Root/Bg/Tabs/TakeBtn"),
    }
    for i, tabBtn in ipairs(self.tabBtns) do
        local idx = i
        tabBtn:SetOnClick(function()
            self:OnTabBtnClick(idx)
        end)
    end

    self.tabComps =
    {
        --self:AddComponent(UIGrowthList, "Root/GrowGuideScroll", self.ctrl),
        self:AddComponent(UIPVEPowerLackScrollView, "Root/UIPVEPowerLackScrollView"),
        self:AddComponent(UIStatisticList, "Root/MakeDmgScroll", "makeDmg"),
        self:AddComponent(UIStatisticList, "Root/TakeDmgScroll", "takeDmg"),
    }
    self.tabIdx = 1

    self.highlightMask = self:AddComponent(UIBaseContainer, "Root/Bg/Tabs/Highlight/Mask")
    self.highlightInner = self:AddComponent(UIBaseContainer, "Root/Bg/Tabs/Highlight/Mask/Inner")
    self.highlightMask:SetAnchoredPositionXY(109, -1)
    self.highlightInner:SetAnchoredPositionXY(0, 0)

    self.guideBtnText = self:AddComponent(UITextMeshProUGUIEx, "Root/Bg/Tabs/GuideBtn/GuideBtnText")
    self.guideBtnText:SetLocalText(321389)
    self.guideBtnHighText = self:AddComponent(UITextMeshProUGUIEx, "Root/Bg/Tabs/Highlight/Mask/Inner/GuideBtnHigh/GuideBtnHighText")
    self.guideBtnHighText:SetLocalText(321389)
    self.makeBtnText = self:AddComponent(UITextMeshProUGUIEx, "Root/Bg/Tabs/MakeBtn/MakeBtnText")
    self.makeBtnText:SetLocalText(321430)
    self.makeBtnHighText = self:AddComponent(UITextMeshProUGUIEx, "Root/Bg/Tabs/Highlight/Mask/Inner/MakeBtnHigh/MakeBtnHighText")
    self.makeBtnHighText:SetLocalText(321430)
    self.takeBtnText = self:AddComponent(UITextMeshProUGUIEx, "Root/Bg/Tabs/TakeBtn/TakeBtnText")
    self.takeBtnText:SetLocalText(321431)
    self.takeBtnHighText = self:AddComponent(UITextMeshProUGUIEx, "Root/Bg/Tabs/Highlight/Mask/Inner/TakeBtnHigh/TakeBtnHighText")
    self.takeBtnHighText:SetLocalText(321431)
end

function UIParkourBattleLose:OnEnable()
    base.OnEnable(self)
    DataCenter.LWSoundManager:PlaySound(10023)
    self.active = true
    self:ReInit()
end

function UIParkourBattleLose:OnDisable()
    base.OnDisable(self)
    self.active = false
end

function UIParkourBattleLose:OnAddListener()
    base.OnAddListener(self)
    self:AddUIListener(EventId.OnKeyCodeEscape, self.OnKeyCodeEscape)
end

function UIParkourBattleLose:OnRemoveListener()
    self:RemoveUIListener(EventId.OnKeyCodeEscape, self.OnKeyCodeEscape)
    base.OnRemoveListener(self)
end

function UIParkourBattleLose:ReInit()
    TimerManager:GetInstance():DelayInvoke(function()
        if self.active then
            self.canvasGroup:DOFade(1, 0.2)
            self:ShowStatisticalData()
            DataCenter.GuideManager:CheckDoTriggerGuide(GuideTriggerType.ParkourBattleResultFail, SaveGuideDoneValue)
            DataCenter.GuideManager:CheckDoTriggerGuide(GuideTriggerType.ParkourBattleInLevelResultFail, tostring(DataCenter.LWBattleManager:GetLevelId()))
        end
    end, 1)
end

function UIParkourBattleLose:ShowStatisticalData()
    for i, tabComp in ipairs(self.tabComps) do
        if i == self.tabIdx then
            tabComp:SetActive(true)
            tabComp:RefreshView()
            tabComp:FadeIn()
        else
            tabComp:SetActive(false)
        end
    end
end

function UIParkourBattleLose:OnTabBtnClick(idx)
    if self.tabIdx == idx then
        return
    end

    self.tabIdx = idx
    self:ShowStatisticalData()

    if not IsNull(self.tabTween) then
        self.tabTween:Kill()
        self.tabTween = nil
    end
    self.tabTween = DOTween.To(function()
        return self.highlightMask:GetAnchoredPositionX()
    end, function(value)
        self.highlightMask:SetAnchoredPositionXY(value, -1)
        self.highlightInner:SetAnchoredPositionXY(-value+109, 0)
    end, (self.tabIdx - 1) * 220+109, 0.5):SetEase(CS.DG.Tweening.Ease.OutQuint)
end

function UIParkourBattleLose:OnBackBtnClick()
    self.ctrl:CloseSelf()
    DataCenter.LWBattleManager:Exit()
end

function UIParkourBattleLose:OnTryAgainBtnClick()
    self.ctrl:CloseSelf()
    DataCenter.LWBattleManager:Restart()
end

function UIParkourBattleLose:OnKeyCodeEscape()
    TimerManager:GetInstance():DelayFrameInvoke(function()
        self:OnBackBtnClick()
    end, 1)
end

return UIParkourBattleLose
