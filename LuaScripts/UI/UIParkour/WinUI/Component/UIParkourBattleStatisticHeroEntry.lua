---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by wsf.
--- DateTime: 2024/1/2 5:03 PM
---

local UIParkourBattleStatisticHeroEntry = BaseClass("UIParkourBattleStatisticHeroEntry", UIBaseContainer)
local base = UIBaseContainer

local UIHeroCellSmall = require "UI.UIHero2.Common.UIHeroCellSmall"

-- 创建
function UIParkourBattleStatisticHeroEntry:OnCreate()
    base.OnCreate(self)
    self:ComponentDefine()
end

-- 销毁
function UIParkourBattleStatisticHeroEntry:OnDestroy()
    self:ComponentDestroy()
    base.OnDestroy(self)
end

-- 显示
function UIParkourBattleStatisticHeroEntry:OnEnable()
    base.OnEnable(self)
    self.active = true
end

-- 隐藏
function UIParkourBattleStatisticHeroEntry:OnDisable()
    base.OnDisable(self)
    self.active = false
end

function UIParkourBattleStatisticHeroEntry:ComponentDefine()
    self.txtName = self:AddComponent(UITextMeshProUGUIEx, "HeroName")
    self.txtDmg = self:AddComponent(UITextMeshProUGUIEx, "DmgTxt")
    self.barBg = self:AddComponent(UIBaseContainer, "ProgressBar")
    self.barInner = self:AddComponent(UIBaseContainer, "ProgressBar/Inner")
    self.heroCell = self:AddComponent(UIHeroCellSmall, "UIHeroCellSmall")
    self.heroDeath = self:AddComponent(UIBaseContainer, "deathState")
end

function UIParkourBattleStatisticHeroEntry:ComponentDestroy()
    if not IsNull(self.tween) then
        self.tween:Kill()
        self.tween = nil
    end
end

---@param heroData HeroInfo
function UIParkourBattleStatisticHeroEntry:RefreshView(heroData, value, maxValue, heroDeath)
    if not IsNull(self.tween) then
        self.tween:Kill()
        self.tween = nil
    end

    if heroData.fromTemplate then
        self.heroCell:InitWithConfigId(heroData.heroId, nil, heroData.level, heroData:GetRank())
    else
        self.heroCell:SetData(heroData.uuid)
    end
    
    self.txtName:SetLocalText(heroData.meta.name)
    self.txtDmg:SetText(0)
    local barSize = self.barBg:GetSizeDelta()
    self.barInner:SetSizeDelta(Vector2(0, barSize.y))

    self.progress = 0
    local percent = value / maxValue
    self.tween = DOTween.To(function()
        return self.progress
    end, function(p)
        self.progress = value
        local pValue = value * p
        self.txtDmg:SetText(string.GetFormattedStr(pValue))
        self.barInner:SetSizeDelta(Vector2(p * percent * barSize.x-6, barSize.y-6))
    end, 1, percent * 1):SetEase(CS.DG.Tweening.Ease.OutCubic)

    if heroDeath then
        self.heroDeath:SetActive(true)
    else
        self.heroDeath:SetActive(false)
    end
end

return UIParkourBattleStatisticHeroEntry
