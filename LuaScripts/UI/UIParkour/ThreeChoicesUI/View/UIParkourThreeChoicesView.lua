---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by wsf.
---

---@class UIParkourThreeChoicesView : UIBaseView
---@field choices UIParkourChoiceItem[]
local UIParkourThreeChoicesView = BaseClass("UIParkourThreeChoicesView", UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization
local ChoiceItem = require("UI.UIParkour.ThreeChoicesUI.Component.UIParkourChoiceItem")

local compBook = {
    --{path = "BtnBack", name = "btnBack", type = UIButton},
    {path = "safeArea/content/choice1", name = "choices", type = ChoiceItem,  idx = 1},
    {path = "safeArea/content/choice2", name = "choices", type = ChoiceItem,  idx = 2},
    {path = "safeArea/content/choice3", name = "choices", type = ChoiceItem,  idx = 3},

}


--创建
function UIParkourThreeChoicesView:OnCreate()
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
    
    self.itemCallBack = function(triggerItemId, heroUuid) 
       self:OnItemClick(triggerItemId, heroUuid) 
    end

    self:ReInit()
end 

--销毁
function UIParkourThreeChoicesView:OnDestroy()
    self:ComponentDestroy()
    --self:GameObjectDestroy(self.gameObject)
    self:DataDestroy()
    base.OnDestroy(self)
end 

function UIParkourThreeChoicesView:OnAddListener()
    base.OnAddListener(self)
end

function UIParkourThreeChoicesView:OnRemoveListener()
    base.OnRemoveListener(self)
end


--控件的定义
function UIParkourThreeChoicesView:ComponentDefine()
    self:DefineCompsByBook(compBook)

    --self.btnBack:SetOnClick(function() 
    --    self.ctrl:CloseSelf()
    --end)

end 

function UIParkourThreeChoicesView:DataDefine()
    
end


function UIParkourThreeChoicesView:ComponentDestroy()
    self:ClearCompsByBook(compBook)
end

function UIParkourThreeChoicesView:DataDestroy()
    
end


function UIParkourThreeChoicesView:ReInit()
    self.uiParam = self:GetUserData()
    if not self.uiParam then
        self.ctrl:CloseSelf()
        return
    end

    DataCenter.LWBattleManager:SetGamePause(true)
    local triggerItemList = self.uiParam.triggerItemList
    local heroUuidList = self.uiParam.heroUuidList
    local listCount = #triggerItemList

    for i = 1, 3 do
        local item = self.choices[i]
        if i <= listCount then
            item.gameObject:SetActive(true)
            item:SetData(triggerItemList[i], heroUuidList[i], self.itemCallBack)
        else
            item.gameObject:SetActive(false)
        end
    end
end 

function UIParkourThreeChoicesView:OnItemClick(triggerItemId, heroUuid)

    local meta = DataCenter.LWTriggerItemTemplateManager:GetTemplate(triggerItemId)
    if meta then
        DataCenter.LWBattleManager.logic.triggerEventMgr:Trigger(meta.type, meta, heroUuid)
    end
    
    self.ctrl:CloseSelf()
    DataCenter.LWBattleManager:SetGamePause(false)
end


return UIParkourThreeChoicesView