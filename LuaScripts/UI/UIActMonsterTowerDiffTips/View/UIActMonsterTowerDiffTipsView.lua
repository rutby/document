---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zzl
--- DateTime: 
---
local UICommonItem = require "UI.UICommonItem.UICommonItem"
local UIActMonsterTowerDiffTipsView = BaseClass("UIActMonsterTowerDiffTipsView",UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization
local Screen = CS.UnityEngine.Screen
local tip_path = "Tips"
local tips_txt_path = "Tips/TipsTitle"
local tips_boss_txt_path = "Tips/TipsTitleBoss"

local right_path = "Tips/Img_Right"
local left_path = "Tips/Img_Left"
local scroll_path = "Tips/ScrollView"
local content_path = "Tips/ScrollView/Viewport/Content"
local return_btn_path = "Panel"
local btn_choice_path = "Tips/Btn_Choice"
local txt_choice_path = "Tips/Btn_Choice/Txt_Choice"
local txt_bossName_path = "Tips/Txt_BossName"
local txt_bossDiff_path = "Tips/Txt_BossDiff"
local txt_choiceTips_path = "Tips/Txt_Choicetips"

local function OnCreate(self)
    base.OnCreate(self)
    local pos,isDown,accumulate,cellH,activityId,finishDifficulty,diffDes = self:GetUserData()
    self.pos = pos
    self.isDown = isDown
    self.index = accumulate    --索引
    self.cellH = cellH or 0
    self.activityId = activityId or 0
    self.finishDifficulty = finishDifficulty
    self.diffDes = diffDes
    self.tip_obj = self:AddComponent(UIBaseContainer,tip_path)
    self.tips_txt = self:AddComponent(UITextMeshProUGUIEx,tips_txt_path)
    self.tips_boss_txt = self:AddComponent(UITextMeshProUGUIEx,tips_boss_txt_path)
    
    self.scroll_path = self:AddComponent(UIBaseContainer,scroll_path)
    self.content = self:AddComponent(UIBaseContainer,content_path)
    self.return_btn = self:AddComponent(UIButton, return_btn_path)
    self.return_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)

    self._right_img = self:AddComponent(UIImage,right_path)
    self._left_img = self:AddComponent(UIImage,left_path)
    
    self._choice_btn = self:AddComponent(UIButton,btn_choice_path)
    self._choice_btn:SetOnClick(function()
        self:ClickChoice()
    end)
    self._choice_txt = self:AddComponent(UITextMeshProUGUIEx,txt_choice_path)
    
    self._bossName_txt = self:AddComponent(UITextMeshProUGUIEx,txt_bossName_path)
    self._bossDiff_txt = self:AddComponent(UITextMeshProUGUIEx,txt_bossDiff_path)
    
    self._choiceTips_txt = self:AddComponent(UITextMeshProUGUIEx,txt_choiceTips_path)
end

local function OnDestroy(self)
    self:SetAllCellDestroy()
    self.tip_obj =nil
    self.content = nil
    self.animator = nil
    self.return_btn =nil
    --self.get_btn =nil
    --self.get_btn_txt =nil
    self.tips_txt =nil
    self.tips_boss_txt =nil
    self.isShowBtn = nil
    self.pos = nil
    self._right_img = nil
    self._left_img = nil
    self.cost = nil
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
    self:RefreshData()
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function RefreshData(self)
    local v3 = self.tip_obj.transform.position
    v3.x = self.pos.x
    v3.y = self.pos.y
    self.tip_obj.transform.position = v3                        --先设置transform位置
    local rectPos = self.tip_obj.rectTransform.anchoredPosition --再获取rect位置
    local rect = self.tip_obj.rectTransform.rect                --获取rect信息
    local scaleFactor = UIManager:GetInstance():GetScaleFactor()
    local halfScreenWidth = (1334/2)
    --动画的时候会超出屏幕之外。框定范围的时候留一点距离
    halfScreenWidth = halfScreenWidth - 30
    local height = rect.height
    local halfWidth = (rect.width/2)
    local x =  rectPos.x
    local y = rectPos.y - self.cellH - height * 0.5

    if not self.isDown then
        y = rectPos.y + height /2 + self.cellH
    end
    if x + halfWidth>halfScreenWidth then
        x = halfScreenWidth-halfWidth
    end
    if x - halfWidth < -halfScreenWidth then
        x = halfWidth-halfScreenWidth
    end
    local tempAnchoredPosition = Vector2.New(x,y)
    self.tip_obj.rectTransform.anchoredPosition = tempAnchoredPosition
    self._right_img:SetActive(not self.isDown)
    self._left_img:SetActive(self.isDown)
    local list = DataCenter.ActMonsterTowerData:GetTemplate()
    if self.finishDifficulty < self.index then
        self._choice_btn:SetActive(false)
        self._choiceTips_txt:SetActive(true)
        local str = self.diffDes
        if list[self.index - 1] then
            str = list[self.index - 1].difficulty_des
        end
        local curColor = self:GetColorByDifficultId(tonumber(str))
        self._choiceTips_txt:SetLocalText(372470, string.format(TextColorStr, curColor, Localization:GetString(str)))
    else
        self._choice_btn:SetActive(true)
        self._choiceTips_txt:SetActive(false)
    end
    local template = DataCenter.ActMonsterTowerData:GetTemplateByIndex(self.index)
    self._bossDiff_txt:SetLocalText(372415)
    self.tips_boss_txt:SetLocalText(template.description)
    self.tips_txt:SetLocalText(372423)
    self._choice_txt:SetLocalText(372258)
    self._bossName_txt:SetLocalText(template.monster_des)
    self:SetAllCellDestroy()
    self.modelwelfare = {}
    local data = DataCenter.ActMonsterTowerData:GetInfoByActId(self.activityId)
    local list = data:GetDiffRewardByIndex(self.index)
    local newList = list.reward
    if newList ~= nil then
        for i = 1, table.length(newList) do
            --复制基础prefab，每次循环创建一次
            self.modelwelfare[newList[i]] = self:GameObjectInstantiateAsync(UIAssets.UICommonItemSize, function(request)
                if request.isError then
                    return
                end
                local go = request.gameObject;
                go.gameObject:SetActive(true)
                go.transform:SetParent(self.content.transform)
                go.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
                go.name ="itemReward" .. i
                local cell = self.content:AddComponent(UICommonItem,go.name)
                cell:ReInit(newList[i])
            end)
        end
    end
end

local function GetColorByDifficultId(self,difDesId)
    if difDesId == 400063 then
        return TextColorGreen 
    elseif difDesId == 372397 then
        return TextQualityColorBlue 
    elseif difDesId == 400064 then
        return TextQualityColorPurple 
    elseif difDesId == 372399 then
        return TextQualityColorOrange
    end
    return TextColorGreen -- TextColorRed
end

local function SetAllCellDestroy(self)
    self.content:RemoveComponents(UICommonItem)
    if self.modelwelfare~=nil then
        for k,v in pairs(self.modelwelfare) do
            if v ~= nil then
                self:GameObjectDestroy(v)
            end
        end
    end
end

--选择难度
local function ClickChoice(self)
    if self.finishDifficulty <= 1 then
        self.ctrl:CloseSelf()
        SFSNetwork.SendMessage(MsgDefines.ChooseChallengeActDifficulty, self.activityId,self.index)
    else
        UIUtil.ShowMessage(Localization:GetString("372426"), 2, GameDialogDefine.CONFIRM, GameDialogDefine.CANCEL,function()
            self.ctrl:CloseSelf()
            SFSNetwork.SendMessage(MsgDefines.ChooseChallengeActDifficulty, self.activityId,self.index)
        end, function()
        end)
    end
end

UIActMonsterTowerDiffTipsView.OnCreate= OnCreate
UIActMonsterTowerDiffTipsView.OnDestroy = OnDestroy
UIActMonsterTowerDiffTipsView.RefreshData = RefreshData
UIActMonsterTowerDiffTipsView.OnEnable= OnEnable
UIActMonsterTowerDiffTipsView.OnDisable = OnDisable
UIActMonsterTowerDiffTipsView.ClickChoice = ClickChoice
UIActMonsterTowerDiffTipsView.SetAllCellDestroy = SetAllCellDestroy
UIActMonsterTowerDiffTipsView.GetColorByDifficultId = GetColorByDifficultId
return UIActMonsterTowerDiffTipsView