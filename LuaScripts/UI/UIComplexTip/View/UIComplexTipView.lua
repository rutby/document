---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2022/1/25 14:40
---

local UIComplexTipView = BaseClass("UIComplexTipView", UIBaseView)
local base = UIBaseContainer
local UIComplexTipItem = require "UI.UIComplexTip.Component.UIComplexTipItem"
local ResourceManager = CS.GameEntry.Resource

-- TipInfo 示例
local tipInfoExample =
{
    width = 700, -- number 背景宽度
    height = 80, -- number 背景高度
    duration = 3, -- number 展示时间(秒)
    fadeDuration = 0.5, -- number 淡入淡出时间(秒)
    content = -- table(list) 展示内容，顺序为index顺序
    {
        [1] =
        {
            type = ComplexTipType.Hero,
            heroUuid = 123456,
        },
        [2] =
        {
            type = ComplexTipType.Text,
            str = "Test text",
        },
        [3] =
        {
            type = ComplexTipType.Image,
            path = string.format(LoadPath.ItemPath, "corn"),
        }
    }
}

local this_path = ""

local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()

    local tipInfo = self:GetUserData()
    self:PushTipInfo(tipInfo)
end

local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    self.this_go = self:AddComponent(UIBaseContainer, this_path)
    self.this_go.transform:Set_localPosition(ResetPosition.x, ResetPosition.y, ResetPosition.z)
end

local function ComponentDestroy(self)
    self:RemoveComponents(UIComplexTipItem)
    for _, req in pairs(self.reqDict) do
        req:Destroy()
    end
    
    self.this_go = nil
end

local function DataDefine(self)
    self.isPlaying = false
    self.tipInfoQueue = {}
    self.index = 1
    self.reqDict = {}
    self.active = true
end

local function DataDestroy(self)
    self.isPlaying = nil
    self.tipInfoQueue = nil
    self.index = nil
    self.reqDict = nil
    self.active = nil
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function PushTipInfo(self, tipInfo)
    table.insert(self.tipInfoQueue, tipInfo)
    if not self.isPlaying then
        self:PlayNext()
    end
end

local function PopTipInfo(self)
    if table.count(self.tipInfoQueue) > 0 then
        return table.remove(self.tipInfoQueue, 1)
    else
        return nil
    end
end

local function PlayNext(self)
    local tipInfo = self:PopTipInfo()
    if tipInfo == nil then
        self.isPlaying = false
        self.ctrl:CloseSelf()
        return
    end

    self.isPlaying = true
    self.ReviseTipInfo(tipInfo)

    local req = ResourceManager:InstantiateAsync(UIAssets.UIComplexTipItem)
    req:completed('+', function()
        if req.isError then
            return
        end
        
        local name = tostring(self.index)
        self.reqDict[name] = req
        self.index = self.index + 1
        
        local go = req.gameObject
        go:SetActive(true)
        go.transform:SetParent(self.this_go.transform)
        go.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
        go.name = name
        
        local item = self:AddComponent(UIComplexTipItem, name)
        item:SetTipInfo(tipInfo)
        item:DoAnim(function()
            if self.active then
                self:RemoveComponent(name, UIComplexTipItem)
                if self.reqDict[name] then
                    self.reqDict[name]:Destroy()
                    self.reqDict[name] = nil
                end
            end
        end)
    end)
    
    TimerManager:GetInstance():DelayInvoke(function()
        self:PlayNext()
    end, tipInfo.duration + tipInfo.fadeDuration)
end

local function ReviseTipInfo(tipInfo)
    if tipInfo.width == nil then
        tipInfo.width = 700
    end
    if tipInfo.height == nil then
        tipInfo.height = 80
    end
    if tipInfo.duration == nil then
        tipInfo.duration = 2
    end
    if tipInfo.fadeDuration == nil then
        tipInfo.fadeDuration = 0.3
    end
    if tipInfo.content == nil then
        tipInfo.content = {}
    end
end

UIComplexTipView.OnCreate= OnCreate
UIComplexTipView.OnDestroy = OnDestroy
UIComplexTipView.ComponentDefine = ComponentDefine
UIComplexTipView.ComponentDestroy = ComponentDestroy
UIComplexTipView.DataDefine = DataDefine
UIComplexTipView.DataDestroy = DataDestroy
UIComplexTipView.OnEnable = OnEnable
UIComplexTipView.OnDisable = OnDisable

UIComplexTipView.PushTipInfo = PushTipInfo
UIComplexTipView.PopTipInfo = PopTipInfo
UIComplexTipView.PlayNext = PlayNext
UIComplexTipView.ReviseTipInfo = ReviseTipInfo

return UIComplexTipView