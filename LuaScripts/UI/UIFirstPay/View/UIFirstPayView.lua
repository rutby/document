---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2021/9/15 16:38
---

local UIHeroTipsView = require "UI.UIHeroTips.View.UIHeroTipsView"
local base = UIBaseView--Variable
local UIFirstPayView = BaseClass("UIFirstPayView", base)--Variable
local Localization = CS.GameEntry.Localization
local FirstPayRewardItem = require "UI.UIFirstPay.Component.FirstPayRewardItem"
local UIGiftPackagePoint = require "UI.UIGiftPackage.Component.UIGiftPackagePoint"
local OPEN_DELAY = 0.5

local scroll_view_path = "ImgBg/Center/Rewards/ScrollView"

local function OnCreate(self)
    base.OnCreate(self)
    self.spinePath = "Assets/_Art/Spine/hero_icon_shouchong/hero_icon_shouchong_SkeletonData.asset"
    self:ComponentDefine()
    self:DataDefine()
    self:RefreshAll()
end

local function OnDestroy(self)
    
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    --self.testN = self:AddComponent(UIBaseContainer, "")
    --self.titleN = self:AddComponent(UITextMeshProUGUIEx, "ImgBg/titleTxt")
    --self.titleN:SetLocalText(320187) 
    --self.subTitleN = self:AddComponent(UITextMeshProUGUIEx, "ImgBg/Center/Tip")
    --self.subTitleN:SetLocalText(320188) 
    self.title1 = self:AddComponent(UITextMeshProUGUIEx, "ImgBg/Bg/Di1/titleTxt1")
    self.title1:SetLocalText(320746)
    self.title2 = self:AddComponent(UITextMeshProUGUIEx, "ImgBg/Bg/Di2/titleTxt2")
    self.title2:SetLocalText(151012)
    self.spineBg = self:AddComponent(UIBaseContainer, "ImgBg/Bg/heroImgBg")
    self.spine = self.transform:Find("ImgBg/Bg/heroSpine"):GetComponent(typeof(CS.Spine.Unity.SkeletonGraphic))
   -- self.spine:Initialize(true)
    --self.spine.AnimationState:SetAnimation(0, "Idle1", true)
    
    self.panelClose = self:AddComponent(UIButton, "Panel")
    self.panelClose:SetOnClick(function()
        self:OnClickCloseBtn()
    end)
    self.imageHero = self:AddComponent(UIButton, "ImgBg/Center/ImageHero")
    self.imageHero:SetOnClick(function()
        self:OnClickHeroBtn()
    end)
    
    self.anim = self:AddComponent(UIAnimator, "")
    self.bg_go = self:AddComponent(UIBaseContainer, "ImgBg")
    self.panel_go = self:AddComponent(UIBaseContainer, "Panel")
    self.rewardDesN = self:AddComponent(UITextMeshProUGUIEx, "ImgBg/Center/Rewards/rewardDesc")
    self.rewardDesN:SetLocalText(321176)
    self.heroN = self:AddComponent(UIBaseContainer, "ImgBg/Center/hero")
    self.heroN:SetLocalScaleXYZ(0.85,0.85,1)
    self.heroBtnN = self:AddComponent(UIButton, "ImgBg/Center/hero/heroS")
    self.heroBtnN:SetOnClick(function()
        self:OnClickHeroBtn()
    end)
    self.heroIconN = self:AddComponent(UIImage, "ImgBg/Center/hero/heroS/iconMask/imgIcon")
    self.heroBgN = self:AddComponent(UIImage, "ImgBg/Center/hero/heroS/imgQuality")
    --self.heroNameN = self:AddComponent(UITextMeshProUGUIEx, "ImgBg/Center/Rewards/hero/heroName")
    self.paidContainerN = self:AddComponent(UIBaseContainer, "ImgBg/Center/Paid")
    self.claimBtnN = self:AddComponent(UIButton, "ImgBg/Center/Paid/claimBtn")
    self.claimBtnN:SetOnClick(function()  
SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnClickCliamBtn()
    end)
    self.claimBtnTxtN = self:AddComponent(UITextMeshProUGUIEx, "ImgBg/Center/Paid/claimBtn/claimTxt")
    self.claimBtnTxtN:SetLocalText(170004) 
    self.unpaidContainerN = self:AddComponent(UIBaseContainer, "ImgBg/Center/Unpaid")
    self.packageIconN = self:AddComponent(UIImage, "ImgBg/Center/Unpaid/package/packageIcon")
    self.packageBtnN = self:AddComponent(UIButton, "ImgBg/Center/Unpaid/package/packageIcon")
    self.packageBtnN:SetOnClick(function()
        self:OnClickPackageBtn()
    end)
    self.packageTxtN = self:AddComponent(UITextMeshProUGUIEx, "ImgBg/Center/Unpaid/package/packageName")
    self.payBtnN = self:AddComponent(UIButton, "ImgBg/Center/Unpaid/buyBtn")
    self.payBtnN:SetOnClick(function()  
SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnClickPayBtn()
    end)
    self.payBtnTxtN = self:AddComponent(UITextMeshProUGUIEx, "ImgBg/Center/Unpaid/buyBtn/buyTxt")
    self.closeBtnN = self:AddComponent(UIButton, "ImgBg/Top/closeBtn")
    self.closeBtnN:SetOnClick(function()  
SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnClickCloseBtn()
    end)

    self.point_rect = self:AddComponent(UIGiftPackagePoint,"ImgBg/Center/Unpaid/UIGiftPackagePoint")

    self.skillTipN = self:AddComponent(UITextMeshProUGUIEx, "ImgBg/skill/skillTip")
    self.skillTipN:SetLocalText(320805)
    self.skillBtnN = self:AddComponent(UIButton, "ImgBg/skill/skillBtn")
    self.skillBtnN:SetOnClick(function()
        self:OnClickSkillBtn()
    end)
    self.scroll_view = self:AddComponent(UIScrollView, scroll_view_path)
    self.scroll_view:SetOnItemMoveIn(function(itemObj, index)
        self:OnCellMoveIn(itemObj, index)
    end)
    self.scroll_view:SetOnItemMoveOut(function(itemObj, index)
        self:OnCellMoveOut(itemObj, index)
    end)
    
    --self:CreateHeroSpine()
end

function UIFirstPayView : CreateHeroSpine()
    self.spineBg:SetActive(false)
    self.spine.gameObject:SetActive(false)
    CommonUtil.LoadAsset(self.spinePath, "UIFirstPaySpine", typeof(CS.Spine.Unity.SkeletonDataAsset), function(asset)
        if asset then
            self.spineBg:SetActive(true)
            self.spine.gameObject:SetActive(true)
            self.spine.skeletonDataAsset = asset
            self.spine:Initialize(true)
            self.spine:MatchRectTransformWithBounds()
            --self.spine.rectTransform.localScale = Vector3.one * 
            local animations = asset:GetSkeletonData().Animations
            if animations.Count > 0 then
                local animation1 = animations.Items[1].Name
                local animation2 = animations.Items[0].Name
                local animTime = animations.Items[1].Duration
                self.spine.AnimationState:SetAnimation(0, animation1, false)
                TimerManager:GetInstance():DelayInvoke(function()
                    self.spine.AnimationState:SetAnimation(0, animation2, true)
                end, animTime)
            end
        end
    end)
end

local function ComponentDestroy(self)
    CommonUtil.UnloadAsset(self.spinePath, "UIFirstPaySpine")
end

local function DataDefine(self)
    self.packageId = nil
    self.packageInfo = nil
    self.heroId = nil
    self.list = {}
end

local function DataDestroy(self)
    self.packageId = nil
    self.packageInfo = nil
    self.heroId = nil
    self.list = {}
end

local function RefreshAll(self)
    self.packageId = LuaEntry.DataConfig:TryGetStr("first_pay", "k2")
    --self.packageInfo = GiftPackageData.get(self.packageId)
    SoundUtil.PlayEffect(SoundAssets.Music_Effect_First_Pay)
    local delay = self:GetUserData() and OPEN_DELAY or 0
    self.bg_go:SetActive(false)
    self.panel_go:SetActive(false)
    TimerManager:GetInstance():DelayInvoke(function()
        self.packageInfo = GiftPackageData.get(self.packageId)
        self.bg_go:SetActive(true)
        self.panel_go:SetActive(true)
        self.anim:Play("CommonPopup_movein", 0, 0)
        self:ShowCells()
        self:RefreshPayState()
    end, delay)
    CS.GameEntry.Setting:SetBool(SettingKeys.FIRST_PAY_SHOWN .. LuaEntry.Player.uid, true)
end

local function SetRewardHero(self, rewardData)
    self.heroId = rewardData.value.id
    local heroConfig = LocalController:instance():getLine(HeroUtils.GetHeroXmlName(), rewardData.value.id)
    self.heroIconN:LoadSprite(HeroUtils.GetHeroIconPath(rewardData.value.id))
    self.heroBgN:LoadSprite(HeroUtils.GetRarityIconPath(heroConfig.rarity))
    --self.heroNameN:SetLocalText(heroConfig.name) 
end

local function RefreshPayState(self)
    local tempStatus = DataCenter.PayManager:GetFirstPayStatus()
    if tempStatus == 0 then
        self.paidContainerN:SetActive(false)
        self.unpaidContainerN:SetActive(true)

        --死图
        --local tempImg = self.packageInfo:getUIKey()
        --self.packageIconN:LoadSprite(tempImg)
        local packageName = self.packageInfo:getName()
        self.packageTxtN:SetLocalText(packageName) 
        local price = DataCenter.PayManager:GetDollarText(self.packageInfo:getPrice(), self.packageInfo:getProductID())
        self.payBtnTxtN:SetText(price)
        --积分
        self.point_rect:RefreshPoint(self.packageInfo)
    elseif tempStatus == 1 then
        self.paidContainerN:SetActive(true)
        self.unpaidContainerN:SetActive(false)
    else
        self.paidContainerN:SetActive(false)
        self.unpaidContainerN:SetActive(false)
    end
    
end

local function OnClickCliamBtn(self)
    SoundUtil.PlayEffect(SoundAssets.Music_Effect_Ue_GetReward)
    GiftPackageData.RequestClaimFirstPayReward()
    self.ctrl:CloseSelf()
end
 
local function OnClickPayBtn(self)
    DataCenter.GuideManager:AddOneTempFlag(GuideTempFlagType.ClickPay, {})
    self.ctrl:BuyGift(self.packageInfo)
end

local function OnClickCloseBtn(self)
    self.ctrl:CloseSelf()
end

local function OnClickPackageBtn(self)
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIPackageContentTip, {anim = true}, {packageInfo = self.packageInfo, alignObject = nil})
end

local function OnClickHeroBtn(self)
    local heroConfig = LocalController:instance():getLine(HeroUtils.GetHeroXmlName(), self.heroId)
    local param = UIHeroTipsView.Param.New()
    param.heroId = self.heroId
    param.title = Localization:GetString(heroConfig.name)
    param.content = Localization:GetString(heroConfig.brief_desc)
    param.dir = UIHeroTipsView.Direction.ABOVE
    param.defWidth = 280
    param.pivot = 0.5
    param.position = self.imageHero.transform.position + Vector3.New(0, 60, 0)
    --param.bindObject = self.heroBtnN.gameObject
    param.bindObject = self.gameObject
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIHeroTips, { anim = false }, param)
end

local function OnClickSkillBtn(self)
    local scaleFactor = UIManager:GetInstance():GetScaleFactor()
    local position = self.skillBtnN.transform.position + Vector3.New(0, 20, 0) * scaleFactor

    local param = UIHeroTipsView.Param.New()
    param.content = Localization:GetString("320736")
    param.dir = UIHeroTipsView.Direction.ABOVE
    param.defWidth = 300
    param.pivot = 0.2
    param.position = position
    param.bindObject = self.skillBtnN.gameObject
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIHeroTips, { anim = false }, param)
end


function UIFirstPayView:ShowCells()
    self:ClearScroll()
    self:GetDataList()
    local count = table.count(self.list)
    if count > 0 then
        self.scroll_view:SetTotalCount(count)
        self.scroll_view:RefillCells()
    end
    if self.heroData ~= nil then
        self:SetRewardHero(self.heroData)
    end
end

function UIFirstPayView:ClearScroll()
    self.scroll_view:ClearCells()--清循环列表数据
    self.scroll_view:RemoveComponents(FirstPayRewardItem)--清循环列表gameObject
end

function UIFirstPayView:OnCellMoveIn(itemObj, index)
    itemObj.name = tostring(index)
    local item = self.scroll_view:AddComponent(FirstPayRewardItem, itemObj)
    local tempParam =  {}
    tempParam.itemType = self.list[index].type
    tempParam.itemId = self.list[index].value.id
    tempParam.itemCount = self.list[index].value.num
    item:SetItem(tempParam)
    itemObj.transform:Set_localScale(0.8,0.8,0.8)
end

function UIFirstPayView:OnCellMoveOut(itemObj, index)
    self.scroll_view:RemoveComponent(itemObj.name, FirstPayRewardItem)
end

function UIFirstPayView:GetDataList()
    self.heroData = nil
    self.list = {}
    local list = DataCenter.PayManager:GetFirstPayRewards()
    local itemEffectList = {}
    for _, v in ipairs(list) do
        if v ~= nil then
            if v.type == RewardType.HERO then
                self.heroData = v
            elseif v.type == RewardType.ITEM_EFFECT then
                table.insert(self.list, v)
            else
                table.insert(itemEffectList, v)
            end
        end
    end
    if itemEffectList[1] ~= nil then
        for k, v in ipairs(itemEffectList) do
            table.insert(self.list, v)
        end
    end
end


--[[
local function OnAddListener(self)
    base.OnAddListener(self)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
end
--]]

UIFirstPayView.OnCreate = OnCreate 
UIFirstPayView.OnDestroy = OnDestroy
--UIFirstPayView.OnAddListener = OnAddListener
--UIFirstPayView.OnRemoveListener = OnRemoveListener
UIFirstPayView.ComponentDefine = ComponentDefine
UIFirstPayView.ComponentDestroy = ComponentDestroy
UIFirstPayView.DataDefine = DataDefine
UIFirstPayView.DataDestroy = DataDestroy

UIFirstPayView.RefreshAll = RefreshAll
UIFirstPayView.SetRewardHero = SetRewardHero
UIFirstPayView.RefreshPayState = RefreshPayState
UIFirstPayView.OnClickCliamBtn = OnClickCliamBtn
UIFirstPayView.OnClickPayBtn = OnClickPayBtn
UIFirstPayView.OnClickCloseBtn = OnClickCloseBtn
UIFirstPayView.OnClickPackageBtn = OnClickPackageBtn
UIFirstPayView.OnClickHeroBtn = OnClickHeroBtn
UIFirstPayView.OnClickSkillBtn = OnClickSkillBtn

return UIFirstPayView