---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2023/3/2 17:55
--- LeagueMatchAlRewardPanel.lua

local LeagueMatchAlRewardPanel = BaseClass("LeagueMatchAlRewardPanel",UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization
local LeagueMatchAlRewardItem = require "UI.LeagueMatch.UILeagueMatchReward.Component.LeagueMatchAlRewardItem"

local NameConf = {
    {
        Name = "372162",
        Tips = "372642"
    },
    {
        Name = "372640",
        Tips = "372643"
    },
    {
        Name = "372641",
        Tips = "372644"
    },
}

local rewardItem_path = "ScrollView/Viewport/Content/alReward_"

-- 创建 
local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
end

-- 销毁
local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

--控件的定义
local function ComponentDefine(self)
    self.rewardItemTbN = {}
    for i = 1, 3 do
        local item = self:AddComponent(LeagueMatchAlRewardItem, rewardItem_path .. i)
        table.insert(self.rewardItemTbN, item)
    end
end

--控件的销毁
local function ComponentDestroy(self)
    self.rewardItemTbN = nil
end

--变量的定义
local function DataDefine(self)
    self.rewardInfo = nil
end

--变量的销毁
local function DataDestroy(self)
    self.rewardInfo = nil
end


local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.OnLeagueMatchRewardInfoUpdate, self.RefreshAll)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
    self:RemoveUIListener(EventId.OnLeagueMatchRewardInfoUpdate, self.RefreshAll)
end

local function ShowPanel(self, segment)
    self.curSegment = segment
    self:RefreshAll()
end

local function RefreshAll(self)
    self.rewardInfo = DataCenter.LeagueMatchManager:GetRewardInfo(2, self.curSegment)
    if not self.rewardInfo then
        return
    else
        self:RefreshDayReward(self.rewardInfo.dailyWinReward, self.rewardInfo.requireDailyPoint)
        self:RefreshWeekWinReward(self.rewardInfo.weekWinReward, self.rewardInfo.requireWeekPoint)
        self:RefreshWeekFailReward(self.rewardInfo.weekFailReward, self.rewardInfo.requireWeekPoint)
    end
end

local function RefreshDayReward(self, rewardInfo, numParam)
    if rewardInfo then
        self.rewardItemTbN[1]:SetActive(true)
        self.rewardItemTbN[1]:SetItem(rewardInfo, NameConf[1], numParam)
    else
        self.rewardItemTbN[1]:SetActive(false)
    end
end

local function RefreshWeekWinReward(self, rewardInfo, numParam)
    if rewardInfo then
        self.rewardItemTbN[2]:SetActive(true)
        self.rewardItemTbN[2]:SetItem(rewardInfo, NameConf[2], numParam)
    else
        self.rewardItemTbN[2]:SetActive(false)
    end
end

local function RefreshWeekFailReward(self, rewardInfo, numParam)
    if rewardInfo then
        self.rewardItemTbN[3]:SetActive(true)
        self.rewardItemTbN[3]:SetItem(rewardInfo, NameConf[3], numParam)
    else
        self.rewardItemTbN[3]:SetActive(false)
    end
end

LeagueMatchAlRewardPanel.OnCreate = OnCreate
LeagueMatchAlRewardPanel.OnDestroy = OnDestroy
LeagueMatchAlRewardPanel.ComponentDefine = ComponentDefine
LeagueMatchAlRewardPanel.ComponentDestroy = ComponentDestroy
LeagueMatchAlRewardPanel.DataDefine = DataDefine
LeagueMatchAlRewardPanel.DataDestroy = DataDestroy
LeagueMatchAlRewardPanel.OnAddListener = OnAddListener
LeagueMatchAlRewardPanel.OnRemoveListener = OnRemoveListener

LeagueMatchAlRewardPanel.ShowPanel = ShowPanel
LeagueMatchAlRewardPanel.RefreshAll = RefreshAll
LeagueMatchAlRewardPanel.RefreshDayReward = RefreshDayReward
LeagueMatchAlRewardPanel.RefreshWeekWinReward = RefreshWeekWinReward
LeagueMatchAlRewardPanel.RefreshWeekFailReward = RefreshWeekFailReward

return LeagueMatchAlRewardPanel