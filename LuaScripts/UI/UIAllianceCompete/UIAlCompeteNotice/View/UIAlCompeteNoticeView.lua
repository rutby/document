---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2021/8/20 10:32
---
local UIAlCompeteNoticeView = BaseClass("UIAlCompeteNoticeView", UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization
--local UIHeroTipView = require "UI.UIHero2.UIHeroTip.View.UIHeroTipView"

local title_path = "safeArea/rightLayer/titleTxt"
local subTitle_path = "safeArea/rightLayer/desTxt"
local remainTimeTip_path = "safeArea/rightLayer/Time/timeTip"
local remainTime_path= "safeArea/rightLayer/Time/remainT"
--local timeDayTip_path = "safeArea/rightLayer/Time/day/dayTip"
--local timeDay_path = "safeArea/rightLayer/Time/day"
--local timeHourTip_path = "safeArea/rightLayer/Time/hour/hourTip"
--local timeHour_path = "safeArea/rightLayer/Time/hour"
--local timeMinTip_path = "safeArea/rightLayer/Time/min/minTip"
--local timeMin_path = "safeArea/rightLayer/Time/min"
--local timeSecondTip_path = "safeArea/rightLayer/Time/sec/secTip"
--local timeSecond_path = "safeArea/rightLayer/Time/sec"
local backBtn_path = "safeArea/topLeftLayer/closeBtn"
local ruleBtn_path = "safeArea/rightLayer/Btns/ruleBtn"
local ruleBtnTxt_path = "safeArea/rightLayer/Btns/ruleBtn/ruleTxt"
local techBtn_path = "safeArea/rightLayer/Btns/techBtn"
local techBtnTxt_path = "safeArea/rightLayer/Btns/techBtn/techTxt"
local rewardBtn_path = "safeArea/rightLayer/rewardBtn"
local rewardBtnTxt_path = "safeArea/rightLayer/rewardBtn/rewardBtnTxt"

local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
    self:RefreshAll()
end

-- 销毁
local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    self.titleN = self:AddComponent(UITextMeshProUGUIEx, title_path)
    self.subTitleN = self:AddComponent(UITextMeshProUGUIEx, subTitle_path)
    self.remainTimeTipN = self:AddComponent(UITextMeshProUGUIEx, remainTimeTip_path)
    self.remainTimeN = self:AddComponent(UITextMeshProUGUIEx, remainTime_path)
    --self.timeDayTipN = self:AddComponent(UIText, timeDayTip_path)
    --self.timeDayN = self:AddComponent(UIText, timeDay_path)
    --self.timeHourTipN = self:AddComponent(UIText, timeHourTip_path)
    --self.timeHourN = self:AddComponent(UIText, timeHour_path)
    --self.timeMinTipN = self:AddComponent(UIText, timeMinTip_path)
    --self.timeMinN = self:AddComponent(UIText, timeMin_path)
    --self.timeSecTipN = self:AddComponent(UIText, timeSecondTip_path)
    --self.timeSecN = self:AddComponent(UIText, timeSecond_path)
    self.closeBtnN = self:AddComponent(UIButton, backBtn_path)
    self.closeBtnN:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)
    self.ruleBtnN = self:AddComponent(UIButton, ruleBtn_path)
    self.ruleBtnN:SetOnClick(function()
        self:OnClickRuleBtn()
    end)
    self.ruleBtnTxtN = self:AddComponent(UITextMeshProUGUIEx, ruleBtnTxt_path)
    self.techBtnN = self:AddComponent(UIButton, techBtn_path)
    self.techBtnN:SetOnClick(function()
        self:OnClickTechBtn()
    end)
    self.techBtnN:SetActive(false)
    self.techBtnTxtN = self:AddComponent(UITextMeshProUGUIEx, techBtnTxt_path)
    self.rewardBtnN = self:AddComponent(UIButton, rewardBtn_path)
    self.rewardBtnN:SetOnClick(function()
        self:OnClickRewardBtn()
    end)
    self.rewardBtnTxtN = self:AddComponent(UITextMeshProUGUIEx, rewardBtnTxt_path)
end

local function ComponentDestroy(self)
    self.titleN = nil
    self.subTitleN = nil
    self.remainTimeTipN = nil
    --self.timeDayTipN = nil
    --self.timeDayN = nil
    --self.timeHourTipN = nil
    --self.timeHourN = nil
    --self.timeMinTipN = nil
    --self.timeMinN = nil
    --self.timeSecTipN = nil
    --self.timeSecN = nil
    self.closeBtnN = nil
    self.ruleBtnN = nil
    self.ruleBtnTxtN = nil
    self.techBtnN = nil
    self.techBtnTxtN = nil
    self.rewardBtnN = nil
    self.rewardBtnTxtN = nil
end

local function DataDefine(self)
    self.noticeEndT = nil
    self.noticeTimer = nil
end

local function DataDestroy(self)
    self.noticeEndT = nil
    self:DelNoticeTimer()
end

local function OnAddListener(self)
    base.OnAddListener(self)
    --self:AddUIListener(EventId.AllianceCompeteRankListUpdated, self.RefreshRankList)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
    --self:RemoveUIListener(EventId.AllianceCompeteRankListUpdated, self.RefreshRankList)
end

local function RefreshAll(self)
    self.titleN:SetLocalText(361000)
    self.subTitleN:SetLocalText(372113)
    self.remainTimeTipN:SetLocalText(372114)
    --self.timeDayTipN:SetLocalText(100104)
    --self.timeHourTipN:SetLocalText(100166)
    --self.timeMinTipN:SetLocalText(100165)
    --self.timeSecTipN:SetLocalText(372115)
    self.ruleBtnTxtN:SetLocalText(372116)
    self.techBtnTxtN:SetLocalText(372117)
    self.rewardBtnTxtN:SetLocalText(100072)
    
    self.noticeEndT = self.ctrl:GetNoticeEndTime()
    if self.noticeEndT then
        self:RefreshRemainTime()
        self:AddNoticeTimer()
    end
end


local function AddNoticeTimer(self)
    self.NoticeTimerAction = function()
        self:RefreshRemainTime()
    end

    if self.noticeTimer == nil then
        self.noticeTimer = TimerManager:GetInstance():GetTimer(1, self.NoticeTimerAction , self, false,false,false)
    end
    self.noticeTimer:Start()
end

local function RefreshRemainTime(self)
    local curTime = UITimeManager:GetInstance():GetServerTime()
    local remainTime = self.noticeEndT - curTime

    if remainTime > 0 then
        self.remainTimeN:SetText(UITimeManager:GetInstance():MilliSecondToFmtString(remainTime))
    else
        self:DelNoticeTimer()
        self.ctrl:CloseSelf()
    end
    
    --if remainTime > 0 then
    --    local d, h, m, s = self:GetTimeParams()
    --    self.timeDayN:SetText(string.format("%dd", d))
    --    self.timeHourN:SetText(string.format("%2d", h))
    --    self.timeMinN:SetText(string.format("%2d", m))
    --    self.timeSecN:SetText(string.format("%2d", s))
    --else
    --    self.timeDayN:SetText("00")
    --    self.timeHourN:SetText("00")
    --    self.timeMinN:SetText("00")
    --    self.timeSecN:SetText("00")
    --    self:DelNoticeTimer()
    --    self.ctrl:CloseSelf()
    --end
end

local function DelNoticeTimer(self)
    if self.noticeTimer ~= nil then
        self.noticeTimer:Stop()
        self.noticeTimer = nil
    end
end

local function GetTimeParams(self)
    local curTime = UITimeManager:GetInstance():GetServerTime()
    local remainTime = self.noticeEndT - curTime

    local secs,delta = math.modf(remainTime/1000)
    if delta > 0 then
        secs = secs + 1
    end

    local day = math.modf(secs / (OneDayTime))
    local hour = math.modf(secs/(60*60))%24
    local minute = math.modf(secs/60)%60
    local second = math.floor(secs%60)
    
    return day, hour, minute, second
end


local function OnClickRuleBtn(self)
    local strTitle = Localization:GetString("361000")
    local subTitle = Localization:GetString("100239")
    local strContent = Localization:GetString("372156")
    UIUtil.ShowIntro(strTitle, subTitle, strContent)
    --
    --local scaleFactor = UIManager:GetInstance():GetScaleFactor()
    --local position = self.ruleBtnN.transform.position + Vector3.New(0, 50, 0) * scaleFactor
    --local infoStr = Localization:GetString("372156")
    --
    --local param = UIHeroTipView.Param.New()
    --param.content = infoStr
    --param.dir = UIHeroTipView.Direction.ABOVE
    --param.defWidth = 600
    --param.pivot = 0.5
    --param.position = position
    --UIManager:GetInstance():OpenWindow(UIWindowNames.UIHeroTip, { anim = false }, param)
end

local function OnClickTechBtn(self)
    
end

local function OnClickRewardBtn(self)
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIAlCompeteRewardPreview, { anim = true })
end

UIAlCompeteNoticeView.OnCreate = OnCreate
UIAlCompeteNoticeView.OnDestroy = OnDestroy
UIAlCompeteNoticeView.ComponentDefine = ComponentDefine
UIAlCompeteNoticeView.ComponentDestroy = ComponentDestroy
UIAlCompeteNoticeView.DataDefine = DataDefine
UIAlCompeteNoticeView.DataDestroy = DataDestroy
UIAlCompeteNoticeView.OnAddListener = OnAddListener
UIAlCompeteNoticeView.OnRemoveListener = OnRemoveListener

UIAlCompeteNoticeView.RefreshAll = RefreshAll
UIAlCompeteNoticeView.AddNoticeTimer = AddNoticeTimer
UIAlCompeteNoticeView.RefreshRemainTime = RefreshRemainTime
UIAlCompeteNoticeView.DelNoticeTimer = DelNoticeTimer
UIAlCompeteNoticeView.GetTimeParams = GetTimeParams
UIAlCompeteNoticeView.OnClickRuleBtn = OnClickRuleBtn
UIAlCompeteNoticeView.OnClickTechBtn = OnClickTechBtn
UIAlCompeteNoticeView.OnClickRewardBtn = OnClickRewardBtn

return UIAlCompeteNoticeView