---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2022/2/17 14:53
---

local UIRobotPackContent = BaseClass("UIRobotPackContent", UIBaseContainer)
local base = UIBaseContainer
local UICommonItemChange = require "UI.UICommonItem.UICommonItemChange"
local UIGiftPackagePoint = require "UI.UIGiftPackage.Component.UIGiftPackagePoint"

local title_text_path = "TitleText"
local desc_text_path = "DescText"
local diamond_text_path = "LineImage/DiamondText"
local buy_button_path = "BuyButton"
local price_text_path = "BuyButton/PriceText"
local robot_image_path = "LineImage/RobotImage"
local point_path = "BuyButton/UIGiftPackagePoint"
local discount_text_path = "LineImage/DiscountBg/Discount"
local discount_bg_go_path = "LineImage/DiscountBg"
local limit_text_path = "BuyButton/TipsTextContent"
local scroll_view_path = "LineImage/ScrollView"

local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function OnAddListener(self)
    base.OnAddListener(self)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
end

local function ComponentDefine(self)
    self.title_text = self:AddComponent(UITextMeshProUGUIEx, title_text_path)
    self.desc_text = self:AddComponent(UITextMeshProUGUIEx, desc_text_path)
    self.diamond_text = self:AddComponent(UITextMeshProUGUIEx, diamond_text_path)
    self.buy_button = self:AddComponent(UIButton, buy_button_path)
    self.buy_button:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Ue_GetPayReward)
        self.view.ctrl:CloseSelf()
        self.view.ctrl:BuyGift(self.pack)
    end)
    self.price_text = self:AddComponent(UITextMeshProUGUIEx, price_text_path)
    self.robot_image = self:AddComponent(UIImage, robot_image_path)
    self.point_rect = self:AddComponent(UIGiftPackagePoint,point_path)
    self.discount_text = self:AddComponent(UITextMeshProUGUIEx, discount_text_path)
    self.discount_bg_go = self:AddComponent(UIBaseContainer, discount_bg_go_path)
    self.limit_text = self:AddComponent(UITextMeshProUGUIEx, limit_text_path)
    self.scroll_view = self:AddComponent(UIScrollView, scroll_view_path)
    self.scroll_view:SetOnItemMoveIn(function(itemObj, index)
        self:OnCellMoveIn(itemObj, index)
    end)
    self.scroll_view:SetOnItemMoveOut(function(itemObj, index)
        self:OnCellMoveOut(itemObj, index)
    end)
end

--控件的销毁
local function ComponentDestroy(self)
end

--变量的定义
local function DataDefine(self)
    self.pack = nil
    self.list = {}
end

--变量的销毁
local function DataDestroy(self)
    self.pack = nil
    self.list = {}
end

-- 全部刷新
local function SetData(self, pack, view)
    self.pack = pack
    self.view = view
    self.title_text:SetLocalText(pack:getName())
    self.desc_text:SetText(pack:getDescText())
    self.diamond_text:SetText(pack:getDiamond())
    self.price_text:SetText(DataCenter.PayManager:GetDollarText(pack:getPrice(), pack:getProductID()))
    self.robot_image:LoadSprite(string.format(LoadPath.UIRobotPack, pack:getPopupImageH()), nil, function()
        --self.robot_image:SetNativeSize()
    end)
    self:ShowCells()
    --积分
    self.point_rect:RefreshPoint(pack)
    self.limit_text:SetLocalText(GameDialogDefine.GIFT_LIMIT_BUY_WITH, 1)
    local discount = pack:hasPercent() and tonumber(pack:getPercent()) or 0
    self.discount_bg_go:SetActive(discount > 0)
    self.discount_text:SetText(string.format("%s%%", discount))
end

local function ParseItemsStr(self, str)
    local _item_use = self.pack:getItemUse()
    if _item_use ~= nil and _item_use ~= "" then
        str = _item_use .. "|" .. str
    end
    
    local subs = string.split(str, "|")
    local items = {}
    for i, v in ipairs(subs) do
        local item = self:ParseItemData(v)
        if item ~= nil then
            table.insert(items, item)
        end
    end
    return items
end

local function ParseItemData(self, str)
    local subs = string.split(str, ";")
    if (#subs == 2) then
        return { itemId = subs[1], count = subs[2], rewardType = RewardType.GOODS }
    else
        return nil
    end
end

function UIRobotPackContent:ShowCells()
    self:ClearScroll()
    self:GetDataList()
    local count = table.count(self.list)
    if count > 0 then
        self.scroll_view:SetTotalCount(count)
        self.scroll_view:RefillCells()
    end
end

function UIRobotPackContent:ClearScroll()
    self.scroll_view:ClearCells()--清循环列表数据
    self.scroll_view:RemoveComponents(UICommonItemChange)--清循环列表gameObject
end

function UIRobotPackContent:OnCellMoveIn(itemObj, index)
    itemObj.name = tostring(index)
    local item = self.scroll_view:AddComponent(UICommonItemChange, itemObj)
    item:ReInit(self.list[index])
end

function UIRobotPackContent:OnCellMoveOut(itemObj, index)
    self.scroll_view:RemoveComponent(itemObj.name, UICommonItemChange)
end

function UIRobotPackContent:GetDataList()
    self.list = self:ParseItemsStr(self.pack:getItemsStr())
end


UIRobotPackContent.OnCreate = OnCreate
UIRobotPackContent.OnDestroy = OnDestroy
UIRobotPackContent.OnDisable = OnDisable
UIRobotPackContent.ComponentDefine = ComponentDefine
UIRobotPackContent.DataDefine = DataDefine
UIRobotPackContent.ComponentDestroy = ComponentDestroy
UIRobotPackContent.DataDestroy = DataDestroy
UIRobotPackContent.OnEnable = OnEnable
UIRobotPackContent.OnAddListener = OnAddListener
UIRobotPackContent.OnRemoveListener = OnRemoveListener

UIRobotPackContent.SetData = SetData
UIRobotPackContent.ParseItemsStr = ParseItemsStr
UIRobotPackContent.ParseItemData = ParseItemData

return UIRobotPackContent