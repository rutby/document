---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2021/9/15 16:38
---

local base = UIBaseView--Variable
local UIPackageContentTipView = BaseClass("UIPackageContentTipView", base)--Variable
local Localization = CS.GameEntry.Localization
--local PackageContentItem = require "UI.UIPackageContentTip.Component.PackageContentItem"--Assets/Main/LuaScripts/UI/UIPackageContentTip/Component/PackageContentItem.lua
local UIGiftPackageCell = require "UI.UIGiftPackage.Component.UIGiftPackageCell"

local title_path = "Tips/TipsTitle"
local content_path = "Tips/ScrollView/Viewport/Content"
local template_path = "Templates(inactive)/UIGiftPackageCell"
local closeBtn_path = "Panel"
local bgImage_path = "Tips"
local arrow_path = "Tips/ImgArrow"

local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
    self:RefreshAll()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    self.titleN = self:AddComponent(UIText, title_path)
    self.contentN = self:AddComponent(UIBaseContainer, content_path)
    self.templateN = self:AddComponent(UIBaseContainer, template_path)
    self.templateN.gameObject:GameObjectCreatePool()
    self.closeBtnN = self:AddComponent(UIButton, closeBtn_path)
    self.closeBtnN:SetOnClick(function()
        self:OnClickCloseBtn()
    end)
    self.bgImageN = self:AddComponent(UIImage, bgImage_path)
    self.arrowN = self:AddComponent(UIImage, arrow_path)
end

local function ComponentDestroy(self)
    self.titleN = nil
    self.contentN = nil
    self.templateN = nil
    self.closeBtnN = nil
end

local function DataDefine(self)
end

local function DataDestroy(self)
end

local Pivot_Max = 1.1
local Pivot_Min = -0.1
local Pivot_Mid = 0.5
local function CheckAlign(self)
    if not self.alignObject then
        return
    end
    local _arrowX = 0
    local _arrowY = 0
    local _rotation = 0
    local _rect = self.bgImageN.rectTransform.rect
    local BgWidth = _rect.width
    local BgHeight = _rect.height
    local alignObject = self.alignObject
    -- 获取当前的屏幕坐标
    local _screenPos = PosConverse.WorldToScreenPos(alignObject.transform.position)
    local objWidth = alignObject.rectTransform.rect.width
    local objHeight = alignObject.rectTransform.rect.height
    local ScreenSize = CS.UnityEngine.Screen
    local ScreenWidth = ScreenSize.width
    local ScreenHeight = ScreenSize.height
    local pivot = Vector2.New(0.5, 0.5)
    if (_screenPos.x + objWidth*0.4 + BgWidth > ScreenWidth) then
        pivot.x = Pivot_Max
        _arrowX = BgWidth*0.5 +3
    else
        pivot.x = Pivot_Min
        _arrowX = -BgWidth*0.5 -3
    end
    if (_screenPos.y - BgHeight *0.5 < 50) then
        pivot.y = Pivot_Min
        _arrowY = -BgHeight*0.5 -2
    elseif (_screenPos.y + BgHeight*0.5 > ScreenHeight-50) then
        pivot.y = Pivot_Max
        _arrowY = BgHeight*0.5 +2
    else
        pivot.y = Pivot_Mid
    end
    -- 计算旋转角度
    if (pivot.x == Pivot_Max and pivot.y == Pivot_Min) then
        _rotation = 135
    elseif (pivot.x == Pivot_Max and pivot.y == Pivot_Max) then
        _rotation = 225
    elseif (pivot.x == Pivot_Max and pivot.y == Pivot_Mid) then
        _rotation = 180
    elseif (pivot.x == Pivot_Min and pivot.y == Pivot_Min) then
        _rotation = 45
    elseif (pivot.x == Pivot_Min and pivot.y == Pivot_Max) then
        _rotation = 315
    elseif (pivot.x == Pivot_Min and pivot.y == Pivot_Mid) then
        _rotation = 0
    end

    self.arrowN.transform.localRotation = Quaternion.Euler(0, 0, _rotation)
    self.arrowN.rectTransform.anchoredPosition = Vector2.New(_arrowX, _arrowY)

    self.bgImageN.rectTransform.pivot = pivot
    self.bgImageN.transform.position = alignObject.transform.position

end

local function RefreshAll(self)
    local param = self:GetUserData()
    self.packageInfo = param.packageInfo
    self.alignObject = param.alignObject
    self.titleN:SetLocalText(320202) 
    self:RefreshRewards()
    self:CheckAlign()
end

local function RefreshRewards(self)
    self.contentN:RemoveComponents(UIGiftPackageCell)
    self.templateN.gameObject:GameObjectRecycleAll()

    local list = self:GetCellsList()
    if list~=nil and #list>0 then
        for i = 1, table.length(list) do
            local item = self.templateN.gameObject:GameObjectSpawn(self.contentN.transform)
            item.name = "item" .. i
            local obj = self.contentN:AddComponent(UIGiftPackageCell,item.name)
            obj:ReInit(list[i])
        end
    end
end

local function GetCellsList(self)
    local listParam = {}

    --联盟礼物
    local arrAlliance = self.packageInfo:getAllianceGift()
    if arrAlliance ~= nil and #arrAlliance > 0 then
        for k,v in ipairs(arrAlliance) do
            local arr = string.split(v,";")
            if #arr > 4 then
                local param = UIGiftPackageCell.Param.New()
                param.iconName = string.format(LoadPath.UIAllianceGift, arr[1])
                param.itemName = arr[2]
                param.itemDes = arr[3]
                param.count = arr[4]
                param.itemColor = arr[5]
                table.insert(listParam,param)
            end
        end
    end

    -- 英雄
    local heroStr = self.packageInfo:getHeroesStr()
    if (not string.IsNullOrEmpty(heroStr)) then
        local arr = string.split(heroStr, ";")
        if (#arr == 2) then
            local param = UIGiftPackageCell.Param.New()
            param.heroId = arr[1]
            param.count = arr[2]
            table.insert(listParam,param)
        end
    end

    -- 普通道具
    local str = self.packageInfo:getItemsStr()
    local _item_use = self.packageInfo:getItemUse()
    if _item_use ~= nil and _item_use ~= "" then
        str = _item_use .. "|" .. str
    end

    local arrMiddle = string.split(str,"|")
    if arrMiddle ~= nil and #arrMiddle > 0 then
        for k,v in ipairs(arrMiddle) do
            local arr = string.split(v,";")
            if arr[1] ~= "" then
                local param = UIGiftPackageCell.Param.New()
                param.itemId = arr[1]
                param.count = arr[2]
                table.insert(listParam,param)
            end
        end
    end

    return listParam
end

local function SetRewardHero(self, rewardData)
    local heroConfig = LocalController:instance():getLine(HeroUtils.GetHeroXmlName(), rewardData.value.id)
    self.heroIconN:LoadSprite(HeroUtils.GetHeroIconPath(rewardData.value.id))
    self.heroBgN:LoadSprite(HeroUtils.GetRarityIconPath(heroConfig.rarity))
    --self.heroNameN:SetLocalText(heroConfig.name) 
end

local function OnClickCloseBtn(self)
    self.ctrl:CloseSelf()
end


UIPackageContentTipView.OnCreate = OnCreate
UIPackageContentTipView.OnDestroy = OnDestroy
--UIPackageContentTipView.OnAddListener = OnAddListener
--UIPackageContentTipView.OnRemoveListener = OnRemoveListener
UIPackageContentTipView.ComponentDefine = ComponentDefine
UIPackageContentTipView.ComponentDestroy = ComponentDestroy
UIPackageContentTipView.DataDefine = DataDefine
UIPackageContentTipView.DataDestroy = DataDestroy

UIPackageContentTipView.RefreshAll = RefreshAll
UIPackageContentTipView.RefreshRewards = RefreshRewards
UIPackageContentTipView.SetRewardHero = SetRewardHero
UIPackageContentTipView.OnClickCloseBtn = OnClickCloseBtn
UIPackageContentTipView.GetCellsList = GetCellsList
UIPackageContentTipView.CheckAlign = CheckAlign

return UIPackageContentTipView