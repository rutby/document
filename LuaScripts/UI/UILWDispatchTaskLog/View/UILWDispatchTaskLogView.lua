---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jinpeng.
--- DateTime: 2023/6/15 10:58
---
---
local base = UIBaseView
local UILWDispatchTaskLogView = BaseClass("UILWDispatchTaskLogView", base)
local UILWDispatchTaskLogItem = require "UI.UILWDispatchTaskLog.Component.UILWDispatchTaskLogItem"
local return_path = "UICommonMidPopUpTitle/panel"
local close_path = "UICommonMidPopUpTitle/bg_mid/CloseBtn"
local title_path = "UICommonMidPopUpTitle/bg_mid/titleText"

local svTask_path = "ScrollView"
local no_log_txt_path = "Txt_Empty"

local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
    self:RefreshAll()
end

local function OnDestroy(self)
    self:ClearScroll()
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    self.return_btn = self:AddComponent(UIButton, return_path)
    self.return_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)
    self.close_btn = self:AddComponent(UIButton, close_path)
    self.close_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)
    self.title_text = self:AddComponent(UITextMeshProUGUIEx, title_path)
    self.title_text:SetLocalText(461066)
    
    self.svTaskN = self:AddComponent(UIScrollView, svTask_path)
    self.svTaskN:SetOnItemMoveIn(function(itemObj, index)
        self:OnCreateCell(itemObj, index)
    end)
    self.svTaskN:SetOnItemMoveOut(function(itemObj, index)
        self:OnDeleteCell(itemObj, index)
    end)
    self.no_log_txt = self:AddComponent(UITextMeshProUGUIEx, no_log_txt_path)
    self.no_log_txt:SetLocalText(461069)
end

local function ComponentDestroy(self)
    self.closeBtnN = nil
    self.titleN = nil
    self.svTaskN = nil
    self.no_log_txt = nil
end

local function DataDefine(self)
    self.logList = {}
end

local function DataDestroy(self)
    self.logList = nil
end

local function OnAddListener(self)
    base.OnAddListener(self)
    
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
end

local function RefreshAll(self)
    self:ClearScroll()
    self.logList = DataCenter.ActDispatchTaskDataManager:GetAllLogList()
    if self.logList and #self.logList > 0 then
        self.no_log_txt:SetActive(false)
        self.svTaskN:SetActive(true)
        self.svTaskN:SetTotalCount(#self.logList)
        self.svTaskN:RefillCells()
    else
        self.no_log_txt:SetActive(true)
        self.svTaskN:SetActive(false)
    end
end

local function OnCreateCell(self,itemObj, index)
    itemObj.name = tostring(index)
    local cellItem = self.svTaskN:AddComponent(UILWDispatchTaskLogItem, itemObj)
    local logInfo = self.logList[index]
    cellItem:SetItem(logInfo)
end

local function OnDeleteCell(self,itemObj, index)
    self.svTaskN:RemoveComponent(itemObj.name, UILWDispatchTaskLogItem)
end

local function ClearScroll(self)
    self.svTaskN:ClearCells()
    self.svTaskN:RemoveComponents(UILWDispatchTaskLogItem)
end



UILWDispatchTaskLogView.OnCreate = OnCreate
UILWDispatchTaskLogView.OnDestroy = OnDestroy
UILWDispatchTaskLogView.OnAddListener = OnAddListener
UILWDispatchTaskLogView.OnRemoveListener = OnRemoveListener
UILWDispatchTaskLogView.ComponentDefine = ComponentDefine
UILWDispatchTaskLogView.ComponentDestroy = ComponentDestroy
UILWDispatchTaskLogView.DataDefine = DataDefine
UILWDispatchTaskLogView.DataDestroy = DataDestroy
UILWDispatchTaskLogView.OnCreateCell = OnCreateCell
UILWDispatchTaskLogView.OnDeleteCell = OnDeleteCell
UILWDispatchTaskLogView.ClearScroll = ClearScroll
UILWDispatchTaskLogView.RefreshAll = RefreshAll

return UILWDispatchTaskLogView