---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jinpeng.
--- DateTime: 2023/6/15 10:58
---
local RewardItem = require "UI.UIWorldPoint.Component.WorldPointRewardItem"
local UILWDispatchTaskLogItem = BaseClass("UILWDispatchTaskLogItem", UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization

local bg_path = "bg"
local bg_icon_path = "bg/bgIcon"
local txt_time_path = "Txt_Time"
local txt_des_path = "Txt_Des"
local player_head_obj_path = "UIPlayerHead"
local ui_player_head_path = "UIPlayerHead/HeadIcon"
local point_text_path = "layout/pointText"
local scroll_path = "layout/GameObject"
local content_path = "layout/GameObject/ScrollView/Viewport/Content"
-- 创建
function UILWDispatchTaskLogItem:OnCreate()
	base.OnCreate(self)
	self:ComponentDefine()
	self:DataDefine()
end

-- 销毁
function UILWDispatchTaskLogItem:OnDestroy()
	self:SetAllCellDestroy()
	self:ComponentDestroy()
	self:DataDestroy()
	base.OnDestroy(self)
end

--控件的定义
function UILWDispatchTaskLogItem:ComponentDefine()
	self.bg = self:AddComponent(UIButton, bg_path)
	self.bg:SetOnClick(function()
		self:onJumpToPos()
	end)
	self.playerHead_btn = self:AddComponent(UIButton,player_head_obj_path)
	self.playerHead_btn:SetOnClick(function()
		self:OnClickPlayerHeadBtn()
	end)
	self.bg_icon = self:AddComponent(UIImage, bg_icon_path)
	self.txt_time = self:AddComponent(UITextMeshProUGUIEx, txt_time_path)
	self.txt_des = self:AddComponent(UITextMeshProUGUIEx, txt_des_path)
	self.player_head = self:AddComponent(UIPlayerHead, ui_player_head_path)
	self.player_obj =self:AddComponent(UIBaseContainer,player_head_obj_path)
	self.playerHeadFg = self:AddComponent(UIImage, "UIPlayerHead/Foreground")
	self.point_text = self:AddComponent(UITextMeshProUGUIEx, point_text_path)
	self.content = self:AddComponent(UIBaseContainer,content_path)
	self.scroll = self:AddComponent(UIBaseContainer,scroll_path)
end

--控件的销毁
function UILWDispatchTaskLogItem:ComponentDestroy()
	self.bg = nil
	self.bg_icon = nil
	self.txt_time = nil
	self.txt_des = nil
	self.head_icon = nil
	self.point_text = nil
end

--变量的定义
function UILWDispatchTaskLogItem:DataDefine()
	self.pos = nil
end

--变量的销毁
function UILWDispatchTaskLogItem:DataDestroy()
	self.pos = nil
end

function UILWDispatchTaskLogItem:OnAddListener()
	base.OnAddListener(self)
end

function UILWDispatchTaskLogItem:OnRemoveListener()
	base.OnRemoveListener(self)
end

function UILWDispatchTaskLogItem:SetItem(logInfo)
	-- 协助 456212
	-- 被偷 456213
	self.logInfo = logInfo
	self.txt_des:SetText(logInfo.name)
	self.player_head:SetData(logInfo.uid, logInfo.pic, logInfo.picVer)
	local headBgImg = DataCenter.DecorationDataManager:GetHeadFrame(logInfo.headSkinId, logInfo.headSkinET)
	if headBgImg ~= nil then
		self.playerHeadFg:SetActive(true)
		self.playerHeadFg:LoadSprite(headBgImg)
	else
		self.playerHeadFg:SetActive(false)
	end
	self.txt_time:SetText(UITimeManager:GetInstance():TimeStampToTimeForServer(logInfo.createTime))
	self:SetAllCellDestroy()
	if logInfo.type ==1 then-- 1 偷取  2帮助
		self.bg_icon:LoadSprite("Assets/Main/Sprites/UI/UIActivityDispatchTask/herodispatch_img_red")
		self.scroll:SetActive(true)
		self.point_text:SetLocalText(461068)
		local list = {}
		local reward_str = GetTableData(TableName.LwDispatchTask,logInfo.missionId,"steal_reward_show")
		if reward_str~=nil and reward_str~="" then
			local rewardList = string.split(reward_str,"|")
			table.walk(rewardList,function (k,v)
				local str = v
				if str~=nil and str~="" then
					local strVec = string.split(str,";")
					if #strVec>2 then
						local id = tonumber(strVec[1])
						local rewardType = tonumber(strVec[2])
						local num = tonumber(strVec[3])
						local item = {}
						item.firstKill = false
						if rewardType ==  RewardType.GOODS then
							local goods = DataCenter.ItemTemplateManager:GetItemTemplate(id)
							if goods~=nil then
								item.itemId = id
								item.iconName = string.format(LoadPath.ItemPath,goods.icon)
								item.count = num
								item.itemColor = DataCenter.ItemTemplateManager:GetToolBgByColor(goods.color)
								item.rewardType = rewardType
								item.itemName = DataCenter.ItemTemplateManager:GetName(id)
								item.itemDesc = DataCenter.ItemTemplateManager:GetDes(id)
								item.isLocal = true
								--item.itemName = goods.name
								--item.itemDesc = goods.description
								local itemType = goods.type
								if itemType == 2 then -- SPD
									if goods.para1 ~= nil and goods.para1 ~= "" then
										local para1 = goods.para1
										local temp = string.split(para1,';')
										if temp ~= nil and #temp > 1 then
											item.itemFlag = temp[1]..temp[2]
										end
									end
								elseif itemType == 3 then -- USE
									local type2 = goods.type2
									if type2 ~= 999 and goods.para ~= nil then
										local res_num = tonumber(goods.para)
										item.itemFlag = string.GetFormattedStr(res_num)
									end
								end
								if item.firstKill == true then
									table.insert(list,item)
								else
									table.insert(list,item)
								end

							end
						else
							local resourceType = RewardToResType[rewardType]
							if resourceType~=nil then
								item.itemId = id
								item.iconName = DataCenter.ResourceManager:GetResourceIconByType(resourceType)
								item.itemColor = DataCenter.ItemTemplateManager:GetToolBgByColor(ItemColor.GREEN)
								item.rewardType = rewardType
								item.itemDesc = CommonUtil.GetResourceDescriptionByType(resourceType)
								item.count = num
								item.itemName = DataCenter.ResourceManager:GetResourceNameByType(resourceType)
								item.isLocal = true
								if item.firstKill == true then
									table.insert(list,item)
								else
									table.insert(list,item)
								end
							end
						end
					end
				end
			end)
		end
		local num =0
		for i = 1, table.length(list) do
			--复制基础prefab，每次循环创建一次
			num = num+1
			self.model[i] = self:GameObjectInstantiateAsync(UIAssets.WorldPointRewardItem, function(request)
				if request.isError then
					return
				end
				local go = request.gameObject;
				go.gameObject:SetActive(true)
				go.transform:SetParent(self.content.transform)
				go.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
				local nameStr = tostring(NameCount)
				go.name = nameStr
				NameCount = NameCount + 1
				local cell = self.content:AddComponent(RewardItem,nameStr)
				cell:RefreshData(list[i],true)
			end)
		end
	else
		self.bg_icon:LoadSprite("Assets/Main/Sprites/UI/UIActivityDispatchTask/herodispatch_img_blue")
		self.point_text:SetLocalText(461067)
		self.scroll:SetActive(false)
	end
end

function UILWDispatchTaskLogItem:onJumpToPos()
	
end
function UILWDispatchTaskLogItem:OnClickPlayerHeadBtn()
	if self.logInfo.uid ~= LuaEntry.Player.uid and self.logInfo.uid~="" then
		UIManager:GetInstance():OpenWindow(UIWindowNames.UIOtherPlayerInfo, self.logInfo.uid)
	end
end

function UILWDispatchTaskLogItem:SetAllCellDestroy()
	self.content:RemoveComponents(RewardItem)
	if self.model~=nil then
		for k,v in pairs(self.model) do
			if v ~= nil then
				self:GameObjectDestroy(v)
			end
		end
	end
	self.model ={}
end
return UILWDispatchTaskLogItem