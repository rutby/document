---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2024/2/26 21:25
---

local base = require "UI.UICityHud.Component.UICityHudBase"
local UICityHudReadyQueue = BaseClass("UICityHudReadyQueue", base)

local root_path = "Root"
local btn_path = "Root/Btn"
local icon_path = "Root/Btn/List/Icon"
local sub_icon_path = "Root/Btn/List/Icon/Icon%s"
local text_path = "Root/Btn/List/Text"

local SubIconCount = 6

local function ComponentDefine(self)
    base.ComponentDefine(self)
    self.anim = self:AddComponent(UIAnimator, root_path)
    self.goTextMat = self.transform:Find("Root/Btn/List/Text/goTextMat"):GetComponent(typeof(CS.UnityEngine.MeshRenderer))
    self.btn = self:AddComponent(UIButton, btn_path)
    self.btn:SetOnClick(function()
        self:OnClick()
    end)
    self.icon_image = self:AddComponent(UIImage, icon_path)
    self.sub_icon_images = {}
    for i = 1, SubIconCount do
        self.sub_icon_images[i] = self:AddComponent(UIImage, string.format(sub_icon_path, i))
    end
    self.text = self:AddComponent(UITextMeshProUGUIEx, text_path)
end

local function DataDefine(self)
    base.DataDefine(self)
    self.clicked = false
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.ResourceUpdated, self.Refresh)
    self:AddUIListener(EventId.VitaDataUpdate, self.Refresh)
end

local function OnRemoveListener(self)
    self:RemoveUIListener(EventId.ResourceUpdated, self.Refresh)
    self:RemoveUIListener(EventId.VitaDataUpdate, self.Refresh)
    base.OnRemoveListener(self)
end

local function SetParam(self, param)
    base.SetParam(self, param)
    self.root_go.transform.localPosition = param.offset or Vector3.zero
    self.anim:Play("Idle", 0, 0)
    self.clicked = false
    self:Refresh()
end

local function Refresh(self)
    local resType, count = DataCenter.VitaManager:GetAcceptResidentsCost()
    self.resType = resType
    self.count = count
    local have
    if DataCenter.VitaManager.useFakeTime then
        -- 新手阶段不比较数量
        have = count
    else
        have = LuaEntry.Resource:GetCntByResType(resType)
    end
    self.enough = have >= count
    --self.btn:LoadSprite(string.format(LoadPath.UIMain, "survivor_bg_" .. (self.enough and "yes" or "no")))
    local icon = DataCenter.ResourceManager:GetResourceIconByType(resType)
    self.icon_image:LoadSprite(icon)
    for i = 1, SubIconCount do
        self.sub_icon_images[i]:LoadSprite(icon)
    end
    --self.text:SetMaterial(self.enough and self.goTextMat.sharedMaterials[1] or self.goTextMat.sharedMaterials[0])
    self.text:SetText(string.format("<color=%s>%s</color>/%s", self.enough and "white" or "red", string.GetFormattedStr(have), string.GetFormattedStr(count)))
    TimerManager:GetInstance():DelayInvoke(function()
        if self.active then
            CS.UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(self.text.transform)
            CS.UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(self.text.transform.parent)
        end
    end, 0.1)
end

local function OnClick(self)
    if self.enough then
        if not self.clicked then
            self.clicked = true
            self.anim:Play("Play", 0, 0)
            SoundUtil.PlayEffect(SoundAssets.Music_Effect_Ready_Queue)
            TimerManager:GetInstance():DelayInvoke(function()
                DataCenter.VitaManager:AcceptResidents()
            end, 1)
            DataCenter.CityHudManager:Destroy(self.uuid, CityHudType.ReadyQueue)
        end
    else
        local lackTab = {}
        local param = {}
        param.type = ResLackType.Res
        param.id = self.resType
        param.targetNum = self.count
        table.insert(lackTab, param)
        GoToResLack.GoToItemResLackList(lackTab)
    end
end

UICityHudReadyQueue.ComponentDefine = ComponentDefine
UICityHudReadyQueue.DataDefine = DataDefine
UICityHudReadyQueue.OnAddListener = OnAddListener
UICityHudReadyQueue.OnRemoveListener = OnRemoveListener
UICityHudReadyQueue.SetParam = SetParam
UICityHudReadyQueue.Refresh = Refresh
UICityHudReadyQueue.OnClick = OnClick

return UICityHudReadyQueue