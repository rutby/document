---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 9/4/2024 下午9:13
---
local base = require "UI.UICityHud.Component.UICityHudBase"
local UICityHudBuildCreate = BaseClass("UICityHudBuildCreate", base)

local root_path = "Root"
local btn_path = "Root/Btn"
local icon_path = "Root/Btn/List/Icon"
local text_path = "Root/Btn/List/Text"

local function ComponentDefine(self)
    base.ComponentDefine(self)
    self.anim = self:AddComponent(UIAnimator, root_path)
    self.goTextMat = self.transform:Find("Root/Btn/List/Text/goTextMat"):GetComponent(typeof(CS.UnityEngine.MeshRenderer))
    self.btn = self:AddComponent(UIButton, btn_path)
    self.btn:SetOnClick(function()
        self:OnClick()
    end)
    self.icon_image = self:AddComponent(UIImage, icon_path)
    self.text = self:AddComponent(UITextMeshProUGUIEx, text_path)
    self.buildId = 0
end

local function DataDefine(self)
    base.DataDefine(self)
    self.clicked = false
    self.buildId = 0
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.ResourceUpdated, self.Refresh)
    self:AddUIListener(EventId.UPDATE_BUILD_DATA, self.OnDataRefresh)
end

local function OnRemoveListener(self)
    self:RemoveUIListener(EventId.ResourceUpdated, self.Refresh)
    self:RemoveUIListener(EventId.UPDATE_BUILD_DATA, self.OnDataRefresh)
    base.OnRemoveListener(self)
end

local function SetParam(self, param)
    base.SetParam(self, param)
    self.root_go.transform.localPosition = param.offset or Vector3.zero
    self.anim:Play("Idle", 0, 0)
    self.clicked = false
    self:Refresh()
end

local function Refresh(self)
    self.resType = 0
    self.count= 0
    self.buildId = 0
    local info = DataCenter.BuildCityBuildManager:GetCityBuildDataByPoint(self.param.uuid)
    if info ~= nil then
        self.buildId = info.buildId
        local levelTemplate = DataCenter.BuildTemplateManager:GetBuildingLevelTemplate(info.buildId,0)
        if levelTemplate ~= nil then
            local list = levelTemplate:GetNeedResource()
            if list ~= nil and list[1] ~= nil then
                local resParam = list[1]
                self.resType = resParam.resourceType
                self.count= resParam.count
            end
        end
    end
    local have = LuaEntry.Resource:GetCntByResType(self.resType)
    self.enough = have >= self.count
    --self.btn:LoadSprite(string.format(LoadPath.UIMain, "survivor_bg_" .. (self.enough and "yes" or "no")))
    self.icon_image:LoadSprite(DataCenter.ResourceManager:GetResourceIconByType(self.resType))
    self.text:SetMaterial(self.enough and self.goTextMat.sharedMaterials[1] or self.goTextMat.sharedMaterials[0])
    self.text:SetText(string.format("<color=%s>%s</color>/%s", self.enough and "white" or "red", string.GetFormattedStr(have), string.GetFormattedStr(self.count)))
    TimerManager:GetInstance():DelayInvoke(function()
        if self.active then
            CS.UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(self.text.transform)
            CS.UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(self.text.transform.parent)
        end
    end, 0.1)
end

local function OnDataRefresh(self,uuid)
    if self.buildId>0 then
        local buildData = DataCenter.BuildManager:GetBuildingDataByUuid(uuid)
        if buildData~=nil and buildData.itemId == self.buildId then
            DataCenter.CityHudManager:Destroy(self.param.uuid, CityHudType.BuildCreate)
        end
    end
end
local function OnClick(self)
    if self.enough then
        if not self.clicked and self.buildId>0 then
            self.clicked = true
            self.anim:Play("Play", 0, 0)
            local buildingId = self.buildId
            TimerManager:GetInstance():DelayInvoke(function()
                local param = {}
                param.robotUuid = 0
                param.buildingId = buildingId
                param.itemUuid = ""
                local needPathTime = 0
                param.pathTime = needPathTime
                param.targetServerId = LuaEntry.Player:GetCurServerId()
                if DataCenter.BuildQueueManager:IsCanUpgrade(buildingId, 0) then
                    local curLevelTemplate = DataCenter.BuildTemplateManager:GetBuildingLevelTemplate(buildingId, 0)
                    if curLevelTemplate.no_queue == BuildNoQueue.No then
                        local useTime = curLevelTemplate:GetBuildTime()
                        if useTime > 0 then
                            local buildTemplate = DataCenter.BuildTemplateManager:GetBuildingDesTemplate(buildingId)
                            local robot = DataCenter.BuildQueueManager:GetFreeQueue(buildTemplate:IsSeasonBuild())
                            if robot ~= nil then
                                param.robotUuid = robot.uuid
                            end
                        end
                    end
                    SFSNetwork.SendMessage(MsgDefines.FreeBuildingPlaceNew, param)
                else
                    local buildQueueParam = {}
                    buildQueueParam.enterType = UIBuildQueueEnterType.Build
                    buildQueueParam.messageParam = param
                    buildQueueParam.buildId = buildingId
                    GoToUtil.GotoOpenBuildQueueWindow(buildQueueParam)
                end
            end, 1)
        end
    else
        local lackTab = {}
        local param = {}
        param.type = ResLackType.Res
        param.id = self.resType
        param.targetNum = self.count
        table.insert(lackTab, param)
        GoToResLack.GoToItemResLackList(lackTab)
    end
end

UICityHudBuildCreate.ComponentDefine = ComponentDefine
UICityHudBuildCreate.DataDefine = DataDefine
UICityHudBuildCreate.OnAddListener = OnAddListener
UICityHudBuildCreate.OnRemoveListener = OnRemoveListener
UICityHudBuildCreate.SetParam = SetParam
UICityHudBuildCreate.Refresh = Refresh
UICityHudBuildCreate.OnClick = OnClick
UICityHudBuildCreate.OnDataRefresh = OnDataRefresh
return UICityHudBuildCreate