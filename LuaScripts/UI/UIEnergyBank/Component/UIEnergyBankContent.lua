---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2022/9/30 17:02
---

local UIEnergyBankContent = BaseClass("UIEnergyBankContent", UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization
local UIGiftPackagePoint = require "UI.UIGiftPackage.Component.UIGiftPackagePoint"
local info_path = "Info"
local slider_path = "Slider"
local desc_path = "Desc"
local fill_path = "Slider/FillArea/Fill"
local bubble_desc_path = "Bubble/BubbleDesc"
local seal_desc_path = "Seal/SealDesc"
local seal_num_path = "Seal/SealNum"
local progress_path = "Progress"
local time_desc_path = "TimeDesc"
local buy_btn_path = "BuyBtn"
local buy_text_path = "BuyBtn/BuyText"
local go_btn_path = "GoBtn"
local go_text_path = "GoBtn/GoText"
local point_path = "BuyBtn/UIGiftPackagePoint"

local PROGRESS_YELLOW = "Assets/Main/Sprites/UI/UIPiggyBank/UIPiggy_bank_img_pro_yellow"
local PROGRESS_GREEN = "Assets/Main/Sprites/UI/UIPiggyBank/UIPiggy_bank_img_pro_green"

local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function ComponentDefine(self)
    self.info_btn = self:AddComponent(UIButton, info_path)
    self.info_btn:SetOnClick(function() self:OnInfoClick() end)
    self.slider = self:AddComponent(UISlider, slider_path)
    self.desc_text = self:AddComponent(UIText, desc_path)
    self.desc_text:SetLocalText(320522)
    self.fill_image = self:AddComponent(UIImage, fill_path)
    self.bubble_desc_text = self:AddComponent(UIText, bubble_desc_path)
    self.bubble_desc_text:SetLocalText(320521)
    self.seal_desc_text = self:AddComponent(UIText, seal_desc_path)
    self.seal_num_text = self:AddComponent(UIText, seal_num_path)
    self.progress_text = self:AddComponent(UIText, progress_path)
    self.time_desc_text = self:AddComponent(UIText, time_desc_path)
    self.buy_btn = self:AddComponent(UIButton, buy_btn_path)
    self.buy_btn:SetOnClick(function() self:OnBuyClick() end)
    self.buy_text = self:AddComponent(UIText, buy_text_path)
    self.go_btn = self:AddComponent(UIButton, go_btn_path)
    self.go_btn:SetOnClick(function() self:OnGoClick() end)
    self.go_text = self:AddComponent(UIText, go_text_path)
    self.go_text:SetLocalText(110003)

    self.point_rect = self:AddComponent(UIGiftPackagePoint,point_path)
end

local function ComponentDestroy(self)
    self.info_btn = nil
    self.slider = nil
    self.desc_text = nil
    self.fill_image = nil
    self.bubble_desc_text = nil
    self.seal_desc_text = nil
    self.seal_num_text = nil
    self.progress_text = nil
    self.time_desc_text = nil
    self.buy_btn = nil
    self.buy_text = nil
    self.go_btn = nil
    self.go_text = nil
    self.point_rect = nil
end

local function DataDefine(self)
    self.view = nil
    self.pack = nil
    self.cur = 0
    self.max = 0
    self.timer = nil
    self.endTime = 0
    self.active = false
end

local function DataDestroy(self)
    self.view = nil
    self.pack = nil
    self.cur = nil
    self.max = nil
    if self.timer ~= nil then
        self.timer:Stop() 
    end
    self.timer = nil
    self.endTime = nil
    self.active = nil
end

local function OnAddListener(self)
    base.OnAddListener(self)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
end

local function ReInitView(self, view)
    --self.info_btn:SetActive(false)
    --self.buy_btn:SetActive(false)
    --self.go_btn:SetActive(true)
    
    self:ReInit(view)
end

local function ReInitPanel(self, view)
    --self.info_btn:SetActive(true)
    --self.buy_btn:SetActive(true)
    --self.go_btn:SetActive(false)
    
    self:ReInit(view)
end

local function ReInit(self, view)
    local pack = GiftPackageData.getEnergyBankPack()
    local cur = pack._serverData.money
    local max = pack._serverData.maxMoney
    local per = pack:getPercent()
    
    self.active = true
    self.view = view
    self.pack = GiftPackageData.getEnergyBankPack()
    self.cur = cur
    self.max = max
    self.endTime = pack:getEndTime()
    
    self.buy_text:SetText(DataCenter.PayManager:GetDollarText(pack:getPrice(), pack:getProductID()))
    self.progress_text:SetText(string.GetFormattedSeperatorNum(cur) .. "/" .. string.GetFormattedSeperatorNum(max))
    self.fill_image:LoadSprite(cur < max and PROGRESS_YELLOW or PROGRESS_GREEN)
    self.slider:SetValue(cur / max)
    self.seal_num_text:SetText(per .. "%")
    self.timer = TimerManager:GetInstance():GetTimer(0.1, self.TimerAction, self, false, false, false)
    self.timer:Start()

    --积分
    self.point_rect:RefreshPoint(pack)
end

local function TimerAction(self)
    if not self.active then
        return
    end
    
    local curTime = UITimeManager:GetInstance():GetServerTime()
    local restTime = self.endTime - curTime
    if restTime < 0 then
        --self:Close()
        return
    end

    local restTimeStr = UITimeManager:GetInstance():MilliSecondToFmtString(restTime)
    self.time_desc_text:SetLocalText(320192, restTimeStr)
end

local function Close(self)
    self.active = false
    self.view.ctrl:CloseSelf()
end

local function Buy(self)
    if self.view.ctrl.BuyGift then
        self.view.ctrl:BuyGift(self.pack)
    else
        DataCenter.PayManager:BuyGift(self.pack)
    end
    self:Close()
end

local function OnInfoClick(self)
    UIUtil.ShowIntro(Localization:GetString("320305"), Localization:GetString("170001"), Localization:GetString("320524"))
end

local function OnGoClick(self)
    self:Close()
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIGiftPackage, { anim = true }, { welfareTagType = WelfareTagType.EnergyBank })
end

local function OnBuyClick(self)
    if self.cur <= 0 then
        return
    end

    if self.cur >= self.max then
        self:Buy()
    else
        local str = Localization:GetString("320523", self.max, self.cur)
        UIUtil.ShowMessage(str, 2, GameDialogDefine.CANCEL, GameDialogDefine.CONFIRM, nil, function() self:Buy() end)
    end
end

UIEnergyBankContent.OnCreate = OnCreate
UIEnergyBankContent.OnDestroy = OnDestroy
UIEnergyBankContent.OnEnable = OnEnable
UIEnergyBankContent.OnDisable = OnDisable
UIEnergyBankContent.ComponentDefine = ComponentDefine
UIEnergyBankContent.ComponentDestroy = ComponentDestroy
UIEnergyBankContent.DataDefine = DataDefine
UIEnergyBankContent.DataDestroy = DataDestroy
UIEnergyBankContent.OnAddListener = OnAddListener
UIEnergyBankContent.OnRemoveListener = OnRemoveListener

UIEnergyBankContent.ReInitView = ReInitView
UIEnergyBankContent.ReInitPanel = ReInitPanel
UIEnergyBankContent.ReInit = ReInit
UIEnergyBankContent.SetOnClose = SetOnClose
UIEnergyBankContent.TimerAction = TimerAction
UIEnergyBankContent.Close = Close
UIEnergyBankContent.Buy = Buy
UIEnergyBankContent.OnInfoClick = OnInfoClick
UIEnergyBankContent.OnGoClick = OnGoClick
UIEnergyBankContent.OnBuyClick = OnBuyClick
UIEnergyBankContent.OnClose = OnClose

return UIEnergyBankContent