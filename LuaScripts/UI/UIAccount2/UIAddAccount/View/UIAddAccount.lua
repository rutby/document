---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhangliheng.
--- DateTime: 8/12/21 9:47 PM
---


local UIAddAccount = BaseClass("UIAddAccount",UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization
local OptionData = CS.UnityEngine.UI.Dropdown.OptionData

local close_btn_Path = "UICommonMiniPopUpTitle/Bg_mid/CloseBtn"
local title_path = "UICommonMiniPopUpTitle/Bg_mid/titleText"
local panel_path = "UICommonMiniPopUpTitle/panel"

local function OnCreate(self)
    base.OnCreate(self)
    self.dialogTitle = self:GetUserData()
    self:ComponentDefine()
    --self:OnOpen()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    self.close_btn = self:AddComponent(UIButton, close_btn_Path)
    self.close_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)
    self.panel = self:AddComponent(UIButton, panel_path)
    self.panel:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)
    self.textTitle = self:AddComponent(UITextMeshProUGUIEx, title_path)
    
    self.textTitleAccount  = self:AddComponent(UITextMeshProUGUIEx, 'Root/InputFieldMail/TextTitleMail')
    self.textPlaceHolder1  = self:AddComponent(UITextMeshProUGUIEx, 'Root/InputFieldMail/Text Area/Placeholder1')
    
    self.textBtnLogin = self:AddComponent(UITextMeshProUGUIEx, 'Root/BtnLogin/TextLogin')

    self.btnLogin = self:AddComponent(UIButton, 'Root/BtnLogin')
    self.dropdown = self:AddComponent(UIDropdown, 'Root/Dropdown')

    self.inputAccount = self:AddComponent(UITMPInput, 'Root/InputFieldMail')
    self.btnLogin:SetOnClick(BindCallback(self, self.OnBtnLoginClick))
    self.dropdown:SetOnValueChanged(function ()
        self:OnValueChange()
    end)
    
    self.textTitle:SetLocalText(self.dialogTitle) 
    self.textTitleAccount:SetLocalText(280039)
    self.textPlaceHolder1:SetLocalText(280102)
    self.textBtnLogin:SetLocalText(110008) 
end

local function ComponentDestroy(self)
    self.textTitle = nil
    self.textTitleAccount  = nil
    self.textPlaceHolder1  = nil

    self.textBtnLogin = nil

    self.btnClose = nil
    self.btnLogin = nil
    self.dropdown = nil

    self.inputAccount = nil
end

local function OnOpen(self)
    self:ShowAccount()
end

local function OnBtnLoginClick(self)
    local mail = self.inputAccount:GetText()
    
    --邮箱输入为空
    if mail == nil or mail == "" then
        UIUtil.ShowTipsId(280122) 
        return
    end
    --邮箱格式不正确
    local regex = '^[%w%._%-%+]+@[%w%._%-%+]+%a$'
    if not mail:match(regex) then
        UIUtil.ShowTipsId(280112)
        return
    end
    local status = AccountBandState.UnBand
    local account = Setting:GetString(SettingKeys.GAME_ACCOUNT, "")
    if account ~= nil and account ~= "" then
        --账号验证状态
        status = Setting:GetPrivateInt(SettingKeys.ACCOUNT_STATUS, 0)
    end

    if status == AccountBandState.Band and account == mail then
        UIUtil.ShowTipsId(208214)
        return
    end
    --请求登陆验证码
    SFSNetwork.SendMessage(MsgDefines.AccountLoginSendVerifyCode, {mail = mail})
end

local function ShowAccount(self)
    self.dropdown:Clear()
    local list = DataCenter.AccountManager:GetAllAccount()
    local one = ''
    for k,v in pairs(list) do
        local temp = OptionData()
        temp.text = k
        self.dropdown:Add(temp)
        if one == '' then
            one = k
        end
    end

    --设置默认
    self.dropdown:SetText(one)
    self.inputAccount:SetText(one)
    self.dropdown:SetValue(0)
end

local function OnValueChange(self)
    self.inputAccount:SetText(self.dropdown:GetText())
end

local function SetAccount(self,mail)
    self.inputAccount:SetText(mail)
end

UIAddAccount.OnCreate= OnCreate
UIAddAccount.OnDestroy = OnDestroy
UIAddAccount.ComponentDefine = ComponentDefine
UIAddAccount.ComponentDestroy = ComponentDestroy
UIAddAccount.OnOpen = OnOpen

UIAddAccount.OnBtnLoginClick = OnBtnLoginClick
UIAddAccount.ShowAccount = ShowAccount
UIAddAccount.OnValueChange = OnValueChange
UIAddAccount.SetAccount = SetAccount

return UIAddAccount