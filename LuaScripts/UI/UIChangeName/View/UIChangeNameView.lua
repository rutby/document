---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by guqu.
--- DateTime: 2020/9/1 11:22
---
local UIChangeNameView = BaseClass("UIChangeNameView",UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization

local title_path = "UICommonMiniPopUpTitle/Bg_mid/titleText"
local des_path = "UICommonMiniPopUpTitle/DesName"
local input_path = "ImgBg/InputField"
local return_btn_path = "UICommonMiniPopUpTitle/panel"
local close_btn_path = "UICommonMiniPopUpTitle/Bg_mid/CloseBtn"
local warn_path = "ImgBg/warnText"
local gray_img_path = "ImgBg/gray"
local first_use_txt_path = "UICommonMiniPopUpTitle/BtnGo/changeBtn/freeObj"
local use_item_obj_path = "UICommonMiniPopUpTitle/BtnGo/changeBtn/costObj"
local use_txt_path = "UICommonMiniPopUpTitle/BtnGo/changeBtn/costObj/useText"
local use_btn_path ="UICommonMiniPopUpTitle/BtnGo/changeBtn"
local use_diamondtxt_path ="UICommonMiniPopUpTitle/BtnGo/changeBtn/costObj/itemCount"
local use_consumption_icon="UICommonMiniPopUpTitle/BtnGo/changeBtn/costObj/icon_go/icon";
local deleteBtn_path = "ImgBg/deleteBtn"
local nameTxt_path = "ImgBg/nameTxt"
--local icon_frame_path = "ImgBg/Button/UseItem/ImgItem/Image"
local diamondIcon="item406";
local changeNameCardIcon="item006";
local diamondNum = 1 -------改名字所花钻石的数量
local haveChangeName
local checkState

local function OnCreate(self)
    base.OnCreate(self)
    local tab = self:GetUserData()
    if (tab ~= nil and tab["window"] == "chat") then
        self._isfromchat = true
    end
    
    self.title = self:AddComponent(UITextMeshProUGUIEx,title_path)
    self.title:SetLocalText(390306) 
    self.first_use_txt = self:AddComponent(UITextMeshProUGUIEx,first_use_txt_path)
    self.first_use_txt:SetLocalText(130126)
    self.first_use_txt:SetActive(false)
    
    self.use_txt = self:AddComponent(UITextMeshProUGUIEx,use_txt_path)
    self.use_txt:SetLocalText(GameDialogDefine.CONFIRM) 

    
    self.use_diamondtxt = self:AddComponent(UITextMeshProUGUIEx,use_diamondtxt_path)
    
    self.des = self:AddComponent(UITextMeshProUGUIEx,des_path)
    self.des:SetLocalText(390132)
    
    self.warn = self:AddComponent(UITextMeshProUGUIEx,warn_path)
    self.warn:SetText("")
    
    self.gray_img = self:AddComponent(UIBaseContainer, gray_img_path)
    self.use_item_obj = self:AddComponent(UIBaseContainer, use_item_obj_path)
    self.use_item_obj:SetActive(true)
	--self.icon_frame= self:AddComponent(UIImage, icon_frame_path)
    
    self.use_btn = self:AddComponent(UIButton, use_btn_path)
    self.btn_image = self:AddComponent(UIImage, use_btn_path)
    self.btn_image:LoadSprite(string.format(LoadPath.CommonNewPath, "Common_btn_yellow101"))
    self.use_btn:SetOnClick(function()  
SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
       self:OnChangeNameClick()
    end)

    self.input = self:AddComponent(UITMPInput,input_path)
    self.input:SetOnValueChange(function (value)
        self:IptOnValueChange(value)
    end)
	self.input:SetOnEndEdit(function (value)
			self:IptOnValueChange(value)
	end)
	
    
    self.close_btn = self:AddComponent(UIButton, close_btn_path)
    self.close_btn:SetOnClick(function()  
        self.ctrl:CloseSelf()
    end)
    self.return_btn = self:AddComponent(UIButton, return_btn_path)
    self.return_btn:SetOnClick(function()  
        self.ctrl:CloseSelf()
    end)

	self.consumImg = self:AddComponent(UIImage,use_consumption_icon)
    if (self._isfromchat and LuaEntry.Player.renameTime < 1) then
        self.des:SetLocalText(280081)
        self.first_use_txt:SetLocalText(110006)
        self.first_use_txt:SetActive(true)
        self.use_item_obj:SetActive(false)
        self.btn_image:LoadSprite(string.format(LoadPath.CommonNewPath, "Common_btn_green101"))
    elseif (LuaEntry.Player.renameTime < 1) then
        self.first_use_txt:SetLocalText(110006)
        self.first_use_txt:SetActive(true)
        self.use_item_obj:SetActive(false)
        self.btn_image:LoadSprite(string.format(LoadPath.CommonNewPath, "Common_btn_green101"))
    end
    
    self.nameTxt = self:AddComponent(UITextMeshProUGUIEx, nameTxt_path)
    self.nameTxt:SetLocalText(320763)
    self.deleteBtn = self:AddComponent(UIButton, deleteBtn_path)
    self.deleteBtn:SetOnClick(function()
        self.input:SetText("")
    end)
end
local function Update(self)
	if self.inputValue=="" then
		return
	end
	local state = self.ctrl:CheckName(self.inputValue)
	self:CheckNameChangeState(state)
end

local function OnDestroy(self)
    self.title = nil
    self.des = nil
    self.warn = nil
    self.first_use_txt = nil
    self.use_txt = nil
    self.des = nil
    self.warn = nil
    self.gray_img = nil
    self.use_item_obj = nil

    self.use_btn = nil
    self.input = nil
    self.close_btn = nil
    self.return_btn = nil
    self.inputValue = nil

    self.use_diamondtxt = nil
    
    self.diamondNum = nil
    
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
    self:InitButtonState()
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function InitButtonState(self)
	self.input:SetText("")
    self.inputValue=""
    self.gray_img:SetActive(false)
    --self.first_use_txt:SetColor(YellowBtnShadowGrayColor)
    --self.use_txt:SetColor(YellowBtnShadowGrayColor)
    self.canChange = false
	haveChangeName= self.ctrl:CheckHaveEnoughItem()
	diamondNum  =toInt(LocalController:instance():getStrValue("goods", "200021", "price"))
	if haveChangeName==true then
		diamondNum=1 --使用改名卡
		self.use_diamondtxt:SetText( 'X'..diamondNum)-----------赋值
		self.consumImg:LoadSprite(string.format(LoadPath.ItemPath,changeNameCardIcon))
		--self.icon_frame.gameObject:SetActive(true)
		self.consumImg.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
    else
		--self.icon_frame.gameObject:SetActive(false)
		self.use_diamondtxt:SetText(diamondNum)-----------赋值
		self.consumImg.transform:Set_localScale(ResetScale.x*1.2, ResetScale.y*1.2, ResetScale.z*1.2)
		self.consumImg:LoadSprite(string.format(LoadPath.ItemPath,diamondIcon))
		local num = CommonUtil.GetResOrItemCount(ResourceType.Gold);
		if num-diamondNum<0 then
			--self.gray_img:SetActive(true)
			return;
		end
	end

end
local function CanBuy()
	local num = CommonUtil.GetResOrItemCount(ResourceType.Gold)
	if haveChangeName==true then
		return true
	end
	if num-diamondNum<0 then
		return false
	end
	return true
end
local function IptOnValueChange(self,value)
	--if CanBuy()==false then
		--self.gray_img:SetActive(true)
		--return
	--else
		--self.gray_img:SetActive(false)
	--end 
    self.inputValue = value
    local state = self.ctrl:CheckName(self.inputValue)
    if state == CheckNameType.None then
        self.ctrl:SendCheckNameMessage(self.inputValue)
    else
        self:CheckNameChangeState(state)
    end
end
local function OnChangeNameClick(self)
	local state = checkState
	if self.inputValue=="" then
		state = CheckNameType.MinNameChar
	end
	print(state)

    if state == CheckNameType.IllegalChar then
		UIUtil.ShowTipsId(129082) 
	return
	elseif state == CheckNameType.MinNameChar or state == CheckNameType.MaxNameChar then
		UIUtil.ShowTipsId(120193) 
		return
	elseif state == CheckNameType.Exist then
		UIUtil.ShowTipsId(280038) 
		return
	elseif state == CheckNameType.SensitiveWords then
		UIUtil.ShowTipsId(280073) 
		return
	end
    if (LuaEntry.Player.renameTime < 1) then
        self.ctrl:SendChangeNameMessage(self.inputValue)
        self.ctrl:CloseSelf()
        return
    end
    local tips="280028"
	if haveChangeName==true then
	     tips="280171"
	else--没有改名卡判断钻石是否足够
		if CanBuy()==false then
			UIUtil.ShowTipsId("E100001") 
			return
		end
	end
	UIUtil.ShowMessage(Localization:GetString(tips,diamondNum), 2, GameDialogDefine.CONFIRM, GameDialogDefine.CANCEL, function()
			self.ctrl:SendChangeNameMessage(self.inputValue)
			self.ctrl:CloseSelf()
	end)
   -- if self.canChange then
       --  UIUtil.ShowTipsId(E100001) 
       -- self.ctrl:SendChangeNameMessage(self.inputValue)
    --end
end
local function OnCheckNameBack(self,data)
    local state = data
    self:CheckNameChangeState(state)
end
local function CheckNameChangeState(self,type)
	if self.inputValue=="" then
		self.warn:SetText("")
		return
	end 
	checkState = type
    if type == CheckNameType.None and self.ctrl:CheckHaveEnoughItem() then
        --self.gray_img:SetActive(false)
        --self.first_use_txt:SetColor(YellowBtnShadowLightColor)
        --self.use_txt:SetColor(YellowBtnShadowLightColor)
        self.warn:SetText("")
        self.canChange =true
    else
        --self.gray_img:SetActive(true)
        --self.first_use_txt:SetColor(YellowBtnShadowGrayColor)
        --self.use_txt:SetColor(YellowBtnShadowGrayColor)
        self.canChange = false
        if type == CheckNameType.MinNameChar or type == CheckNameType.MaxNameChar then
            self.warn:SetLocalText(120193) 
        elseif type == CheckNameType.Exist then
            self.warn:SetLocalText(280038) 
        elseif type == CheckNameType.IllegalChar then
            self.warn:SetLocalText(129082) 
        elseif type == CheckNameType.SensitiveWords then
            self.warn:SetLocalText(280073) 
        else
            self.warn:SetText("")
        end
    end
end
local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.NickNameChackEvent, self.OnCheckNameBack)

end
local function OnRemoveListener(self)
    base.OnRemoveListener(self)
    self:RemoveUIListener(EventId.NickNameChackEvent,self.OnCheckNameBack)
end
UIChangeNameView.OnCreate = OnCreate
UIChangeNameView.OnDestroy = OnDestroy
UIChangeNameView.InitButtonState = InitButtonState
UIChangeNameView.OnEnable = OnEnable
UIChangeNameView.OnDisable = OnDisable
UIChangeNameView.IptOnValueChange = IptOnValueChange
UIChangeNameView.OnChangeNameClick = OnChangeNameClick
UIChangeNameView.OnCheckNameBack = OnCheckNameBack
UIChangeNameView.CheckNameChangeState = CheckNameChangeState
UIChangeNameView.OnAddListener = OnAddListener
UIChangeNameView.OnRemoveListener = OnRemoveListener
--UIChangeNameView.Update = Update
return UIChangeNameView