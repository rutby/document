---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2022/1/19 17:20
---


local base = UIBaseContainer--Variable
local CommonLimitTimeShopPanel = BaseClass("CommonLimitTimeShopPanel", base)--Variable
local Localization = CS.GameEntry.Localization
local CommonGoodsShopItem = require "UI.UICommonShop.Component.CommonShopGoods.CommonGoodsShopItem"
local UIGray = CS.UIGray

local content_path = "Anim/ScrollView/Content"
local anim_path = "Anim"
local refreshTip_path = "Anim/Top/refreshTip"
local refreshCd_path = "Anim/Top/refreshTip/refreshCd"
local refreshTimes_path = "Anim/Top/refreshBtn/GameObject/refreshTimes"
local refreshCost_path = "Anim/Top/refreshBtn/GameObject"
local refreshCostIcon_path = "Anim/Top/refreshBtn/GameObject/refresh/refreshIcon"
local refreshCostNum_path = "Anim/Top/refreshBtn/GameObject/refreshCost"
local refreshBtn_path = "Anim/Top/refreshBtn"
local freeTxt_path = "Anim/Top/refreshBtn/freeTxt"
local resource_path = "Anim/Top/resource_go/UIMainTopResourceCell%s/root/resourceNum%s"

local ResourceTypeList =
{
    ResourceType.Food, ResourceType.Plank, ResourceType.Steel, ResourceType.Electricity
}

local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

local function OnDestroy(self)
    self:DelRefreshCdTimer()
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    self.contentN = nil
    self.animN = self:AddComponent(UIAnimator, anim_path)
    self.refreshTipN = self:AddComponent(UITextMeshProUGUIEx, refreshTip_path)
    self.refreshCdN = self:AddComponent(UITextMeshProUGUIEx, refreshCd_path)
    self.refreshTimesN = self:AddComponent(UITextMeshProUGUIEx, refreshTimes_path)
    self.refreshCostN = self:AddComponent(UIBaseContainer, refreshCost_path)
    self.refreshCostIconN = self:AddComponent(UIImage, refreshCostIcon_path)
    self.refreshCostNumN = self:AddComponent(UITextMeshProUGUIEx, refreshCostNum_path)
    self.refreshBtnN = self:AddComponent(UIButton, refreshBtn_path)
    self.refreshBtnN:SetOnClick(function()
        self:OnClickRefreshBtn()
    end)
    self.freeTxtN = self:AddComponent(UITextMeshProUGUIEx, freeTxt_path)
    self.resource_cells = {}
    for k,v in ipairs(ResourceTypeList) do
        self.resource_cells[v] = self:AddComponent(UITextMeshProUGUIEx, string.format(resource_path, k, k))
    end
end

local function ComponentDestroy(self)
    self:ClearItemCell()
end

local function DataDefine(self)
    self.curShowType = nil
    self.goodsList = {}
    self.goodsItemsList = {}
    self.model = {}
    self.listGO = {}
    self.refreshCostDic = nil
    self.next_timer_callback = function()
        self:NextFrameTimeCallback()
    end
end

local function DataDestroy(self)
    self:DeleteNextFrameTimer()
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.UpdateOneCommonShop, self.RefreshAll)
    self:AddUIListener(EventId.UpdateGold, self.RefreshAll)
    self:AddUIListener(EventId.RefreshItems, self.RefreshAll)
    self:AddUIListener(EventId.ResourceUpdated, self.UpdateResourceSignal)
end

local function OnRemoveListener(self)
    self:RemoveUIListener(EventId.UpdateOneCommonShop, self.RefreshAll)
    self:RemoveUIListener(EventId.UpdateGold, self.RefreshAll)
    self:RemoveUIListener(EventId.RefreshItems, self.RefreshAll)
    self:RemoveUIListener(EventId.ResourceUpdated, self.UpdateResourceSignal)
    base.OnRemoveListener(self)
end

local function ShowPanel(self, shopType)
    self.curShowType = shopType
    self.refreshTipN:SetLocalText(GameDialogDefine.NEXT_REFRESH_TIME)
    self.freeTxtN:SetLocalText(GameDialogDefine.FREE)
    self:RefreshResource()
    self:RefreshAll()
end

local function RefreshAll(self, shopType)
    if shopType and shopType ~= self.curShowType then
        return
    end
    
    local k1 = LuaEntry.DataConfig:TryGetNum("shop_random", "k1")
    local refreshed = DataCenter.CommonShopManager:GetLimitShopRefreshTimes()
    self.refreshTimesN:SetText(Localization:GetString("372234", k1 - refreshed .. "/" .. k1))

    if not self.refreshCostDic then
        self.refreshCostDic = {}
        local strCost = LuaEntry.DataConfig:TryGetStr("shop_random", "k2")
        local arrCost = string.split(strCost, ";")
        for i, v in ipairs(arrCost) do
            if not string.IsNullOrEmpty(v) then
                self.refreshCostDic[i] = tonumber(v)
            end
        end
    end

    if self.refreshCostDic[refreshed + 1] then
        if self.refreshCostDic[refreshed + 1] == 0 then
            self.freeTxtN:SetActive(true)
            self.refreshBtnN:LoadSprite(string.format(LoadPath.CommonNewPath, "Common_btn_green71"))
            self.refreshCostN:SetActive(false)
            self.refreshCostNumN:SetActive(false)
        else
            self.refreshBtnN:LoadSprite(string.format(LoadPath.CommonNewPath, "common_btn_yellow71"))
            self.freeTxtN:SetActive(false)
            self.refreshCostN:SetActive(true)
            self.refreshCostNumN:SetActive(true)
            self.refreshCostNumN:SetText(self.refreshCostDic[refreshed + 1])
            if self.refreshCostDic[refreshed + 1] < LuaEntry.Player.gold then
                self.refreshCostNumN:SetColor(WhiteColor)
            else
                self.refreshCostNumN:SetColor(RedColor)
            end
        end
    else
        self.freeTxtN:SetActive(false)
        self.refreshCostN:SetActive(false)
    end

    if refreshed >= k1 then
        UIGray.SetGray(self.refreshBtnN.transform, true, false)
    else
        UIGray.SetGray(self.refreshBtnN.transform, false, true)
    end
    

    --local todayRestTimeS = UITimeManager:GetInstance():GetResSecondsTo24()
    --local now = UITimeManager:GetInstance():GetServerTime()
    --self.refreshCdEndT = now + todayRestTimeS * 1000
    self.refreshCdEndT = DataCenter.CommonShopManager:GetLimitShopNextRefreshTs()
    self:AddRefreshCdTimer()
    self:SetRefreshCd()
    self:ShowCells()
end

local function OnInitScroll(self,go,index)
    local item = self:AddComponent(CommonGoodsShopItem, go)
    self.listGO[go] = item
end

local function OnUpdateScroll(self,go,index)
    local conf = self.goodsList[index + 1]
    go.name = conf.id
    local cellItem = self.listGO[go]
    if not cellItem then
        return
    end
    cellItem:SetItem(self.goodsList[index + 1])
end

local function OnDestroyScrollItem(self,go, index)

end

local function ClearItemCell(self)
    if self.contentN ~= nil then
        self:RemoveComponents(CommonGoodsShopItem)
        self.contentN:DestroyChildNode()
    end
end

local function AddRefreshCdTimer(self)
    self.RefreshCdTimerAction = function()
        self:SetRefreshCd()
    end

    if self.refreshCdTimer == nil then
        self.refreshCdTimer = TimerManager:GetInstance():GetTimer(1, self.RefreshCdTimerAction , self, false,false,false)
    end
    self.refreshCdTimer:Start()
end

local function SetRefreshCd(self)
    local curTime = UITimeManager:GetInstance():GetServerTime()
    local remainTime = math.ceil(self.refreshCdEndT - curTime)
    if remainTime > 0 then
        self.refreshCdN:SetText(UITimeManager:GetInstance():MilliSecondToFmtString(remainTime))
    else
        self.refreshCdN:SetText("")
        self:DelRefreshCdTimer()
        SFSNetwork.SendMessage(MsgDefines.GetCommonShopInfo, self.curShowType)
    end
end

local function DelRefreshCdTimer(self)
    if self.refreshCdTimer ~= nil then
        self.refreshCdTimer:Stop()
        self.refreshCdTimer = nil
    end
end

local function OnClickRefreshBtn(self)
    local k3 = LuaEntry.DataConfig:TryGetNum("shop_random", "k1")
    local refreshed = DataCenter.CommonShopManager:GetLimitShopRefreshTimes()
    if refreshed < k3 then
        local refreshed = DataCenter.CommonShopManager:GetLimitShopRefreshTimes()
        local tempCost = self.refreshCostDic[refreshed + 1]
        local callback = function()
            if tempCost <= LuaEntry.Player.gold then
                UIGray.SetGray(self.refreshBtnN.transform, true, false)
                SFSNetwork.SendMessage(MsgDefines.RefreshCommonShop, self.curShowType)
            else
                GoToUtil.GotoPayTips()
            end
        end
        if tempCost > 0 then
            UIUtil.ShowUseDiamondConfirm(TodayNoSecondConfirmType.BuyUseDialog,Localization:GetString(320490),2, GameDialogDefine.CONFIRM, GameDialogDefine.CANCEL, function()
                callback()
            end)
        else
            callback()
        end
    end
end

function CommonLimitTimeShopPanel:UpdateResourceSignal()
    self:RefreshResource()
end

function CommonLimitTimeShopPanel:RefreshResource()
    for k,v in pairs(self.resource_cells) do
        v:SetText(string.GetFormattedSpecial(LuaEntry.Resource:GetCntByResType(k)))
    end
end


function CommonLimitTimeShopPanel:ShowCells()
    if self.contentN == nil then
        self:AddNextFrameTimer()
    else
        self:RefreshCells()
    end
end

function CommonLimitTimeShopPanel:RefreshCells()
    self.goodsList = DataCenter.CommonShopManager:GetGoodsListByShopType(self.curShowType)
    self.contentN:SetItemCount(#self.goodsList)
end

function CommonLimitTimeShopPanel:AddNextFrameTimer()
    if self.timer == nil then
        self.timer = TimerManager:GetInstance():GetTimer(NextFrameTime, self.next_timer_callback,self, true, false, false)
    end
    self.timer:Start()
end

function CommonLimitTimeShopPanel:DeleteNextFrameTimer()
    if self.timer ~= nil then
        self.timer:Stop()
        self.timer = nil
    end
end

function CommonLimitTimeShopPanel:NextFrameTimeCallback()
    self:DeleteNextFrameTimer()
    self.contentN = self:AddComponent(GridInfinityScrollView, content_path)
    local bindFunc1 = BindCallback(self, self.OnInitScroll)
    local bindFunc2 = BindCallback(self, self.OnUpdateScroll)
    local bindFunc3 = BindCallback(self, self.OnDestroyScrollItem)
    self.contentN:Init(bindFunc1, bindFunc2, bindFunc3)
    self:RefreshCells()
end




CommonLimitTimeShopPanel.OnCreate = OnCreate
CommonLimitTimeShopPanel.OnDestroy = OnDestroy
CommonLimitTimeShopPanel.OnAddListener = OnAddListener
CommonLimitTimeShopPanel.OnRemoveListener = OnRemoveListener
CommonLimitTimeShopPanel.ComponentDefine = ComponentDefine
CommonLimitTimeShopPanel.ComponentDestroy = ComponentDestroy
CommonLimitTimeShopPanel.DataDefine = DataDefine
CommonLimitTimeShopPanel.DataDestroy = DataDestroy

CommonLimitTimeShopPanel.ShowPanel = ShowPanel
CommonLimitTimeShopPanel.RefreshAll = RefreshAll
CommonLimitTimeShopPanel.OnInitScroll = OnInitScroll
CommonLimitTimeShopPanel.OnUpdateScroll = OnUpdateScroll
CommonLimitTimeShopPanel.OnDestroyScrollItem = OnDestroyScrollItem
CommonLimitTimeShopPanel.ClearItemCell = ClearItemCell
CommonLimitTimeShopPanel.OnClickRefreshBtn = OnClickRefreshBtn
CommonLimitTimeShopPanel.AddRefreshCdTimer = AddRefreshCdTimer
CommonLimitTimeShopPanel.SetRefreshCd = SetRefreshCd
CommonLimitTimeShopPanel.DelRefreshCdTimer = DelRefreshCdTimer


return CommonLimitTimeShopPanel