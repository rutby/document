---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by guq.
--- DateTime: 2021/4/29 16:29
---
local UICapacityTableCtrl = BaseClass("UICapacityTableCtrl", UIBaseCtrl)
local Localization = CS.GameEntry.Localization

local function CloseSelf(self)
    UIManager:GetInstance():DestroyWindow(UIWindowNames.UICapacityTableNew)
end

local function Close(self)
    UIManager:GetInstance():DestroyWindowByLayer(UILayer.Normal)
end
local function InitData(self)
end
local function GetItemListByType(self,tabType,itemType,selectId)
    local result = {}
    local result2 = {}
    if tabType == UICapacityTableTab.Resource then
        for k,v in ipairs(UICapacityTableResourceType) do
            local param = {}
            param.resourceType = v
            param.tabType = tabType
            param.quality_name = "Common_img_quality_blue"
            param.icon_name = DataCenter.ResourceManager:GetResourceIconByType(v)
            table.insert(result,param)
        end
    --elseif tabType == UICapacityTableTab.Farming then
        -- deleted
    elseif tabType == UICapacityTableTab.HeroEquip then
        local equipList = DataCenter.HeroEquipManager:GetAllEquipSorted()
        for k,equip in pairs(equipList) do
            local param = {}
            param.tabType = tabType
            param.heroId = equip.heroId
            param.equipUuid = equip.uuid
            param.flagtxt = equip:GetLvText()
            param.quality_name = HeroEquipUtil:GetEquipmentQualityBG(equip.equipId)
            param.icon_name = HeroEquipUtil:GetEquipmentIcon(equip.equipId)
            table.insert(result,param)
        end
    elseif tabType == UICapacityTableTab.Item then
        local goodsIsChangeState = false
        local itemInfo = DataCenter.ItemData.ItemInfos
        --道具处理  
        --ref UIBagCtrl
        for k,v in pairs(itemInfo) do
            local goods = DataCenter.ItemTemplateManager:GetItemTemplate(v.itemId)
            if goods ~= nil and v.count > 0 and goods.page >= 0 then
                local param = {}
                param.itemId = goods.id
                param.tabType = tabType
                param.icon_name = string.format(LoadPath.ItemPath, goods.icon) 
                param.pages = goods.page
                param.order_num = goods.order_num
                param.redState = v.redState
                
                param.template = goods
                param.data = v
                     
                local join_method = -1
                local icon_join = nil
                if goods.join_method ~= nil and goods.join_method > 0 and goods.icon_join ~= nil and goods.icon_join ~= "" then
                    join_method = goods.join_method
                    icon_join = goods.icon_join
                end
                if join_method > 0 and icon_join ~= nil and icon_join ~= "" then
                    --英雄
                    local tempJoin = string.split(icon_join,";")
                    if #tempJoin > 1 then
                        param.quality_name = tempJoin[2]
                    end
                    if #tempJoin > 2 then
                        param.quality_name = tempJoin[3]
                    end
                else
                    param.quality_name = DataCenter.ItemTemplateManager:GetToolBgByColor(goods.color)
                end
                local item = DataCenter.ItemData:GetItemById(param.itemId)
                if item ~= nil then
                    param.num = string.GetFormattedSeperatorNum(item.count)
                end
                param.flagtxt = ""
                if goods.type == 2 then
                    if goods.para1 ~= nil and goods.para1 ~= "" then
                        local para1 = goods.para1
                        local temp = string.split(para1,';')
                        if temp ~= nil and #temp > 1 then
                            param.flagtxt = temp[1]..temp[2]
                        end
                    end
                elseif goods.type == 3 or goods.type == GOODS_TYPE.GOODS_TYPE_91 then
                    local type2 = goods.type2
                    if type2 ~= 999 and goods.para ~= nil and goods.para ~= "" then
                        local res_num = tonumber(goods.para)    
                        param.flagtxt = string.GetFormattedStr(res_num)
                    end
                elseif goods.type == 5 then
                    if goods.para3 ~= nil and goods.para3 ~= "" then
                        local res_num = tonumber(goods.para3)
                        param.flagtxt = string.GetFormattedStr(res_num)
                    end
                end
                if param.pages == itemType then
                    table.insert(result,param)
                elseif itemType == 0 then
                    --当道具数量达到配置数量及以上时，打开红点更新 goods.important
                    if not v.redState then
                        goodsIsChangeState = false
                        if goods.important == 2 then
                            if goods.needCount and goods.needCount > v.count then
                                goodsIsChangeState = false
                                param.redState = false
                            end
                        else
                            v.redState = true
                        end
                    end
                    table.insert(result,param)
                end
            end
        end
        table.sort(result,function(a, b)
            if selectId == a.itemId then
                return true
            end
            if selectId == b.itemId then
                return false
            end
            local orderA = a.order_num
            local orderB = b.order_num
            if  orderA < orderB then
                return true
            else
                if orderA == orderB then
                    return tonumber(a.itemId) < tonumber(b.itemId)
                end
            end
            return false
        end )
        if itemType == 0 then
            if not goodsIsChangeState then
                EventManager:GetInstance():Broadcast(EventId.OnGoodsRedState,false)
            end
        end
    end
    local i = 0
    local data
    for k,v in ipairs(result) do
        local mod = i % 4
        if mod == 0 then
            data = {}
            table.insert(data, v)
        else
            table.insert(data, v)
        end
        if mod == 3 or i == (#result - 1) then
            table.insert(result2, data)
        end
        i = i + 1
    end
    return result,result2
end

local function GetItemTypeName(self,type)
    if type == UIBagBtnType.Hot then
        --return Localization:GetString("320013")
        return Localization:GetString("150118")
    elseif type == UIBagBtnType.War then
        return Localization:GetString("100158")
    elseif type == UIBagBtnType.Buff then
        return Localization:GetString("100159")
    elseif type == UIBagBtnType.Resource then
        return Localization:GetString("100024")
    elseif type == UIBagBtnType.Other then
        return Localization:GetString("100374")
    elseif type == UIBagBtnType.HeroEquip then
        return Localization:GetString(GameDialogDefine.HERO_EQUIP23)
    end
end

local function GetItemDataByItemId(self,itemId)
    local data = {}
    data.itemId = itemId
    return data
end

local function GetTabRedState(self,tabType)
    local redNum = 0
    if tabType == UICapacityTableTab.Item then
        redNum = DataCenter.ItemData:GetStorageRedNum()
    end
    return redNum
end

function UICapacityTableCtrl:OnWearEquip()
    self:CloseSelf()
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIHeroList, { anim = false, UIMainAnim = UIMainAnimType.AllHide })
end

function UICapacityTableCtrl:OnEquipUpgrade(equipUuid)
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIHeroEquipInfo, NormalBlurPanelAnim, equipUuid)
end

local function OnItemUse(self, item,count)
    -- body

    local template = DataCenter.ItemTemplateManager:GetItemTemplate(item.itemId)
    if DataCenter.ItemTemplateManager:IsNewVersionGoods(template.version) then
        return
    end
    
    local useItemFromType = 0
    if template.type == 3 then
        if template.type2 == ResourceType.Metal or template.type2 == ResourceType.Water or template.type2 == ResourceType.Electricity or template.type2 == ResourceType.Money then
            useItemFromType = 1
        end
    end
    
    if template.type == GOODS_TYPE.GOODS_TYPE_110 then
        local decorationId = template.para1
        if not string.IsNullOrEmpty(decorationId) then
            self:CloseSelf()

            local decorationTemplate = DataCenter.DecorationTemplateManager:GetTemplate(toInt(decorationId))
            if decorationTemplate then
                DecorationUtil.OpenDecorationPanel(decorationTemplate.type, decorationTemplate.id)
            end
        end
        return
    elseif template.type == GOODS_TYPE.CALL_BOSS_OR_REWARD then
        DataCenter.ActDrakeBossManager:OnClickUseItem(item)
        return
    end
    if template.type == GOODS_TYPE.GOODS_TYPE_107 or template.type == GOODS_TYPE.GOODS_TYPE_108 or (template.type == GOODS_TYPE.GOODS_TYPE_5 and template.type2 == GOODS_TYPE2.ResourceItem)  then
        local oneItemContainResourceItemNum = 1
        if not string.IsNullOrEmpty(template.para3) then 
            oneItemContainResourceItemNum = toInt(template.para3)
        end
    elseif template.type == GOODS_TYPE.GOODS_TYPE_4 and template.type2 == 4 then
        local statusId = template.para
        local statusType2 = GetTableData(TableName.StatusTab, statusId, "type2") or -1
        if statusType2 == 24 then
            local statusList = LuaEntry.Effect:GetStatusMap()
            local serverTime = UITimeManager:GetInstance():GetServerTime()
            for k,v in pairs(statusList) do
                local status = k
                local type2 = GetTableData(TableName.StatusTab, status, "type2") or -1
                if statusType2 > 0 and type2 == statusType2 then
                    if status ~= statusId and v > serverTime then
                        UIUtil.ShowMessage(Localization:GetString("372579"), 2, GameDialogDefine.CANCEL, GameDialogDefine.CONFIRM, nil, function()
                            SFSNetwork.SendMessage(MsgDefines.ItemUse, { uuid = item.uuid,num = count ,useItemFromType = useItemFromType})
                        end)
                        return
                    end
                end
            end
        end
    end
    if false then
        local type_num = template.go_to
        if type_num == 1 or type_num == 4 then -- 1是跳转到军官碎片商店，4是PVE商店
            self:Close()
            UI:OpenUIForm(CS.UIAssets.UITokenShop, UILayer.Normal.Name)
            return
        end
        if type_num == 3 then -- 材料商店
            self:Close()
            local para = CS.UIPartsMaterialInfo.Param()
            para.OpenShop = true
            para.EnableMain = false
            UI:OpenUIForm(CS.UIAssets.UIPartsMaterialInfo, UILayer.Normal.Name, para)
            return
        end
        if type_num == 7 then
            return
        elseif type_num > 0 then -- 跳转到商店
            if UI:IsLoadingUIForm(CS.UIAssets.UIMultipleShop) or UI:HasUIForm(CS.UIAssets.UIMultipleShop) then
                return
            end
            UI.OpenUIForm(CS.UIAssets.UIMultipleShop, UILayer.Normal.Name, false)
        end
    end

    local type = template.type
    --英雄碎片
    if type == GOODS_TYPE.GOODS_TYPE_98 then
        local jigsawCost = HeroUtils.GetJigsawCost(item.itemId)
        if count >= jigsawCost then
            local exchangeCount = count // jigsawCost
            SFSNetwork.SendMessage(MsgDefines.LotteryHeroCard, item.para1, 0, 0, tostring(item.itemId), exchangeCount)
        else
            UIUtil.ShowTipsId(GameDialogDefine.GOODNE) 
        end
        return
    end

    --特定英雄碎片
    -- TODO: Beef 可能要新的碎片，这里先注释，后面再改
    --if type == GOODS_TYPE.GOODS_TYPE_99 then
    --    local exchangeCount = count // HeroUtils.GetJigsawCost(item.itemId)
    --    if exchangeCount > 0 then
    --        SFSNetwork.SendMessage(MsgDefines.HeroExchange, item.itemId, exchangeCount)
    --    else
    --        UIUtil.ShowTipsId(GameDialogDefine.GOODNE) 
    --    end
    --    return
    --end
    
    -- 英雄组合选择箱
    if type == GOODS_TYPE.GOODS_TYPE_59 or type == GOODS_TYPE.GOODS_TYPE_102 or type == GOODS_TYPE.GOODS_TYPE_107 or type == GOODS_TYPE.GOODS_TYPE_122 or type == GOODS_TYPE.GOODS_TYPE_123 then
        if type == GOODS_TYPE.GOODS_TYPE_107  then
            -- deleted
        elseif type == GOODS_TYPE.GOODS_TYPE_122 then
            local max = DataCenter.ArmyManager:GetArmyNumMax()
            local cur = DataCenter.ArmyManager:GetTotalArmyNum()
            if count > max - cur then
                UIUtil.ShowMessage(Localization:GetString("140305"), 1, "110003", GameDialogDefine.CANCEL, function()
                    GoToUtil.CloseAllWindows()
                    local buildData = DataCenter.BuildManager:GetFunbuildByItemID(BuildingTypes.FUN_BUILD_BARRACKS)
                    if buildData ~= nil and buildData.state == BuildingStateType.Normal and buildData.level > 0 then
                        GoToUtil.GotoOpenBuildCreateWindow(UIWindowNames.UIBuildCreate, NormalPanelAnim, {buildId = buildData.itemId})
                    else
                        GoToUtil.GotoCityByBuildId(BuildingTypes.FUN_BUILD_BARRACKS)
                    end
                end)
                return
            end
        end
        UIManager:GetInstance():OpenWindow(UIWindowNames.UICapacityBoxSelect,NormalBlurPanelAnim,item.uuid,count,template)
        return
    end
    
    -- 专精
    local oneMasteryExp = UIUtil.GetMasteryExpByItemId(item.itemId)
    local totalMasteryExp = oneMasteryExp * count
    if totalMasteryExp > 0 then
        local rest = DataCenter.MasteryManager:GetRestExpToMaxLevel()
        if rest <= 0 then
            UIUtil.ShowTipsId(400013)
            return
        else
            if totalMasteryExp > rest then
                UIUtil.ShowMessage(Localization:GetString("104336", totalMasteryExp - rest), 2, nil, nil, function()
                    SFSNetwork.SendMessage(MsgDefines.ItemUse, { uuid = item.uuid, num = count, useItemFromType = useItemFromType })
                end)
                return
            end
        end
    end

    --if type == GOODS_TYPE.GOODS_TYPE_59 or type == GOODS_TYPE.GOODS_TYPE_46 then
    --    local para = CS.AZCompileRewardLayer.Param()
    --    para.itemId = item.itemId
    --    para.selectedIndex = 0
    --    CS.UIPreAdd.OpenAZCompileRewardLayer(para)
    --    return
    --end

    --在联盟内，即可使用（联盟盟主除外）
    --联盟盟主迁城需要有领地
    if item.itemId == "200005" then -- 联盟迁城
        if not LuaEntry.Player:IsInAlliance() then
            UIUtil.ShowTipsId(GameDialogDefine.NO_JOIN_ALLIANCE)
            GoToUtil.GotoOpenView(UIWindowNames.UIAllianceIntro,{ anim = true,isBlur = true})
        else
            local myAlId = LuaEntry.Player.allianceId
            local hasAlCity = DataCenter.WorldAllianceCityDataManager:CheckIfHasAlCity(myAlId)
            
            if DataCenter.AllianceBaseDataManager:IsSelfLeader() then
                if not hasAlCity then
                    UIUtil.ShowTipsId(390848) 
                    return
                end
            end
            
            --local allianceId = LuaEntry.Player.allianceId
            --local selfMarch = CS.SceneManager.World:GetOwnerMarches(LuaEntry.Player.uid, allianceId)
            local selfMarchCount = UIUtil.GetSelfMarchCountExceptGolloes()
            --if selfMarch ~= nil and selfMarch.Count > 0 then
            if selfMarchCount > 0 then
                UIUtil.ShowMessage(CS.GameEntry.Localization:GetString(GameDialogDefine.PLEASE_BACK_MARCH), 2, GameDialogDefine.CONFIRM, GameDialogDefine.CANCEL, function()
                end, function() end)
                self:CloseSelf()
            else
                --新需求，系统城也可以迁城
                --local baseData = DataCenter.AllianceBaseDataManager:GetAllianceBaseData()
                --if baseData:CheckIfIsVirtualLeader() then
                --    UIUtil.ShowTipsId(390870) 
                --    return
                --end
                --local leaderData = DataCenter.AllianceMemberDataManager:GetAllianceMemberByUid(baseData.leaderUid)
                --local targetPoint = leaderData.pointId
                --if targetPoint == 0 then
                --    UIUtil.ShowTipsId(129090) 
                --    return
                --end
                --打开迁城界面，先请求落点

                SFSNetwork.SendMessage(MsgDefines.WorldAlMove, 0)
                --if hasAlCity then
                --    local param = UIMoveCityView.Param.New()
                --    param.pointId = CS.SceneManager.World.curIndex
                --    param.itemId = "200005"
                --    param.limitDistance = false
                --    UIManager:GetInstance():OpenWindow(UIWindowNames.UIMoveCity,{anim = true,UIMainAnim = UIMainAnimType.AllHide},param)
                --else
                --    SFSNetwork.SendMessage(MsgDefines.WorldAlMove)
                --end
                self:CloseSelf()
            end
            return
        end
        return
    elseif item.itemId == "200070" then -- 限时招募
        if CS.ActivityController.Instance:IsBetweenActByType(52) then
            local para = CS.UIWelfareCenter.Param()
            para.currentTab = 27
            CS.UIPreAdd.OpenUIWelfareCenter(para)
        else
            UIUtil.ShowTipsId(360215) 
        end
        return
    --elseif item.itemId == CS.FBDrawActController.Instance.m_outToolId then
    --    if CS.FBDrawActController.Instance:CheckActIsOpen() then
    --        local para = CS.UIWelfareCenter.Param()
    --        para.currentTab = 34
    --        para.showLoading = false
    --        CS.UIPreAdd.OpenUIWelfareCenter(para)
    --    else
    --        UIUtil.ShowMessage(Localization:GetString("360215"))
    --    end
    --    return
    elseif item.itemId == "200002" then     --迁城
        --local allianceId = LuaEntry.Player.allianceId
        --local selfMarch = CS.SceneManager.World:GetOwnerMarches(LuaEntry.Player.uid, allianceId)
        local selfMarchCount = UIUtil.GetSelfMarchCountExceptGolloes()
        --if selfMarch ~= nil and selfMarch.Count > 0 then
        if selfMarchCount > 0 then
            UIUtil.ShowMessage(CS.GameEntry.Localization:GetString(GameDialogDefine.PLEASE_BACK_MARCH), 2, GameDialogDefine.CONFIRM, GameDialogDefine.CANCEL, function()
            end, function() end)
            self:CloseSelf()
        else
            --打开迁城界面
            --local param = {}
            --param.pointId = CS.SceneManager.World.curIndex
            --param.itemId = "200002"
            GoToUtil.GotoWorldPos(SceneUtils.TileIndexToWorld(CS.SceneManager.World.curIndex,ForceChangeScene.World), CS.SceneManager.World.InitZoom,LookAtFocusTime,function()
                UIUtil.TryMoveCity(PlaceBuildType.MoveCity_Cmn, CS.SceneManager.World.curIndex)
            end)
            --UIUtil.TryMoveCity(PlaceBuildType.MoveCity_Cmn, CS.SceneManager.World.curIndex)
            self:CloseSelf()
        end
        return
    elseif item.itemId == "200021" then     --改名
        self:CloseSelf()
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIChangeName,{anim = true})
        return
    elseif item.itemId == "230007" then -- S1橙色英雄碎片
        local configOpenState = LuaEntry.DataConfig:CheckSwitch("hero_postershop")
        if configOpenState then
            self:CloseSelf()
            UIManager:GetInstance():OpenWindow(UIWindowNames.UIHeroResetShop)
        else
            UIUtil.ShowTipsId(390310)
        end
        return
    elseif item.itemId == "200067" then -- 奇袭
        -- 奇袭
        local param = {}
        param.titleText = Localization:GetString("142506")
        param.nameText = Localization:GetString(template.name)
        param.descText = Localization:GetString(template.description)
        param.infoText = Localization:GetString("180224")
        param.btnText = Localization:GetString("110006")
        param.conditionTipText = Localization:GetString("180225")
        param.itemId = item.itemId
        param.condition = function(index)
            local list = DataCenter.ArmyFormationDataManager:GetArmyFormationIdList()
            local fUuid = list[index]
            return fUuid ~= nil and not DataCenter.FormStatusManager:CanDirectAttackCity(fUuid)
        end
        param.callback = function(index)
            local list = DataCenter.ArmyFormationDataManager:GetArmyFormationIdList()
            SFSNetwork.SendMessage(MsgDefines.ItemUse, { uuid = item.uuid, num = 1, useItemFromType = 0, formationUuid = list[index] })
        end
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIChooseCar, { anim = true }, param)
        return
    end
    
    SFSNetwork.SendMessage(MsgDefines.ItemUse, { uuid = item.uuid,num = count ,useItemFromType = useItemFromType})
end

local function OnSearchEnd(self, pointId, uuid)
    local worldPosition = SceneUtils.TileIndexToWorld(pointId)
    WorldArrowManager:GetInstance():ShowArrowEffect(uuid,worldPosition,ArrowType.Monster)
    GoToUtil.GotoWorldPos(worldPosition, CS.SceneManager.World.InitZoom)
    self:CloseSelf()
end

local function VipUpdate(self,param)
    if param == 1 then
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIVIPUpgradePopUp,{ anim = true})
    end
end

UICapacityTableCtrl.CloseSelf = CloseSelf
UICapacityTableCtrl.Close = Close
UICapacityTableCtrl.InitData = InitData
UICapacityTableCtrl.GetItemListByType =GetItemListByType
UICapacityTableCtrl.GetItemDataByItemId= GetItemDataByItemId
UICapacityTableCtrl.GetItemTypeName= GetItemTypeName
UICapacityTableCtrl.OnItemUse = OnItemUse
UICapacityTableCtrl.GetTabRedState = GetTabRedState
UICapacityTableCtrl.OnSearchEnd = OnSearchEnd
UICapacityTableCtrl.VipUpdate = VipUpdate

return UICapacityTableCtrl