---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by guq.
--- DateTime: 2021/4/29 16:29
---
local ResourceItem = BaseClass("ResourceItem", UIBaseContainer)
local base = UIBaseContainer

local UIHeroCellSmall = require "UI.UIHero2.Common.UIHeroCellSmall"

local item_quality_path = "clickBtn/ImgQuality"
local item_quality_fg_path = "clickBtn/ImgQualityFg"
local item_icon_path = "clickBtn/ItemIcon"
local hero_icon_path = "clickBtn/heroMask/heroIcon"
local btn_path = "clickBtn"
local item_num_path = "clickBtn/NumText"
local flag_text_path = "clickBtn/FlagGo/FlagText"
local flag_go_path = "clickBtn/FlagGo"
local redDot_path = "clickBtn/NewDotL"
local red_img_path = "clickBtn/NewDotL/redDot"
local equip_hero_cell_path = "clickBtn/UIHeroCellSmall"

local showFormatNumStrMoreThan = 10000
-- 创建
local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
end

-- 销毁
local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

-- 显示
local function OnEnable(self)
    base.OnEnable(self)
end

-- 隐藏
local function OnDisable(self)
    base.OnDisable(self)
end

--控件的定义
local function ComponentDefine(self)
    self.item_quality = self:AddComponent(UIImage, item_quality_path)
    self.item_quality_fg = self:AddComponent(UIImage, item_quality_fg_path)
    self.item_icon = self:AddComponent(UIImage, item_icon_path)
    self.hero_icon = self:AddComponent(UIImage, hero_icon_path)
    --self.unlock_obj = self:AddComponent(UIBaseContainer, unlock_obj_path)
    self.item_num = self:AddComponent(UITextMeshProUGUIEx, item_num_path)
    --self.protect_txt = self:AddComponent(UIText, protect_txt_path)
    --self.slider = self:AddComponent(UISlider, slider_path)
    --self.slider_num = self:AddComponent(UIText, slider_num_path)
    --self.lock_txt = self:AddComponent(UIText, lock_txt_path)
    --self.protect_num = self:AddComponent(UIText, protect_num_path)
    self.btn = self:AddComponent(UIButton, btn_path)
    --self.slider_img = self:AddComponent(UIImage, slider_img_path)
    self.btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Common_SelectGoods)
        self:OnBtnClick()
    end)

    self.flag_text = self:AddComponent(UITextMeshProUGUIEx, flag_text_path)
    self.flag_go = self:AddComponent(UIBaseContainer, flag_go_path)
    self.redDot = self:AddComponent(UIBaseContainer,redDot_path)
    self.red_img = self:AddComponent(UIBaseContainer,red_img_path)
    
    self.imgExtra = self:AddComponent(UIImage,"clickBtn/ImgExtra")

    self.hero = self:AddComponent(UIHeroCellSmall, equip_hero_cell_path)
    self.hero:SetActive(false)
end
--控件的销毁
local function ComponentDestroy(self)
    self.item_quality = nil
    self.item_icon = nil
    --self.unlock_obj = nil
    --self.protect_txt = nil
    --self.slider = nil
    --self.slider_num = nil
    --self.lock_txt = nil
    self.item_num = nil
    self.btn = nil
    self.num = nil
    self.red_img:SetActive(false)
end

--变量的定义
local function DataDefine(self)
    self.param = {}
end

--变量的销毁
local function DataDestroy(self)
    self.param = nil
    if self.delay then
        self.delay:Stop()
        self.delay = nil
    end
end

local function RedDotRefresh(self,state)
    if self.param.tabType == UICapacityTableTab.Item then
        if self.param.template and self.param.template.important == 2  then
            self.red_img:SetActive(not state)
            self.redDot:SetActive(false)
            DataCenter.ItemData:SetItemRed(self.param.data.uuid)
        else
            self.redDot:SetActive(not state)
            self.red_img:SetActive(false)
        end
    elseif self.param.tabType == UICapacityTableTab.Farming then
        self.red_img:SetActive(self.param.isShowRed)
        self.redDot:SetActive(false)
    end
end

-- 全部刷新
local function RefreshData(self,param)
    self.param = param
    self.imgExtra:SetActive(false)
    --self:RedDotRefresh(true)
    if param.tabType == UICapacityTableTab.Item then
        local itemTemplate = DataCenter.ItemTemplateManager:GetItemTemplate(param.itemId)
        if itemTemplate.type == GOODS_TYPE.GOODS_TYPE_201 then
            self.item_icon:SetActive(false)
            self.item_quality_fg:SetActive(true)
            self.hero_icon:SetActive(true)
            
            local heroId = itemTemplate.para1
            local rarity = GetTableData(HeroUtils.GetHeroXmlName(), heroId, "rarity")
            local bgIcon = HeroUtils.GetHeroBgByColor(tonumber(rarity))
            self.hero_icon:LoadSprite(HeroUtils.GetHeroIconPath(heroId))
            self.item_quality:LoadSprite(bgIcon .. "_poster")
            self.item_quality_fg:LoadSprite(bgIcon .. "_poster_fg")
        else
            self.item_icon:SetActive(true)
            self.item_quality_fg:SetActive(false)
            self.hero_icon:SetActive(false)
            self.item_icon:LoadSprite(self.param.icon_name)
            self.item_quality:LoadSprite(self.param.quality_name)
        end
        if self.param.flagtxt ~= "" then
            self.flag_go:SetActive(true)
            self.flag_text:SetText(self.param.flagtxt)
        else
            self.flag_go:SetActive(false)
        end
    elseif param.tabType == UICapacityTableTab.HeroEquip then
        self.item_icon:SetActive(true)
        self.item_quality_fg:SetActive(false)
        self.hero_icon:SetActive(false)
        self.item_num:SetActive(false)
        self.redDot:SetActive(false)
        self.red_img:SetActive(false)
        self.item_icon:SetActive(true)
        self.flag_go:SetActive(self.param.flagtxt ~= '')
        self.flag_text:SetText(self.param.flagtxt)
        self.item_icon:LoadSprite(self.param.icon_name)
        self.item_quality:LoadSprite(self.param.quality_name)
        if self.param.heroId ~= 0 then
            self.hero:SetActive(true)
            self.hero:InitWithConfigId(self.param.heroId, nil, nil, true)
            self.hero:SetStarActive(false)
            self.hero:SetCampActive(false)
        end
    else
        self.flag_go:SetActive(false)
        self.item_icon:SetActive(true)
        self.item_quality_fg:SetActive(false)
        self.hero_icon:SetActive(false)
        self.item_icon:LoadSprite(self.param.icon_name)
        self.item_quality:LoadSprite(string.format(LoadPath.ItemPath,self.param.quality_name))
        if self.view.curSelectCell and self.param.index == self.view.curSelectCell then
            self.delay = TimerManager:GetInstance():DelayInvoke(function()
                self:OnBtnClick()
            end, 0.2)
        end
    end
    
    if self.param.num ~= nil then
        self.item_num:SetActive(true)
        self.item_num:SetText(self.param.num)
        --self.btn:SetActive(false)
    else
        self:RefreshNum()
    end
end

local function OnBtnClick(self)
    if self.param.callBack ~= nil then
        --当选中各自为道具并且有红点状态时更新状态
        --if not self.param.template or self.param.template.important ~= 2 then
            if not self.param.redState then
                self:RedDotRefresh(true)
                self.view:RedReference(self.param.tabType,self.param.index)
            end
        --end
        self.param.callBack(self.transform,self.param.index)
        return
    end
    local cellW = self.item_icon.rectTransform.rect.width
    local posX = self.item_icon.transform.position.x
    local posY = self.item_icon.transform.position.y
    local scrollPos = self.view.scroll_view.transform.position
    local rect = self.view.scroll_view.rectTransform.rect
    local arrowMinY = scrollPos.y + rect.y;
    local arrowMaxY = arrowMinY + rect.height;
    local index = toInt(self.__name)
    --local isLineEnd = math.fmod(toInt(self.__name), 6) == 0
    local isLineEnd = self.param.constraintCount * 0.5 < (self.param.index - 1) % self.param.constraintCount + 1
    if self.param.tabType == UICapacityTableTab.Resource then
        --UIManager:GetInstance():OpenWindow(UIWindowNames.UIResourceBag,{anim = true},self.param.resourceType)
    else
        local uuid = self.uuid
        --UIManager:GetInstance():OpenWindow(UIWindowNames.UICapacityTip,{anim = true,playEffect = false},  arrowMinY, arrowMaxY, isLineEnd, self.param.tabType, posX, posY, cellW, self.param.itemId, uuid)
        --if self.uuid~=nil and self.uuid>0 then
        --    local posX = self.item_icon.transform.position.x
        --    local posY = self.item_icon.transform.position.y
        --    UIManager:GetInstance():OpenWindow(UIWindowNames.UICapacityTip,self.uuid,posX,posY)
        --else
        --    UIUtil.ShowTips(Localization:GetString("130194",0))
        --end

        if self.param.tabType == UICapacityTableTab.Farming then
            self.red_img:SetActive(false)
            self.view:RedReference(self.param.tabType,self.param.index)
        end
    end
end

local function RefreshNum(self)
    --local storageMax = 0
    --local protectMax = 0
    local curNum = 0

    if curNum >= showFormatNumStrMoreThan then
        self.item_num:SetText(string.GetFormattedStr(curNum))
    else
        self.item_num:SetText(string.GetFormattedSeperatorNum(curNum))
    end
end

local function GetIndex(self)
    return self.param.index
end

ResourceItem.OnCreate = OnCreate
ResourceItem.OnDestroy = OnDestroy
ResourceItem.OnBtnClick = OnBtnClick
ResourceItem.OnEnable = OnEnable
ResourceItem.OnDisable = OnDisable
ResourceItem.ComponentDefine = ComponentDefine
ResourceItem.ComponentDestroy = ComponentDestroy
ResourceItem.DataDefine = DataDefine
ResourceItem.DataDestroy = DataDestroy
ResourceItem.RefreshNum = RefreshNum
ResourceItem.RefreshData = RefreshData
ResourceItem.RedDotRefresh = RedDotRefresh
ResourceItem.GetIndex = GetIndex

return ResourceItem