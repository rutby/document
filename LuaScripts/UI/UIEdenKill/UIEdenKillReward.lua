---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2023/8/3 15:59
---

local UIEdenKillReward = BaseClass("UIEdenKillReward", UIBaseContainer)
local base = UIBaseContainer
local UIEdenKillRewardItem = require "UI.UIEdenKill.UIEdenKillRewardItem"

local desc_path = "Desc"
local rank_desc_path = "Head/RankDesc"
local reward_desc_path = "Head/RewardDesc"
local scroll_view_path = "ScrollView"

local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function ComponentDefine(self)
    self.desc_text = self:AddComponent(UIText, desc_path)
    self.desc_text:SetLocalText(375049)
    self.rank_desc_text = self:AddComponent(UIText, rank_desc_path)
    self.rank_desc_text:SetLocalText(302043)
    self.reward_desc_text = self:AddComponent(UIText, reward_desc_path)
    self.reward_desc_text:SetLocalText(131004)
    self.scroll_view = self:AddComponent(UIScrollView, scroll_view_path)
    self.scroll_view:SetOnItemMoveIn(function(itemObj, index)
        self:OnCellMoveIn(itemObj, index)
    end)
    self.scroll_view:SetOnItemMoveOut(function(itemObj, index)
        self:OnCellMoveOut(itemObj, index)
    end)
end

local function ComponentDestroy(self)

end

local function DataDefine(self)
    self.inited = false
    self.dataList = {}
end

local function DataDestroy(self)

end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.EdenKillGetRankReward, self.OnGetReward)
end

local function OnRemoveListener(self)
    self:RemoveUIListener(EventId.EdenKillGetRankReward, self.OnGetReward)
    base.OnRemoveListener(self)
end

local function OnCellMoveIn(self, itemObj, index)
    itemObj.name = tostring(index)
    local item = self.scroll_view:AddComponent(UIEdenKillRewardItem, itemObj)
    item:SetData(self.dataList[index])
end

local function OnCellMoveOut(self, itemObj, index)
    self.scroll_view:RemoveComponent(itemObj.name, UIEdenKillRewardItem)
end

local function ShowScroll(self)
    local count = #self.dataList
    if count > 0 then
        self.scroll_view:SetActive(true)
        self.scroll_view:SetTotalCount(count)
        self.scroll_view:RefillCells()
    else
        self.scroll_view:SetActive(false)
    end
end

local function Refresh(self, actId)
    if self.inited then
        return
    end
    self.inited = true
    self.actId = actId
    SFSNetwork.SendMessage(MsgDefines.GetEdenKillActivityRankReward, actId)
end

local function OnGetReward(self, message)
    if message["activityId"] == tonumber(self.actId) then
        self.dataList = message["rankRewardArr"]
        self:ShowScroll()
    end
end

UIEdenKillReward.OnCreate = OnCreate
UIEdenKillReward.OnDestroy = OnDestroy
UIEdenKillReward.OnEnable = OnEnable
UIEdenKillReward.OnDisable = OnDisable
UIEdenKillReward.ComponentDefine = ComponentDefine
UIEdenKillReward.ComponentDestroy = ComponentDestroy
UIEdenKillReward.DataDefine = DataDefine
UIEdenKillReward.DataDestroy = DataDestroy
UIEdenKillReward.OnAddListener = OnAddListener
UIEdenKillReward.OnRemoveListener = OnRemoveListener

UIEdenKillReward.OnCellMoveIn = OnCellMoveIn
UIEdenKillReward.OnCellMoveOut = OnCellMoveOut
UIEdenKillReward.ShowScroll = ShowScroll

UIEdenKillReward.Refresh = Refresh
UIEdenKillReward.OnGetReward = OnGetReward

return UIEdenKillReward