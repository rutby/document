---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by admin.
--- DateTime: 2024/3/28 21:54
---

local UIHeroEquipInfoNode = BaseClass("UIHeroEquipInfoNode", UIBaseContainer)
local base = UIBaseContainer

local UIHeroEquipInfoAttrCell = require "UI.UIHeroEquip.Component.UIHeroEquipInfoAttrCell"
local extra_path = "ExtraAttr"
local base_title_text_path = "BaseAttr/BaseTitle"
local extra_title_text_path = "ExtraAttr/ExtraTitle"
local extra_empty_text_path = "ExtraAttr/ExtraEmptyTitle"
local base_attr_scroll_view_path = "BaseAttr/BaseContent/BaseScrollView"
local extra_attr_scroll_view_path = "ExtraAttr/ExtraContent/ExtraScrollView"

function UIHeroEquipInfoNode:OnCreate()
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
end

function UIHeroEquipInfoNode:OnDestroy()
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

function UIHeroEquipInfoNode:ComponentDefine()
    self:DefineBaseAttrList()
    self:DefineExtraAttrList()
    
    self.extraNode = self:AddComponent(UIBaseContainer, extra_path)
    self.baseTitle = self:AddComponent(UITextMeshProUGUIEx, base_title_text_path)
    self.baseTitle:SetLocalText(GameDialogDefine.HERO_EQUIP35)
    self.extraTitle = self:AddComponent(UITextMeshProUGUIEx, extra_title_text_path)
    self.extraTitle:SetLocalText(GameDialogDefine.HERO_EQUIP36)
    self.extraEmpty = self:AddComponent(UITextMeshProUGUIEx, extra_empty_text_path)
    self.extraEmpty:SetLocalText(GameDialogDefine.HERO_EQUIP42)
end

function UIHeroEquipInfoNode:ComponentDestroy()

end

function UIHeroEquipInfoNode:DataDefine()

end

function UIHeroEquipInfoNode:DataDestroy()
    
end

function UIHeroEquipInfoNode:OnEnable()
    base.OnEnable(self)
end

function UIHeroEquipInfoNode:OnDisable()
    base.OnDisable(self)
end

function UIHeroEquipInfoNode:OnAddListener()
    base.OnAddListener(self)
    
    self:AddUIListener(EventId.HeroEquipUpgrade, self.OnEquipUpgrade)
    self:AddUIListener(EventId.HeroEquipPromotion, self.OnEquipPromotion)
end

function UIHeroEquipInfoNode:OnRemoveListener()
    base.OnRemoveListener(self)
    
    self:RemoveUIListener(EventId.HeroEquipUpgrade, self.OnEquipUpgrade)
    self:RemoveUIListener(EventId.HeroEquipPromotion, self.OnEquipPromotion)
end

function UIHeroEquipInfoNode:SetData(equipUuid)
    self.wearEquip = DataCenter.HeroEquipManager:GetEquipByUuid(equipUuid)
    if self.wearEquip ~= nil then
        self:RefreshBaseAttrList()
        self:RefreshExtraAttrList()
    end
end

function UIHeroEquipInfoNode:OnEquipUpgrade()
    if self.wearEquip ~= nil then
        self:RefreshBaseAttrList()
        self:RefreshExtraAttrList()
    end
end

function UIHeroEquipInfoNode:OnEquipPromotion()
    if self.wearEquip ~= nil then
        self:RefreshBaseAttrList()
        self:RefreshExtraAttrList()
    end
end

function UIHeroEquipInfoNode:DefineBaseAttrList()
    self.baseAttrScrollView = self:AddComponent(UIScrollView, base_attr_scroll_view_path)
    self.baseAttrScrollView:SetOnItemMoveIn(function(itemObj, index)
        self:OnBaseAttrMoveIn(itemObj, index)
    end)
    self.baseAttrScrollView:SetOnItemMoveOut(function(itemObj, index)
        self:OnBaseAttrMoveOut(itemObj, index)
    end)
end

function UIHeroEquipInfoNode:RefreshBaseAttrList()
    self:ClearBaseAttrList()
    self.baseEffectsList = DataCenter.HeroEquipTemplateManager:GetEquipmentBaseAttr(self.wearEquip.equipId, self.wearEquip.level, self.wearEquip.promote) or {}
    local count = #self.baseEffectsList
    if count > 0 then
        self.baseAttrScrollView:SetTotalCount(count)
        self.baseAttrScrollView:RefillCells()
    end
end

function UIHeroEquipInfoNode:ClearBaseAttrList()
    self.baseAttrScrollView:ClearCells()
    self.baseAttrScrollView:RemoveComponents(UIHeroEquipInfoAttrCell)
end

function UIHeroEquipInfoNode:OnBaseAttrMoveIn(itemObj, index)
    itemObj.name = tostring(index)
    local cellItem = self.baseAttrScrollView:AddComponent(UIHeroEquipInfoAttrCell, itemObj)
    cellItem:SetData(self.baseEffectsList[index], index)
    self.baseAttrScrollView[index] = cellItem
end

function UIHeroEquipInfoNode:OnBaseAttrMoveOut(itemObj, index)
    self.baseAttrScrollView:RemoveComponent(itemObj.name, UIHeroEquipInfoAttrCell)
end

function UIHeroEquipInfoNode:DefineExtraAttrList()
    self.extraAttrScrollView = self:AddComponent(UIScrollView, extra_attr_scroll_view_path)
    self.extraAttrScrollView:SetOnItemMoveIn(function(itemObj, index)
        self:OnExtraAttrMoveIn(itemObj, index)
    end)
    self.extraAttrScrollView:SetOnItemMoveOut(function(itemObj, index)
        self:OnExtraAttrMoveOut(itemObj, index)
    end)
end

function UIHeroEquipInfoNode:RefreshExtraAttrList()
    self:ClearExtraAttrList()
    self.additionEffectsList = DataCenter.HeroEquipTemplateManager:GetEquipmentAdditionAttr(self.wearEquip.equipId, self.wearEquip.level, self.wearEquip.promote) or {}
    local count = #self.additionEffectsList
    if count > 0 then
        self.extraAttrScrollView:SetTotalCount(count)
        self.extraAttrScrollView:RefillCells()
        self.extraEmpty:SetActive(false)
    else
        self.extraEmpty:SetActive(true)
    end
end

function UIHeroEquipInfoNode:ClearExtraAttrList()
    self.extraAttrScrollView:ClearCells()
    self.extraAttrScrollView:RemoveComponents(UIHeroEquipInfoAttrCell)
end

function UIHeroEquipInfoNode:OnExtraAttrMoveIn(itemObj, index)
    itemObj.name = tostring(index)
    local cellItem = self.extraAttrScrollView:AddComponent(UIHeroEquipInfoAttrCell, itemObj)
    cellItem:SetData(self.additionEffectsList[index], index)
    self.extraAttrScrollView[index] = cellItem
end

function UIHeroEquipInfoNode:OnExtraAttrMoveOut(itemObj, index)
    self.extraAttrScrollView:RemoveComponent(itemObj.name, UIHeroEquipInfoAttrCell)
end


return UIHeroEquipInfoNode