---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2023/8/3 11:51
---

local UIChaseDeerAct = BaseClass("UIChaseDeerAct", UIBaseContainer)
local base = UIBaseContainer
local UIChaseDeerRewardItem = require "UI.UIChaseDeer.UIChaseDeerAct.Component.UIChaseDeerRewardItem"

local title_path = "Root/Pic/Title"
local desc_path = "Root/Pic/DescBg/Desc"
local pic_path = "Root/Pic"
local time_path = "Root/Pic/TimeBg/Time"
local act_title_path = "Root/Right/ActTitle"
local act_desc_path = "Root/Right/DescScroll/Viewport/Content/ActDesc"
local reward_title_path = "Root/Right/RewardTitle"
local rank_desc_path = "Root/Right/RankDesc"
local reward_desc_path = "Root/Right/RewardDesc"
local scroll_view_path = "Root/Right/ScrollView"
local rank_path = "Root/Right/Rank"
local rank_text_path = "Root/Right/Rank/RankText"

local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function ComponentDefine(self)
    self.title_text = self:AddComponent(UIText, title_path)
    self.desc_text = self:AddComponent(UIText, desc_path)
    self.pic_image = self:AddComponent(UIImage, pic_path)
    self.time_text = self:AddComponent(UIText, time_path)
    self.act_title_text = self:AddComponent(UIText, act_title_path)
    self.act_title_text:SetLocalText(372734)
    self.act_desc_text = self:AddComponent(UIText, act_desc_path)
    self.reward_title_text = self:AddComponent(UIText, reward_title_path)
    self.reward_title_text:SetLocalText(302181)
    self.rank_desc_text = self:AddComponent(UIText, rank_desc_path)
    self.rank_desc_text:SetLocalText(302043)
    self.reward_desc_text = self:AddComponent(UIText, reward_desc_path)
    self.reward_desc_text:SetLocalText(130065)
    self.scroll_view = self:AddComponent(UIScrollView, scroll_view_path)
    self.scroll_view:SetOnItemMoveIn(function(itemObj, index)
        self:OnCreateCell(itemObj, index)
    end)
    self.scroll_view:SetOnItemMoveOut(function(itemObj, index)
        self:OnDeleteCell(itemObj, index)
    end)
    self.rank_btn = self:AddComponent(UIButton, rank_path)
    self.rank_btn:SetOnClick(function()
        self:OnRankClick()
    end)
    self.rank_text = self:AddComponent(UIText, rank_text_path)
    self.rank_text:SetLocalText(375062)
end

local function ComponentDestroy(self)
    
end

local function DataDefine(self)
    self.actData = nil
    self.rewardInfoList = {}
    self.timer = TimerManager:GetInstance():GetTimer(0.5, self.TimerAction, self, false, false, false)
    self.timer:Start()
end

local function DataDestroy(self)
    if self.timer then
        self.timer:Stop()
        self.timer = nil
    end
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.GetAllianceSeasonScoreRankReward, self.OnGetReward)
end

local function OnRemoveListener(self)
    self:RemoveUIListener(EventId.GetAllianceSeasonScoreRankReward, self.OnGetReward)
    base.OnRemoveListener(self)
end

local function OnCreateCell(self, itemObj, index)
    itemObj.name = tostring(index)
    local item = self.scroll_view:AddComponent(UIChaseDeerRewardItem, itemObj)
    item:SetData(self.rewardInfoList[index])
end

local function OnDeleteCell(self, itemObj, index)
    self.scroll_view:RemoveComponent(itemObj.name, UIChaseDeerRewardItem)
end

local function ShowScroll(self)
    local count = #self.rewardInfoList
    if count > 0 then
        self.scroll_view:SetActive(true)
        self.scroll_view:SetTotalCount(count)
        self.scroll_view:RefillCells()
    else
        self.scroll_view:SetActive(false)
    end
end

local function SetData(self, actId)
    local actData = DataCenter.ActivityListDataManager:GetActivityDataById(actId)
    self.actData = actData
    self.title_text:SetLocalText(actData.name)
    self.desc_text:SetLocalText(actData.desc_info)
    self.act_desc_text:SetLocalText(actData.story)
    self:TimerAction()
    SFSNetwork.SendMessage(MsgDefines.GetAllianceSeasonScoreRankReward, tonumber(actData.id))
end

local function TimerAction(self)
    local curTime = UITimeManager:GetInstance():GetServerTime()
    local endTime = self.actData.endTime
    local restTime = endTime - curTime
    local restTimeStr = UITimeManager:GetInstance():MilliSecondToFmtString(restTime)
    self.time_text:SetText(restTimeStr)
end

local function OnRankClick(self)
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIChaseDeerRank)
end

local function OnGetReward(self, message)
    if message["rankRewardArr"] then
        self.rewardInfoList = message["rankRewardArr"]
        self:ShowScroll()
    end
end

UIChaseDeerAct.OnCreate = OnCreate
UIChaseDeerAct.OnDestroy = OnDestroy
UIChaseDeerAct.OnEnable = OnEnable
UIChaseDeerAct.OnDisable = OnDisable
UIChaseDeerAct.ComponentDefine = ComponentDefine
UIChaseDeerAct.ComponentDestroy = ComponentDestroy
UIChaseDeerAct.DataDefine = DataDefine
UIChaseDeerAct.DataDestroy = DataDestroy
UIChaseDeerAct.OnAddListener = OnAddListener
UIChaseDeerAct.OnRemoveListener = OnRemoveListener

UIChaseDeerAct.OnCreateCell = OnCreateCell
UIChaseDeerAct.OnDeleteCell = OnDeleteCell
UIChaseDeerAct.ShowScroll = ShowScroll

UIChaseDeerAct.SetData = SetData
UIChaseDeerAct.TimerAction = TimerAction
UIChaseDeerAct.OnRankClick = OnRankClick

UIChaseDeerAct.OnGetReward = OnGetReward

return UIChaseDeerAct