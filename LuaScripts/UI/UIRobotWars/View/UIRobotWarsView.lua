---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2021/9/15 16:38
---UIRobotWarsView.lua

local base = UIBaseView--Variable
local UIRobotWarsView = BaseClass("UIRobotWarsView", base)--Variable
local Localization = CS.GameEntry.Localization

local closeBtn_path = "safeArea/closeBtn"
local title1_path = "safeArea/title1"
local title2_path = "safeArea/title2"
local title3_path = "safeArea/title3"
local time_obj_path = "safeArea/middleLayer/Time"
local timeTip_path = "safeArea/middleLayer/Time/timeTip"
local timeCountDown_path = "safeArea/middleLayer/Time/timeCD"
local infoBtn_path = "safeArea/Group_Button/infoBtn"
local infoBtnTxt_path = "safeArea/Group_Button/infoBtn/infoBtnTxt"
local heroBtn_path = "safeArea/Group_Button/heroBtn"
local heroBtnTxt_path = "safeArea/Group_Button/heroBtn/heroBtnTxt"
local recordBtn_path = "safeArea/Group_Button/recordBtn"
local recordBtnTxt_path = "safeArea/Group_Button/recordBtn/recordBtn_text"
local getRewardBtn_path = "safeArea/middleLayer/getRewardBtn"
local getRewardTxt_path = "safeArea/middleLayer/getRewardBtn/rewardBtnTxt"
local seasonEndTip_path = "safeArea/middleLayer/seasonEndTip"
local bgImg_path = "Image"
local seasonImg_path = "ImageIcon"

local function OnCreate(self)
    base.OnCreate(self)
    SFSNetwork.SendMessage(MsgDefines.SeasonBalancePackageViewOpen)
    SFSNetwork.SendMessage(MsgDefines.SeasonBalanceViewOpen)
    self:ComponentDefine()
    self:DataDefine()
    self:InitData()
end

local function OnDestroy(self)
    self:DelCountDownTimer()
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    self.closeBtnN = self:AddComponent(UIButton, closeBtn_path)
    self.closeBtnN:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnClickCloseBtn()
    end)
    self.title1N = self:AddComponent(UIText, title1_path)
    self.title1N:SetLocalText(302339)
    --self.title2N = self:AddComponent(UIText, title2_path)
    --self.title2N:SetLocalText(302340)
    self.title3N = self:AddComponent(UIText, title3_path)
    self.title3N:SetLocalText(302344)
    self.time_obj = self:AddComponent(UIImage, time_obj_path)
    self.timeTipN = self:AddComponent(UIText, timeTip_path)
    --self.timeTipN:SetLocalText(302341)
    self.timeCountDownN = self:AddComponent(UIText, timeCountDown_path)
    --self.timeCountDownN:SetLocalText(302342)
    self.infoBtnN = self:AddComponent(UIButton, infoBtn_path)
    self.infoBtnN:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnClickInfoBtn()
    end)
    self.infoBtnTxtN = self:AddComponent(UIText, infoBtnTxt_path)
    self.infoBtnTxtN:SetLocalText(302027)
    self.heroBtnTxtN = self:AddComponent(UIText, heroBtnTxt_path)
    self.heroBtnTxtN:SetLocalText(100275)
    self.heroBtnN = self:AddComponent(UIButton, heroBtn_path)
    self.heroBtnN:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnClickHeroBtn()
    end)
    self.rewardBtnTxtN = self:AddComponent(UIText, recordBtnTxt_path)
    self.rewardBtnTxtN:SetLocalText(390334)
    self.rewardBtnN = self:AddComponent(UIButton, recordBtn_path)
    self.rewardBtnN:SetOnClick(function()
        self:OnClickRewardPreviewBtn()
    end)
    --self.imgBg = self:AddComponent(UIImage,"Image")
    --self.icon = self:AddComponent(UIImage,"ImageIcon")
    self.getRewardBtnN = self:AddComponent(UIButton, getRewardBtn_path)
    self.getRewardBtnN:SetOnClick(function()
        self:OnClickRewardBtn()
    end)
    self.getRewardTxtN = self:AddComponent(UIText, getRewardTxt_path)
    self.seasonEndTipN = self:AddComponent(UIText, seasonEndTip_path)
    self.seasonEndTipN:SetLocalText(110360)
    self.bgImgN = self:AddComponent(UIImage, bgImg_path)
    self.seasonImgN = self:AddComponent(UIImage, seasonImg_path)
end

local function ComponentDestroy(self)
    self.closeBtnN = nil
    self.title1N = nil
    self.title2N = nil
    self.title3N = nil
    self.timeTipN = nil
    self.timeCountDownN = nil
    self.infoBtnN = nil
    self.heroBtnN = nil
end

local function DataDefine(self)
    
end

local function DataDestroy(self)
    
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.OnRobotWarActivityUpdate, self.RefreshAll)
    self:AddUIListener(EventId.GetSeasonRewardData, self.RefreshMiddle)
    self:AddUIListener(EventId.OnClaimSeasonRewardSucc, self.RefreshMiddle)
end

local function OnRemoveListener(self)
    self:RemoveUIListener(EventId.OnRobotWarActivityUpdate, self.RefreshAll)
    self:RemoveUIListener(EventId.OnClaimSeasonRewardSucc, self.RefreshMiddle)
    self:RemoveUIListener(EventId.GetSeasonRewardData, self.RefreshMiddle)
    base.OnRemoveListener(self)
end

local function InitData(self)
    self:RefreshAll()
end

local function RefreshAll(self)
    self.seasonId = DataCenter.SeasonDataManager:GetSeasonId()

    self:RefreshMiddle()
    self:RefreshBg()
end

local function RefreshBg(self)
    local activityInfo = DataCenter.RobotWarsManager:GetActivityInfo()
    if not activityInfo then
        return
    end
    local seasonId = self.seasonId
    local curTime = UITimeManager:GetInstance():GetServerTime()
    local settledRewardEndTime = activityInfo.WorldSeasonRewardEndTime
    --if settledRewardEndTime > 0 and curTime > settledRewardEndTime then
    --    seasonId = seasonId + 1
    --end
    if seasonId == 1 then
        self.time_obj:LoadSprite("Assets/Main/Sprites/UI/UISeasonRobots/competition_img_time2.png")
        self.timeTipN:SetColor(Color.New(0.38,0.97,0.88,1))
        self.timeCountDownN:SetColor(WhiteColor)
        self.heroBtnN:SetActive(false)
    else
        self.time_obj:LoadSprite("Assets/Main/Sprites/UI/UISeasonRobots/competition_img_time.png")
        self.timeTipN:SetColor(WhiteColor)
        self.timeCountDownN:SetColor(WhiteColor)
        self.heroBtnN:SetActive(true)
    end
    self.infoBtnN:LoadSprite(string.format("Assets/Main/Sprites/UI/UISeasonRobots/competition_icon_rule_%s.png", seasonId))
    self.heroBtnN:LoadSprite(string.format("Assets/Main/Sprites/UI/UISeasonRobots/competition_icon_newhero_%s.png", seasonId))
    self.rewardBtnN:LoadSprite(string.format("Assets/Main/Sprites/UI/UISeasonRobots/competition_icon_match_%s.png", seasonId))

    local seasonName = GetTableData(TableName.APS_Season,seasonId, 'subTitle')
    if string.IsNullOrEmpty(seasonName) then
        self.title3N:SetText("")
    else
        self.title3N:SetLocalText(seasonName)
    end
    
    local iconImg = GetTableData(TableName.APS_Season,seasonId, 'icon')
    local bgImg = GetTableData(TableName.APS_Season,seasonId, 'bg')
    if bgImg then
        self.bgImgN:LoadSprite(string.format("Assets/Main/TextureEx/UIActivity/%s.png", bgImg))
    end
    if iconImg then
        self.seasonImgN:LoadSprite(string.format("Assets/Main/Sprites/UI/UISeasonRobots/%s.png", iconImg))
    end
end

local function RefreshMiddle(self)
    --local showPreview = DataCenter.RobotWarsManager:GetIsShowPreview()
    --if showPreview == true then
    --    self.seasonId = self.seasonId+1
    --    self.time_obj:SetActive(true)
    --    self.time_obj:SetActive(false)
    --    return
    --end

    self.time_obj:SetActive(false)
    self.getRewardBtnN:SetActive(false)
    self.seasonEndTipN:SetActive(false)
    
    local activityInfo = DataCenter.RobotWarsManager:GetActivityInfo()
    if not activityInfo then
        return
    end
    
    local curTime = UITimeManager:GetInstance():GetServerTime()
    
    local settleEndTime = activityInfo.settleEndTime
    if settleEndTime > 0 and curTime < settleEndTime then
        self.time_obj:SetActive(true)
        self.timeTipN:SetLocalText(110358)
        self.endTime = settleEndTime
        self:AddCountDownTimer()
        self:RefreshRemainTime()
        return
    end
    
    local settledRewardEndTime = activityInfo.WorldSeasonRewardEndTime
    if settledRewardEndTime > 0 and curTime < settledRewardEndTime then
        self.time_obj:SetActive(true)
        self.timeTipN:SetLocalText(110359)
        self.endTime = settledRewardEndTime
        self:AddCountDownTimer()
        self:RefreshRemainTime()
        local data = DataCenter.DesertDataManager:GetSelfAllianceSeasonReward()
        if data~=nil then
            self.getRewardBtnN:SetActive(true)
            local isSelfLeader = DataCenter.AllianceBaseDataManager:IsSelfLeader()
            if isSelfLeader then
                self.getRewardTxtN:SetLocalText(110300)
                CS.UIGray.SetGray(self.getRewardBtnN.transform, false, true)
            else
                local selfData = DataCenter.DesertDataManager:GetSelfRewardData()
                if selfData ~=nil then
                    if selfData.selfStatus == 1 then--0无奖励，1可领取，2已领取
                        self.getRewardTxtN:SetLocalText(110317)
                        CS.UIGray.SetGray(self.getRewardBtnN.transform, false, true)
                    else
                        self.getRewardTxtN:SetLocalText(170003)
                        CS.UIGray.SetGray(self.getRewardBtnN.transform, true, false)
                    end
                else
                    self.getRewardTxtN:SetLocalText(110317)
                    CS.UIGray.SetGray(self.getRewardBtnN.transform, false, true)
                end
            end
        else
            self.seasonEndTipN:SetActive(true)
            self.seasonEndTipN:SetLocalText(110366)
        end
        
        return
    end

    if settledRewardEndTime > 0 and curTime >= settledRewardEndTime then
        self.seasonEndTipN:SetActive(true)
        self.seasonEndTipN:SetLocalText(110360)
    end
    
    self:DelCountDownTimer()
    self.time_obj:SetActive(false)
end


local function AddCountDownTimer(self)
    self.CountDownTimerAction = function()
        self:RefreshRemainTime()
    end

    if self.countDownTimer == nil then
        self.countDownTimer = TimerManager:GetInstance():GetTimer(1, self.CountDownTimerAction , self, false,false,false)
    end
    self.countDownTimer:Start()
end

local function RefreshRemainTime(self)
    local curTime = UITimeManager:GetInstance():GetServerTime()
    local remainTime = self.endTime - curTime
    if remainTime > 0 then
        self.timeCountDownN:SetText(UITimeManager:GetInstance():MilliSecondToFmtString(remainTime))
    else
        self.timeCountDownN:SetText("")
        self:DelCountDownTimer()
        SFSNetwork.SendMessage(MsgDefines.SeasonBalanceViewOpen)
    end
end

local function DelCountDownTimer(self)
    if self.countDownTimer ~= nil then
        self.countDownTimer:Stop()
        self.countDownTimer = nil
    end
end

local function OnClickCloseBtn(self)
    self.ctrl:CloseSelf()
end

local function OnClickInfoBtn(self)
    local des = GetTableData(TableName.APS_Season,self.seasonId, 'des')
    UIUtil.ShowIntro(Localization:GetString("302339"), Localization:GetString("170001"), Localization:GetString(des))
end

local function OnClickHeroBtn(self)
    --UIManager:GetInstance():OpenWindow(UIWindowNames.UIHeroList, nil, 2)
    GoToUtil.GotoOpenView(UIWindowNames.UIHeroList,{anim = false,UIMainAnim = UIMainAnimType.AllHide}, nil, 2)
    --UIUtil.ShowTipsId(302342)
end
local function OnClickRewardBtn(self)
    if DataCenter.RobotWarsManager:GetIsOnReward() == true then
        local data = DataCenter.DesertDataManager:GetSelfAllianceSeasonReward()
        if data~=nil then
            UIManager:GetInstance():OpenWindow(UIWindowNames.UISeasonAllianceReward)
        else
            --if activityInfo.selfRewardStatus>0
            local activityInfo = DataCenter.RobotWarsManager:GetActivityInfo()
            if activityInfo~=nil then
                if activityInfo.selfRewardStatus>0 then
                    UIUtil.ShowTipsId(110362)
                end
                return
            end
            
            UIManager:GetInstance():OpenWindow(UIWindowNames.UISeasonAllianceRewardDisplayMain)
        end
    else
        UIManager:GetInstance():OpenWindow(UIWindowNames.UISeasonAllianceRewardDisplayMain)
    end
    
end

local function OnClickRewardPreviewBtn(self)
    UIManager:GetInstance():OpenWindow(UIWindowNames.UISeasonAllianceRewardDisplayMain)
end

UIRobotWarsView.OnCreate = OnCreate 
UIRobotWarsView.OnDestroy = OnDestroy
UIRobotWarsView.OnAddListener = OnAddListener
UIRobotWarsView.OnRemoveListener = OnRemoveListener
UIRobotWarsView.ComponentDefine = ComponentDefine
UIRobotWarsView.ComponentDestroy = ComponentDestroy
UIRobotWarsView.DataDefine = DataDefine
UIRobotWarsView.DataDestroy = DataDestroy

UIRobotWarsView.InitData = InitData
UIRobotWarsView.RefreshAll = RefreshAll
UIRobotWarsView.RefreshBg = RefreshBg
UIRobotWarsView.RefreshMiddle = RefreshMiddle
UIRobotWarsView.AddCountDownTimer = AddCountDownTimer
UIRobotWarsView.RefreshRemainTime = RefreshRemainTime
UIRobotWarsView.DelCountDownTimer = DelCountDownTimer
UIRobotWarsView.OnClickCloseBtn = OnClickCloseBtn
UIRobotWarsView.OnClickInfoBtn = OnClickInfoBtn
UIRobotWarsView.OnClickHeroBtn = OnClickHeroBtn
UIRobotWarsView.OnClickRewardBtn = OnClickRewardBtn
UIRobotWarsView.OnClickRewardPreviewBtn = OnClickRewardPreviewBtn
return UIRobotWarsView