---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zzl.
--- DateTime: 2022/2/22 
---
local UIRedenvelopeReceiveInfoView = BaseClass("UIRedenvelopeReceiveInfoView",UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization
local UIRedenvelopeReceiveInfoCell = require "UI.UIRedenvelope.UIRedenvelopeReceiveInfo.Component.UIRedenvelopeReceiveInfoCell"

local imgBg_path = "ImgBg"
local playerHead = "ImgBg/Rect_Head/UIPlayerHead/HeadIcon"
local playerHeadFg = "ImgBg/Rect_Head/UIPlayerHead/Foreground"
local img_rewardType_path = "ImgBg/Img_RewardType"
local txt_receiveNum_path = "ImgBg/Img_RewardType/Txt_ReceiveNum"
local txt_redOwn_path = "ImgBg/Txt_RedOwn"
local txt_peopleNum_path = "ImgBg/Txt_PeopleNum"
local txt_title_path = "ImgBg/Txt_Title"
local return_btn_path = "panel"
local scrollview_path = "ImgBg/ScrollView"
local content_path = "ImgBg/ScrollView/Content"
local rect_effect1_path = "Rect_Effect1"
local rect_effect2_path = "Rect_Effect2"
local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
end

local function ComponentDefine(self)
    self.imgBg_path = self:AddComponent(UIAnimator,imgBg_path)
    
    self.return_btn = self:AddComponent(UIButton, return_btn_path)
    self.return_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self.ctrl:CloseSelf()
    end)
    self.playerHead = self:AddComponent(UIPlayerHead,playerHead)
    self.playerHeadFg = self:AddComponent(UIImage, playerHeadFg)
    
    self._redOwn_txt = self:AddComponent(UIText,txt_redOwn_path)

    self._rewardType_img = self:AddComponent(UIImage,img_rewardType_path)
    self._receiveNum_txt = self:AddComponent(UIText,txt_receiveNum_path)
    self._peopleNum_txt = self:AddComponent(UIText,txt_peopleNum_path)
    
    self._title_txt = self:AddComponent(UIText,txt_title_path)

    self.scroll_view = self:AddComponent(UIBaseContainer, scrollview_path)
    self.content = self:AddComponent(GridInfinityScrollView,content_path)
    
    self.rect_effect1 = self:AddComponent(UIBaseContainer,rect_effect1_path)
    self.rect_effect2 = self:AddComponent(UIBaseContainer,rect_effect2_path)
end

local function DataDefine(self)
    self.list = {}
    self.listGO = {}
end

local function OnDestroy(self)
    self:ClearScroll()
    self.scroll_view = nil
    self.content:SetAnchoredPosition(Vector2.New(0,0))
    self.content:Dispose()
    self.rect_effect1:SetActive(false)
    self.rect_effect2:SetActive(false)
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
    self:OnRefresh()
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function OnAddListener(self)
    base.OnAddListener(self)
  --  self:AddUIListener(EventId.GetRedPacketUpdate, self.GetRedPacketUpdateSignal)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
   -- self:RemoveUIListener(EventId.GetRedPacketUpdate, self.GetRedPacketUpdateSignal)
end

local function OnRefresh(self)
    self.uuid = self:GetUserData()
    self.uuid,self.isReceive = self:GetUserData()
    self.rect_effect1:SetActive(self.isReceive)
    self.rect_effect2:SetActive(self.isReceive)
    self.redData = DataCenter.AllianceRedPacketManager:GetRedPacketByUUid(self.uuid)
    self._redOwn_txt:SetText(self.redData.name)
    self._receiveNum_txt:SetText(self.redData.cost.."/"..self.redData.total)
    self._peopleNum_txt:SetText(Localization:GetString("390896",self.redData.curPeople,self.redData.totalPeople))
    self.playerHead:SetData(self.redData.uid, self.redData.pic, self.redData.picV)
    local curTime = UITimeManager:GetInstance():GetServerSeconds()
    --self.playerHeadFg:SetActive(self.redData.mCardET > curTime)
    local headBgImg = DataCenter.DecorationDataManager:GetHeadFrame(self.redData.headSkinId, self.redData.headSkinET, self.redData.mCardET > curTime)
    if headBgImg ~= nil then
        self.playerHeadFg:SetActive(true)
        self.playerHeadFg:LoadSprite(headBgImg)
    else
        self.playerHeadFg:SetActive(false)
    end
    self._rewardType_img:LoadSprite(DataCenter.RewardManager:GetPicByType(ResTypeToReward[self.redData.resType]))
    self._title_txt:SetText(Localization:GetString("390897",DataCenter.RewardManager:GetNameByType(ResTypeToReward[self.redData.resType])))
    local bindFunc1 = BindCallback(self, self.OnInitScroll)
    local bindFunc2 = BindCallback(self, self.OnUpdateScroll)
    local bindFunc3 = BindCallback(self, self.OnDestroyScrollItem)
    self.content:Init(bindFunc1,bindFunc2, bindFunc3)
    self.list = self.ctrl:GetRecord(self.redData.record)
    self.rewardType = self.redData.resType
    local tempCount = table.count(self.list)
    if tempCount>0 then
        self.content:SetItemCount(tempCount)
    end

    self.scroll_view:SetActive(true)
end

local function OnInitScroll(self,go,index)
    local item = self.scroll_view:AddComponent(UIRedenvelopeReceiveInfoCell, go)
    self.listGO[go] = item
end

local function OnUpdateScroll(self,go,index)
    local sub = self.list[index + 1]
    local cellItem = self.listGO[go]
    if sub == nil then
        return
    end
    if self.redData.totalPeople == self.redData.curPeople then
        sub.lucky = self.ctrl:GetLucky(self.list)
    else
        sub.lucky = 0 
    end
    cellItem:ReInit(index+1,sub,self.rewardType)
end

local function OnDestroyScrollItem(self,go, index)

end

local function ClearScroll(self)
    self.scroll_view:RemoveComponents(UIRedenvelopeReceiveInfoCell)
    self.content:DestroyChildNode()
end


UIRedenvelopeReceiveInfoView.OnCreate = OnCreate
UIRedenvelopeReceiveInfoView.ComponentDefine = ComponentDefine
UIRedenvelopeReceiveInfoView.DataDefine = DataDefine
UIRedenvelopeReceiveInfoView.OnDestroy = OnDestroy
UIRedenvelopeReceiveInfoView.OnRefresh = OnRefresh
UIRedenvelopeReceiveInfoView.OnEnable = OnEnable
UIRedenvelopeReceiveInfoView.OnDisable = OnDisable
UIRedenvelopeReceiveInfoView.OnAddListener = OnAddListener
UIRedenvelopeReceiveInfoView.OnRemoveListener = OnRemoveListener
UIRedenvelopeReceiveInfoView.OnInitScroll = OnInitScroll
UIRedenvelopeReceiveInfoView.OnUpdateScroll = OnUpdateScroll
UIRedenvelopeReceiveInfoView.OnDestroyScrollItem = OnDestroyScrollItem
UIRedenvelopeReceiveInfoView.ClearScroll = ClearScroll

return UIRedenvelopeReceiveInfoView