---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zzl.
--- DateTime: 2022/2/22 
---
local UIRedenvelopeView = BaseClass("UIRedenvelopeView",UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization
local UIRedenvelopeCell = require "UI.UIRedenvelope.UIRedenvelopeView.Component.UIRedenvelopeCell"

local scrollview_path = "ImgBg/ScrollView"
local content_path = "ImgBg/ScrollView/Content"
local return_btn_path = "UICommonMidPopUpTitle/panel"
local txt_title_path = "UICommonMidPopUpTitle/bg_mid/titleText"
local btn_close_path = "UICommonMidPopUpTitle/bg_mid/CloseBtn"
local txt_Record_path = "ImgBg/Txt_Record"
local txt_RecordNum_path =  "ImgBg/Txt_RecordNum"
local function OnCreate(self)
    base.OnCreate(self)
    
    self._title_txt = self:AddComponent(UITextMeshProUGUIEx,txt_title_path)
    self.btn_close_path = self:AddComponent(UIButton,btn_close_path)
    self.btn_close_path:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self.ctrl:CloseSelf()
    end)
    
    self.return_btn = self:AddComponent(UIButton, return_btn_path)
    self.return_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        --self:SendChatRed()
        self.ctrl:CloseSelf()
    end)
    
    self.scroll_view = self:AddComponent(UIBaseContainer, scrollview_path)
    self.content = self:AddComponent(GridInfinityScrollView,content_path)
    
    self._record_txt = self:AddComponent(UIText,txt_Record_path)
    --self._recordNum_txt = self:AddComponent(UIText,txt_RecordNum_path)
end

local function OnDestroy(self)
    self:ClearScroll()
    self.scroll_view = nil
    self.content:SetAnchoredPosition(Vector2.New(0,0))
    self.content:Dispose()
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
    self:OnRefresh()
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.GetRedPacketUpdate, self.GetRedPacketUpdateSignal)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
     self:RemoveUIListener(EventId.GetRedPacketUpdate, self.GetRedPacketUpdateSignal)
end

local function OnRefresh(self)
    self._title_txt:SetLocalText(390919)
   -- self._record_txt:SetLocalText(390921)
    self.listGO = {}
    self.list = self.ctrl:GetRedRecord()
    local bindFunc1 = BindCallback(self, self.OnInitScroll)
    local bindFunc2 = BindCallback(self, self.OnUpdateScroll)
    local bindFunc3 = BindCallback(self, self.OnDestroyScrollItem)
    self.content:Init(bindFunc1,bindFunc2, bindFunc3)
    local tempCount = table.count(self.list)
    if tempCount>0 then
        self.content:SetItemCount(tempCount)
    end
end

local function OnInitScroll(self,go,index)
    local item = self.scroll_view:AddComponent(UIRedenvelopeCell, go)
    self.listGO[go] = item
end

local function OnUpdateScroll(self,go,index)
    local sub = self.list[index + 1]
    local cellItem = self.listGO[go]
    if sub == nil then
        return
    end
    cellItem:ReInit(index+1,sub)
end

local function OnDestroyScrollItem(self,go, index)

end

local function ClearScroll(self)
    self.scroll_view:RemoveComponents(UIRedenvelopeCell)
    self.content:DestroyChildNode()
end

local function GetRedPacketUpdateSignal(self)
    self.content:ForceUpdate()
end

UIRedenvelopeView.OnCreate = OnCreate
UIRedenvelopeView.OnDestroy = OnDestroy
UIRedenvelopeView.OnRefresh = OnRefresh
UIRedenvelopeView.OnEnable = OnEnable
UIRedenvelopeView.OnDisable = OnDisable
UIRedenvelopeView.OnAddListener = OnAddListener
UIRedenvelopeView.OnRemoveListener = OnRemoveListener
UIRedenvelopeView.OnInitScroll = OnInitScroll
UIRedenvelopeView.OnUpdateScroll = OnUpdateScroll
UIRedenvelopeView.OnDestroyScrollItem = OnDestroyScrollItem
UIRedenvelopeView.ClearScroll = ClearScroll
UIRedenvelopeView.GetRedPacketUpdateSignal = GetRedPacketUpdateSignal

return UIRedenvelopeView