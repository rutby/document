---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2022/7/14 11:13
---
local UIHeroBountyMainCtrl = BaseClass("UIHeroBountyMainCtrl", UIBaseCtrl)

local showState = {
    None = 0,
    Finish = 1,--完成
    Idle = 2,--未领取
    Doing = 3,--进行中
    Wait = 4,--缓冲中
    Lock_Add_num = 5,--增加数量
    lock_add_rarity = 6,--提升品质
    lock_add_special_task = 7,--特殊任务
}
function UIHeroBountyMainCtrl:CloseSelf()
    UIManager.Instance:DestroyWindow(UIWindowNames.UIHeroBountyMain)
end

function UIHeroBountyMainCtrl:GetTaskList()
    local list = {}
    local slotList = DataCenter.HeroBountyDataManager:GetSlotDataByBuildData()
    if #slotList>0 then
        for k,v in pairs(slotList) do
            local data = self:GetTaskOneDataByIndex(k)
            if data~=nil then
                table.insert(list,data)
            end
        end
    end
    table.sort(list, function(a, b)
        if a.state ~= b.state then
            return a.state < b.state
        end
        if a.rarity ~= b.rarity then
            return a.rarity  > b.rarity
        end
        return a.index < b.index
    end)
    
    --local theLastIndex = #slotList+1
    --local lastData = self:GetTaskOneDataByIndex(theLastIndex)
    --if lastData~=nil then
    --    table.insert(list,lastData)
    --end
    return list
end

function UIHeroBountyMainCtrl:GetTaskOneDataByIndex(index)
    local slotList = DataCenter.HeroBountyDataManager:GetSlotDataByBuildData()
    if #slotList>=index then
        local taskData = DataCenter.HeroBountyDataManager:GetTaskDataByIndex(slotList[index])
        local oneData = {}
        if taskData~=nil then
            local curTime = UITimeManager:GetInstance():GetServerTime()
            oneData.id = taskData.id
            oneData.index = taskData.index
            oneData.startTime = taskData.startTime
            oneData.endTime = taskData.endTime
            oneData.waitEndTime = 0
            oneData.name = taskData.name
            oneData.taskTime = tonumber(taskData.taskTime)
            local exp  = tonumber(taskData.exp_hero)
            local effectValue = LuaEntry.Effect:GetGameEffect(EffectDefine.GLOBAL_HERO_EXP_EXTRA_PERCENT)
            oneData.exp_hero = 0--Mathf.Round(exp* (1 + effectValue / 100))
            oneData.rarity = taskData.rarity
            if oneData.startTime~=0 and oneData.endTime>curTime then
                oneData.state = showState.Doing
            elseif oneData.startTime~=0 and oneData.endTime<=curTime then
                oneData.state = showState.Finish
            else
                oneData.state = showState.Idle
            end
            oneData.rewardStr = self:GetRewards(taskData.rewardList,oneData.rarity)
            return oneData
        else
            oneData.state = showState.Wait
            oneData.index = index
            oneData.rarity = 1
            local curTime = UITimeManager:GetInstance():GetServerTime()
            local todayTime = UITimeManager:GetInstance():GetTodayZeroServerTime(curTime/1000)
            local tomorrowTime = todayTime+(24*3600)
            oneData.waitEndTime = (tomorrowTime*1000)
            return oneData
        end
    else
        local unLockMsg = DataCenter.HeroBountyDataManager:GetNextLevelBuildUnlockMsg()
        if #unLockMsg>=2 then
            local type = tonumber(unLockMsg[1])
            local level = tonumber(unLockMsg[2])
            if type == 1 then
                local oneData = {}
                oneData.state = showState.Lock_Add_num
                oneData.index = index
                oneData.rarity = 1
                oneData.buildLv = level
                return oneData
            elseif type == 2 then
                local oneData = {}
                oneData.state = showState.lock_add_rarity
                oneData.index = index
                oneData.rarity = 1
                oneData.buildLv = level
                return oneData
            elseif type == 3 then
                local oneData = {}
                oneData.state = showState.lock_add_special_task
                oneData.index = index
                oneData.rarity = 1
                oneData.buildLv = level
                return oneData
            end
        end
    end
end

function UIHeroBountyMainCtrl:GetRewards( rewardList,rarity)
    local reward = {}
    if rewardList == nil then
        return reward
    end
    table.walk(rewardList, function (_, v)
        local item = {}
        item.count = v.count
        item.itemColor = DataCenter.ItemTemplateManager:GetToolBgByColor(rarity-1)
        item.rewardType = v.rewardType
        local desc = DataCenter.RewardManager:GetDescByType(v.rewardType, v.itemId)
        local name = DataCenter.RewardManager:GetNameByType(v.rewardType, v.itemId)
        item.itemName = name
        item.itemDesc = desc
        item.isLocal = true
        if v.rewardType == RewardType.GOODS then
            if v.itemId ~= nil then
                --物品或英雄
                --item.itemName = Localization:GetString(name)
                local goods = DataCenter.ItemTemplateManager:GetItemTemplate(v.itemId)
                if goods ~= nil then
                    local join_method = -1
                    local icon_join = nil
                    if goods.join_method ~= nil and goods.join_method > 0 and goods.icon_join ~= nil and goods.icon_join ~= "" then
                        join_method = goods.join_method
                        icon_join = goods.icon_join
                    end

                    if join_method > 0 and icon_join ~= nil and icon_join ~= "" then
                        local tempJoin = string.split(icon_join, ";")
                        if #tempJoin > 1 then
                            item.itemColor = tempJoin[2]
                        end
                        if #tempJoin > 2 then
                            item.iconName = tempJoin[3]
                        end
                    else
                        --物品
                        item.itemColor = DataCenter.ItemTemplateManager:GetToolBgByColor(rarity-1)
                        local itemType = goods.type
                        item.goodsType = goods.type
                        item.para2 = goods.para2
                        if itemType == 2 then
                            -- SPD
                            if goods.para1 ~= nil and goods.para1 ~= "" then
                                local para1 = goods.para1
                                local temp = string.split(para1, ';')
                                if temp ~= nil and #temp > 1 then
                                    item.itemFlag = temp[1] .. temp[2]
                                end
                            end
                        elseif itemType == 3 then
                            -- USE
                            local type2 = goods.type2
                            if type2 ~= 999 and goods.para ~= nil and goods.para ~= "" then
                                local res_num = tonumber(goods.para)
                                item.itemFlag = string.GetFormattedStr(res_num)
                            end
                        end

                        item.iconName = string.format(LoadPath.ItemPath, goods.icon)
                    end
                end
            end
        elseif v.rewardType == RewardType.GOLD then
            item.iconName = DataCenter.ResourceManager:GetResourceIconByType(ResourceType.Gold)
            item.itemColor = DataCenter.ItemTemplateManager:GetToolBgByColor(rarity-1)
        elseif v.rewardType == RewardType.OIL or v.rewardType == RewardType.METAL or v.rewardType == RewardType.FORMATION_STAMINA
                or v.rewardType == RewardType.WATER or v.rewardType == RewardType.PVE_POINT or v.rewardType == RewardType.DETECT_EVENT
                or v.rewardType == RewardType.MONEY or v.rewardType == RewardType.ELECTRICITY then
            item.iconName = DataCenter.RewardManager:GetPicByType(v.rewardType)
            item.itemColor = DataCenter.ItemTemplateManager:GetToolBgByColor(rarity-1)
        elseif v.rewardType == RewardType.EXP then
            item.itemColor = DataCenter.ItemTemplateManager:GetToolBgByColor(rarity-1)
            item.iconName = "Assets/Main/Sprites/UI/Common/New/Common_icon_exp.png"
        end
        table.insert(reward, item)
    end)
    return reward
end
return UIHeroBountyMainCtrl