---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by guqu.
--- DateTime: 2020/11/9 14:46
---
local UIWorldCollectMessageTipView = BaseClass("UIWorldCollectMessageTipView",UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization

function UIWorldCollectMessageTipView:OnCreate()
    base.OnCreate(self)
    self.tipText,self.btnNum,self.text1,self.text2,self.action1,self.action2 = self:GetUserData()
    --self:SetData()
    self.title = self:AddComponent(UITextMeshProUGUIEx,"UICommonMiniPopUpTitle/Bg_mid/titleText")
    self.tips_txt = self:AddComponent(UIText,"DesName")
    self.btn_1 = self:AddComponent(UIButton, "BtnGo/LeftBtn")
    self.btn_1_txt = self:AddComponent(UIText,"BtnGo/LeftBtn/LeftBtnName")
    self.btn_2 = self:AddComponent(UIButton, "BtnGo/RightBtn")
    self.btn_2_txt = self:AddComponent(UIText,"BtnGo/RightBtn/RightBtnName")
    self.close_btn = self:AddComponent(UIButton, "UICommonMiniPopUpTitle/Bg_mid/CloseBtn")
    self.return_btn = self:AddComponent(UIButton, "UICommonMiniPopUpTitle/panel")
end

function UIWorldCollectMessageTipView:OnDestroy()
    self.titleText =nil
    self.tipText = nil
    self.text1 =nil
    self.text2 =nil
    self.action1 = nil
    self.closeAction = nil
    self.action2 =nil
    self.title = nil
    self.tips_txt = nil
    self.btn_1 = nil
    self.btn_1_txt = nil
    self.btn_2 = nil
    self.btn_2_txt = nil
    self.close_btn = nil
    self.return_btn = nil
    base.OnDestroy(self)
end

function UIWorldCollectMessageTipView:OnEnable()
    base.OnEnable(self)
    self:RefreshData()
end

function UIWorldCollectMessageTipView:OnDisable()
    base.OnDisable(self)
end
function UIWorldCollectMessageTipView:SetData(tipText,btnNum,text1,text2,action1,action2,titleText)
    self.titleText =titleText
    self.btnNum = btnNum
    self.tipText = tipText
    self.text1 =text1
    self.text2 =text2
    self.action1 = action1
    self.action2 =action2
    self.OnCloseClick =false
end
function UIWorldCollectMessageTipView:RefreshData()
    if self.titleText~=nil and self.titleText~="" then
        self.title:SetLocalText(self.titleText) 
    else
        self.title:SetLocalText(100378) 
    end
    if self.tipText~=nil and self.tipText~="" then
        self.tips_txt:SetText(self.tipText)
    else
        self.tips_txt:SetText("")
    end

    if self.btnNum~=nil then
        self.btn_1:SetActive(self.btnNum>0)
        self.btn_2:SetActive(self.btnNum>1)
        --self.btn_1.rectTransform:Set_sizeDelta(BtnWidth[self.btnNum],self.btn_1.rectTransform.sizeDelta.y)
    else
        self.btn_1:SetActive(false)
        self.btn_2:SetActive(false)
    end
    if self.btn_1:GetActive() then
        if self.action1 then
                self.btn_1:SetOnClick(function ()
                    self:OnCloseInTimer()
                    self.action1()
                end)
        else
            self.btn_1:SetOnClick(function ()
                self.ctrl:CloseSelf(true)
            end)
        end
        if self.text1~=nil and self.text1~="" then
            self.btn_1_txt:SetLocalText(self.text1) 
        else
            self.btn_1_txt:SetLocalText(GameDialogDefine.CONFIRM) 
        end
    end
    if self.btn_2:GetActive() then
        if self.action2 then
                self.btn_2:SetOnClick(function ()
                    self:OnCloseInTimer()
                    self.action2()
                end)
        else
            self.btn_2:SetOnClick(function ()
                self.ctrl:CloseSelf(true)
            end)
        end
        if self.text2~=nil and self.text2~="" then
            self.btn_2_txt:SetLocalText(self.text2) 
        else
            self.btn_2_txt:SetLocalText(GameDialogDefine.CANCEL) 
        end
    end
    self.close_btn:SetOnClick(function()
        self.ctrl:CloseSelf(true)
    end)
    self.return_btn:SetOnClick(function()
        self.ctrl:CloseSelf(true)
    end)

end


function UIWorldCollectMessageTipView:OnCloseInTimer()
    self.OnCloseClick =true
    local closeTimer = TimerManager:GetInstance():GetTimer(0.1, function()
        if self.OnCloseClick and self.ctrl then
            self.ctrl:CloseSelf(true)
        end
    end, nil, true, false, false)

    closeTimer:Start()
end

return UIWorldCollectMessageTipView