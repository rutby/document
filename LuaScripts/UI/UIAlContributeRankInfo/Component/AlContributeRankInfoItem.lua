---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1020.
--- DateTime: 2023/4/8 17:16
---

local AlContributeRankInfoItem = BaseClass("AlContributeRankInfoItem", UIBaseContainer)
local Localization = CS.GameEntry.Localization
local base = UIBaseContainer
local UICommonItem = require "UI.UICommonItem.UICommonItem"

local imgExploitIcon_Path = "imgExploitIcon"
local txtExploitName_Path = "txtExploitName"
local txtNeedScore_Path = "txtNeedScore"
local txtGreenScore_Path = "txtGreenScore"
local txtRedScore_Path = "txtRedScore"
local txtRewardScore_Path = "txtRewardScore"
local rewardItem_Path = "rewards/rewardItem_"
local btnGetReward_Path = "rewards/btnGetReward"
local imgItemBg1_Path = "imgItemBg1"
local imgItemBg2_Path = "imgItemBg1/imgItemBg2"
local rankStar_Path = "imgExploitIcon/rankStar/starImage"

local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function DataDefine(self)
    self.index = 0
    self.rewardItemList = {}
    self.rewardItemEffList = {}
    self.curRank = nil
end

local function DataDestroy(self)
    self.index = 0
    self.rewardItemList = nil
    self.rewardItemEffList = nil
    self.curRank = nil
end

local function ComponentDefine(self)
    self.imgExploitIcon = self:AddComponent(UIImage, imgExploitIcon_Path)
    self.txtExploitName = self:AddComponent(UIText, txtExploitName_Path)
    self.txtNeedScore = self:AddComponent(UIText, txtNeedScore_Path)
    self.txtNeedScore:SetLocalText(372855)
    self.txtGreenScore = self:AddComponent(UIText, txtGreenScore_Path)
    self.txtRedScore = self:AddComponent(UIText, txtRedScore_Path)
    self.txtRewardScore = self:AddComponent(UIText, txtRewardScore_Path)
    self.txtRewardScore:SetLocalText(372856)
    for i = 1, 3 do
        local reward_path = rewardItem_Path..i
        local reward = self:AddComponent(UICommonItem, reward_path)
        table.insert(self.rewardItemList, reward)
        local rewardEff_path =  rewardItem_Path..i.."/eff"..i
        local rewardEff = self:AddComponent(UIBaseContainer, rewardEff_path)
        table.insert(self.rewardItemEffList, rewardEff)
    end
    self.btnGetReward = self:AddComponent(UIButton, btnGetReward_Path)
    self.btnGetReward:SetOnClick(function()
        self:OnClickGetRewardBtn(self.curRank)
    end)
    
    self.imgItemBg1 = self:AddComponent(UIImage, imgItemBg1_Path)
    self.imgItemBg2 = self:AddComponent(UIImage, imgItemBg2_Path)

    self.rankStarList = {}
    for i = 1, 4 do
        local rankStar = self:AddComponent(UIBaseContainer, rankStar_Path .. i)
        table.insert(self.rankStarList, rankStar)
    end
end

local function ComponentDestroy(self)

end

local function SetData(self, index, data)
    self.index = index
    local rank = data["rank"]
    self.curRank = rank

    if self.curRank == DataCenter.AlContributeManager:GetSelfExploitRank() then
        self.imgItemBg1:LoadSprite("Assets/Main/Sprites/UI/UIAlContribute/gongxun_img_board1")
        self.imgItemBg2:LoadSprite("Assets/Main/Sprites/UI/UIAlContribute/gongxun_img_board2")
    else
        self.imgItemBg1:LoadSprite("Assets/Main/Sprites/UI/UIAlContribute/gongxun_img_board3")
        self.imgItemBg2:LoadSprite("Assets/Main/Sprites/UI/UIAlContribute/gongxun_img_board4")
    end
    
    local icon = DataCenter.AlContributeManager:GetExploitImgPathByRank(rank)
    self.imgExploitIcon:LoadSprite(icon)
    
    local name = DataCenter.AlContributeManager:GetConfigDataByRank(rank, "name")
    self.txtExploitName:SetText(Localization:GetString(name))
    
    local needScore = DataCenter.AlContributeManager:GetConfigDataByRank(rank, "score")
    local selfScore = DataCenter.AlContributeManager:GetSelfScore()
    self.txtGreenScore:SetText(string.GetFormattedSeperatorNum(needScore))
    self.txtGreenScore:SetActive(selfScore >= needScore)
    self.txtRedScore:SetText(string.GetFormattedSeperatorNum(needScore))
    self.txtRedScore:SetActive(selfScore < needScore)
    
    local take = data["state"] ~= 0
    local canTake = not take and selfScore >= needScore
    self.btnGetReward:SetActive(canTake)
    local rewards = data["reward"]
    for i, v in ipairs(self.rewardItemList) do
        if i <= #rewards then
            v:SetActive(true)
            v:ReInit(rewards[i])
            v:SetCheckActive(take)
            self.rewardItemEffList[i]:SetActive(canTake)
        else
            v:SetActive(false)
        end
    end
    
    local starNum = DataCenter.AlContributeManager: GetConfigDataByRank(rank, "star")
    for i, v in ipairs(self.rankStarList) do
        if i <= starNum then
            v:SetActive(true)
        else
            v:SetActive(false)
        end
    end
end

local function OnClickGetRewardBtn(self, rank)
    SFSNetwork.SendMessage(MsgDefines.GetAlContributeExploitReward, rank)
    self.btnGetReward:SetActive(false)
    for i, v in ipairs(self.rewardItemList) do
        v:SetCheckActive(true)
        self.rewardItemEffList[i]:SetActive(false)
    end
    self.view:OnGetReward(self.index)
end

AlContributeRankInfoItem.OnCreate = OnCreate
AlContributeRankInfoItem.OnDestroy = OnDestroy
AlContributeRankInfoItem.DataDefine = DataDefine
AlContributeRankInfoItem.DataDestroy = DataDestroy
AlContributeRankInfoItem.ComponentDefine = ComponentDefine
AlContributeRankInfoItem.ComponentDestroy = ComponentDestroy

AlContributeRankInfoItem.SetData = SetData
AlContributeRankInfoItem.OnClickGetRewardBtn = OnClickGetRewardBtn

return AlContributeRankInfoItem