---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2022/1/18 21:28
---
local UIChangeAllianceCityNameView = BaseClass("UIChangeAllianceCityNameView",UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization

local title_path = "UICommonMiniPopUpTitle/Bg_mid/titleText"
local des_path = "ImgBg/desText"
local input_path = "ImgBg/InputField"
local Placeholder_path = "ImgBg/InputField/Text Area/Placeholder"
local return_btn_path = "UICommonMiniPopUpTitle/panel"
local close_btn_path = "UICommonMiniPopUpTitle/Bg_mid/CloseBtn"
local gray_img_path = "Gray"
local first_use_txt_path = "ImgBg/Button/firstUseText"
local use_btn_path ="ImgBg/Button"

local function OnCreate(self)
    base.OnCreate(self)
    self.cityId,self.changeStartTime, self.cityName = self:GetUserData()
    self.ctrl:SetCityId(self.cityId)
    self.title = self:AddComponent(UITextMeshProUGUIEx, title_path)
    self.title:SetLocalText(141069)
    self.first_use_txt = self:AddComponent(UITextMeshProUGUIEx, first_use_txt_path)
    self.Placeholder = self:AddComponent(UITextMeshProUGUIEx, Placeholder_path)
    self.des = self:AddComponent(UITextMeshProUGUIEx, des_path)
    self.btnImage = self:AddComponent(UIImage, use_btn_path)
    self.use_btn = self:AddComponent(UIButton, use_btn_path)
    self.use_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnChangeNameClick()
    end)
    self.input = self:AddComponent(UITMPInput, input_path)
    self.input:SetOnValueChange(function (value)
        self:IptOnValueChange(value)
    end)
    self.input:SetOnEndEdit(function (value)
        self:IptOnValueChange(value)
    end)
    self.close_btn = self:AddComponent(UIButton, close_btn_path)
    self.close_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)
    self.return_btn = self:AddComponent(UIButton, return_btn_path)
    self.return_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)
    local gray_img = self:AddComponent(UIImage, gray_img_path)
    self.gray = gray_img:GetMaterial()
    self.timer_action = function()
        self:UpdateTime()
    end
end

local function UpdateTime(self)
    if self.isTimeOk== false then
        local curTime = UITimeManager:GetInstance():GetServerTime()
        if self.changeStartTime==nil then
            self.changeStartTime = 0
        end
        local deltaTime = self.changeStartTime - curTime
        if deltaTime>0 then
            self.first_use_txt:SetText(UITimeManager:GetInstance():MilliSecondToFmtString(deltaTime))
        else
            self:DeleteTimer()
            self:CheckShowTime()
        end
    end
end
local function OnDestroy(self)
    self:DeleteTimer()
    self.title = nil
    self.des = nil
    self.first_use_txt = nil

    self.use_btn = nil
    self.input = nil
    self.close_btn = nil
    self.return_btn = nil
    self.inputValue = nil

    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
    self:InitButtonState()
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function InitButtonState(self)

    local name = GetTableData(TableName.WorldCity, self.cityId, 'name')
    name = Localization:GetString(name)
    if self.cityName~=nil and self.cityName~="" then
        name = self.cityName
    end
    local strPos = GetTableData(TableName.WorldCity, self.cityId, 'location')
    local cityLv = GetTableData(TableName.WorldCity, self.cityId, "level")
    local tabPos = string.split(strPos, '|')
    strPos = " ( ".."X:"..tabPos[1] .. "," .. "Y:"..tabPos[2].." ) "
    local levelStr = "Lv."..tostring(cityLv)
    local nameStr = name..strPos
    self.des:SetText(Localization:GetString("141067",levelStr,nameStr))
    self.input:SetText("")
    self.inputValue=""
    self.Placeholder:SetText(Localization:GetString("141068"))
    self.state = CheckNameType.MinNameChar
    self:CheckShowTime()
end

local function CheckShowTime(self)
    local curTime = UITimeManager:GetInstance():GetServerTime()
    if self.changeStartTime>curTime then
        self.isTimeOk = false
        self.btnImage:SetMaterial(self.gray)
        self:AddTimer()
        self:UpdateTime()
    else
        self.first_use_txt:SetLocalText(110006)
        self.isTimeOk = true
        self:CheckNameChangeState(self.state)
    end
end
local function IptOnValueChange(self,value)
    self.inputValue = value
    self.state = self.ctrl:CheckName(self.inputValue)
    if self.state == CheckNameType.None then
        self.ctrl:SendCheckNameMessage(self.inputValue)
    else
        self:CheckNameChangeState(self.state)
    end
end
local function OnChangeNameClick(self)
    if self.isTimeOk == false then
        return
    end
    if self.inputValue=="" then
        self.state = CheckNameType.MinNameChar
    end
    if  self.state == CheckNameType.IllegalChar then
        return
    elseif self.state == CheckNameType.MinNameChar or self.state == CheckNameType.MaxNameChar then
        return
    elseif self.state == CheckNameType.Exist then
        return
    elseif self.state == CheckNameType.SensitiveWords then
        return
    end
    self.ctrl:SendChangeNameMessage(self.inputValue)
    self.ctrl:CloseSelf()
    
end
local function OnCheckNameBack(self,data)
    self.state = data
    self:CheckNameChangeState(self.state)
end
local function CheckNameChangeState(self,type)
    if self.inputValue=="" then
        self.warn:SetText(string.format("<color=#B76630> %s</color>",Localization:GetString("141068")))
        self.btnImage:SetMaterial(self.gray)
        return
    end
    if type == CheckNameType.None and self.isTimeOk == true then
        self.btnImage:SetMaterial(nil)
        self.warn:SetText(string.format("<color=#B76630> %s</color>",Localization:GetString("141068")))
    else
        self.btnImage:SetMaterial(self.gray)
        if type == CheckNameType.MinNameChar or type == CheckNameType.MaxNameChar then
            self.warn:SetLocalText(120193)
        elseif type == CheckNameType.Exist then
            self.warn:SetLocalText(280038)
        elseif type == CheckNameType.IllegalChar then
            self.warn:SetLocalText(129082)
        elseif type == CheckNameType.SensitiveWords then
            self.warn:SetLocalText(280073)
        else
            self.warn:SetText(string.format("<color=#B76630> %s</color>",Localization:GetString("141068")))
        end
    end
end
local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.AllianceCityNameCheck, self.OnCheckNameBack)

end
local function OnRemoveListener(self)
    base.OnRemoveListener(self)
    self:RemoveUIListener(EventId.AllianceCityNameCheck,self.OnCheckNameBack)
end

local function AddTimer(self)
    if self.timer == nil then
        self.timer = TimerManager:GetInstance():GetTimer(1, self.timer_action , self, false,false,false)
    end
    self.timer:Start()
end

local function DeleteTimer(self)
    if self.timer ~= nil then
        self.timer:Stop()
        self.timer = nil
    end
end

UIChangeAllianceCityNameView.OnCreate = OnCreate
UIChangeAllianceCityNameView.OnDestroy = OnDestroy
UIChangeAllianceCityNameView.InitButtonState = InitButtonState
UIChangeAllianceCityNameView.OnEnable = OnEnable
UIChangeAllianceCityNameView.OnDisable = OnDisable
UIChangeAllianceCityNameView.IptOnValueChange = IptOnValueChange
UIChangeAllianceCityNameView.OnChangeNameClick = OnChangeNameClick
UIChangeAllianceCityNameView.OnCheckNameBack = OnCheckNameBack
UIChangeAllianceCityNameView.CheckNameChangeState = CheckNameChangeState
UIChangeAllianceCityNameView.OnAddListener = OnAddListener
UIChangeAllianceCityNameView.OnRemoveListener = OnRemoveListener
UIChangeAllianceCityNameView.UpdateTime = UpdateTime
UIChangeAllianceCityNameView.CheckShowTime =CheckShowTime
UIChangeAllianceCityNameView.AddTimer =AddTimer
UIChangeAllianceCityNameView.DeleteTimer = DeleteTimer
return UIChangeAllianceCityNameView