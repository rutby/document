---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2022/4/22 19:48
---
local UIPuzzleMonsterTroopCell = BaseClass("UIPuzzleMonsterTroopCell",UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization
local name_txt_path = "left/NameTxt"
local pos_txt_path = "left/posBg/posTxt"
local img_path = "left/Image"
local slider_path = "sliderBg/Slider"
local slider_des_path = "sliderBg/progressTxt"
local percent_txt_path = "sliderBg/percentTxt"
local distance_txt_path = "left/distanceBg/distanceTxt"
local time_text_path = "left/TimeTxt"
local button_path = "gotoBtn"
local btn_txt_path = "gotoBtn/btnTxt"
local user_name_path = "userNameText"
local function OnCreate(self)
    base.OnCreate(self)
    self.name_txt = self:AddComponent(UIText,name_txt_path)
    self.pos_txt = self:AddComponent(UIText,pos_txt_path)
    self.slider = self:AddComponent(UISlider,slider_path)
    self.slider_des = self:AddComponent(UIText,slider_des_path)
    self.percent_txt = self:AddComponent(UIText,percent_txt_path)
    self.distance_txt = self:AddComponent(UIText,distance_txt_path)
    self.time_text = self:AddComponent(UIText, time_text_path)
    self.btn = self:AddComponent(UIButton,button_path)
    self.btn:SetOnClick(function()
        self:OnGotoClick()
    end)
    self.gotoBtn1 = self:AddComponent(UIButton,pos_txt_path)
    self.gotoBtn1:SetOnClick(function()
        self:OnGotoClick()
    end)

    self.btn_txt = self:AddComponent(UIText,btn_txt_path)
    self.slider_des:SetLocalText(311058)
    self.btn_txt:SetLocalText(110003)
    self.timer_action = function(temp)
        self:RefreshTime()
    end
    self.user_name = self:AddComponent(UIText, user_name_path)
    self:AddTimer()
end

local function OnDestroy(self)
    self:DeleteTimer()
    base.OnDestroy(self)
end


local function SetItemShow(self, data)
    self.data = data
    local monster= DataCenter.ActivityPuzzleMonsterTemplateManager:GetTemplateByMonsterId(self.data.monsterId)
    if monster ~= nil then
        local name  = monster.name
        self.name_txt:SetLocalText(name)
    end
    self.distance_txt:SetText(string.GetFormattedSeperatorNum(math.ceil(self.data.distance)).."km")
    local pos = SceneUtils.IndexToTilePos(self.data.startPos, ForceChangeScene.World)
    self.pos_txt:SetText(Localization:GetString(GameDialogDefine.SHOW_POS,pos.x,pos.y))
    local fullName = ""
    --if not string.IsNullOrEmpty(self.data.allianceAbbr) then
    --    fullName = "["..self.data.allianceAbbr.."]"
    --end
    fullName = fullName..self.data.ownerName

    self.user_name:SetText(fullName)
    self:SetBloodSlider(self.data.armyHealth,self.data.armyInitHealth)
    self:RefreshTime()
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.ShowActBossBattleValue, self.UpdateActBossBlood)
end


local function OnRemoveListener(self)
    base.OnRemoveListener(self)
    self:RemoveUIListener(EventId.ShowActBossBattleValue, self.UpdateActBossBlood)
end

local function SetBloodSlider(self,curBlood,maxBlood)
    local tempValue = math.min((curBlood / math.max(maxBlood,1)),1)
    self.slider:SetValue(tempValue)
    self.percent_txt:SetText(string.GetFormattedPercentStr(tempValue))
end
local function OnGotoClick(self)
    local pos = self.data.startPos
    GoToUtil.CloseAllWindows()
    GoToUtil.MoveToWorldPointAndOpen(pos)
end

local function UpdateActBossBlood(self,data)
    if data~=nil then
        local strArr = string.split(data,";")
        if #strArr>=4 then
            local uuid = tonumber(strArr[1])
            if uuid~=0 and uuid == self.data.uuid then
                local initBlood = tonumber(strArr[4])
                local curBlood= tonumber(strArr[3])
                self:SetBloodSlider(curBlood,initBlood)
            end
        end
    end
end

local function AddTimer(self)
    if self.timer == nil then
        self.timer = TimerManager:GetInstance():GetTimer(1, self.timer_action , self, false,false,false)
    end
    self.timer:Start()
end

local function DeleteTimer(self)
    if self.timer ~= nil then
        self.timer:Stop()
        self.timer = nil
    end
end

local function RefreshTime(self)
    local curTime = UITimeManager:GetInstance():GetServerTime()
    local remainTime = self.data.actEndTime - curTime
    if remainTime > 0 then
        self.time_text:SetLocalText(302177, UITimeManager:GetInstance():MilliSecondToFmtString(remainTime))
    else
        self.time_text:SetText("")
    end
end

UIPuzzleMonsterTroopCell.OnCreate = OnCreate
UIPuzzleMonsterTroopCell.OnDestroy = OnDestroy
UIPuzzleMonsterTroopCell.SetItemShow = SetItemShow
UIPuzzleMonsterTroopCell.OnGotoClick = OnGotoClick
UIPuzzleMonsterTroopCell.SetBloodSlider = SetBloodSlider
UIPuzzleMonsterTroopCell.OnAddListener =OnAddListener
UIPuzzleMonsterTroopCell.OnRemoveListener =OnRemoveListener
UIPuzzleMonsterTroopCell.UpdateActBossBlood =UpdateActBossBlood
UIPuzzleMonsterTroopCell.AddTimer = AddTimer
UIPuzzleMonsterTroopCell.DeleteTimer = DeleteTimer
UIPuzzleMonsterTroopCell.RefreshTime = RefreshTime
return UIPuzzleMonsterTroopCell