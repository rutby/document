---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2022/4/24 12:02
---
local UIPuzzleMonsterRewardItem = require "UI.UIPuzzleMonster.UIPuzzleMonsterRank.Component.UIPuzzleMonsterRewardItem"
local UIPuzzleMonsterRewardTitle = require "UI.UIPuzzleMonster.UIPuzzleMonsterRank.Component.UIPuzzleMonsterRewardTitle"
local UIPuzzleMonsterRewardObj = BaseClass("UIPuzzleMonsterRewardObj",UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization
local select_obj_path = "select"
local rank_text_path = "select/rankDes"
local reward_text_path = "select/rewardDes"
local scroll_path = "ScrollView"
local empty_txt_path = "TxtEmpty"
local function OnCreate(self)
    base.OnCreate(self)
    self.select_obj = self:AddComponent(UIBaseContainer, select_obj_path)
    self.rank_text = self:AddComponent(UIText, rank_text_path)
    self.rank_text:SetLocalText(302043)
    self.reward_text = self:AddComponent(UIText, reward_text_path)
    self.reward_text:SetLocalText(130065)
    --self.ScrollView = self:AddComponent(UIScrollView, scroll_path)
    --self.ScrollView:SetOnItemMoveIn(function(itemObj, index)
    --    self:OnItemMoveIn(itemObj, index)
    --end)
    --self.ScrollView:SetOnItemMoveOut(function(itemObj, index)
    --    self:OnItemMoveOut(itemObj, index)
    --end)
    self.content = self:AddComponent(UIBaseContainer, 'LoopScroll/Viewport/Content')
    self.scroll_view_hero = self:AddComponent(UILoopListView2, 'LoopScroll')
    self.scroll_view_hero:InitListView(0, function(loopView, index)
        return self:OnGetItemByIndex(loopView, index)
    end)
    self.showDatalist ={}
    self.alreadyCreate = false
    self.empty_txt = self:AddComponent(UIText, empty_txt_path)
end

local function OnDestroy(self)
    self:ClearHeroScroll()
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function ClearScroll(self)
    self.ScrollView:ClearCells()
    self.ScrollView:RemoveComponents(UIPuzzleMonsterRewardItem)
    self.showDatalist = {}
end

local function RefreshData(self, uuid, puzzleType)
    if self.alreadyCreate == false then
        self.showDatalist = self.view.ctrl:GetActivityRewardList(uuid, puzzleType)
        if #self.showDatalist>0 then
            self.alreadyCreate = true
            self:ShowHeroScroll()
            self.empty_txt:SetActive(false)
        else
            self.empty_txt:SetLocalText(302188)
            self.empty_txt:SetActive(true)
        end
    end
end

local function OnItemMoveIn(self,itemObj, index)
    itemObj.name = tostring(index)
    local cellItem = self.ScrollView:AddComponent(UIPuzzleMonsterRewardItem, itemObj)
    cellItem:SetItemShow(self.showDatalist[index])
end

local function OnItemMoveOut(self, itemObj, index)
    self.ScrollView:RemoveComponent(itemObj.name, UIPuzzleMonsterRewardItem)
end

local function GetItemNameSequence(self)
    NameCount = NameCount + 1
    return tostring(NameCount)
end

local function ClearHeroScroll(self)
    self.content:RemoveComponents(UIPuzzleMonsterRewardItem)
    self.content:RemoveComponents(UIPuzzleMonsterRewardTitle)
    self.scroll_view_hero:ClearAllItems()
end

local function ShowHeroScroll(self)
    self:ClearHeroScroll()

    local dataCount = table.count(self.showDatalist)
    if dataCount <= 0 then
        return
    end

    self.scroll_view_hero:SetListItemCount(dataCount, false, false)
    self.scroll_view_hero:RefreshAllShownItem()

    --self.scroll_view_hero:SetTotalCount(dataCount)
    --self.scroll_view_hero:RefillCells(1)
end

local function OnGetItemByIndex(self, loopScroll, index)
    index = index + 1 --C#控件索引从0开始 
    if index < 1 or index > #self.showDatalist then
        return nil
    end

    local dt = self.showDatalist[index]

    --标题行-- titleLine
    if not string.IsNullOrEmpty(dt.title) then
        local item = loopScroll:NewListViewItem('TitleLine')
        local script = self.content:GetComponent(item.gameObject.name, UIPuzzleMonsterRewardTitle)
        if script == nil then
            local objectName = self:GetItemNameSequence()
            item.gameObject.name = objectName
            if (not item.IsInitHandlerCalled) then
                item.IsInitHandlerCalled = true
            end

            script = self.content:AddComponent(UIPuzzleMonsterRewardTitle, objectName)
        end

        script:SetActive(true)
        script:SetData(dt)
        return item
    end

    --数据行
    local item = loopScroll:NewListViewItem('UIPuzzleMonsterRewardCell')
    local script = self.content:GetComponent(item.gameObject.name, UIPuzzleMonsterRewardItem)
    if script == nil then
        local objectName = self:GetItemNameSequence()
        item.gameObject.name = objectName
        if (not item.IsInitHandlerCalled) then
            item.IsInitHandlerCalled = true
        end

        script = self.content:AddComponent(UIPuzzleMonsterRewardItem, objectName)
    end

    script:SetActive(true)
    script:SetItemShow(dt)
    return item
end


UIPuzzleMonsterRewardObj.OnCreate = OnCreate
UIPuzzleMonsterRewardObj.OnDestroy = OnDestroy
UIPuzzleMonsterRewardObj.RefreshData = RefreshData
UIPuzzleMonsterRewardObj.OnEnable = OnEnable
UIPuzzleMonsterRewardObj.OnDisable = OnDisable
UIPuzzleMonsterRewardObj.ClearScroll =ClearScroll
UIPuzzleMonsterRewardObj.OnItemMoveOut =OnItemMoveOut
UIPuzzleMonsterRewardObj.OnItemMoveIn =OnItemMoveIn
UIPuzzleMonsterRewardObj.GetItemNameSequence = GetItemNameSequence
UIPuzzleMonsterRewardObj.ClearHeroScroll = ClearHeroScroll
UIPuzzleMonsterRewardObj.ShowHeroScroll = ShowHeroScroll
UIPuzzleMonsterRewardObj.OnGetItemByIndex = OnGetItemByIndex

return UIPuzzleMonsterRewardObj