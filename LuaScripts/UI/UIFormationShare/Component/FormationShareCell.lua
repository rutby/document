---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2022/2/17 17:35
---
---
local UIHeroTipView = require "UI.UIHero2.UIHeroTip.View.UIHeroTipView"
local UIHeroCellBig = require "UI.UIHero2.Common.UIHeroCellSmall"
local FormationHeroSkillItem = require "UI.UIFormationShare.Component.FormationHeroSkillItem"
local FormationShareCell = BaseClass("FormationShareCell", UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization
local name_path = "name"
local empty_path = "empty"
local hero_obj_path = "GameObject"
local hero_cell_path = "GameObject/UIHeroCellSmall"
local hero_power_txt_path ="GameObject/powerNum"
local hero_power_btn_path = "GameObject/powerNum/addBtn"
local skill_1_path = "GameObject/ScrollView/Viewport/Content/Skill1"
local skill_2_path = "GameObject/ScrollView/Viewport/Content/Skill2"
local skill_3_path = "GameObject/ScrollView/Viewport/Content/Skill3"
local skill_4_path = "GameObject/ScrollView/Viewport/Content/Skill4"
local skill_5_path = "GameObject/ScrollView/Viewport/Content/Skill5"
-- 创建
local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
end

-- 销毁
local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

-- 显示
local function OnEnable(self)
    base.OnEnable(self)
end

-- 隐藏
local function OnDisable(self)
    base.OnDisable(self)
end


--控件的定义
local function ComponentDefine(self)
    self.hero_obj = self:AddComponent(UIBaseContainer,hero_obj_path)
    self.heroBase = self:AddComponent(UIHeroCellBig,hero_cell_path)
    self.name_text = self:AddComponent(UITextMeshProUGUIEx, name_path)
    self.empty_text = self:AddComponent(UITextMeshProUGUIEx, empty_path)
    self.hero_power_txt = self:AddComponent(UITextMeshProUGUIEx, hero_power_txt_path)
    self.hero_power_btn = self:AddComponent(UIButton,hero_power_btn_path)
    self.hero_power_btn:SetOnClick(function()
        self:OnPowerClick()
    end)
    self.skillList = {}
    local skill_1 = self:AddComponent(FormationHeroSkillItem,skill_1_path)
    self.skillList[1] = skill_1
    local skill_2 = self:AddComponent(FormationHeroSkillItem,skill_2_path)
    self.skillList[2] = skill_2
    local skill_3 = self:AddComponent(FormationHeroSkillItem,skill_3_path)
    self.skillList[3] = skill_3
    local skill_4 = self:AddComponent(FormationHeroSkillItem,skill_4_path)
    self.skillList[4] = skill_4
    local skill_5 = self:AddComponent(FormationHeroSkillItem,skill_5_path)
    self.skillList[5] = skill_5
end

--控件的销毁
local function ComponentDestroy(self)
    self.hero_obj = nil
    self.heroBase = nil
    self.name_text = nil
    self.empty_text = nil
    self.skillList = nil
end

--变量的定义
local function DataDefine(self)
    self.param = {}
end

--变量的销毁
local function DataDestroy(self)
    self.param = nil
end

-- 全部刷新
local function ReInit(self,heroData,index)
    self.heroData = heroData
    if heroData~=nil then
        self.hero_obj:SetActive(true)
        self.name_text:SetText(HeroUtils.GetHeroNameByConfigId(self.heroData.heroId))
        local rarity = GetTableData(HeroUtils.GetHeroXmlName(),self.heroData.heroId, "rarity")
        local isWakeUp = HeroUtils.GetIsWakeUp(rarity,self.heroData.skillList,self.heroData.heroId,self.heroData.quality)
        self.heroBase:InitWithConfigId(self.heroData.heroId,self.heroData.quality,self.heroData.heroLv,nil,nil,self.heroData.rankId,isWakeUp,nil, HeroUtils.GetCamp(self.heroData))
        local k1 = LuaEntry.DataConfig:TryGetNum("power_setting", "k1")
        local beyondTimes = HeroUtils.GetBeyondTimesByLevel(self.heroData.heroLv)
        local curAtk, curDef = HeroUtils.GetHeroAttr(self.heroData.heroId,self.heroData.quality,self.heroData.heroLv,beyondTimes,self.heroData.rankId)
        local k5 = LuaEntry.DataConfig:TryGetNum("power_setting", "k5")
        if k5 <=0 then
            k5 = 1
        end
        local curPower = Mathf.Round(Mathf.Pow((curAtk + curDef),k5) * k1)
        local hasSkill = false
        for k,v in pairs(self.skillList) do
            if self.heroData.skillList~=nil and self.heroData.skillList[k]~=nil and self.heroData.skillList[k].level>0 then
                local skillData = self.heroData.skillList[k]
                local powerStr = GetTableData(TableName.SkillTab, skillData.id, 'power')
                local strArr = string.split(powerStr,"|")
                if #strArr>=skillData.level then
                    curPower = curPower + tonumber(strArr[skillData.level])
                end
                v:SetActive(true)
                v:ReInit(skillData.id,skillData.level,index)
                hasSkill = true
            else
                v:SetActive(false)
            end
        end
        self.hero_power_txt:SetText(string.GetFormattedSeperatorNum(math.floor(curPower)))
        if hasSkill==true then
            self.empty_text:SetText("")
        else
            self.empty_text:SetText(Localization:GetString("121206"))
        end
    else
        self.empty_text:SetText(Localization:GetString("121063"))
        self.name_text:SetText("")
        self.hero_obj:SetActive(false)
    end
end

local function OnPowerClick(self)
    local scaleFactor = UIManager:GetInstance():GetScaleFactor()
    local position = self.hero_power_btn.transform.position + Vector3.New(-15, -15, 0) * scaleFactor
    local param = UIHeroTipView.Param.New()
    param.content = Localization:GetString("110158")
    param.dir = UIHeroTipView.Direction.BELOW
    param.defWidth = 180
    param.pivot = 0.5
    param.position = position
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIHeroTip, { anim = false }, param)
end

FormationShareCell.OnCreate = OnCreate
FormationShareCell.OnDestroy = OnDestroy
FormationShareCell.OnEnable = OnEnable
FormationShareCell.OnDisable = OnDisable
FormationShareCell.ComponentDefine = ComponentDefine
FormationShareCell.ComponentDestroy = ComponentDestroy
FormationShareCell.DataDefine = DataDefine
FormationShareCell.DataDestroy = DataDestroy
FormationShareCell.ReInit = ReInit
FormationShareCell.OnPowerClick =OnPowerClick
return FormationShareCell