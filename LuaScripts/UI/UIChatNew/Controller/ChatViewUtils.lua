---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by mac.
--- DateTime: 6/8/21 5:15 PM
---
local ChatViewUtils = BaseClass("ChatViewUtils", Singleton)

--[[
    初始化
]]
local Const_ChatView_Width_Chat = 860    -- 聊天界面可见部分设计宽
local Const_ChatView_Width_Quest = 1310  -- 任务界面可见部分设计宽
local Const_ChatView_Width_Radar = 870  -- 雷达界面设计宽度

function ChatViewUtils:__init()
    self._curRoomType = QuestRoomId
    self._screenWidth = 0.0 -- 实际屏幕宽
    self._chatItemWidthOffset = 40;
    self._chatLeftItemMinHeight = 120;
    self._chatRightItemMinHeight = 120;
    self._chatViewWidth = 750;
    self._ishorizontalScreen = true
    self._chatMainView = nil;
    self._isOpen = true;
    
    -- 设置宽高比
    local Screen = CS.UnityEngine.Screen
    self._aspectRatio = Screen.width / Screen.height; -- 实际宽高比
    --if (self._aspectRatio >= 2.055) then
    --    self._chatViewWidthDesign = 800;
    --elseif (self._aspectRatio < 1.5) then
    --    self._chatViewWidthDesign = 1050;
    --end
    self._screenWidth = (750/ Screen.height * Screen.width)
    --self._chatViewWidth = self._screenWidth * (self._chatViewWidthDesign / 1334);
	
    self._chatViewWidth_Normal = self._screenWidth * (Const_ChatView_Width_Chat / 1334);
    self._chatViewWidth_Quest = Const_ChatView_Width_Quest--self._screenWidth * (Const_ChatView_Width_Quest / 1334);
    self._chatViewWidth_Radar = Const_ChatView_Width_Radar
    
	-- 当前选中的房间id
	self._currentRoomId = ""
    self._startGmChatTime = 0
end

function ChatViewUtils:GetUIHeightRatio()
    return self._chatViewWidth / Screen.width
end

function ChatViewUtils:GetChatViewWidth_Normal()
    local extra = 0 
    if (UIUtil.IsPad()) then
        extra = 400
    end
    return self._chatViewWidth_Normal + extra
end

function ChatViewUtils:GetChatViewWidth_Quest()
    return self._chatViewWidth_Quest
end

function ChatViewUtils:GetChatViewWidth_Radar()
    return self._chatViewWidth_Radar
end

function ChatViewUtils:GetChatViewHeight()
    return self._chatViewWidth
end

function ChatViewUtils:GetChatItemMaxWidth()
    if (self._curRoomType == QuestRoomId) then
        return self._chatViewWidth_Quest - self._chatItemWidthOffset;
    elseif self._curRoomType == RadarRoomId then
        return self._chatViewWidth_Radar - self._chatItemWidthOffset
    else
        return self:GetChatViewWidth_Normal() - self._chatItemWidthOffset
    end
end

function ChatViewUtils:GetChatLeftItemMinHeight()
    return self._chatLeftItemMinHeight
end

function ChatViewUtils:GetChatRightItemMinHeight()
    return self._chatRightItemMinHeight
end

function ChatViewUtils:IsHorizontalScreen()
    return self._ishorizontalScreen
end

function ChatViewUtils:RotateScreen()
    self._ishorizontalScreen = not self._ishorizontalScreen
    if (self._ishorizontalScreen) then
        self._chatViewWidth = 880
    else
        self._chatViewWidth = 750; -- 640+52
    end
end

function ChatViewUtils:SetChatMainView( chatMainView )
    self._chatMainView = chatMainView
end

function ChatViewUtils:GetChatMainView()
    return self._chatMainView
end

function ChatViewUtils:GetScreenWidth()
    return self._screenWidth
end

function ChatViewUtils:IsOpen()
    return self._isOpen
end

function ChatViewUtils:GetShowTime( secondTime )
    --local _curServerTime = UITimeManager:GetInstance():GetServerSeconds()
    --if UITimeManager:GetInstance():IsSameDayForLocal(_curServerTime,secondTime) then
        --return UITimeManager:GetInstance():TimeStampToTimeForLocalSimple(secondTime * 1000)
    --else
        --return UITimeManager:GetInstance():TimeStampToTimeForLocal(secondTime * 1000)
    --end
    --return "";
	return UITimeManager:GetInstance():GetChatShowTime(secondTime)
end

function ChatViewUtils:GetAdaptOffsetX()
    return 0
end

-- 当前选中的房间ID
function ChatViewUtils:GetCurrentRoomId()
	return self._currentRoomId
end

function ChatViewUtils:IsTmpPrivateChat( roomId )
    if (string.startswith(roomId, ChatTempPrivateRoomId)) then
        return true
    end
    return false
end

function ChatViewUtils:SetCurrentRoomId(roomId)
	self._currentRoomId = roomId
	-- 每次切换房间频道的时候，默认直接清除privateUserInfo
    if (not self:IsTmpPrivateChat(roomId) and 
            roomId ~= ChatGMRoomId and 
            roomId ~= AlAutoInviteRoomId and
            roomId ~= E_CHAT_COUNTRY_ROOMID and
            roomId ~= E_CHAT_ALLIANCE_ROOMID) then
        if (self._privateUserInfo ~= nil) then
            EventManager:GetInstance():Broadcast(ChatInterface.getEventEnum().CHAT_REFRESH_CHANNEL)
        end
        self:SetPrivateUserInfo(nil)
    end
end

-- 这个地方临时辅助GM频道最上方的帮助提示
function ChatViewUtils:SetGmRoomTipMessage( message )
    self._GmTipMessage = message
end

function ChatViewUtils:GetGmRoomTipMessage()
    return self._GmTipMessage
end

-- 当前私聊的用户信息
function ChatViewUtils:GetPrivateUserInfo()
	return self._privateUserInfo
end

function ChatViewUtils:SetPrivateUserInfo(userInfo)
	self._privateUserInfo = userInfo
end

function ChatViewUtils:SetStartGmChatTime(time)
    self._startGmChatTime = time
end

function ChatViewUtils:GetStartGmChatTime()
   return self._startGmChatTime
end

return ChatViewUtils