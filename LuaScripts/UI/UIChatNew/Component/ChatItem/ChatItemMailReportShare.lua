---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by mac.
--- DateTime: 1/17/22 9:26 PM
---
local IChatItem = require("UI.UIChatNew.Component.ChatItem.IChatItem")
local ChatItemMailReportShare = BaseClass("ChatItemMailReportShare", IChatItem)
local base = IChatItem
local Localization = CS.GameEntry.Localization
local ChatHead = require("UI.UIChatNew.Component.ChatHead")
local ChatUserName = require "UI.UIChatNew.Component.ChatItem.ChatUserName"
local rapidjson = require "rapidjson"
 
local _cp_chatHead = "ChatHead"
local _cp_ShareTitle = "ChatShareNode/Image/ShareTitle";
local _cp_shareMsg = "ChatShareNode/ShareIconNode/ShareMsg/ShareMsg"
local _cp_shareNode = "ChatShareNode";
local _cp_chatNameLayout = "ChatNameLayout"

local Const_Min_ShareNodeHeight = 120
local Const_OneLineHeight = 26



function ChatItemMailReportShare:ComponentDefine()
    self._chatHead = self:AddComponent(ChatHead, _cp_chatHead)
    self._shareTitle = self:AddComponent(UITextMeshProUGUIEx, _cp_ShareTitle)
    self._shareMsg = self:AddComponent(UITextMeshProUGUIEx, _cp_shareMsg)
    self._shareNode = self:AddComponent(UIButton, _cp_shareNode)
    self._shareNode:SetOnClick(BindCallback(self, self.OnClickBg) )
    self._chatNameLayout = self:AddComponent(ChatUserName, _cp_chatNameLayout)
end

function ChatItemMailReportShare:OnClickBg()
    if not SceneUtils.CheckCanGotoWorld() then
        return UIUtil.ShowTipsId(120018)
    end
    if (self.mailId ~= nil) then
        local tabMailInfo = string.split(self.mailId, '#')
        if (table.count(tabMailInfo) < 3) then
            return
        end
        local mailId = tabMailInfo[1]
        local mailType = tabMailInfo[2]
        local userId = tabMailInfo[3]
        SFSNetwork.SendMessage(MsgDefines.MailGetShare,mailId, mailType, userId)
        --UIManager:GetInstance():OpenWindow(UIWindowNames.UIShareMail, { anim = true },self.mailId)
    end
end

function ChatItemMailReportShare:OnCreate()
    base.OnCreate(self)
    self:ComponentDefine()
end

function ChatItemMailReportShare:GetBattleResultStatus()
    if (self.mailId ~= nil) then
        local tabMailInfo = string.split(self.mailId, '#')
        if (table.count(tabMailInfo) < 4) then
            return ShareFightMailResultState.Fail
        end
        return tabMailInfo[4]
    end
    return ShareFightMailResultState.Fail
end

function ChatItemMailReportShare:UpdateItem( chatdata, index )
    base.UpdateItem(self, chatdata, index)
    if (chatdata == nil) then
        return
    end
    local attachmentId = chatdata["attachmentId"] or ""
    local tabAttachment = rapidjson.decode(attachmentId) or {}
    local tabParam = tabAttachment["para"] or {}
    self.mailId = tabParam["mailId"]
    local title = tabParam["title"]
    if (title) then
        self._shareTitle:SetLocalText(title)
    end
    
    local str = chatdata:getMessageWithExtra(false)
    self._shareMsg:SetText(str)

    local senderUid = chatdata["senderUid"]
    local _userInfo = ChatManager2:GetInstance().User:getChatUserInfo(senderUid, true)
    if (self._chatNameLayout) then
        self._chatNameLayout:UpdateName(_userInfo, chatdata)
    end
    
    -- 获取文本的高度,最小高度是120,之前预留了一行的高度,所以在获取真实高度的时候,需要将之前一行的高度给减去
    -- 给分享框设置尺寸
    local height = self._shareMsg:GetHeight()
    local curHeight = Const_Min_ShareNodeHeight+height-Const_OneLineHeight
    height = Mathf.Max(Const_Min_ShareNodeHeight, curHeight)
    local size_x, size_y = self._shareNode.rectTransform:Get_sizeDelta()
    self._shareNode.rectTransform:Set_sizeDelta(size_x, height)
    
    -- 给当前节点设置尺寸
    local r_x, _ = self.rectTransform:Get_sizeDelta()
    self.rectTransform:Set_sizeDelta(r_x, height+40)
    
    -- 设置胜利失败的颜色
    local battleResult = self:GetBattleResultStatus()
    if battleResult == ShareFightMailResultState.Win then
        self._shareTitle:SetColor(Const_Color_Green)
    elseif battleResult == ShareFightMailResultState.Draw then
        self._shareTitle:SetColor(WhiteColor)
    else
        self._shareTitle:SetColor(Const_Color_Red)
    end

    self:UpdateTopOffset()
end

-- override
function ChatItemMailReportShare:GetTopOffset()
    if self._chatNameLayout then
        return self._chatNameLayout:GetTopOffset()
    else
        return 0
    end
end

-- override
function ChatItemMailReportShare:UpdateTopOffset()
    local initOffset = 40
    local topOffset = self:GetTopOffset()
    local sizeX, sizeY = self.rectTransform:Get_sizeDelta()
    self.rectTransform:Set_sizeDelta(sizeX, sizeY + topOffset)
    self:SetTransPosY(self._shareNode.rectTransform, - (initOffset + topOffset))
end

return ChatItemMailReportShare