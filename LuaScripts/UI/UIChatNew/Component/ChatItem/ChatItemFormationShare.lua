---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2022/2/17 20:04
---
local IChatItem = require("UI.UIChatNew.Component.ChatItem.IChatItem")
local ChatItemFormationShare = BaseClass("ChatItemFormationShare", IChatItem)
local base = IChatItem
local Localization = CS.GameEntry.Localization
local ChatHead = require("UI.UIChatNew.Component.ChatHead")
local ChatUserName = require "UI.UIChatNew.Component.ChatItem.ChatUserName"
local ChatHeroItem = require "UI.UIChatNew.Component.ChatItem.ChatHeroItem"
local rapidjson = require "rapidjson"
local ChatViewController = require "UI.UIChatNew.Controller.ChatViewUtils"
local _cp_chatHead = "ChatHead"
local _cp_ShareTitle = "ChatShareNode/Image/ShareTitle";
local _cp_heroShareList= "ChatShareNode/GameObject"
local hero_item_1 = "ChatShareNode/GameObject/heroItem1"
local hero_item_2 = "ChatShareNode/GameObject/heroItem2"
local hero_item_3 = "ChatShareNode/GameObject/heroItem3"
local hero_item_4 = "ChatShareNode/GameObject/heroItem4"
local hero_item_5 = "ChatShareNode/GameObject/heroItem5"
local _cp_shareNode = "ChatShareNode";
local _cp_chatNameLayout = "ChatNameLayout"
local up_btn_path = "ChatShareNode/clickObj/good"
local down_btn_path = "ChatShareNode/clickObj/bad"
local up_img_path = "ChatShareNode/clickObj/good/goodIcon"
local up_num_path = "ChatShareNode/clickObj/good/goodNum"
local down_img_path = "ChatShareNode/clickObj/bad/badIcon"
local down_num_path = "ChatShareNode/clickObj/bad/badNum"
function ChatItemFormationShare:ComponentDefine()
    self._chatHead = self:AddComponent(ChatHead, _cp_chatHead)
    self._shareTitle = self:AddComponent(UITextMeshProUGUIEx, _cp_ShareTitle)
    self._shareNode = self:AddComponent(UIButton, _cp_shareNode)
    self._shareNode:SetOnClick(BindCallback(self, self.OnClickBg) )
    self.upNode = self:AddComponent(UIButton, up_btn_path)
    self.upNode:SetOnClick(BindCallback(self, self.OnUp))
    self.up_anim = self:AddComponent(UIAnimator, up_img_path)
    self.down_anim = self:AddComponent(UIAnimator, down_img_path)
    self.downNode = self:AddComponent(UIButton, down_btn_path)
    self.downNode:SetOnClick(BindCallback(self, self.OnDown))
    self.up_num = self:AddComponent(UITextMeshProUGUIEx, up_num_path)
    self.down_num = self:AddComponent(UITextMeshProUGUIEx, down_num_path)
    self._chatNameLayout = self:AddComponent(ChatUserName, _cp_chatNameLayout)
    self.heroList = {}
    local heroItem1 = self:AddComponent(ChatHeroItem, hero_item_1)
    self.heroList[1] = heroItem1
    local heroItem2 = self:AddComponent(ChatHeroItem, hero_item_2)
    self.heroList[2] = heroItem2
    local heroItem3 = self:AddComponent(ChatHeroItem, hero_item_3)
    self.heroList[3] = heroItem3
    local heroItem4 = self:AddComponent(ChatHeroItem, hero_item_4)
    self.heroList[4] = heroItem4
    local heroItem5 = self:AddComponent(ChatHeroItem, hero_item_5)
    self.heroList[5] = heroItem5
    self.canClick = false
end

function ChatItemFormationShare:OnClickBg()
    if self.formationData~=nil then
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationShare, { anim = true ,isBlur = true},self.formationData)
    end
end

function ChatItemFormationShare:OnCreate()
    base.OnCreate(self)
    self:ComponentDefine()
end

function ChatItemFormationShare:UpdateItem( chatdata, index )
    base.UpdateItem(self, chatdata, index)
    if (chatdata == nil) then
        return
    end
    self.seqId = chatdata:getSeqId()
    self.upNum = chatdata:getLikeNum()
    self.downNum = chatdata:getDisLikeNum()
    if self.upNum~=nil and self.upNum>0 then
        self.up_num:SetText(string.GetFormattedSeperatorNum(self.upNum))
    else
        self.up_num:SetText("0")
    end
    if self.downNum~=nil and self.downNum>0 then
        self.down_num:SetText(string.GetFormattedSeperatorNum(self.downNum))
    else
        self.down_num:SetText("0")
    end
    self.canClick = false
    local attachmentId = chatdata["attachmentId"] or ""
    local data = rapidjson.decode(attachmentId) or nil
    if data==nil then
        return
    end
    self.formationData = data.para
    self._shareTitle:SetLocalText(110184)
    local senderUid = chatdata["senderUid"]
    self.msgTimeStamp = chatdata["serverTime"]
    self:RefreshButton()
    local _userInfo = ChatManager2:GetInstance().User:getChatUserInfo(senderUid, true)
    if (self._chatNameLayout) then
        self._chatNameLayout:UpdateName(_userInfo, chatdata)
    end
    if self.formationData~=nil then
        local heroList = self.formationData.heroList
        for k,v in pairs(self.heroList) do
            local key = tostring(k)
            if heroList~=nil and heroList[key]~=nil then
                v:ReInit(heroList[key])
            else
                v:ReInit()
            end
        end
    end
    
    self:UpdateTopOffset()
end

-- override
function ChatItemFormationShare:GetTopOffset()
    if self._chatNameLayout then
        return self._chatNameLayout:GetTopOffset()
    else
        return 0
    end
end

-- override
function ChatItemFormationShare:UpdateTopOffset()
    local initOffset = 32
    local initSizeY = 227
    local topOffset = self:GetTopOffset()
    local sizeX, _ = self.rectTransform:Get_sizeDelta()
    self.rectTransform:Set_sizeDelta(sizeX, initSizeY + topOffset)
    self:SetTransPosY(self._shareNode.rectTransform, - (initOffset + topOffset))
end

function ChatItemFormationShare:OnDown()
    local deltaTime = ChatManager2:GetInstance():GetGiveLikeMsgTime(self.seqId)
    local k1 = LuaEntry.DataConfig:TryGetNum("thumbs_up", "k1")
    local realLeftTime = deltaTime+k1
    if realLeftTime>0 then
        local delta = UITimeManager:GetInstance():MilliSecondToFmtString(realLeftTime*1000)
        UIUtil.ShowTips(Localization:GetString("121068", delta))
        return 
    end
    local _roomId = ChatViewController:GetInstance():GetCurrentRoomId()
    local msgTable =
    {
        roomId = _roomId,
        msgSeq = self.seqId,
        interactDislike = 1,
    }

    -- 如果房间为空的话，就表示是第一次在和人私聊
    if string.IsNullOrEmpty(_roomId) or
            ChatViewController:GetInstance():IsTmpPrivateChat(_roomId) or
            _roomId == ChatGMRoomId then
        local tui = ChatViewController:GetInstance():GetPrivateUserInfo()
        if (tui == nil) then
            return
        end
        msgTable.toUid = tui.uid
    end
    ChatManager2:GetInstance():SetGiveLikeMsgTime(self.seqId)
    ChatManager2:GetInstance():SetGiveLikeAnim(self.seqId,2)
    EventManager:GetInstance():Broadcast(ChatEventEnum.CHAT_SEND_ROOM_MSG_UP_COMMAND, msgTable)
    
    --local msgTable =
    --{
    --    roomId = _roomId,
    --    msg = "🌚",
    --}
    --
    ---- 如果房间为空的话，就表示是第一次在和人私聊
    --if string.IsNullOrEmpty(_roomId) or
    --        ChatViewController:GetInstance():IsTmpPrivateChat(_roomId) or
    --        _roomId == ChatGMRoomId then
    --    local tui = ChatViewController:GetInstance():GetPrivateUserInfo()
    --    if (tui == nil) then
    --        return
    --    end
    --    msgTable.toUid = tui.uid
    --end
    --ChatManager2:GetInstance():SetGiveLikeMsgTime(self.index,2)
    --ChatManager2:GetInstance():SetGiveLikeAnim(self.index,2)
    --EventManager:GetInstance():Broadcast(ChatEventEnum.CHAT_SEND_ROOM_MSG_COMMAND, msgTable)
    
    
end

function ChatItemFormationShare:OnUp()
    local deltaTime = ChatManager2:GetInstance():GetGiveLikeMsgTime(self.seqId)
    local k1 = LuaEntry.DataConfig:TryGetNum("thumbs_up", "k1")
    local realLeftTime = deltaTime+k1
    if realLeftTime>0 then
        local delta = UITimeManager:GetInstance():MilliSecondToFmtString(realLeftTime*1000)
        UIUtil.ShowTips(Localization:GetString("121068", delta))
        return
    end
    local _roomId = ChatViewController:GetInstance():GetCurrentRoomId()
    local msgTable =
    {
        roomId = _roomId,
        msgSeq = self.seqId,
        interactLike = 1,
    }

    -- 如果房间为空的话，就表示是第一次在和人私聊
    if string.IsNullOrEmpty(_roomId) or
            ChatViewController:GetInstance():IsTmpPrivateChat(_roomId) or
            _roomId == ChatGMRoomId then
        local tui = ChatViewController:GetInstance():GetPrivateUserInfo()
        if (tui == nil) then
            return
        end
        msgTable.toUid = tui.uid
    end
    ChatManager2:GetInstance():SetGiveLikeMsgTime(self.seqId)
    ChatManager2:GetInstance():SetGiveLikeAnim(self.seqId,1)
    EventManager:GetInstance():Broadcast(ChatEventEnum.CHAT_SEND_ROOM_MSG_UP_COMMAND, msgTable)
    --local msgTable =
    --{
    --    roomId = _roomId,
    --    msg = "👍",
    --}
    --
    ---- 如果房间为空的话，就表示是第一次在和人私聊
    --if string.IsNullOrEmpty(_roomId) or
    --        ChatViewController:GetInstance():IsTmpPrivateChat(_roomId) or
    --        _roomId == ChatGMRoomId then
    --    local tui = ChatViewController:GetInstance():GetPrivateUserInfo()
    --    if (tui == nil) then
    --        return
    --    end
    --    msgTable.toUid = tui.uid
    --end
    --ChatManager2:GetInstance():SetGiveLikeMsgTime(self.index,1)
    --ChatManager2:GetInstance():SetGiveLikeAnim(self.index,1)
    ----self:RefreshButton()
    --EventManager:GetInstance():Broadcast(ChatEventEnum.CHAT_SEND_ROOM_MSG_COMMAND, msgTable)
    
    
end

function ChatItemFormationShare:RefreshButton()
    local anim = ChatManager2:GetInstance():GetGiveLikeAnim(self.seqId)
    if anim >0 then
        if anim ==1 then
            local ret,time = self.up_anim:PlayAnimationReturnTime("V_ui_dianzan_anim")
            ChatManager2:GetInstance():SetGiveLikeAnim(self.seqId,0)
        elseif anim == 2 then
            local ret,time =self.down_anim:PlayAnimationReturnTime("V_ui_diancai_anim")
            ChatManager2:GetInstance():SetGiveLikeAnim(self.seqId,0)
        end
    else
        self.up_anim:Play("V_ui_dianzan_finish", 0, 0)
        self.down_anim:Play("V_ui_diancai_finish", 0, 0)
    end
end
return ChatItemFormationShare