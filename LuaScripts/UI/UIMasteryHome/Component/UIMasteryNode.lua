---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2023/3/8 15:43
---

local UIMasteryNode = BaseClass("UIMasteryNode", UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization
local UIGray = CS.UIGray

local btn_path = "Btn"
local icon_path = "Btn/Icon"
local select_path = "Btn/Select"
local level_path = "Level"
local id_path = "Id"

local DefaultSize = 64

local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    self.btn = self:AddComponent(UIButton, btn_path)
    self.btn:SetOnClick(function()
        self:OnClick()
    end)
    self.event_trigger = self:AddComponent(UIEventTrigger, btn_path)
    self.event_trigger:OnDrag(function(eventData)
        self:OnDrag(eventData)
    end)
    self.event_trigger:OnBeginDrag(function(eventData)
        self:OnBeginDrag(eventData)
    end)
    self.event_trigger:OnEndDrag(function(eventData)
        self:OnEndDrag(eventData)
    end)
    self.icon_image = self:AddComponent(UIImage, icon_path)
    self.select_go = self:AddComponent(UIBaseContainer, select_path)
    self.level_text = self:AddComponent(UIText, level_path)
    self.id_text = self:AddComponent(UIText, id_path)
end

local function ComponentDestroy(self)
    self.btn = nil
    self.event_trigger = nil
    self.icon_image = nil
    self.select_go = nil
    self.level_text = nil
    self.id_text = nil
end

local function DataDefine(self)
    self.group = nil
    self.view = nil
    self.onClick = nil
    self.state = MasteryNodeState.Hide
end

local function DataDestroy(self)
    self.group = nil
    self.view = nil
    self.onClick = nil
    self.state = nil
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function OnAddListener(self)
    base.OnAddListener(self)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
end

local function OnDrag(self, eventData)
    self.view:OnDrag(eventData)
end

local function OnBeginDrag(self, eventData)
    self.view:OnBeginDrag(eventData)
end

local function OnEndDrag(self, eventData)
    self.view:OnEndDrag(eventData)
end

local function SetData(self, group, view, onClick)
    self.group = group
    self.view = view
    self.onClick = onClick
    self:Refresh()
end

local function SetSelected(self, selected)
    self.select_go:SetActive(selected)
end

local function Refresh(self)
    local plan = DataCenter.MasteryManager:GetCurPlan()
    local level = plan:GetGroupLevel(self.group)
    local template = DataCenter.MasteryManager:GetTemplate(self.group, level)

    self.state = plan:GetNodeState(self.group)
    self.level_text:SetText(string.format("%s/%s", level, template.tempData:getValue("maxLv")))
    self.id_text:SetText(template.tempData:getValue("id"))
    local icon = ""
    local offset = 0
    if #template.priors == 0 then
        icon = LoadPath.UIMastery .. "UImaster_icon_" .. template.home .. "_small"
        self.level_text:SetActive(false)
    else
        self.level_text:SetActive(true)
    end
    if template.tempData:getValue("icon") ~= "" then
        if icon == "" then
            icon = LoadPath.UIMastery .. template.tempData:getValue("icon")
        end
        if self.state == MasteryNodeState.On then
            self.icon_image:SetColor(Color.New(1, 1, 1, 1))
            UIGray.SetGray(self.icon_image.transform, false, true)
        elseif self.state == MasteryNodeState.Off then
            self.icon_image:SetColor(Color.New(0.7, 0.7, 0.7, 1))
            UIGray.SetGray(self.icon_image.transform, false, true)
        elseif self.state == MasteryNodeState.Hide then
            self.icon_image:SetColor(Color.New(0.7, 0.7, 0.7, 1))
            UIGray.SetGray(self.icon_image.transform, true, true)
        end
    else
        if icon == "" then
            icon = LoadPath.UIMastery .. "UImaster_node_" .. template.tempData:getValue("home") .. "_" .. self.state
        end
        self.icon_image:SetColor(Color.New(1, 1, 1, 1))
        UIGray.SetGray(self.icon_image.transform, false, true)
    end
    if template.skill~=0 then
        offset = 15
    else
        offset = 10
    end
    self.icon_image:LoadSprite(icon)
    local scale = template.tempData:getValue("scale")
    local scaleX = scale[1]
    local scaleY = scale[2]
    if scaleX==nil or scaleX<=0 then
        scaleX = 1
    end
    if scaleY==nil or scaleY<=0 then
        scaleY = 1
    end
    self.btn.rectTransform.sizeDelta = Vector2.New( scaleX, scaleY) * DefaultSize
    self.level_text.transform.localPosition = Vector3.down * (scaleY * DefaultSize * 0.5 + offset)
end

local function OnClick(self)
    if self.onClick then
        self.onClick()
    end
end

UIMasteryNode.OnCreate= OnCreate
UIMasteryNode.OnDestroy = OnDestroy
UIMasteryNode.ComponentDefine = ComponentDefine
UIMasteryNode.ComponentDestroy = ComponentDestroy
UIMasteryNode.DataDefine = DataDefine
UIMasteryNode.DataDestroy = DataDestroy
UIMasteryNode.OnEnable = OnEnable
UIMasteryNode.OnDisable = OnDisable
UIMasteryNode.OnAddListener = OnAddListener
UIMasteryNode.OnRemoveListener = OnRemoveListener

UIMasteryNode.OnDrag = OnDrag
UIMasteryNode.OnBeginDrag = OnBeginDrag
UIMasteryNode.OnEndDrag = OnEndDrag

UIMasteryNode.SetData = SetData
UIMasteryNode.SetSelected = SetSelected
UIMasteryNode.Refresh = Refresh
UIMasteryNode.OnClick = OnClick

return UIMasteryNode