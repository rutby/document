---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by guqu.
--- DateTime: 2020/8/27 21:15
---
local PlayerInfoMain = BaseClass("PlayerInfoMain",UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization
local AllianceFlagItem = require "UI.UIAlliance.UIAllianceFlag.Component.AllianceFlagItem"
local GovernmentConst = require("DataCenter.GovernmentManager.GovernmentConst")
--local photo_btn_path = "photoBtn"
--local self_btn_obj_path = "selfBtnObj"
--local icon_btn_path = "selfBtnObj/iconBtn"
--local change_name_btn_path = "selfBtnObj/changeNameBtn"
--local player_des_path = "playerDes"
--local player_uid_path = "playerDes/playerID"
--local player_name_path = "playerName"
--local alliance_txt_path = "allianceTxt"
--local alliance_name_path = "allianceTxt/allianceName"
--local power_txt_path = "powerTxt"
--local power_path = "powerTxt/power"
--local kill_txt_path = "killTxt"
--local kill_des_btn_path = "killTxt/killDesBtn"
--local kill_num_path = "killTxt/kill"
--local frame_path = "Image/frame"
--local icon_path= "Image/frame/icon"
--local achieve_txt_path = "achieveObj/achieveTxt"
--local achieve_content_path ="achieveObj/achieveContent"

--local photo_btn_path = "common_userhead_bg"
local self_btn_obj_path = "UIPlayerHeadbg/UIPlayerHead"
local icon_btn_path = "UIPlayerHeadbg/UIPlayerHead"
local change_name_btn_path = "message/nameContent/Common_btn_change"
local change_name_btn_obj_path = "message/nameContent/Common_btn_change"
local player_des_path = "message/nameContent/title_tips_name"
local gm_obj_path = "message/title_tips_IDleft"
local player_uid_path = "message/title_tips_IDleft/content_main_IDleft"
local player_name_path = "message/nameContent/content_main_name"
--local alliance_txt_path = "message/title_tips_down"
--local alliance_path = "message/alliancebg"
--local alliance_name_path = "message/alliancebg/content_main_down"
local power_txt_path = "message/powerContent/title_tips_IDup"
local power_path = "message/powerContent/content_main_IDup"
local kill_txt_path = "message/killContent/title_tips_IDdown"
--local kill_des_btn_path = "message/content_main_IDdown"
local kill_num_path = "message/killContent/content_main_IDdown"
local title_tips_Alliance = "message/allianceContent/title_tips_Alliance"
local flag_alliance_path = "message/allianceContent/AllianceFlag"
local flag_allianceDef_path = "message/allianceContent/AllianceDef"
local allianceName_txt_path = "message/allianceContent/content_main_Alliance"
local allianceDef_txt_path = "message/allianceContent/Txt_AllianceDef"

local icon_path= "UIPlayerHeadbg/UIPlayerHead/HeadIcon"
local headBg_path = "UIPlayerHeadbg/UIPlayerHead"
local headFg_path = "UIPlayerHeadbg/UIPlayerHead/Foreground"
local head_red_pot_path = "UIPlayerHeadbg/changeBtn/ModifyHeadRedPot"
local flagImg_path = "UIPlayerHeadbg/UIPlayerHead/countryFlag"

--local achieve_txt_path = "achieveObj/achieveTxt"
local achieve_content_path ="achieveObj/achieveContent"
--local alliance_btn_path="message/alliancebg/Common_btn_info"
local copy_btn_path="message/title_tips_IDleft/content_main_IDleft/Common_btn_message";
local sign_txt_path= "InputField"
--local allianceName
local level_bg_path = "message/btn_list/bg_level"
local level_btn_path = "message/btn_list/bg_level/btn_level"
local level_text_path = "message/btn_list/bg_level/btn_level/text_level"
local career_bg_path = "message/btn_list/bg_career"
local career_btn_path = "message/btn_list/bg_career/btn_career"
local career_lv_path = "message/btn_list/bg_career/btn_career/text_career_lv"
local career_name_path = "message/btn_list/bg_career/btn_career/text_career_name"
local career_red_path = "message/btn_list/bg_career/btn_career/CareerRed"

local sex_text_path = "message/genderContent/title_tips_gender"
local sex_change_btn_path = "message/genderContent/SexBtn"
local sex_red_path = "message/genderContent/content_sex_name/SexRed"
local sex_img_path = "message/genderContent/SetImg"
local sex_name_path = "message/genderContent/content_sex_name"
local government_position_btn_path = "UIPlayerHeadbg/government_position_btn"

local exploitBtn_path = "UIPlayerHeadbg/exploitBtn"
local exploitRankStar_path = "UIPlayerHeadbg/exploitBtn/rankStar/starImage"
local UIHeroTipsView = require "UI.UIHeroTips.View.UIHeroTipsView"

local function OnCreate(self)
    base.OnCreate(self)
    self.name = self:AddComponent(UITextMeshProUGUIEx,player_name_path)
    self.player_des = self:AddComponent(UITextMeshProUGUIEx,player_des_path)
    self.gm_obj = self:AddComponent(UIBaseContainer,gm_obj_path)
    self.gm_obj:SetActive(LuaEntry.Player.gmFlag == 1 or CS.CommonUtils.IsDebug())
    self.player_uid = self:AddComponent(UITextMeshProUGUIEx,player_uid_path)
    self.power = self:AddComponent(UITextMeshProUGUIEx,power_path)
    self.power_txt = self:AddComponent(UITextMeshProUGUIEx,power_txt_path)
    --self.allianceObj = self:AddComponent(UIBaseContainer,alliance_path)
    --self.alliance_name = self:AddComponent(UIText,alliance_name_path)
    --self.alliance_txt = self:AddComponent(UIText,alliance_txt_path)
    self.kill_num = self:AddComponent(UITextMeshProUGUIEx,kill_num_path)
    self.kill_txt = self:AddComponent(UITextMeshProUGUIEx,kill_txt_path)
   -- self.achieve_txt = self:AddComponent(UIText,achieve_txt_path)
    self.title_tips_Alliance = self:AddComponent(UITextMeshProUGUIEx,title_tips_Alliance)
    self.allianceDef_txt =self:AddComponent(UITextMeshProUGUIEx,allianceDef_txt_path)
    self.flag_alliance = self:AddComponent(AllianceFlagItem,flag_alliance_path)
    self.flag_allianceDef = self:AddComponent(UIBaseContainer,flag_allianceDef_path)
    self.allianceName_txt = self:AddComponent(UITextMeshProUGUIEx,allianceName_txt_path)
    
    self.player_des:SetLocalText(208186) 
    --self.alliance_txt:SetLocalText(GameDialogDefine.ALLIANCE) 
    self.power_txt:SetLocalText(100644) 
    self.kill_txt:SetLocalText(104225)
  --  self.achieve_txt:SetLocalText(360080) 
    self.icon = self:AddComponent(UIPlayerHead, icon_path)
    self.icon_img = self:AddComponent(CircleImage, icon_path)
    self.headBg = self:AddComponent(UIImage, headBg_path)
    self.headFg = self:AddComponent(UIImage, headFg_path)
    self.flagImgN = self:AddComponent(UIImage, flagImg_path)
    self.head_red_pot = self:AddComponent(UIImage, head_red_pot_path)

    
    --self:OnRefreshPlayerIcon()
    --self.photo_btn = self:AddComponent(UIButton, photo_btn_path)
    --self.photo_btn:SetOnClick(function()
    --    self.view.ctrl:OnPhotoClick()
    --end)
    self.change_name_btn = self:AddComponent(UIButton, change_name_btn_path)
    self.change_name_btn_obj = self:AddComponent(UIBaseContainer, change_name_btn_obj_path)
    self.change_name_btn :SetOnClick(function()
        self.view.ctrl:OnChangeNameClick()
    end)

    --self.kill_des_btn = self:AddComponent(UIButton, kill_des_btn_path)
    --self.kill_des_btn :SetOnClick(function()
    --    self.view.ctrl:OnKillDesClick()
    --end)
    self.self_obj = self:AddComponent(UIBaseContainer,self_btn_obj_path)
	--self.alliance_btn= self:AddComponent(UIButton, alliance_btn_path)
	--self.alliance_btn:SetOnClick(function()
	--  if allianceName==nil or allianceName=="无" then
	--  	UIUtil.ShowTipsId(GameDialogDefine.NO_JOIN_ALLIANCE) 
	--  else
	--	UIManager:GetInstance():OpenWindow(UIWindowNames.UIAllianceMainTable)
	--  end
	--end)
	self.copy_btn = self:AddComponent(UIButton, copy_btn_path)
	self.copy_btn:SetOnClick(function()
	     --UIUtil.ShowTipsId(390794) 
		 CommonUtil.CopyTextToClipboard(self.view.ctrl:GetUid())
		 UIUtil.ShowTipsId(128031) 
	end)
	
	--self.playerSign = DataCenter.PlayerInfoDataManager.GetPlayerDataByUid(self.view.ctrl:GetUid()).moodStr
	--self.sign_input:SetText(self.playerSign)
	self.sign_input = self:AddComponent(UITMPInput, sign_txt_path)
    
    self.sex_text = self:AddComponent(UITextMeshProUGUIEx, sex_text_path)
    self.sex_change_btn = self:AddComponent(UIButton, sex_change_btn_path)
    self.sex_change_btn:SetOnClick(function()
        self.view.ctrl:OnChangeSexClick()
    end)
    self.sex_red = self:AddComponent(UIBaseContainer, sex_red_path)
    self.sex_img = self:AddComponent(UIImage, sex_img_path)
    self.sex_name = self:AddComponent(UITextMeshProUGUIEx, sex_name_path)
    self.government_position_btn = self:AddComponent(UIButton, government_position_btn_path)
    self.government_position_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnClickGovernmentPositionBtn()
    end)
    self.government_position_img = self:AddComponent(UIImage, government_position_btn_path)
    
    self.exploitBtn = self:AddComponent(UIButton, exploitBtn_path)
    self.exploitBtn:SetOnClick(function()
        self:OnClickExploitBtn()
    end)
    self.exploitBtnGo = self:AddComponent(UIBaseContainer, exploitBtn_path)
    self.exploitBtnImg = self:AddComponent(UIImage, exploitBtn_path)
    self.rankStarList = {}
    for i = 1, 4 do
        local rankStar = self:AddComponent(UIBaseContainer, exploitRankStar_path .. i)
        table.insert(self.rankStarList, rankStar)
    end
end


local function OnDestroy(self)
	self.copy_btn=nil;
	self.copy_btn=nil;
	--self.alliance_btn=nil;
    self.name = nil
    self.player_des = nil
    self.player_uid = nil
    self.power = nil
    self.power_txt = nil
    --self.allianceObj = nil
    --self.alliance_name = nil
    self.kill_num = nil
    self.kill_txt = nil
  --  self.achieve_txt = nil
    self.icon = nil
   -- self.photo_btn = nil
    self.icon_btn = nil
    self.change_name_btn = nil
   -- self.kill_des_btn = nil
    self.self_obj = nil
    self.content = nil
	self.sign_input=nil
    self.data = nil
    
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
	self:SaveMoodStr()
	self.sign_input:SetText("")
end
local function SaveMoodStr(self)
	
	if DataCenter.PlayerInfoDataManager:GetSelfUid()~=self.view.ctrl:GetUid() then
		return
	end
	local inputStr = self.sign_input:GetText()
	if inputStr=="" then
        return
	end
	if Localization:GetString("129046")==inputStr then
	   return
	end
	
	if inputStr~=self.moodStr then
		self.view.ctrl:SavePlayerSign(inputStr)
	end
end

local function RefreshData(self)
    local data = self.view.ctrl:GetPlayerInfoShowByUid(self.view.ctrl:GetUid())
    self.data = data
	--allianceName = data.allianceName
   -- self.self_obj:SetActive(data.isSelf) -- 不管是不是自己头像都要显示的
	self.moodStr=data.moodStr
	if data.moodStr==nil or data.moodStr=="" then
	   if data.isSelf==true then
			self.sign_input:SetLocalText(129046) 
		else
			self.sign_input:SetLocalText(129047) 
	   end
	else
		self.sign_input:SetText(data.moodStr)
	end
	if LuaEntry.Player.uid==data.uid then
		self.sign_input:IsEnabled(true)
	else
		self.sign_input:IsEnabled(false)
	end
    self.player_uid:SetText(data.uid)
    local name = data.name
    if not data.isSelf and not string.IsNullOrEmpty(data.alAbbr) then
        name = "[" .. data.alAbbr .. "]" .. name
    end
    if self.data.serverId and self.data.serverId ~= LuaEntry.Player.serverId then
        name = "#" .. self.data.serverId .. name
    end
    self.name:SetText(name)
    --self.allianceObj:SetActive(data.allianceName ~= "")
    --self.alliance_name:SetText(data.allianceName)
    --Localization:GetString("100206")
    self.power:SetText(data.power)
    self.kill_num:SetText(data.kill)
    if not data.allianceName or data.allianceName == "" then
        self.allianceName_txt:SetActive(false)
        self.title_tips_Alliance:SetText("")
        self.allianceDef_txt:SetActive(true)
        self.allianceDef_txt:SetLocalText(395413)
    else
        self.allianceName_txt:SetActive(true)
        self.title_tips_Alliance:SetLocalText(390002)
        self.allianceDef_txt:SetActive(false)
        self.allianceName_txt:SetText(data.allianceName)
    end
    self.allianceName_txt:SetText(data.allianceName)
    self.change_name_btn_obj:SetActive(data.isSelf)
    
    self:OnRefreshPlayerIcon()
    self:RefreshAllianceFlag(data)
    self:UpdateSex(data)
    self:UpdatePosition(data.positionId)
    self:UpdateExploit(data.exploitRank)
end

local function OnRefreshPlayerIcon(self)
    local uid = 0
    local pic = ""
    local picVer = 0 
    local careerType = CareerType.None
    local careerLv = 0
    local isSelf = false
    if DataCenter.PlayerInfoDataManager:GetSelfUid() == self.data.uid then
        uid = LuaEntry.Player:GetUid()
        pic = LuaEntry.Player:GetPic()
        picVer = LuaEntry.Player.picVer
        isSelf = true
    else
        uid = self.data.uid
        pic = self.data.pic
        picVer = self.data.picVer
        careerType = self.data.careerType
        careerLv = self.data.careerLv
        isSelf = false
    end
    self.icon:SetData(uid, pic, picVer)
    if self.data.headBg then
        self.headFg:SetActive(true)
        self.headFg:LoadSprite(self.data.headBg)
    else
        self.headFg:SetActive(false)
    end
    if self.data.nation and not LuaEntry.Player:IsHideCountryFlag() then
        self.flagImgN:SetActive(true)
        local nationTemplate = DataCenter.NationTemplateManager:GetNationTemplate(self.data.nation)
        self.flagImgN:LoadSprite(nationTemplate:GetNationFlagPath())
    else
        self.flagImgN:SetActive(false)
    end
    
    self.head_red_pot:SetActive(LuaEntry.Player:ShowPlayerChangeHeadRedPot() == true)
end

local function RefreshAllianceFlag(self,data)
    if data.allianceName == "" then
        self.flag_allianceDef:SetActive(true)
        self.flag_alliance:SetActive(false)
    else
        self.flag_allianceDef:SetActive(false)
        self.flag_alliance:SetActive(true)
        self.flag_alliance:SetData(data.icon)
    end
end

local function OnAddListener(self)
    self:AddUIListener(EventId.UpdatePlayerHeadIcon,self.OnRefreshPlayerIcon)
    self:AddUIListener(EventId.PlayerChangeHeadRedPot, self.OnRefreshPlayerIcon)

    base.OnAddListener(self)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
    self:RemoveUIListener(EventId.UpdatePlayerHeadIcon,self.OnRefreshPlayerIcon)
    self:RemoveUIListener(EventId.PlayerChangeHeadRedPot,self.OnRefreshPlayerIcon)
end

local function GetChangeNamePos(self)
    CS.UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(self.player_des.rectTransform)
    return self.change_name_btn_obj.transform.position
end

function PlayerInfoMain:UpdateSex(data)
    if data.isSelf then
        if SexUtil.IsUnLockSex() then
            self.sex_text:SetActive(true)
            self.sex_text:SetLocalText(GameDialogDefine.SEX)
            self.sex_change_btn:SetActive(true)
            local iconName = SexUtil.GetSexIconName(data.sex)
            if iconName ~= nil and iconName ~= "" then
                self.sex_img:SetActive(true)
                self.sex_img:LoadSprite(iconName)
                self.sex_red:SetActive(false)
                self.sex_name:SetActive(false)
            else
                self.sex_img:SetActive(false)
                self.sex_name:SetActive(true)
                self.sex_name:SetLocalText(GameDialogDefine.SEX_NONE)
                if SexUtil.IsShowSexRed() then
                    self.sex_red:SetActive(true)
                else
                    self.sex_red:SetActive(false)
                end
            end
        else
            self.sex_text:SetActive(false)
        end
    else
        self.sex_text:SetActive(true)
        self.sex_text:SetLocalText(GameDialogDefine.SEX)
        self.sex_change_btn:SetActive(false)
        self.sex_red:SetActive(false)
        local iconName = SexUtil.GetSexIconName(data.sex)
        if iconName ~= nil and iconName ~= "" then
            self.sex_img:SetActive(true)
            self.sex_img:LoadSprite(iconName)
            self.sex_name:SetActive(false)
        else
            self.sex_img:SetActive(false)
            self.sex_name:SetActive(true)
            self.sex_name:SetLocalText(GameDialogDefine.SEX_NONE)
        end
    end
end

function PlayerInfoMain:UpdatePosition(positionId)
    if  positionId ~= 0 then
        local template = DataCenter.GovernmentTemplateManager:GetTemplate(positionId)
        if template ~= nil then
            self.government_position_btn:SetActive(true)
            self.government_position_img:LoadSprite(template.icon)
        else
            self.government_position_btn:SetActive(false)
        end
    else
        self.government_position_btn:SetActive(false)
    end
end

function PlayerInfoMain:UpdateExploit(rank)
    local showExploit = false
    local infoList = DataCenter.ActivityListDataManager:GetActivityDataByType(EnumActivity.AlContribute.Type)
    if infoList and #infoList > 0 then
        showExploit = DataCenter.ActivityListDataManager:CheckIsSend(infoList[1])
    end
    self.exploitBtnGo:SetActive(showExploit)
    if not showExploit then 
        return 
    end
    local exploitImgPath = DataCenter.AlContributeManager:GetExploitImgPathByRank(rank)
    self.exploitBtnImg:LoadSprite(exploitImgPath)
    local starNum = DataCenter.AlContributeManager: GetConfigDataByRank(rank, "star")
    for i, v in ipairs(self.rankStarList) do
        if i <= starNum then
            v:SetActive(true)
        else
            v:SetActive(false)
        end
    end
end

function PlayerInfoMain:OnClickGovernmentPositionBtn()
    if self.data.positionId ~= 0 then
        local para = {}
        para.uid = self.data.uid
        para.pic = self.data.pic
        para.picVer = self.data.picVer
        para.headSkinId = self.data.headSkinId
        para.headSkinET = self.data.headSkinET
        para.canAssign = DataCenter.GovernmentManager:IsSelfPresident() and self.data.positionId ~= GovernmentConst.King_Position_id and self.data.serverId == LuaEntry.Player:GetSelfServerId()
        
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIGovernmentInfo, {anim = true}, self.data.positionId, para)
    end
end

function PlayerInfoMain:OnClickExploitBtn()
    local exploitName = DataCenter.AlContributeManager:GetExploitNameByRank(self.data.exploitRank)
    local param = UIHeroTipsView.Param.New()
    param.content =  Localization:GetString(372858, exploitName)
    param.defWidth = 300
    param.pivot = 0.5
    param.position = self.exploitBtnGo.transform.position + Vector3.New(75, -75, 0)
    param.bindObject = self.gameObject
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIHeroTips, { anim = false }, param)
end

PlayerInfoMain.OnCreate = OnCreate
PlayerInfoMain.OnDestroy = OnDestroy
PlayerInfoMain.RefreshData = RefreshData
PlayerInfoMain.OnEnable = OnEnable
PlayerInfoMain.OnDisable = OnDisable
PlayerInfoMain.OnAddListener = OnAddListener
PlayerInfoMain.OnRemoveListener = OnRemoveListener
PlayerInfoMain.OnRefreshPlayerIcon = OnRefreshPlayerIcon
PlayerInfoMain.SaveMoodStr=SaveMoodStr
PlayerInfoMain.GetChangeNamePos=GetChangeNamePos
PlayerInfoMain.RefreshAllianceFlag = RefreshAllianceFlag

return PlayerInfoMain