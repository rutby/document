---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2021/11/15 16:47
---

local PlayerInfoMain = require "UI.UIPlayerInfo.Component.PlayerInfoMain"
local SettingFunItem = require "UI.UIPlayerInfo.Component.SettingFunItem"
local PlayerContent = BaseClass("PlayerContent", UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization
local player_main_path = "The_character_information"
local setting_content_path = "The_character_information/settingContent"
local head_btn_path = "The_character_information/UIPlayerHeadbg/changeBtn"
local head_btn1_path = "The_character_information/UIPlayerHeadbg/UIPlayerHead"
local vip_btn_path = "The_character_information/UIPlayerHeadbg/vip"
local viplv_txt_path = "The_character_information/UIPlayerHeadbg/vip/Txt_VipLv"
local vip_red_path = "The_character_information/UIPlayerHeadbg/vip/RedDot"
local vip_redtxt_path = "The_character_information/UIPlayerHeadbg/vip/RedDot/DotText"
--local alliance_btn_path = "The_character_information/message/alliancebg/Common_btn_info"

local function OnCreate(self)
    base.OnCreate(self)
    self.player_main = self:AddComponent(PlayerInfoMain,player_main_path)
    self.setting_content = self:AddComponent(UIBaseContainer,setting_content_path)
    self.item_prefab = self.transform:Find("SettingFunItem").gameObject
    self.item_prefab:GameObjectCreatePool();
    self.icon_btn = self:AddComponent(UIButton, head_btn_path)
    self.icon_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIPlayerChangeHeadIcon,{anim = true})
    end)
    self.head_btn1 = self:AddComponent(UIButton, head_btn1_path)
    self.head_btn1:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIPlayerChangeHeadIcon,{anim = true})
    end)

    
    self._vip_btn = self:AddComponent(UIButton,vip_btn_path)
    self._vip_img = self:AddComponent(UIImage,vip_btn_path)
    self._vipLv_txt = self:AddComponent(UITextMeshProUGUIEx,viplv_txt_path)
    self._vipRed_rect = self:AddComponent(UIBaseContainer,vip_red_path)
    self._vipRed_txt = self:AddComponent(UITextMeshProUGUIEx,vip_redtxt_path)
    self._vip_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnClickOpenVip()
    end)
    self.isArrow = nil
    --self.alliance_btn=self:AddComponent(UIButton,alliance_btn_path)
    --self.alliance_btn.gameObject:SetActive(true)
end

local function OnDestroy(self)
    self.player_main = nil
    self.setting_content = nil
    self.item_prefab = nil
    self.icon_btn = nil
    self.head_btn1 = nil
    self.isArrow = nil
    --self.alliance_btn = nil
    base.OnDestroy(self)
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.GetNewUserInfoSucc, self.OnPlayerDataCallBack)
    --self:AddUIListener(EventId.PlayerMessageInfo, self.OnPlayerDataCallBack)
    self:AddUIListener(EventId.NickNameChangeEvent, self.OnPlayerDataCallBack)
    self:AddUIListener(EventId.ChangeSex, self.ChangeSexSignal)
    self:AddUIListener(EventId.VipRefreshFree, self.UpdateVipInfo)
    self:AddUIListener(EventId.VipDataRefresh, self.UpdateVipInfo)
    self:AddUIListener(EventId.PlayerPowerInfoUpdated, self.OnPlayerDataCallBack)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
    self:RemoveUIListener(EventId.GetNewUserInfoSucc,self.OnPlayerDataCallBack)
    --self:RemoveUIListener(EventId.PlayerMessageInfo,self.OnPlayerDataCallBack)
    self:RemoveUIListener(EventId.NickNameChangeEvent, self.OnPlayerDataCallBack)
    self:RemoveUIListener(EventId.ChangeSex, self.ChangeSexSignal)
    self:RemoveUIListener(EventId.VipRefreshFree, self.UpdateVipInfo)
    self:RemoveUIListener(EventId.VipDataRefresh, self.UpdateVipInfo)
    self:RemoveUIListener(EventId.PlayerPowerInfoUpdated, self.OnPlayerDataCallBack)
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function ReInit(self, param)
    self.ctrl = param.ctrl
    if self.isArrow == nil then
        self.isArrow = param.isArrow or false
    end
    self.ctrl:InitData(param.uid,param.isArrow)
    local openVip = DataCenter.VIPManager:CheckOpen()
    self._vip_btn:SetActive(openVip)
    if openVip then
        self:UpdateVipInfo()
    end
    self:InitSettingFunList()
end

local function InitSettingFunList(self)
    self.icon_btn:SetActive(self.ctrl:GetUid() == LuaEntry.Player.uid)
    self.setting_content:RemoveComponents(SettingFunItem)
    self.item_prefab.gameObject:GameObjectRecycleAll()
    local list = self.ctrl:GetPlayerButtonList(self.ctrl:GetUid())
    self.buttonListInType = {}
    if list~=nil then
        for i = 1, table.length(list) do
            --复制基础prefab，每次循环创建一次
            local item = self.item_prefab:GameObjectSpawn(self.setting_content.transform)
            item.name = "item" .. list[i].type
            local cell = self.setting_content:AddComponent(SettingFunItem,item.name,list[i])
            self.buttonListInType[list[i].type] = cell
        end
    end

    CS.UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(self.setting_content.rectTransform)
    if type(self.isArrow) == "number" then
        local param = {}
        if self.isArrow == PLayerInfoArrowType.ChangeName then
            param.position = self.player_main:GetChangeNamePos()
        elseif self.isArrow == PLayerInfoArrowType.BandAccount then
            param.position = self.buttonListInType[PLayerInfoButtonType.Account]:GetIconPos()
        elseif self.isArrow == PLayerInfoArrowType.ChangePic then
            param.position = self.head_btn1.transform.position
        end
        param.arrowType = ArrowType.Capacity
        param.positionType = PositionType.Screen
        if param.position ~= nil then
            DataCenter.ArrowManager:ShowArrow(param)
        end
        self.isArrow = false
    end
end

local function UpdateVipInfo(self)
    local vipInfo = DataCenter.VIPManager:GetVipData()
    if vipInfo then
        self._vipLv_txt:SetText(vipInfo.level)
    end
    if DataCenter.VIPManager:CheckVipLvOpen() then
        self._vipRed_rect:SetActive(DataCenter.VIPManager:GetRedNum() > 0)
        self._vipRed_txt:SetText(DataCenter.VIPManager:GetRedNum())
    else
        self._vipRed_rect:SetActive(false)
    end

    if DataCenter.VIPManager:IsUnLock() then
        self._vip_img:LoadSprite("Assets/Main/Sprites/UI/Common/New/UIPlayerInfo_icon_vip.png")
    else
        self._vip_img:LoadSprite("Assets/Main/Sprites/UI/Common/New/UIPlayerInfo_icon_vip1.png")
    end
    
end

local function OnPlayerDataCallBack(self)
    self.player_main:RefreshData()

end

local function OnClickOpenVip(self)
    local k3 = LuaEntry.DataConfig:TryGetNum("vip_aps", "k3")
    if k3 <= DataCenter.BuildManager.MainLv then
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIVip,{ anim = true, hideTop = true})
    else
        UIUtil.ShowTips(Localization:GetString("320269",k3))
    end
end

local function ChangeSexSignal(self)
    self.player_main:RefreshData()
end

PlayerContent.OnCreate= OnCreate
PlayerContent.OnDestroy = OnDestroy
PlayerContent.OnAddListener = OnAddListener
PlayerContent.OnRemoveListener = OnRemoveListener
PlayerContent.OnEnable = OnEnable
PlayerContent.OnDisable = OnDisable
PlayerContent.ReInit = ReInit
PlayerContent.InitSettingFunList = InitSettingFunList
PlayerContent.UpdateVipInfo = UpdateVipInfo
PlayerContent.OnPlayerDataCallBack = OnPlayerDataCallBack
PlayerContent.OnClickOpenVip = OnClickOpenVip
PlayerContent.ChangeSexSignal = ChangeSexSignal

return PlayerContent