---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2021/6/15 11:50
---

local PlayerInfoMain = require "UI.UIPlayerInfo.Component.PlayerInfoMain"
local SettingFunItem = require "UI.UIPlayerInfo.Component.SettingFunItem"
local UIOtherPlayerInfoView = BaseClass("UIOtherPlayerInfoView",UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization
local FormationStaminaSlider = require "UI.UIFormation.UIFormationSelectListNew.Component.FormationStaminaSlider"

local txt_title_path = "UICommonFullTop/imgTitle/Common_img_title/titleText"
local close_btn_path = "UICommonFullTop/CloseBtn"

local tab_content_path = "TabContent"
local player_content_path = "UICommonFullTop/Bg2/PlayerContent"
local sliderBg = "UICommonFullTop/Bg2/PlayerContent/The_character_information/sliderBg"
local player_main_path = "UICommonFullTop/Bg2/PlayerContent/The_character_information"
local setting_content_path = "UICommonFullTop/Bg2/PlayerContent/The_character_information/settingContent"
local head_btn_path = "UICommonFullTop/Bg2/PlayerContent/The_character_information/UIPlayerHeadbg/UIPlayerHead"
local head_img_path = "UICommonFullTop/Bg2/PlayerContent/The_character_information/UIPlayerHeadbg/UIPlayerHead/HeadIcon"
local head_img_change_path = "UICommonFullTop/Bg2/PlayerContent/The_character_information/UIPlayerHeadbg/changeBtn"
local vip_btn_path = "UICommonFullTop/Bg2/PlayerContent/The_character_information/UIPlayerHeadbg/vip"
--local alliance_btn_path = "PlayerContent/The_character_information/message/alliancebg/Common_btn_info"

local function OnCreate(self)
    base.OnCreate(self)
	
	--self.alliance_btn = self:AddComponent(UIButton,alliance_btn_path)
	--self.alliance_btn.gameObject:SetActive(false)
   
    self.txt_title = self:AddComponent(UITextMeshProUGUIEx, txt_title_path)
    self.txt_title:SetLocalText(280024)
    self.staminaSlider =  self:AddComponent(FormationStaminaSlider,sliderBg)
    self.player_main = self:AddComponent(PlayerInfoMain,player_main_path)
    self.setting_content = self:AddComponent(UIBaseContainer,setting_content_path)

    self.close_btn = self:AddComponent(UIButton, close_btn_path)
    self.close_btn:SetOnClick(function()  
        self.ctrl:CloseSelf()
    end)

    --self.return_btn = self:AddComponent(UIButton, return_btn_path)
    --self.return_btn:SetOnClick(function()  
    --    self.ctrl:CloseSelf()
    --end)
    self.item_prefab = self.transform:Find("UICommonFullTop/Bg2/PlayerContent/SettingFunItem").gameObject
    self.item_prefab:GameObjectCreatePool()
    self.head_img=self:AddComponent(UIPlayerHead, head_img_path)
    self.head_change_btn = self:AddComponent(UIButton,head_img_change_path)
    self._vip_btn = self:AddComponent(UIButton,vip_btn_path)
    self._vip_btn:SetActive(false)
	self.icon_btn=self:AddComponent(UIButton, head_btn_path)
	local userData = self:GetUserData()
	self.uid = self:GetUserData()["uid"]
	if self.uid == nil then
		self.uid = self:GetUserData()
	end
    
	self.ctrl:RefreshTalkInfo(userData)

    self.tab_content = self:AddComponent(UIBaseContainer, tab_content_path)
    self.tab_content:SetActive(false)

    self.player_content = self:AddComponent(UIBaseContainer, player_content_path)
    self.player_content:SetActive(true)
    
    self.icon_btn:SetOnClick(BindCallback(self, self.OnBtnIconClick))
end

local function OnDestroy(self)
	self.icon_btn = nil
	self.head_btn=nil
	self.head_img=nil
    self.head_change_btn = nil
	self.close_btn = nil
	self.return_btn = nil
    self.item_prefab.gameObject:GameObjectRecycleAll()
    self.item_prefab = nil
    self.txt_title = nil
    self.player_main = nil
    self.setting_content = nil
	self.uid=nil
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
    self.staminaSlider:SetActive(false)
    self.ctrl:InitData(self.uid)
    self:InitSettingFunList()
end

local function OnDisable(self)
    base.OnDisable(self)
end
local function OnUpdateHeadPic(self)
	local uid = self.uid
	local userinfo = ChatInterface.getUserData(uid, true)
	if userinfo~=nil then
		local userPic = userinfo["headPic"] or ""
		local userPicVer = userinfo["headPicVer"] or 0
		self.head_img:SetData(uid, userPic, userPicVer)
        
	end
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.GetNewUserInfoSucc, self.OnPlayerDataCallBack)
    --self:AddUIListener(EventId.PlayerMessageInfo, self.OnPlayerDataCallBack)
    self:AddUIListener(EventId.NickNameChangeEvent, self.OnPlayerDataCallBack)
	self:AddUIListener(EventId.UPDATE_MSG_USERINFO, self.OnUpdateHeadPic)
end
local function OnRemoveListener(self)
	base.OnRemoveListener(self)
	self:RemoveUIListener(EventId.GetNewUserInfoSucc,self.OnPlayerDataCallBack)
	--self:RemoveUIListener(EventId.PlayerMessageInfo,self.OnPlayerDataCallBack)
	self:RemoveUIListener(EventId.NickNameChangeEvent, self.OnPlayerDataCallBack)
	self:RemoveUIListener(EventId.UPDATE_MSG_USERINFO, self.OnUpdateHeadPic)
end
local function InitSettingFunList(self)
    self.head_change_btn:SetActive(self.uid == LuaEntry.Player.uid)
    self.setting_content:RemoveComponents(SettingFunItem)
    self.item_prefab.gameObject:GameObjectRecycleAll()
    local data = self.ctrl:GetPlayerInfoShowByUid(self.uid)
    local serverId = nil
    if data and data.serverId then
        serverId = data.serverId
    end
    local list = self.ctrl:GetPlayerButtonList(self.ctrl:GetUid(), serverId)
    --self.buttonListInType = {}
    if list~=nil then
        for i = 1, table.length(list) do
            --复制基础prefab，每次循环创建一次
            local item = self.item_prefab:GameObjectSpawn(self.setting_content.transform)
            item.name = "item" .. list[i].type
            local cell = self.setting_content:AddComponent(SettingFunItem,item.name,list[i])
		
           -- self.buttonListInType[list[i].type] = cell
        end
    end
end
local function OnPlayerDataCallBack(self)
    if IsNull(self.gameObject) then
        return
    end
    self.player_main:RefreshData()

    local data = self.ctrl:GetPlayerInfoShowByUid(self.uid)
    if data and data.serverId and data.serverId ~= LuaEntry.Player.serverId then
        self.setting_content:RemoveComponents(SettingFunItem)
        self.item_prefab.gameObject:GameObjectRecycleAll()
        local list = self.ctrl:GetPlayerButtonList(self.ctrl:GetUid(), data.serverId)
        if list~=nil then
            for i = 1, table.length(list) do
                local item = self.item_prefab:GameObjectSpawn(self.setting_content.transform)
                item.name = "item" .. list[i].type
                local cell = self.setting_content:AddComponent(SettingFunItem,item.name,list[i])
            end
        end
    end
end

local function OnBtnIconClick(self)
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIHeadIconShow, self.uid)
end

UIOtherPlayerInfoView.OnCreate= OnCreate
UIOtherPlayerInfoView.OnDestroy = OnDestroy
UIOtherPlayerInfoView.OnEnable = OnEnable
UIOtherPlayerInfoView.OnDisable = OnDisable
UIOtherPlayerInfoView.InitSettingFunList = InitSettingFunList
UIOtherPlayerInfoView.OnPlayerDataCallBack = OnPlayerDataCallBack
UIOtherPlayerInfoView.OnUpdateHeadPic = OnUpdateHeadPic
UIOtherPlayerInfoView.OnAddListener = OnAddListener
UIOtherPlayerInfoView.OnRemoveListener = OnRemoveListener

UIOtherPlayerInfoView.OnBtnIconClick = OnBtnIconClick

return UIOtherPlayerInfoView