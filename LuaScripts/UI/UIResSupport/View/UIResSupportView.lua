---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2021/9/10 14:31
---

local UIResSupportView = BaseClass("UIResSupportView", UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization

local title_path = "ImgBg/titleText"
local subTitle_path = "ImgBg/Field/NameLabel"
local playerIcon_path = "ImgBg/bg/HeadIconNode/UIPlayerHead/HeadIcon"
local playerName_path = "ImgBg/bg/nameBg/playerName"
local taxRateTxt_path = "ImgBg/bg/common_bg3/taxTxt"
local taxRateNum_path = "ImgBg/bg/common_bg3/taxTxt/taxNum"
local taxBtn_path = "ImgBg/bg/common_bg3/taxTxt/DetailsBtn"
local confirmBtn_path = "ImgBg/comfirmBtn/UpgradeBtn"
local confirmTxt_path = "ImgBg/comfirmBtn/Upgrade"
local costTime_path = "ImgBg/comfirmBtn/Time"
local closeBtn_path = "ImgBg/BtnClose"
local slider_path = "ImgBg/Field/cell%s/UpgradeSlider%s"
local resNumInput_path = "ImgBg/Field/cell%s/numInput%s"
local taxDesPanel_path = "ImgBg/bg/common_bg3/taxTxt/DetailsBtn/tipPanel"
local taxDesTxt_path = "ImgBg/bg/common_bg3/taxTxt/DetailsBtn/tipPanel/Tips/taxDes"
local closeTaxDesBtn_path = "ImgBg/bg/common_bg3/taxTxt/DetailsBtn/tipPanel/Bg"

local SupportResType = {
    "Metal",
    "Electricity",
    "Water",
    --"Oil",
}

local function OnCreate(self)
    base.OnCreate(self)
    
    self.titleN = self:AddComponent(UIText, title_path)
    self.titleN:SetLocalText(140044) 
    self.subTitleN = self:AddComponent(UIText, subTitle_path)
    self.subTitleN:SetLocalText(140045) 
    self.playerIconN = self:AddComponent(UIPlayerHead, playerIcon_path)
    self.playerNameN = self:AddComponent(UIText, playerName_path)
    self.taxRateTxtN = self:AddComponent(UIText, taxRateTxt_path)
    self.taxRateTxtN:SetLocalText(390107) 
    self.taxRateNumN = self:AddComponent(UIText, taxRateNum_path)
    self.taxBtnN = self:AddComponent(UIButton, taxBtn_path)
    self.taxBtnN:SetOnClick(function()  
SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnClickTaxBtn()
    end)
    self.confirmBtnN = self:AddComponent(UIButton, confirmBtn_path)
    self.confirmBtnN:SetOnClick(function()  
SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnClickConfirmBtn()
    end)
    self.confirmTxtN = self:AddComponent(UIText, confirmTxt_path)
    self.confirmTxtN:SetLocalText(140028) 
    self.costTimeN = self:AddComponent(UIText, costTime_path)
    self.closeBtnN = self:AddComponent(UIButton, closeBtn_path)
    self.closeBtnN:SetOnClick(function()  
        self.ctrl:CloseSelf()
    end)
    self.resItemsTb = {}
    for i, v in ipairs(SupportResType) do
        local tempRes = {}
        local tempSliderName = string.format(slider_path, i, i)
        local tempSlider = self:AddComponent(UISlider, tempSliderName)
        tempRes.sliderN = tempSlider
        tempSlider:SetOnValueChanged(function (value)
            self:OnSliderValueChange(v, value)
        end)
        local tempInputName = string.format(resNumInput_path, i, i)
        local tempInput = self:AddComponent(UIInput, tempInputName)
        tempInput:SetOnEndEdit(function (value)
            self:OnInputEndEdit(v, value)
        end)
        tempRes.inputN = tempInput
        self.resItemsTb[v] = tempRes
        --table.insert(self.resItemsTb, tempRes)
    end
    self.taxDesPanelN = self:AddComponent(UIBaseContainer, taxDesPanel_path)
    self.taxDesPanelN:SetActive(false)
    self.taxDesTxtN = self:AddComponent(UIText, taxDesTxt_path)
    self.closeTaxDesBtnN = self:AddComponent(UIButton, closeTaxDesBtn_path)
    self.closeTaxDesBtnN:SetOnClick(function()  
SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:HideTaxDesTip()
    end)
    -- [[
    self:DataDefine()
    self:InitData()
    self:InitUI()
    --]]
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.ReturnTimeFromCurPosToTargetPos, self.OnFormationTimeCallBack)
end

local function OnRemoveListener(self)
    self:RemoveUIListener(EventId.ReturnTimeFromCurPosToTargetPos, self.OnFormationTimeCallBack)
    base.OnRemoveListener(self)
end

local function DataDefine(self)
    self.resSupportDataDic = {}
    self.taxRate = 0
    self.param = {}--playerUid, playerIcon, playerName, pointId
end

local function DataDestroy(self)
    self.resSupportDataDic = nil
    self.taxRate = nil
    self.param = nil
end

local function OnDestroy(self)
    self:DataDestroy()
    
    base.OnDestroy(self)
end

local function InitData(self)
    local locUid, locPic, picVer, locName, locPoint = self:GetUserData()
    self:SetParams(locUid, locPic, picVer, locName, locPoint)
    
    local buildData = DataCenter.BuildManager:GetFunbuildByItemID(BuildingTypes.FUND_BUILD_ALLIANCE_CENTER)
    local buildLv = buildData.level
    local buildLvData = DataCenter.BuildTemplateManager:GetBuildingLevelTemplate(BuildingTypes.FUND_BUILD_ALLIANCE_CENTER, buildLv)
    self.taxRate = (buildLvData.para3 and buildLvData.para3 ~= "") and tonumber(buildLvData.para3) or 10
    self.totalLimitNum = (buildLvData.para4 and buildLvData.para4 ~= "") and tonumber(buildLvData.para4) or 10000
    for i, v in ipairs(SupportResType) do
        local tempData = {}
        --tempData.limitNum = 
        local maxSupportNum = self:GetResMaxSupportNum(v)
        tempData.maxNum = maxSupportNum
        tempData.maxPercent = tempData.maxNum / self.totalLimitNum
        tempData.curNum = 0
        self.resSupportDataDic[v] = tempData
    end
end

local function SetParams(self, playerUid, playerIcon, playerIconVer, playerName, pointId)
    self.param = {}
    self.param.playerUid = playerUid
    local memberInfo = DataCenter.AllianceMemberDataManager:GetAllianceMemberByUid(playerUid)
    if memberInfo then
        self.param.playerIcon = memberInfo.pic
        self.param.playerName = memberInfo.name
        self.param.pointId = memberInfo.pointId
        self.param.iconVer = memberInfo.picVer
    else
        self.param.playerIcon = playerIcon
        self.param.playerName = playerName
        self.param.pointId = pointId
        self.param.iconVer = playerIconVer
    end
end

local function InitUI(self)
    self.playerIconN:SetData(self.param.playerUid, self.param.playerIcon, self.param.iconVer)--:LoadSprite("Assets/Main/Sprites/UI/UIHeadIcon/" .. self.param.playerIcon, DefaultUserHead)
    self.playerNameN:SetText(self.param.playerName)
    self.taxRateNumN:SetText(self.taxRate .. "%")
    for k, v in pairs(self.resItemsTb) do
        v.sliderN:SetValue(self.resSupportDataDic[k].curNum / self.totalLimitNum)
        v.inputN:SetText(self.resSupportDataDic[k].curNum)
    end
    local costTime = self:GetCostTime()
    self.costTimeN:SetText(UITimeManager:GetInstance():MilliSecondToFmtString(costTime*1000))
    self:CalcRealTimeCost()
    self:SetButtonState()
end

local function SetTimeCost(self, realTimeCost)
    self.costTimeN:SetText(UITimeManager:GetInstance():MilliSecondToFmtString(realTimeCost*1000))
end

local function SetButtonState(self)
    local isEmpty = true
    for i, v in pairs(self.resSupportDataDic) do
        if v.curNum ~= 0 then
            isEmpty = false
            break
        end
    end
    CS.UIGray.SetGray(self.confirmBtnN.transform, isEmpty, not isEmpty)
end

local function GetResMaxSupportNum(self, resType)
    local curNum = LuaEntry.Resource:GetCntByResType(ResourceType[resType])
    --local maxNum = math.floor(curNum / ((self.taxRate)/100 + 1))
    return curNum
end

local function CalcRealTimeCost(self)
    self.ctrl:CalcRealTimeCost(self.param.pointId)
end

local function GetCostTime(self)
    return self.ctrl:GetStraightLineTimeCost(self.param.pointId)
end

local function GetCurCanAddCount(self, resType)
    local otherTotal = 0
    for i, v in ipairs(SupportResType) do
        if resType ~= v then
            otherTotal = otherTotal + self.resSupportDataDic[v].curNum
        end
    end
    local canAddNum = self.totalLimitNum - otherTotal
    return canAddNum, canAddNum / self.totalLimitNum
end




--修改数量
local function OnSliderValueChange(self, resType, num)
    --local tempPercent = self.resSupportDataDic[resType].maxPercent
    local tempAddNum, tempPercent = self:GetCurCanAddCount(resType)
    if num > tempPercent then
        num = tempPercent
        self.resItemsTb[resType].sliderN:SetValue(tempPercent)
    end
    local tempNum = math.floor(self.totalLimitNum * num)
    self.resSupportDataDic[resType].curNum = tempNum
    self.resItemsTb[resType].inputN:SetText(tempNum)
    self:SetButtonState()
end

local function OnInputEndEdit(self, resType, num)
    local inputNum = tonumber(num)
    inputNum = inputNum and inputNum or 0
    inputNum = math.max(inputNum, 0)
    local maxAddNum, maxAddPercent = self:GetCurCanAddCount(resType)
    inputNum = math.min(inputNum, maxAddNum)
    self.resSupportDataDic[resType].curNum = inputNum
    self.resItemsTb[resType].inputN:SetText(inputNum)
    self.resItemsTb[resType].sliderN:SetValue(inputNum / self.totalLimitNum)
    self:SetButtonState()
end

local function OnFormationTimeCallBack(self, strReuslt)
    --local result = string.split(strReuslt,";")
    --if result[1] == tostring(ResSupportPathFindingId) then
    --    local realDistance = tonumber(result[2])
    --
    --    local k3_speed = LuaEntry.DataConfig:TryGetNum("armyspeed", "k3") -- speed
    --    k3_speed = (k3_speed and k3_speed ~= 0) and k3_speed or 1
    --    local timeRealCost = math.ceil(realDistance / k3_speed)
    --    self:SetTimeCost(timeRealCost)
    --end
end

local function OnClickTaxBtn(self)
    
    self:ShowTaxDesTip()
end

local function ShowTaxDesTip(self)
    local tempRate = self.taxRate
    local totalCost = self:GetTotalCost()
    self.taxDesTxtN:SetLocalText(129071,  tempRate,  totalCost) 
    self.taxDesPanelN:SetActive(true)
end

local function HideTaxDesTip(self)
    self.taxDesPanelN:SetActive(false)
end

local function GetTotalCost(self)
    local totalNum = 0
    for i, v in pairs(self.resSupportDataDic) do
        totalNum = totalNum + math.ceil(v.curNum * self.taxRate / 100)
    end
    return totalNum
end

local function OnClickConfirmBtn(self)
    local resArr = {}
    local isEmpty = true
    table.walk(self.resSupportDataDic, function(k, v)
        if v.curNum > 0 then
            local res = {}
            res.type = ResourceType[k]
            res.value = v.curNum
            if isEmpty and v.curNum >= 1 then
                isEmpty = false
            end
            table.insert(resArr, res)
        end
    end)
    if not isEmpty then
        self.ctrl:StartTransport(self.param.pointId, resArr)
    end
end

UIResSupportView.OnCreate = OnCreate
UIResSupportView.DataDefine = DataDefine
UIResSupportView.DataDestroy = DataDestroy
UIResSupportView.OnDestroy = OnDestroy
UIResSupportView.OnAddListener = OnAddListener
UIResSupportView.OnRemoveListener = OnRemoveListener

UIResSupportView.InitData = InitData
UIResSupportView.SetParams = SetParams
UIResSupportView.InitUI = InitUI
UIResSupportView.SetTimeCost = SetTimeCost
UIResSupportView.GetResMaxSupportNum = GetResMaxSupportNum
UIResSupportView.GetCostTime = GetCostTime
UIResSupportView.OnSliderValueChange = OnSliderValueChange
UIResSupportView.OnInputEndEdit = OnInputEndEdit
UIResSupportView.OnClickTaxBtn = OnClickTaxBtn
UIResSupportView.OnClickConfirmBtn = OnClickConfirmBtn
UIResSupportView.CalcRealTimeCost = CalcRealTimeCost
UIResSupportView.OnFormationTimeCallBack = OnFormationTimeCallBack
UIResSupportView.SetButtonState = SetButtonState
UIResSupportView.GetTotalCost = GetTotalCost
UIResSupportView.ShowTaxDesTip = ShowTaxDesTip 
UIResSupportView.HideTaxDesTip = HideTaxDesTip
UIResSupportView.GetCurCanAddCount = GetCurCanAddCount


return UIResSupportView