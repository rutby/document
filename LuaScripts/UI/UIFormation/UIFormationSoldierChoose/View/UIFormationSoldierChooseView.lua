---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2021/7/8 12:09
---
--local FormationSoldierChooseCell = require "UI.UIFormation.UIFormationSoldierChoose.Component.FormationSoldierChooseCell"
local UIFormationSoldierChooseView = BaseClass("UIFormationSoldierChooseView",UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization

local return_btn_path = "Panel"
local content_path = "ScrollView/Viewport/Content"
local soldier_num_path ="troopIcon/soldierNum"
local one_key_btn_path = "onekeyBtn"
local save_btn_path = "saveBtn"
local save_txt_path = "saveBtn/saveText"
local one_key_txt_path = "onekeyBtn/onekeyTxt"
local function OnCreate(self)
    --首先执行基类create
    base.OnCreate(self)
    self.ctrl:InitData(self:GetUserData())
    self.return_btn = self:AddComponent(UIButton, return_btn_path)
    self.return_btn:SetOnClick(function()  
        self.ctrl:CloseSelf()
    end)
    self.content = self:AddComponent(UIBaseContainer,content_path)
    self.army_num = self:AddComponent(UITextMeshProUGUIEx, soldier_num_path)

    self.one_key_btn = self:AddComponent(UIButton, one_key_btn_path)
    self.one_key_btn:SetOnClick(function()  
SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        if self.oneKeyFill then
            self.ctrl:OnOneKeyFillClick()
        else
            self.ctrl:OnOneKeyClearClick()
        end
        self:UpdateArmyContent()
    end)
    self.one_key_txt = self:AddComponent(UITextMeshProUGUIEx, one_key_txt_path)
    self.save_btn = self:AddComponent(UIButton, save_btn_path)
    self.save_btn:SetOnClick(function()  
SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self.ctrl:OnSaveClick()
    end)
    self.save_txt = self:AddComponent(UITextMeshProUGUIEx, save_txt_path)
    self.save_txt:SetLocalText(300055) 
end

local function OnDestroy(self)
    self.return_btn = nil
    self.content = nil
    self.army_num = nil
    self.one_key_btn = nil
    self.save_btn = nil
    --基类destroy放在最后执行
    base.OnDestroy(self)
end

local function InitView(self)
    self:UpdateArmyContent()
end

local function ClearContent(self)
    --self.content:RemoveComponents(FormationSoldierChooseCell)
    --if self.model~=nil then
    --    for k,v in pairs(self.model) do
    --        if v ~= nil then
    --            self:GameObjectDestroy(v)
    --        end
    --    end
    --end
    self.model ={}
end
local function UpdateArmyContent(self)
    --self:ClearContent()
    --local list = self.view.ctrl:GetArmyIdList()
    --if list~=nil then
    --    
    --    table.walk(list,function (k,v)
    --        if self.model[v]==nil then
    --            self.model[v] = self:GameObjectInstantiateAsync(UIAssets.FormationSoldierChooseCell, function(request)
    --                if request.isError then
    --                    return
    --                end
    --                local go = request.gameObject;
    --                go.gameObject:SetActive(true)
    --                go.transform:SetParent(self.content.transform)
    --                go.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
    --                local nameStr = tostring(NameCount)
    --                go.name = nameStr
    --                NameCount = NameCount + 1
    --                local cell = self.content:AddComponent(FormationSoldierChooseCell,nameStr)
    --                cell:InitData(v)
    --            end)
    --        end
    --    end)
    --end
    --self:UpdateViewState()
end

local function UpdateViewState(self)
    local maxSoldier = self.ctrl:GetMaxSoldier()
    local currentTotal = self.ctrl:GetTotalSoldierNum()
    self.oneKeyFill = currentTotal< maxSoldier
    if self.oneKeyFill then
        self.one_key_txt:SetText("MAX")
    else
        self.one_key_txt:SetText("CLEAR")
    end
    self.army_num:SetText(string.GetFormattedSeperatorNum(math.floor(currentTotal)).." / "..string.GetFormattedSeperatorNum(math.floor(maxSoldier)))
end


local function OnEnable(self)
    base.OnEnable(self)
    self:InitView()
end

local function OnDisable(self)
    base.OnDisable(self)
end

UIFormationSoldierChooseView.OnCreate= OnCreate
UIFormationSoldierChooseView.OnDestroy = OnDestroy
UIFormationSoldierChooseView.OnEnable = OnEnable
UIFormationSoldierChooseView.OnDisable = OnDisable
UIFormationSoldierChooseView.InitView = InitView
UIFormationSoldierChooseView.UpdateArmyContent = UpdateArmyContent
UIFormationSoldierChooseView.UpdateViewState = UpdateViewState
UIFormationSoldierChooseView.ClearContent = ClearContent
return UIFormationSoldierChooseView