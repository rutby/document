---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2021/9/16 15:02
---
local FormationCreateTipNew = require "UI.UIFormation.UIFormationSelectListNew.Component.FormationCreateTipNew"
local FormationArmyTipNew = require "UI.UIFormation.UIFormationSelectListNew.Component.FormationArmyTipNew"
local FormationSelectListCellNew = require "UI.UIFormation.UIFormationSelectListNew.Component.FormationSelectListCellNew"
local FormationScoutSelectList = require "UI.UIFormation.UIFormationSelectListNew.Component.FormationScoutSelectList"
local FormationStaminaSlider = require "UI.UIFormation.UIFormationSelectListNew.Component.FormationStaminaSlider"

local UIFormationSelectListNewView = BaseClass("UIFormationSelectListNewView",UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization
local ResourceManager = CS.GameEntry.Resource
local content_path = "Area/bg/layout"
local formation_army_tip_path = "Area/FormationArmyTips"
local create_army_tip_path = "Area/CreateArmyTip"
local formationCampSelectList_path = "Area/bg"
local formationScoutSelectList_path = "Area/scoutBg"
local formationStaminaSlider_path = "Area/bg/sliderBg"
local wormHoleTips_img_path = "Area/Img_WormHole"
local wormHoleTips_txt_path = "Area/Img_WormHole/Txt_WormHoleTips"


local function OnCreate(self)
    base.OnCreate(self)
    self.ctrl:InitData(self:GetUserData())
    self.curFormationType = self.ctrl.formationType
    self.notResetFormationUuid = -1
    self.content = self:AddComponent(UIBaseContainer,content_path)
    self.formationCampSelectList = self:AddComponent(UIBaseContainer, formationCampSelectList_path)
    self.formation_army_tip = self:AddComponent(FormationArmyTipNew,formation_army_tip_path)
    self.formation_army_tip:SetActive(false)
    self.create_army_tip = self:AddComponent(FormationCreateTipNew,create_army_tip_path)
    self.create_army_tip:SetActive(false)
    self.formationScoutSelectList = self:AddComponent(FormationScoutSelectList, formationScoutSelectList_path)
    self.formationScoutSelectList:SetActive(false)
    self.formationStaminaSlider = self:AddComponent(FormationStaminaSlider, formationStaminaSlider_path)
    --self.exchangeBtn = self:AddComponent(UIButton, exchangeBtn_path)
    --self.exchangeBtn:SetOnClick(function()
    --    self:OnClickExchangeBtn()
    --end)
    self.timer_action = function(temp)
        self:RefreshFormationStamina()
    end
    
    self._wormHoleTips_img = self:AddComponent(UIBaseContainer,wormHoleTips_img_path)
    self._wormHoleTips_txt = self:AddComponent(UITextMeshProUGUIEx,wormHoleTips_txt_path)

    self.formationList={}
    self.FormationTimeList = {}
    self.FormationPowerList ={}
    self.troopLine = nil
    self.dragInstance  =nil
end

local function OnDestroy(self)
    self.title = nil
    self.content = nil
    self.return_btn =nil
    self.formationList = nil
    self.notResetFormationUuid = -1
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
    DataCenter.ArmyFormationDataManager:SetCacheTargetType(self.ctrl.targetType)
    self:OnRefresh()
    self:AddTimer()
end

local function OnDisable(self)
    self:DeleteTimer()
    base.OnDisable(self)
    self:ResetFormationModel()
    CS.WorldScene.selectMarchUuid = 0
    if CS.SceneManager.World~=nil then
        CS.SceneManager.World.marchUuid = 0
    end
    self:HideTroopLine()
    DataCenter.ArmyFormationDataManager:SetCacheTargetType(-1)
end

local function ResetFormationModel(self)
    local targetType = self.ctrl.targetType
    if targetType == MarchTargetType.COLLECT or targetType == MarchTargetType.BUILD_ALLIANCE_BUILDING or targetType == MarchTargetType.COLLECT_ALLIANCE_BUILD_RESOURCE or targetType == MarchTargetType.ASSISTANCE_COLLECT_ACT_ALLIANCE_MINE then
        if self.formationList~=nil then
            table.walk(self.formationList,function (k,v)
                v:ResetFormationModel(self.notResetFormationUuid)
            end)
        end
    end
    
    
end
local function ClearContent(self)
    self.content:RemoveComponents(FormationSelectListCellNew)
    if self.model~=nil then
        for k,v in pairs(self.model) do
            if v ~= nil then
                self:GameObjectDestroy(v)
            end
        end
    end
    self.model ={}
    self.formationList={}
end
local function OnRefresh(self)
    if self.ctrl.targetType == MarchTargetType.BUILD_WORM_HOLE then
        self._wormHoleTips_img:SetActive(true)
        self._wormHoleTips_txt:SetLocalText(143581)
    elseif self.ctrl.targetType == MarchTargetType.CROSS_SERVER_WORM then
        self._wormHoleTips_img:SetActive(true)
        local des = Localization:GetString("104277",self.ctrl.targetServerId)
        self._wormHoleTips_txt:SetText(des)
    elseif self.ctrl.targetType == MarchTargetType.BACK_HOME and CrossServerUtil:GetIsCrossServer() then
        self._wormHoleTips_img:SetActive(true)
        local des = Localization:GetString("104277",self.ctrl.targetServerId)
        self._wormHoleTips_txt:SetText(des)
    else
        self._wormHoleTips_img:SetActive(false)
    end
    if self.curFormationType == 1 then
        self.formationCampSelectList:SetActive(true)
        self.formationScoutSelectList:SetActive(false)
        self:ClearContent()
        local createNum = 0
        local data = self.ctrl:GetFormationListData()
        local serverId = LuaEntry.Player:GetCurServerId()
        if self.view.ctrl.targetType == MarchTargetType.CROSS_SERVER_WORM then
            serverId = LuaEntry.Player:GetSelfServerId()
        end
        
        if data~=nil then
            local list = data.list
            if list~=nil then
                local selectIndex = -1
                local selectIndexByMarch = -1
                local crossSelectMarch = -1
                for i = 1, data.maxNum do
                    if self.model[i]==nil then
                        self.model[i] = self:GameObjectInstantiateAsync(UIAssets.FormationSelectListCellNew, function(request)
                            if request.isError then
                                return
                            end
                            local go = request.gameObject;
                            go.gameObject:SetActive(true)
                            go.transform:SetParent(self.content.transform)
                            go.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
                            local nameStr = tostring(NameCount)
                            go.name = nameStr
                            NameCount = NameCount + 1
                            local cell = self.content:AddComponent(FormationSelectListCellNew,nameStr)
                            local showUnLock = true
                            if i ==4 then
                                local hasMonthCard = DataCenter.MonthCardNewManager:CheckIfMonthCardActive()
                                if hasMonthCard == false then
                                    local formationInfo = DataCenter.ArmyFormationDataManager:GetOneArmyInfoByIndex(4)
                                    if formationInfo then
                                        local march = DataCenter.WorldMarchDataManager:GetOwnerFormationMarch(LuaEntry.Player.uid, formationInfo.uuid, LuaEntry.Player.allianceId)
                                        if march ==nil then
                                            showUnLock = false
                                        end
                                    else
                                        showUnLock = false
                                    end
                                end
                            end
                            
                            if list[i]~=nil and list[i]~= 0 and showUnLock == true then
                                cell:SetUuidAndIndex(i,list[i])
                                local formation = DataCenter.ArmyFormationDataManager:GetOneArmyInfoByUuid(list[i])
                                local formationServerId = LuaEntry.Player:GetSelfServerId()
                                if formation~=nil then
                                    if formation.state == ArmyFormationState.March then
                                        if selectIndexByMarch<=0 then
                                            local march = DataCenter.WorldMarchDataManager:GetOwnerFormationMarch(LuaEntry.Player.uid, list[i], LuaEntry.Player.allianceId)
                                            if march~=nil then
                                                if march:GetMarchStatus() == MarchStatus.STATION and serverId == march.serverId then
                                                    selectIndexByMarch= i
                                                end
                                                if crossSelectMarch<=0 then
                                                    if march:GetMarchStatus() ~= MarchStatus.IN_WORM_HOLE and march:GetMarchStatus() ~= MarchStatus.CROSS_SERVER and serverId == march.serverId then
                                                        crossSelectMarch = i
                                                    end
                                                end
                                            end
                                        end
                                    else
                                        if selectIndex <= 0 then
                                            selectIndex = i
                                        end
                                    end
                                    --end
                                end
                                cell:RefreshData()
                            else
                                cell:SetUuidAndIndex(i)
                                cell:RefreshData()
                            end
                            self.formationList[i] = cell
                            createNum = createNum +1
                            --EXPLORE或集结类型找一个没有出征的

                            if createNum >= data.maxNum then
                                if self.ctrl.targetType>=0 then
                                    CS.UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(self.content.rectTransform)
                                    if (self.ctrl.targetType == MarchTargetType.RALLY_FOR_ALLIANCE_CITY or self.ctrl.targetType == MarchTargetType.RALLY_FOR_BOSS
                                            or self.ctrl.targetType == MarchTargetType.RALLY_FOR_BUILDING or self.ctrl.targetType == MarchTargetType.RALLY_FOR_CITY
                                            or self.ctrl.targetType == MarchTargetType.EXPLORE
                                            or self.ctrl.targetType == MarchTargetType.RALLY_ALLIANCE_BUILDING
                                    or self.ctrl.targetType == MarchTargetType.RALLY_DRAGON_BUILDING
                                            or self.ctrl.targetType == MarchTargetType.GO_WORM_HOLE
                                            or self.ctrl.targetType == MarchTargetType.CROSS_SERVER_WORM
                                            or self.ctrl.targetType ==  MarchTargetType.RALLY_THRONE or self.ctrl.targetType ==  MarchTargetType.RALLY_ASSISTANCE_THRONE
                                            or self.ctrl.targetType == MarchTargetType.DIRECT_ATTACK_ACT_BOSS or (self.ctrl.targetType == MarchTargetType.JOIN_RALLY and self.ctrl.rallyType == MarchTargetType.RALLY_FOR_BOSS)) then
                                        if selectIndex>0 then
                                            self.formationList[selectIndex]:OnAtkClick()
                                        end
                                    elseif selectIndexByMarch>0 then
                                        self.formationList[selectIndexByMarch]:OnAtkClick()
                                    
                                    elseif CrossServerUtil:GetIsCrossServer() and crossSelectMarch>0 then
                                        self.formationList[crossSelectMarch]:OnAtkClick()
                                    elseif selectIndex>0 then
                                        self.formationList[selectIndex]:OnAtkClick()
                                    --elseif CrossServerUtil:GetIsCrossServer()==false then
                                    --    self.formationList[1]:OnAtkClick()
                                    else
                                        UIUtil.ShowTipsId(302221)
                                    end
                                    --if CrossServerUtil:GetIsCrossServer() and selectIndex<=0 and selectIndexByMarch<=0 and crossSelectMarch<=0 and self.ctrl.targetType ~= MarchTargetType.CROSS_SERVER_WORM then
                                    --    self._wormHoleTips_img:SetActive(true)
                                    --    local des = Localization:GetString("110218")
                                    --    self._wormHoleTips_txt:SetText(des)
                                    --end 
                                    
                                end
                            end
                        end)
                    end
                end
            end
        end
    else
        self:ClearContent()
        self.formationCampSelectList:SetActive(false)
        self.formationScoutSelectList:SetActive(true)

        self.formationScoutSelectList:InitUI()
    end
    

    --if self.ctrl.targetPoint and self.ctrl.targetPoint > 0 then
    --    self.exchangeBtn:SetActive(false)
    --else
    --    self.exchangeBtn:SetActive(true)
    --end
end


local function OnClickExchangeBtn(self)
    if self.curFormationType == 1 then
        self.curFormationType = 2
        self:HideAllShowTip()
    else
        self.curFormationType = 1
    end
    self:OnRefresh()
end

local function OnMarchRefresh(self)
    if self.formationList~=nil then
        table.walk(self.formationList,function (k,v)
            if k ==4 then
                local showUnLock = true
                local hasMonthCard = DataCenter.MonthCardNewManager:CheckIfMonthCardActive()
                if hasMonthCard == false then
                    local formationInfo = DataCenter.ArmyFormationDataManager:GetOneArmyInfoByIndex(4)
                    if formationInfo then
                        local march = DataCenter.WorldMarchDataManager:GetOwnerFormationMarch(LuaEntry.Player.uid, formationInfo.uuid, LuaEntry.Player.allianceId)
                        if march ==nil then
                            showUnLock = false
                        end
                    else
                        showUnLock = false
                    end
                end
                if showUnLock == false then
                    v:SetUuidAndIndex(4)
                end
            end
            v:RefreshData()
        end)
    end
end

local function OnSelectClick(self,uuid)
    table.walk(self.formationList,function(k,v)
        v:OnSelectClick(uuid)
    end)
    self:RefreshCost()
end

local function RefreshCost(self)
    self.formationStaminaSlider:UpdateCost()
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.MarchItemUpdateSelf, self.OnMarchRefresh)
    self:AddUIListener(EventId.ArmyFormatUpdate, self.OnMarchRefresh)
    self:AddUIListener(EventId.UpdateCollectPos, self.UpdateCollectPos)
    self:AddUIListener(EventId.ShowTroopBattleValue, self.ShowTroopBattleSignal)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
    self:RemoveUIListener(EventId.MarchItemUpdateSelf,self.OnMarchRefresh)
    self:RemoveUIListener(EventId.ArmyFormatUpdate, self.OnMarchRefresh)
    self:RemoveUIListener(EventId.UpdateCollectPos, self.UpdateCollectPos)
    self:RemoveUIListener(EventId.ShowTroopBattleValue, self.ShowTroopBattleSignal)
end

local function UpdateCollectPos(self,pos)
    self.ctrl:SetTargetPoint(pos)
end

local function ShowFormationArmyTip(self,posX,posY,formationData)
    self.formation_army_tip:SetActive(true)
    self.create_army_tip:SetActive(false)
    self.formation_army_tip:RefreshData(posX,posY,formationData)
    if formationData~=nil and self.ctrl.targetType>=0 and self.ctrl.targetType ~= MarchTargetType.BACK_HOME and self.ctrl.targetType ~= MarchTargetType.CROSS_SERVER_WORM then
        self:ShowTroopLine(formationData.startPos,self.ctrl.targetPoint)
    else
        self:HideTroopLine()
    end
    local formation = DataCenter.ArmyFormationDataManager:GetOneArmyInfoByUuid(formationData.uuid)
    if formation~=nil then
        local canAddNum = MarchUtil.GetCanAddHeroNum(formation:GetCurHeroes(), formation.index)
        if canAddNum>0 then
            DataCenter.GuideManager:CheckDoTriggerGuide(GuideTriggerType.UIFormationSelectListNewFree, SaveGuideDoneValue)
        end
    end
end

local function ShowFormationAttackAlCityTip(self, posX, posY, formationData, isMarch)
    self.formation_army_tip:SetActive(true)
    self.create_army_tip:SetActive(false)
    self.formation_army_tip:RefreshData(posX,posY,formationData)
    if formationData~=nil and self.ctrl.targetType>=0 and self.ctrl.targetType ~= MarchTargetType.BACK_HOME and self.ctrl.targetType ~= MarchTargetType.CROSS_SERVER_WORM then
        self:ShowTroopLine(formationData.startPos,self.ctrl.targetPoint)
    else
        self:HideTroopLine()
    end
end

local function HideAllShowTip(self)
    self.formation_army_tip:ResetOldUuid()
    self.formation_army_tip:SetActive(false)
    self.create_army_tip:SetActive(false)
end

local function ShowTroopBattleSignal(self,data)
    local str = data
    if str~=nil then
        local strArr = string.split(str,";")
        if #strArr>3 then
            local marchUuid = tonumber(strArr[1])
            local hp = tonumber(strArr[3])
            local hpMax = tonumber(strArr[4])
            if self.formationList~=nil then
                table.walk(self.formationList,function (k,v)
                    v:RefreshSlider(marchUuid,hp,hpMax)
                end)
            end
        end
    end
end

local function ShowFormationCreateTip(self,posX,posY,formationData)
    self.formation_army_tip:SetActive(false)
    self.create_army_tip:SetActive(true)
    self.create_army_tip:RefreshData(posX,posY,formationData,true)
    if formationData ~= nil and self.ctrl.targetType>=0 and self.ctrl.targetType ~= MarchTargetType.BACK_HOME and self.ctrl.targetType ~= MarchTargetType.CROSS_SERVER_WORM then
        self:ShowTroopLine(formationData.startPos, self.ctrl.targetPoint)
    else
        self:HideTroopLine()
    end
    DataCenter.GuideManager:CheckDoTriggerGuide(GuideTriggerType.UIFormationSelectListNewCreate, SaveGuideDoneValue)
end

local function ShowFormationRallyTip(self,posX,posY,formationData)
    self.formation_army_tip:SetActive(true)
    self.create_army_tip:SetActive(false)
    self.formation_army_tip:RefreshData(posX,posY,formationData,true)
    if formationData ~= nil and self.ctrl.targetType>=0 and self.ctrl.targetType ~= MarchTargetType.BACK_HOME and self.ctrl.targetType ~= MarchTargetType.CROSS_SERVER_WORM then
        self:ShowTroopLine(formationData.startPos, self.ctrl.targetPoint)
    else
        self:HideTroopLine()
    end
end

local function GetTimeInFormation(self,formationUuid)
    return self.ctrl:GetTimeFormCurPosToTarPos(formationUuid)
end

local function OnAtkClick(self,uuid)
    self.notResetFormationUuid = uuid
    self.ctrl:OnAtkClick(uuid)
end

local function OnAttackAlCityBtnClick(self, uuid, timesIndex)
    self.notResetFormationUuid = uuid
    self.ctrl:OnAtkClick(uuid, timesIndex)
end

local function OnEditClick(self,uuid,needAutoFix, destroyTimeIndex)
    self.notResetFormationUuid = uuid
    self.ctrl:OnEditClick(uuid,needAutoFix, destroyTimeIndex)

end
local function OnCreateClick(self,uuid, destroyTimeIndex)
    self.notResetFormationUuid = uuid
    self.ctrl:OnCheckTime(uuid, destroyTimeIndex)

end


local function ShowTroopLine(self,startPos,endPos)
    if self.troopLine ==nil and self.dragInstance==nil then
        self.dragInstance = ResourceManager:InstantiateAsync(CS.GameDefines.EntityAssets.TroopLineDrag)
        self.dragInstance:completed('+', function()
            if self.dragInstance.isError then
                return
            end
            self.dragInstance.gameObject:SetActive(true)
            self.dragInstance.gameObject.transform:SetParent(CS.SceneManager.World.DynamicObjNode)
            self.troopLine = self.dragInstance.gameObject:GetComponent(typeof(CS.WorldTroopLine));
            if self.troopLine~=nil then
                self.troopLine:SetDragPath(SceneUtils.TileIndexToWorld(startPos), SceneUtils.TileIndexToWorld(endPos));
            end
        end)
    elseif self.troopLine~=nil then
        self.troopLine:SetDragPath(SceneUtils.TileIndexToWorld(startPos), SceneUtils.TileIndexToWorld(endPos));
    end
end

local function HideTroopLine(self)
    if self.dragInstance~=nil then
        self.dragInstance:Destroy()
    end
    self.dragInstance =nil
    self.troopLine =nil
end


local function OnClickScoutTroopItem(self, tempIndex)
    if self.formationScoutSelectList then
        return self.formationScoutSelectList:OnSelectTroopBtnClick(tempIndex)
    end
end

local function GetScoutTroopUnlockLv(self, formationIndex)
    if self.formationScoutSelectList then
        return self.formationScoutSelectList:GetUnlockLv(formationIndex)
    end
end

local function ResetScoutSelectTipPosition(self, posX, posY)
    if self.formationScoutSelectList then
        return self.formationScoutSelectList:ResetTipPosition(posX, posY)
    end
end

local function GetInvesFormationStateDes(self)
    if self.formationScoutSelectList then
        return self.formationScoutSelectList:GetInvesFormationStateDes()
    end
end


local function GetInvesCostTime(self, targetPointID)
    if self.formationScoutSelectList then
        return self.formationScoutSelectList:GetInvesCostTime(targetPointID)
    end
end

local function OnClickStartInvestigate(self)
    if self.formationScoutSelectList then
        return self.formationScoutSelectList:OnClickStartInvestigate()
    end
end

local function AddTimer(self)
    if self.timer == nil then
        self.timer = TimerManager:GetInstance():GetTimer(1, self.timer_action , self, false,false,false)
    end
    self.timer:Start()
end

local function DeleteTimer(self)
    if self.timer ~= nil then
        self.timer:Stop()
        self.timer = nil
    end
end

local function RefreshFormationStamina(self)
    if self.formationList~=nil then
        table.walk(self.formationList,function (k,v)
            v:UpdateTime()
        end)
    end
    self.formationStaminaSlider:UpdateStamina()
    if self.formationScoutSelectList~=nil and self.formationScoutSelectList:GetActive() then
        self.formationScoutSelectList:RefreshScoutTime()
    end
    if self.formation_army_tip:GetActive() then
        self.formation_army_tip:RefreshStaminaState()
    elseif self.create_army_tip:GetActive() then
        self.create_army_tip:RefreshStaminaState()
    end
end


--获取入口建筑等级
local function GetBuildLv(self)
    local list = DataCenter.BuildManager:GetAllBuildingByItemIdWithoutPickUp(BuildingTypes.APS_BUILD_WORMHOLE_MAIN)
    if #list > 0 then
        return list[1].level
    end
end

UIFormationSelectListNewView.OnCreate = OnCreate
UIFormationSelectListNewView.OnDestroy = OnDestroy
UIFormationSelectListNewView.OnRefresh = OnRefresh
UIFormationSelectListNewView.OnEnable = OnEnable
UIFormationSelectListNewView.OnDisable = OnDisable
UIFormationSelectListNewView.OnAddListener = OnAddListener
UIFormationSelectListNewView.OnRemoveListener = OnRemoveListener
UIFormationSelectListNewView.OnMarchRefresh = OnMarchRefresh
UIFormationSelectListNewView.ShowFormationArmyTip = ShowFormationArmyTip
UIFormationSelectListNewView.ShowFormationAttackAlCityTip = ShowFormationAttackAlCityTip
UIFormationSelectListNewView.ShowFormationRallyTip = ShowFormationRallyTip
UIFormationSelectListNewView.ShowFormationCreateTip = ShowFormationCreateTip
UIFormationSelectListNewView.ClearContent = ClearContent
UIFormationSelectListNewView.GetTimeInFormation= GetTimeInFormation
UIFormationSelectListNewView.OnAtkClick =OnAtkClick
UIFormationSelectListNewView.UpdateCollectPos = UpdateCollectPos
UIFormationSelectListNewView.OnEditClick = OnEditClick
UIFormationSelectListNewView.OnCreateClick = OnCreateClick
UIFormationSelectListNewView.ShowTroopLine = ShowTroopLine
UIFormationSelectListNewView.HideTroopLine = HideTroopLine
UIFormationSelectListNewView.OnSelectClick = OnSelectClick
UIFormationSelectListNewView.ShowTroopBattleSignal = ShowTroopBattleSignal
UIFormationSelectListNewView.HideAllShowTip = HideAllShowTip

UIFormationSelectListNewView.OnClickScoutTroopItem = OnClickScoutTroopItem
UIFormationSelectListNewView.GetScoutTroopUnlockLv = GetScoutTroopUnlockLv
UIFormationSelectListNewView.ResetScoutSelectTipPosition = ResetScoutSelectTipPosition
UIFormationSelectListNewView.GetInvesFormationStateDes = GetInvesFormationStateDes
UIFormationSelectListNewView.GetInvesCostTime = GetInvesCostTime
UIFormationSelectListNewView.OnClickStartInvestigate = OnClickStartInvestigate
UIFormationSelectListNewView.OnClickExchangeBtn = OnClickExchangeBtn
UIFormationSelectListNewView.AddTimer =AddTimer
UIFormationSelectListNewView.DeleteTimer =DeleteTimer
UIFormationSelectListNewView.RefreshFormationStamina =RefreshFormationStamina
UIFormationSelectListNewView.GetBuildLv =GetBuildLv
UIFormationSelectListNewView.OnAttackAlCityBtnClick =OnAttackAlCityBtnClick
UIFormationSelectListNewView.RefreshCost =RefreshCost
UIFormationSelectListNewView.ResetFormationModel =ResetFormationModel
return UIFormationSelectListNewView