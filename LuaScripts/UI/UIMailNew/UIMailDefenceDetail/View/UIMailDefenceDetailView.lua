---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2023/5/11 15:49
---

local UIMailDefenceDetail = BaseClass("UIMailDefenceDetail", UIBaseView)
local base = UIBaseView
local UIMailDefenceDetailItem = require "UI.UIMailNew.UIMailDefenceDetail.Component.UIMailDefenceDetailItem"
local Localization = CS.GameEntry.Localization

local return_path = "UICommonPopUpTitle/panel"
local close_path = "UICommonPopUpTitle/bg_mid/CloseBtn"
local title_path = "UICommonPopUpTitle/bg_mid/titleText"

local total_path = "objTopTitle/txtTotalPower"
local dead_path = "objTopTitle/txtTotalDead"
local injured_path = "objTopTitle/txtTotalInjure"
local injured_btn_path = "objTopTitle/txtTotalInjure/BtnTotalInjure"
local wounded_path = "objTopTitle/txtTotalWounded"
local wounded_btn_path = "objTopTitle/txtTotalWounded/BtnTotalWounded"
local cured_path = "objTopTitle/txtTotalCurve"
local alive_path = "objTopTitle/txtTotalAlive"
local alive_btn_path = "objTopTitle/txtTotalAlive/BtnTotalAlive"
local content_path = "ScrollView/Viewport/Content"
local prefab_path = "objToopItem"

local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
    self:ReInit()
end

local function OnDisable(self)
    self:ClearItems()
    base.OnDisable(self)
end

local function ComponentDefine(self)
    self.return_btn = self:AddComponent(UIButton, return_path)
    self.return_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)
    self.close_btn = self:AddComponent(UIButton, close_path)
    self.close_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)
    self.title_text = self:AddComponent(UIText, title_path)
    self.title_text:SetLocalText(310141)
    self.total_text = self:AddComponent(UIText, total_path)
    self.total_text:SetLocalText(130068)
    self.dead_text = self:AddComponent(UIText, dead_path)
    self.dead_text:SetLocalText(310131)
    self.injured_text = self:AddComponent(UIText, injured_path)
    self.injured_text:SetLocalText(310132)
    self.injured_btn = self:AddComponent(UIButton, injured_btn_path)
    self.injured_btn:SetOnClick(function()
        self:OnInjuredClick()
    end)
    self.wounded_text = self:AddComponent(UIText, wounded_path)
    self.wounded_text:SetLocalText(310133)
    self.wounded_btn = self:AddComponent(UIButton, wounded_btn_path)
    self.wounded_btn:SetOnClick(function()
        self:OnWoundedClick()
    end)
    self.cured_text = self:AddComponent(UIText, cured_path)
    self.cured_text:SetLocalText(310130)
    self.alive_text = self:AddComponent(UIText, alive_path)
    self.alive_text:SetLocalText(310134)
    self.alive_btn = self:AddComponent(UIButton, alive_btn_path)
    self.alive_btn:SetOnClick(function()
        self:OnAliveClick()
    end)
    self.content_go = self:AddComponent(UIBaseContainer, content_path)
    self.prefab_go = self:AddComponent(UIBaseContainer, prefab_path)
    self.prefab_go.gameObject:GameObjectCreatePool()
end

local function ComponentDestroy(self)
    
end

local function DataDefine(self)
    self.list = {}
end

local function DataDestroy(self)
    
end

local function OnAddListener(self)
    base.OnAddListener(self)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
end

local function ReInit(self)
    self.list = self:GetUserData()
    self:ShowItems()
end

local function ShowItems(self)
    self:ClearItems()
    for i, data in ipairs(self.list) do
        local go = self.prefab_go.gameObject:GameObjectSpawn(self.content_go.transform)
        go.name = tostring(i)
        local item = self.content_go:AddComponent(UIMailDefenceDetailItem, go.name)
        item:SetData(data)
    end
end

local function ClearItems(self)
    self.prefab_go.gameObject:GameObjectRecycleAll()
    self.content_go:RemoveComponents(UIMailDefenceDetailItem)
end

local function OnInjuredClick(self)
    local scaleFactor = UIManager:GetInstance():GetScaleFactor()
    local position = self.injured_btn.transform.position + Vector3.New(0, -15, 0) * scaleFactor
    local param = {}
    param.content =  Localization:GetString("121583")
    param.dir = 2
    param.defWidth = 300
    param.pivot = 0.25
    param.position = position
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIHeroTip, { anim = false }, param)
end

local function OnWoundedClick(self)
    local scaleFactor = UIManager:GetInstance():GetScaleFactor()
    local position = self.wounded_btn.transform.position + Vector3.New(0, -15, 0) * scaleFactor
    local param = {}
    param.content = Localization:GetString("121584")
    param.dir = 2
    param.defWidth = 300
    param.pivot = 0.25
    param.position = position
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIHeroTip, { anim = false }, param)
end

local function OnAliveClick(self)
    local scaleFactor = UIManager:GetInstance():GetScaleFactor()
    local position = self.alive_btn.transform.position + Vector3.New(0, -15, 0) * scaleFactor
    local param = {}
    param.content = Localization:GetString("121585")
    param.dir = 2
    param.defWidth = 250
    param.pivot = 0.25
    param.position = position
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIHeroTip, { anim = false }, param)
end

UIMailDefenceDetail.OnCreate = OnCreate
UIMailDefenceDetail.OnDestroy = OnDestroy
UIMailDefenceDetail.OnEnable = OnEnable
UIMailDefenceDetail.OnDisable = OnDisable
UIMailDefenceDetail.ComponentDefine = ComponentDefine
UIMailDefenceDetail.ComponentDestroy = ComponentDestroy
UIMailDefenceDetail.DataDefine = DataDefine
UIMailDefenceDetail.DataDestroy = DataDestroy
UIMailDefenceDetail.OnAddListener = OnAddListener
UIMailDefenceDetail.OnRemoveListener = OnRemoveListener

UIMailDefenceDetail.ReInit = ReInit
UIMailDefenceDetail.ShowItems = ShowItems
UIMailDefenceDetail.ClearItems = ClearItems
UIMailDefenceDetail.OnInjuredClick = OnInjuredClick
UIMailDefenceDetail.OnWoundedClick = OnWoundedClick
UIMailDefenceDetail.OnAliveClick = OnAliveClick

return UIMailDefenceDetail