---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2022/3/8 17:02
---
local CampRestraintItem = require "UI.UIFormation.UIFormationTableNew.Component.CampRestraintItem"
local MailBattleAttrDetailCell = require"UI.UIMailNew.UIMailBattleAttrDetail.Component.MailBattleAttrDetailCell"
local MailBattleAttrDetailTitle = BaseClass("MailBattleAttrDetailTitle",UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization

local txt_left_path = "Maintitlebg/layoutLeft/leftName"
local txt_center_path  = "Maintitlebg/centerName"
local txt_right_path = "Maintitlebg/layoutRight/rightName"
local content_path = "Content"
local _cp_btnShow = "Maintitlebg/btnShow"
local _cp_imgClose = "Maintitlebg/btnShow/imgClose"
local _cp_imgOpen = "Maintitlebg/btnShow/imgOpen"
local camp_left_path = "Maintitlebg/layoutLeft/LeftCampRestraintItem"
local camp_right_path = "Maintitlebg/layoutRight/RightCampRestraintItem"
function MailBattleAttrDetailTitle:OnCreate()
    base.OnCreate(self)
    self.txt_left = self:AddComponent(UITextMeshProUGUI, txt_left_path)
    self.txt_center = self:AddComponent(UITextMeshProUGUI, txt_center_path)
    self.txt_right = self:AddComponent(UITextMeshProUGUI, txt_right_path)
    self.content = self:AddComponent(UIBaseContainer, content_path)
    self._btnShow = self:AddComponent(UIButton, _cp_btnShow)
    self._btnShow:SetOnClick(BindCallback(self, self.OnClickBtnShow))
    self.camp_left = self:AddComponent(CampRestraintItem,camp_left_path)
    self.camp_right = self:AddComponent(CampRestraintItem,camp_right_path)
    self._imgClose = self:AddComponent(UIImage, _cp_imgClose)
    self._imgOpen = self:AddComponent(UIImage, _cp_imgOpen)
    self._showState = false
    self._imgOpen:SetActive(false)
    self._imgClose:SetActive(true)
    self.content:SetActive(false)
    self.createFinish = false
end
function MailBattleAttrDetailTitle:OnDestroy()
    self:SetAllCellDestroy()
    base.OnDestroy(self)
end
function MailBattleAttrDetailTitle:ReInit(param)
    self:SetAllCellDestroy()
    self.usePercent = true
    if param.showType == BattleSubTitleShowType.HeroAttack or param.showType == BattleSubTitleShowType.HeroDefence or param.showType == BattleSubTitleShowType.MarchLimitAdd then
        self.usePercent = false
    end
    local dialogId = param.dialogId
    self.txt_center:SetText(Localization:GetString(dialogId))
    self.camp_left:SetActive(false)
    self.camp_right:SetActive(false)
    if self.usePercent == true then
        local strLeft = string.GetFormattedPercentStr(param.leftNum/100)
        local strRight = string.GetFormattedPercentStr(param.rightNum/100)
        local RestraintData = nil
        if param.showType == BattleSubTitleShowType.AttackAdd then
            RestraintData = self.view.ctrl:GetHeroRestraintValue(self.view.leftFightData,self.view.rightFightData,self.view.leftBattleEffect,self.view.rightBattleEffect,true)
        elseif param.showType == BattleSubTitleShowType.DefenceAdd then
            RestraintData = self.view.ctrl:GetHeroRestraintValue(self.view.leftFightData,self.view.rightFightData,self.view.leftBattleEffect,self.view.rightBattleEffect,false)
        end
        if RestraintData~=nil then
            local value = 0
            if RestraintData.isLeft then
                if RestraintData.leftCampRestraintData~=nil and RestraintData.value >0 then
                    self.camp_left:SetActive(true)
                    self.camp_left:InitData(RestraintData.leftCampRestraintData.camp, RestraintData.leftCampRestraintData.num)
                else
                    self.camp_left:SetActive(false)
                end
                self.camp_right:SetActive(false)
                value = RestraintData.value
                local addNum = 0
                if value>0 then
                    addNum = param.leftNum*value/100
                    strLeft = strLeft.."<color=#00B200>".."+"..string.GetFormattedPercentStr(addNum/100).."</color>"
                end
                if param.leftNum+addNum>param.rightNum then
                    self.txt_left:SetColor(GreenColor)
                elseif param.leftNum+addNum<param.rightNum then
                    self.txt_left:SetColor(WorldRedColor)
                else
                    self.txt_left:SetColorRGBA(0.7176471,0.4,0.1882353,1)
                end
            else
                if RestraintData.rightCampRestraintData~=nil and RestraintData.value >0 then
                    self.camp_right:SetActive(true)
                    self.camp_right:InitData(RestraintData.rightCampRestraintData.camp, RestraintData.rightCampRestraintData.num)
                else
                    self.camp_right:SetActive(false)
                end
                self.camp_left:SetActive(false)
                value = RestraintData.value
                local addNum = 0
                if value>0 then
                    addNum = param.rightNum*value/100
                    strRight = strRight.."<color=#00B200>".."+"..string.GetFormattedPercentStr(addNum/100).."</color>"
                end
                if param.leftNum>param.rightNum+addNum then
                    self.txt_left:SetColor(GreenColor)
                elseif param.leftNum<param.rightNum+addNum then
                    self.txt_left:SetColor(WorldRedColor)
                else
                    self.txt_left:SetColorRGBA(0.7176471,0.4,0.1882353,1)
                end
            end
        else
            if param.leftNum>param.rightNum then
                self.txt_left:SetColor(GreenColor)
            elseif param.leftNum<param.rightNum then
                self.txt_left:SetColor(WorldRedColor)
            else
                self.txt_left:SetColorRGBA(0.7176471,0.4,0.1882353,1)
            end
        end
        
        self.txt_left:SetText(strLeft)
        self.txt_right:SetText(strRight)
    else
        self.txt_left:SetText(string.GetFormattedSeperatorNum(math.floor(param.leftNum)))
        self.txt_right:SetText(string.GetFormattedSeperatorNum(math.floor(param.rightNum)))
        if param.leftNum>param.rightNum then
            self.txt_left:SetColor(GreenColor)
        elseif param.leftNum<param.rightNum then
            self.txt_left:SetColor(WorldRedColor)
        else
            self.txt_left:SetColorRGBA(0.7176471,0.4,0.1882353,1)
        end
    end
    
    
    self.list = param.reasonList
end

function MailBattleAttrDetailTitle:OnClickBtnShow()
    self._showState = not self._showState
    self._imgOpen:SetActive(self._showState)
    self._imgClose:SetActive(not self._showState)
    if self._showState == true then
        self.content:SetActive(true)
        if self.createFinish==false then
            self:SetAllCellDestroy()
            local list = table.values(self.list)
            local totalNum =0
            local createNum = 0
            table.sort(list,function(a,b)
                return a.sortIndex<b.sortIndex
            end)
            for i=1,#list do
                local v = list[i]
                local k = v.index
                if v.leftData.totalNum~=0 or v.rightData.totalNum~=0 then
                    totalNum = totalNum+1
                    if self.model[k]==nil then
                        self.model[k] = self:GameObjectInstantiateAsync(UIAssets.MailBattleAttrDetailCell, function(request)
                            if request.isError then
                                return
                            end
                            local go = request.gameObject;
                            go.gameObject:SetActive(true)
                            go.transform:SetParent(self.content.transform)
                            go.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
                            local nameStr = tostring(NameCount)
                            go.name = nameStr
                            NameCount = NameCount + 1
                            local cell = self.content:AddComponent(MailBattleAttrDetailCell,nameStr)
                            cell:ReInit(v,k,self.usePercent)
                            createNum = createNum+1
                            if createNum>=totalNum then
                                self.createFinish = true
                            end
                        end)
                    end
                end
            end
        end
    else
        if self.createFinish ==false then
            self:SetAllCellDestroy()
        end
        self.content:SetActive(false)
    end 
end

function MailBattleAttrDetailTitle:SetAllCellDestroy()
    self.content:RemoveComponents(MailBattleAttrDetailCell)
    if self.model~=nil then
        for k,v in pairs(self.model) do
            if v ~= nil then
                self:GameObjectDestroy(v)
            end
        end
    end
    self.model ={}
end
return MailBattleAttrDetailTitle