---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by mac.
--- DateTime: 7/9/21 3:37 PM
---
local MailChannelItem = BaseClass("MailChannelItem",UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization

local _cp_toggle = ""
local _txtTitle = "text"
local _cp_objRedPoint = "RedPointNum"
local _cp_txtRedPoint = "RedPointNum/Text"
local check_text_path = "checkText"

function MailChannelItem:OnCreate()
    base.OnCreate(self)
    self._txtTitle = self:AddComponent(UITextMeshProUGUIEx, _txtTitle)
    self._objRedPoint = self:AddComponent(UIBaseContainer, _cp_objRedPoint)
    self._txtRedPoint = self:AddComponent(UITextMeshProUGUIEx, _cp_txtRedPoint)
    self._toggle = self:AddComponent(UIToggle, _cp_toggle)
    self._toggle:SetOnValueChanged(BindCallback(self, self.ToggleCallback))
    self.check_text = self:AddComponent(UITextMeshProUGUIEx, check_text_path)
end

function MailChannelItem:InitData( mailChannelType, toggleCallback )
    self._mailChannelType = mailChannelType
    local eToggleDialog = {
        [MailInternalGroup.MAIL_IN_report]= "150093", -- 打野
        [MailInternalGroup.MAIL_IN_alliance] = GameDialogDefine.ALLIANCE, -- 联盟
        [MailInternalGroup.MAIL_IN_system] = "310002", -- 系统 
        [MailInternalGroup.MAIL_IN_favor] = "310102", -- 收藏
        [MailInternalGroup.MAIL_IN_battle] = "310101", -- 战报
    }
    self._txtTitle:SetLocalText(eToggleDialog[mailChannelType])
    self.check_text:SetLocalText(eToggleDialog[mailChannelType])
    self._toggle_callback = toggleCallback
    -- 未读数
    self:RefreshUnReadCnt()
end


-- 事件监听
function MailChannelItem:OnAddListener()
    base.OnAddListener(self)
    self:AddUIListener(EventId.MailPush, self.RefreshUnReadCnt)
end

function MailChannelItem:OnRemoveListener()
    self:RemoveUIListener(EventId.MailPush, self.RefreshUnReadCnt)
    base.OnRemoveListener(self)
end

function MailChannelItem:RefreshUnReadCnt()
    local cnt = DataCenter.MailDataManager:GetMailUnReadCountByGroup(self._mailChannelType)
    if (cnt > 0) then
        self._objRedPoint:SetActive(true)
        self._txtRedPoint:SetText(cnt)
    else
        self._objRedPoint:SetActive(false)
    end
end


function MailChannelItem:IsChannelSelected()
    return self._toggle:GetIsOn()
end

function MailChannelItem:ToggleCallback( selected )
    if (selected) then
        self._txtTitle:SetActive(false)
        self.check_text:SetActive(true)
        EventManager:GetInstance():Broadcast(EventId.Mail_Select_Channel,self._mailChannelType)
    else
        self._txtTitle:SetActive(true)
        self.check_text:SetActive(false)
    end
end

function MailChannelItem:SetSelected()
    self._toggle:SetIsOn(true)
    EventManager:GetInstance():Broadcast(EventId.Mail_Select_Channel,self._mailChannelType)
end

return MailChannelItem
