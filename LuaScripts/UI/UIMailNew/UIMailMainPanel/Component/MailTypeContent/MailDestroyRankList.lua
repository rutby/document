---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2022/2/23 16:30
---
local MailDestroyRankItem = require "UI.UIMailNew.UIMailMainPanel.Component.MailTypeContent.MailDestroyRankItem"
local MailDestroyRankList = BaseClass("MailDestroyRankList",UIBaseContainer)

local base = UIBaseContainer
local Localization = CS.GameEntry.Localization
local base64 = require "Framework.Common.base64"
local rapidjson = require "rapidjson"

local _cp_txtMainTitle = "UIMailItemTitle/txtMainTitle"
local _cp_txtSubTitle = "UIMailItemTitle/txtSubTitle"
local _cp_txtDesc = "txtDesc"
local _cp_txtTime = "UIMailItemTitle/txtTime"
local _cp_content = "layout/content"
local _cp_title = "layout/titleObj"
function MailDestroyRankList:OnCreate()
    base.OnCreate(self)
    self._txtMainTitle = self:AddComponent(UITextMeshProUGUIEx, _cp_txtMainTitle)
    self._txtSubTitle = self:AddComponent(UITextMeshProUGUIEx, _cp_txtSubTitle)
    self._txtTime = self:AddComponent(UITextMeshProUGUIEx, _cp_txtTime)
    self._txtDesc = self:AddComponent(UITextMeshProUGUIEx, _cp_txtDesc)
    self._content =  self:AddComponent(UIBaseContainer, _cp_content)
    self._txtDesc:OnPointerClick(function (eventData)
        self:OnPointerClick(eventData.position)
    end)
    self.titleObj =  self:AddComponent(MailDestroyRankItem, _cp_title)
end


function MailDestroyRankList:OnPointerClick( clickPos )
    if (self._txtDesc == nil) then
        return
    end
    local pos = clickPos
    local x = pos.x
    local y = pos.y
    local vec3 = Vector3.New(x, y, 0)
    local linkIndex = CS.TMPro.TMP_TextUtilities.FindIntersectingLink(self._txtDesc.unity_tmpro, vec3, nil);
    if (linkIndex == -1) then
        return
    end
    local linkInfo = self._txtDesc:GetLinkInfo()
    if (linkInfo == nil) then
        return
    end
    local linkItem = linkInfo[linkIndex]
    local linkId = linkItem:GetLinkID()
    if (string.IsNullOrEmpty(linkId)) then
        return
    end
    local linkMsg = base64.decode(linkId)
    linkMsg = rapidjson.decode(linkMsg)
    self:OnHandleLink(linkMsg)
end

function MailDestroyRankList:OnHandleLink(linkMsg)
    if (linkMsg["action"] == "Jump") then
        self:OnMoveToPos(linkMsg)
    end
end

function MailDestroyRankList:OnMoveToPos(linkMsg)
    local pointId = tonumber(linkMsg["pointId"]) or 1
    local serverId = linkMsg["server"] or LuaEntry.Player:GetCurServerId()
    local worldId = linkMsg["worldId"] or 0
    self.view.ctrl:OnClickPosBtn(pointId,serverId,worldId)
end




function MailDestroyRankList:OnDisable()
    base.OnDisable(self)
end


function MailDestroyRankList:setData( maildata )
    self._mailData = maildata
    -- 设置数据
    local _strTitle = MailShowHelper.GetMainTitle(maildata)
    self._txtMainTitle:SetText(_strTitle)
    local _strSubTitle = MailShowHelper.GetMailSummary(maildata)
    self._txtSubTitle:SetText(_strSubTitle)
    local _strTime = MailShowHelper.GetAbstractCreateTime(maildata)
    self._txtTime:SetText(_strTime)
    local ext = self._mailData:GetMailExt()
    if ext~=nil then
        local des = ext:GetDes()
        self._txtDesc:SetText(des)
        self.extData = ext:GetExtData()
        if self.extData~=nil then
            local rankType = self.extData.type
            self.titleObj:SetData(true,rankType)
            self:SetAllCellDestroy()
            self.model = {}
            local list = self.extData.rankInfos
            if list~=nil then
                self.modelCount =0
                for k,v in pairs(list) do
                    self.modelCount= self.modelCount+1
                    self.model[self.modelCount] = self:GameObjectInstantiateAsync(UIAssets.MailDestroyRankItem, function(request)
                        if request.isError then
                            return
                        end
                        local go = request.gameObject;
                        go.gameObject:SetActive(true)
                        go.transform:SetParent(self._content.transform)
                        go.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
                        local nameStr = tostring(NameCount)
                        go.name = nameStr
                        NameCount = NameCount + 1
                        local cell = self._content:AddComponent(MailDestroyRankItem,nameStr)
                        cell:SetData(false,rankType,v)
                    end)
                end
            end
        end
    end

end

function MailDestroyRankList:SetAllCellDestroy()
    self._content:RemoveComponents(MailDestroyRankItem)
    if self.model~=nil then
        for k,v in pairs(self.model) do
            if v ~= nil then
                self:GameObjectDestroy(v)
            end
        end
    end
    self.model ={}
end
return MailDestroyRankList