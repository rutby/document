---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by mac.
--- DateTime: 7/23/21 10:35 AM
---
local MailCollectItem = BaseClass("MailCollectItem",UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization
local Setting = CS.GameEntry.Setting
local UICommonItem = require "UI.UICommonItem.UICommonItem"

local _cp_txtTitle = "txtTitle"
local _cp_btnPos = "txtTitle/txtPos/btnPos"
local _cp_txtPos = "txtTitle/txtPos"
local _cp_txtTime = "txtTime"
local _cp_imgItemIcon = "rewards/res/itemIcon"
local _cp_txtitemName = "rewards/res/itemName"
local _cp_txtItemCnt = "rewards/res/itemCnt"
local _cp_newFlag = "newFlag"
local _cp_reward = "rewards/reward"


function MailCollectItem:OnCreate()
    base.OnCreate(self)
    self._txtTitle = self:AddComponent(UITextMeshProUGUIEx, _cp_txtTitle)
    self._btnPos = self:AddComponent(UIButton, _cp_btnPos)
    self._btnPos:SetOnClick(BindCallback(self, self.OnClickBtnPos))
    self._txtPos = self:AddComponent(UITextMeshProUGUIEx, _cp_txtPos)
    self._txtTime = self:AddComponent(UITextMeshProUGUIEx, _cp_txtTime)
    self._txtItemCnt = self:AddComponent(UITextMeshProUGUIEx, _cp_txtItemCnt)
    self._txtItemName = self:AddComponent(UITextMeshProUGUIEx, _cp_txtitemName)
    self._imgItemIcon = self:AddComponent(UIImage, _cp_imgItemIcon)
    self._newFlag = self:AddComponent(UIBaseContainer, _cp_newFlag)
    self._rewardItems = {}
    for i = 1, 3 do
        local reward = self:AddComponent(UIBaseContainer, _cp_reward .. i)
        local newReward = {}
        newReward.rootN = reward
        newReward.itemN = reward:AddComponent(UICommonItem, "reward")
        newReward.CountN = reward:AddComponent(UITextMeshProUGUIEx, "itemCnt")
        table.insert(self._rewardItems, newReward)
    end
end


function MailCollectItem:OnClickBtnPos()
    local pos = self.mailData["pointId"] or 0
    local serverId = self.mailData["serverId"] or LuaEntry.Player:GetSelfServerId()
    local worldId = self.mailData["worldId"] or 0
    if pos~=0 then
        local pointV3 = SceneUtils.TileIndexToWorld(pos,ForceChangeScene.World)
        UIManager:GetInstance():DestroyWindow(UIWindowNames.UIMailNew)
        GoToUtil.GotoWorldPos(pointV3, CS.SceneManager.World.InitZoom,nil,nil,serverId,worldId)
    end
end

--[[
{
    "pointId": 3090184,
    "collectEndTime": 1626945972185,
    "gatherResourceId": 3100186,
    "collectStartTime": 1626945892185,
    "resourceType": 11,
    "resourceValue": 30
    "resourceParam" : 10000
    "collectType":0,1
}
]]
function MailCollectItem:SetData( maildata )
    self.mailData = maildata
    -- 名字
    local strName = ""
    local strItemIcon = ""
    if maildata.collectType ~=nil then
        if maildata.gatherResourceId~=nil then
            if maildata.collectType ==0 then
                local name = GetTableData(TableName.GatherResource,maildata.gatherResourceId,"name")
                strName = Localization:GetString(name)
                local lv = GetTableData(TableName.GatherResource, maildata.gatherResourceId,"level")
                strName = Localization:GetString("300665", lv) .. " " .. strName
            elseif maildata.collectType == 1 then
                local name = GetTableData(TableName.AllianceMine, maildata.gatherResourceId,"name")
                strName = Localization:GetString(name)
                local lv = GetTableData(TableName.AllianceMine, maildata.gatherResourceId,"level")
                strName = Localization:GetString("300665", lv) .. " " .. strName
            end
        end
    else
        if maildata.gatherResourceId~=nil then
            local name = GetTableData(TableName.GatherResource,maildata.gatherResourceId,"name")
            if name~=nil and name~=""then
                strName = Localization:GetString(name)
                local lv = GetTableData(TableName.GatherResource, maildata.gatherResourceId,"level")
                strName = Localization:GetString("300665", lv) .. " " .. strName
            else
                name = GetTableData(TableName.AllianceMine, maildata.gatherResourceId,"name")
                if name~=nil and name~="" then
                    strName = Localization:GetString(name)
                    local lv = GetTableData(TableName.AllianceMine, maildata.gatherResourceId,"level")
                    strName = Localization:GetString("300665", lv) .. " " .. strName
                end
                
            end
        end
    end
    if maildata["resourceType"] then
        strName =CommonUtil.GetResourceNameByType(maildata["resourceType"])
        strItemIcon = DataCenter.ResourceManager:GetResourceIconByType(maildata["resourceType"])
    end
    -- 坐标
    local vecPos = SceneUtils.IndexToTilePos(maildata["pointId"],ForceChangeScene.World)
    local strPoint = " ( " .. vecPos.x .. ", " .. vecPos.y .. " ) "
    -- 时间
    local strTime = MailShowHelper.GetAbstractCreateTime(maildata)
    -- 个数
    local strCnt = "+" .. tostring(maildata["resourceValue"])
    -- 道具图标
    self._imgItemIcon:LoadSprite(strItemIcon)
    
    -- 是否是新邮件
    local lastOpenTime = Setting:GetPrivateInt(SettingKeys.MAIL_COLLECT_LAST_OPEN, 0)
    if (maildata["createTime"]/1000 > lastOpenTime) then
        self._newFlag:SetActive(true)
    else
        self._newFlag:SetActive(false)
    end
    
    self._txtItemName:SetText(strName)
    self._txtPos:SetText(strPoint)
    self._txtTime:SetText(strTime)
    self._txtItemCnt:SetText(strCnt)
    
    self:TryShowExtraReward(maildata)
end

function MailCollectItem:TryShowExtraReward(maildata)
    local list = {}
    if maildata.extraReward and table.count(maildata.extraReward) > 0 then
        list = DataCenter.RewardManager:ReturnRewardParamForMessage(maildata["extraReward"])
    end
    for i, v in ipairs(self._rewardItems) do
        if i <= #list then
            v.rootN:SetActive(true)
            local tempReward = {}
            tempReward.rewardType = list[i].rewardType
            tempReward.itemId = list[i].itemId
            v.itemN:ReInit(tempReward)
            v.CountN:SetText(list[i].count)
        else
            v.rootN:SetActive(false)
        end
    end
end

return MailCollectItem