---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2022/3/8 21:44
---


local MailAlElectResult = BaseClass("MailAlElectResult", UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization
local rapidjson = require "rapidjson"
local AlElectResultItem = require "UI.UIAlliance.UIAlLeaderElectResult.Component.AlLeaderElectReusltItem"

local title_path = "UIMailItemTitle/txtMainTitle"
local subTitle_path = "UIMailItemTitle/txtSubTitle"
local time_path = "UIMailItemTitle/txtTime"
local desc_path = "txtDesc"
local r4Container_path = "ContainerR4"
local r4Content_path = "ContainerR4/content"
--local r4Template_path = "ContainerR4/template(inactive)/template"
local leaderContainer_path = "ContainerLeader"
local leaderHeadIcon_path = "ContainerLeader/leader/UIPlayerHead/HeadIcon"
local leaderHeadFg_path = "ContainerLeader/leader/UIPlayerHead/Foreground"
local leaderName_path = "ContainerLeader/leader/name"
local leaderPower_path = "ContainerLeader/leader/power/power"
local leaderVotes_path = "ContainerLeader/leader/vote"
local leaderVotesNum_path = "ContainerLeader/leader/vote/voteText"

local function OnCreate(self)
    base.OnCreate(self)
    self.titleN = self:AddComponent(UITextMeshProUGUIEx, title_path)
    self.subTitleN = self:AddComponent(UITextMeshProUGUIEx, subTitle_path)
    self.timeN = self:AddComponent(UITextMeshProUGUIEx, time_path)
    self.descN = self:AddComponent(UITextMeshProUGUIEx, desc_path)
    self.r4ContainerN = self:AddComponent(UIBaseContainer, r4Container_path)
    self.r4ContentN = self:AddComponent(UIBaseContainer, r4Content_path)
    --self.r4TemplateN = self:AddComponent(UIBaseContainer, r4Template_path)
    --self.r4TemplateN.gameObject:GameObjectCreatePool()
    self.leaderContainerN = self:AddComponent(UIBaseContainer, leaderContainer_path)
    self.leaderHeadIconN = self:AddComponent(UIPlayerHead, leaderHeadIcon_path)
    self.leaderHeadFgN = self:AddComponent(UIImage, leaderHeadFg_path)
    self.leaderNameN = self:AddComponent(UITextMeshProUGUIEx, leaderName_path)
    self.leaderPowerN = self:AddComponent(UITextMeshProUGUIEx, leaderPower_path)
    self.leaderVotesN = self:AddComponent(UITextMeshProUGUIEx, leaderVotes_path)
    self.leaderVotesN:SetLocalText(390929)
    self.leaderVotesNumN = self:AddComponent(UITextMeshProUGUIEx, leaderVotesNum_path)
end

local function OnDestroy(self)
    self:SetAllR4ItemDestroy()
    self.titleN = nil
    self.subTitleN = nil
    self.timeN = nil
    self.descN = nil
    self.r4ContainerN = nil
    self.r4ContentN = nil
    --self.r4TemplateN = nil
    self.leaderContainerN = nil
    self.leaderHeadIconN = nil
    self.leaderHeadFgN = nil
    self.leaderNameN = nil
    self.leaderPowerN = nil
    self.leaderVotesN = nil
    self.leaderVotesNumN = nil
end

local function setData(self, mailInfo)
    self.mailInfo = mailInfo
    self:ParseContent()
    self:RefreshUI()
end

local function ParseContent(self)
    self.r4List = {}
    if self.mailInfo == nil then
        return
    end
    
    local contents = self.mailInfo["contents"] or ""
    
    contents = rapidjson.decode(contents) or {}
    if contents.obj and contents.obj.userList then
        local tempList = contents.obj.userList
        for i, v in ipairs(tempList) do
            local newOne = AlLeaderCandidateData.New()
            newOne:ParseData(v)
            table.insert(self.r4List, newOne)
        end
    end
    
    self.leaderInfo = nil
    if contents.obj and contents.obj.leaderInfo then
        local leaderInfo = AlLeaderCandidateData.New()
        leaderInfo:ParseData(contents.obj.leaderInfo)
        self.leaderInfo = leaderInfo
    end
end

local function RefreshUI(self)
    local _strTitle = MailShowHelper.GetMainTitle(self.mailInfo)
    self.titleN:SetText(_strTitle)
    local _strSubTitle = MailShowHelper.GetMailSubTitle(self.mailInfo)
    self.subTitleN:SetText(_strSubTitle)
    local _strTime = MailShowHelper.GetAbstractCreateTime(self.mailInfo)
    self.timeN:SetText(_strTime)
    local _strContents = self.mailInfo:GetMailMessage()
    self.descN:SetText(_strContents)
--  [[
    if self.mailInfo.type == MailType.MAIL_AL_ELECT_RESULT_LEADER then
        self:ShowLeaderResult()
    elseif self.mailInfo.type == MailType.MAIL_AL_ELECT_RESULT_R4 then
        self:ShowR4Result()
    end
--]]
end

local function ShowLeaderResult(self)
    self.leaderContainerN:SetActive(true)
    self.r4ContainerN:SetActive(false)
    
    local leaderInfo = self.leaderInfo
    
    self.leaderHeadIconN:SetData(leaderInfo.uid, leaderInfo.pic, leaderInfo.picVer)
    local tempFg = leaderInfo:GetHeadBgImg()
    if tempFg then
        self.leaderHeadFgN:SetActive(true)
        self.leaderHeadFgN:LoadSprite(tempFg)
    else
        self.leaderHeadFgN:SetActive(false)
    end
    self.leaderNameN:SetText(leaderInfo.name)
    self.leaderPowerN:SetText(string.GetFormattedSeperatorNum(leaderInfo.power))
    self.leaderVotesNumN:SetText(leaderInfo.voteNum) 
end

local function ShowR4Result(self)
    self.r4ContainerN:SetActive(true)
    self.leaderContainerN:SetActive(false)
    
    local r4List = self.r4List
    self:SetAllR4ItemDestroy()
    self.models = {}
    if r4List ~= nil then
        for i = 1, table.length(r4List) do
            --复制基础prefab，每次循环创建一次
            self.models[i] = self:GameObjectInstantiateAsync(UIAssets.MailAlElectResultItem, function(request)
                if request.isError then
                    return
                end
                local go = request.gameObject;
                --go.gameObject:SetActive(true)
                go.transform:SetParent(self.r4ContentN.transform)
                go.transform:Set_localScale(0.8, 0.8, 0.8)
                go.transform:Set_localPosition(0, 0,0)
                go.name ="item" .. i
                local cell = self.r4ContentN:AddComponent(AlElectResultItem,go.name)
                cell:SetItem(r4List[i])
                --if i == #r4List then
                --    CS.UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(self.contentBarterN.rectTransform)
                --    self:RefreshRemainTimes()
                --end
            end)
        end
    end
end

local function SetAllR4ItemDestroy(self)
    self.r4ContentN:RemoveComponents(AlElectResultItem)
    if self.models~=nil then
        for k,v in pairs(self.models) do
            if v ~= nil then
                self:GameObjectDestroy(v)
            end
        end
    end
    self.models = nil
end

MailAlElectResult.OnCreate = OnCreate
MailAlElectResult.OnDestroy = OnDestroy
MailAlElectResult.setData = setData
MailAlElectResult.ParseContent = ParseContent
MailAlElectResult.RefreshUI = RefreshUI
MailAlElectResult.ShowLeaderResult = ShowLeaderResult
MailAlElectResult.ShowR4Result = ShowR4Result
MailAlElectResult.SetAllR4ItemDestroy = SetAllR4ItemDestroy

return MailAlElectResult