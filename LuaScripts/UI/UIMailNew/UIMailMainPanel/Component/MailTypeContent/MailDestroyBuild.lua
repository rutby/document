---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2021/12/27 21:25
---
local MailDestroyBuild = BaseClass("MailDestroyBuild",UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization
local base64 = require "Framework.Common.base64"
local rapidjson = require "rapidjson"
local AllianceFlagItem = require "UI.UIAlliance.UIAllianceFlag.Component.AllianceFlagItem"

local _cp_txtMainTitle = "UIMailItemTitle/txtMainTitle"
local _cp_txtSubTitle = "UIMailItemTitle/txtSubTitle"
local _cp_txtSubTitle_Fight = "UIMailItemTitle/txtSubTitle_Fight"
local _cp_txtTime = "UIMailItemTitle/txtTime"
local left_name_path = "ObjBattleBuild/GameObject/Left/txtNameLeft"
local right_name_path = "ObjBattleBuild/txtNameRight"
local btn_pos_path = "ObjBattleBuild/GameObject/Left/btnPos"
local pos_txt_path ="ObjBattleBuild/GameObject/Left/btnPos/txtPos"
local txt_destroy_path = "ObjBattleBuild/txtBg/txtDestroy"
local txt_num_path = "ObjBattleBuild/txtBg/txtNum"
local icon_path ="ObjBattleBuild/Icon"
local slider_path = "ObjBattleBuild/Slider"
local slider_num_path = "ObjBattleBuild/Slider/Text_num"
local player_head_obj_path = "ObjBattleBuild/GameObject/UIPlayerHead"
local player_head_icon_path = "ObjBattleBuild/GameObject/UIPlayerHead/HeadIcon"
local alliance_icon_path = "ObjBattleBuild/GameObject/allianceIcon"
local allianceFlag_path = "ObjBattleBuild/GameObject/AllianceFlag"

function MailDestroyBuild:OnCreate()
    base.OnCreate(self)
    self._txtMainTitle = self:AddComponent(UITextMeshProUGUIEx, _cp_txtMainTitle)
    self._txtSubTitle = self:AddComponent(UITextMeshProUGUIEx, _cp_txtSubTitle)
    self._txtTime = self:AddComponent(UITextMeshProUGUIEx, _cp_txtTime)
    self._btnPos = self:AddComponent(UIButton, btn_pos_path)
    self._btnPos:SetOnClick(BindCallback(self, self.OnClickBtnPos))
    self._pos_txt = self:AddComponent(UITextMeshProUGUIEx, pos_txt_path)
    self._left_name = self:AddComponent(UITextMeshProUGUIEx, left_name_path)
    self._right_name = self:AddComponent(UITextMeshProUGUIEx, right_name_path)
    self._txt_destroy = self:AddComponent(UITextMeshProUGUIEx, txt_destroy_path)
    self._txt_destroy:SetText(Localization:GetString("100084"))
    self._txt_num = self:AddComponent(UITextMeshProUGUIEx, txt_num_path)
    self.build_icon = self:AddComponent(UIImage, icon_path)
    self.slider = self:AddComponent(UISlider, slider_path)
    self._slider_num = self:AddComponent(UITextMeshProUGUIEx, slider_num_path)
    self.player_head_obj = self:AddComponent(UIBaseContainer, player_head_obj_path)
    self._uiPlayerHead = self:AddComponent(UIPlayerHead, player_head_icon_path)
    self.alliance_icon = self:AddComponent(UIImage, alliance_icon_path)
    self.allianceFlagN = self:AddComponent(AllianceFlagItem, allianceFlag_path)
    self._txtSubTitle_Fight = self:AddComponent(UITextMeshProUGUIEx, _cp_txtSubTitle_Fight)
    self._txtSubTitle_Fight:OnPointerClick(function (eventData)
        self:OnPointerClick(eventData.position)
    end)
end

function MailDestroyBuild:OnPointerClick( clickPos )
    if (self._txtSubTitle_Fight == nil) then
        return
    end
    local pos = clickPos
    local x = pos.x
    local y = pos.y
    local vec3 = Vector3.New(x, y, 0)
    local linkIndex = CS.TMPro.TMP_TextUtilities.FindIntersectingLink(self._txtSubTitle_Fight.unity_tmpro, vec3, nil);
    if (linkIndex == -1) then
        return
    end
    local linkInfo = self._txtSubTitle_Fight:GetLinkInfo()
    if (linkInfo == nil) then
        return
    end
    local linkItem = linkInfo[linkIndex]
    local linkId = linkItem:GetLinkID()
    if (string.IsNullOrEmpty(linkId)) then
        return
    end
    local linkMsg = base64.decode(linkId)
    linkMsg = rapidjson.decode(linkMsg)
    self:OnHandleLink(linkMsg)
end

function MailDestroyBuild:OnHandleLink(linkMsg)
    if (linkMsg["action"] == "Jump") then
        self:OnMoveToPos(linkMsg)
    end
end

function MailDestroyBuild:OnMoveToPos(linkMsg)
    local pointId = tonumber(linkMsg["pointId"]) or 1
    local serverId = linkMsg["server"] or LuaEntry.Player:GetCurServerId()
    local worldId = linkMsg["worldId"] or 0
    self.view.ctrl:OnClickPosBtn(pointId,serverId,world)
end

function MailDestroyBuild:OnClickBtnPos()
    if self.extData~=nil then
        local point = self.extData.pointId or 0
        if self.extData.destroyPlayerInfo~=nil then
            point= self.extData.destroyPlayerInfo.pointId
        end
        GoToUtil.CloseAllWindows()
        EventManager:GetInstance():Broadcast(EventId.UIMAIN_VISIBLE, true)
        GoToUtil.MoveToWorldPoint(point)
    end
    --GoToUtil.CloseAllWindows()
    --EventManager:GetInstance():Broadcast(EventId.UIMAIN_VISIBLE, true)
    --local pointId = self.mailData["needCollectReward"]["pointId"] or 0
    
end



function MailDestroyBuild:OnDisable()
    base.OnDisable(self)
end


function MailDestroyBuild:setData( maildata )
    self._mailData = maildata
    -- 设置数据
    local _strTitle = MailShowHelper.GetMainTitle(maildata)
    self._txtMainTitle:SetText(_strTitle)
    local _strSubTitle = MailShowHelper.GetMailSummary(maildata)
    self._txtSubTitle:SetText("")
    self._txtSubTitle_Fight:SetActive(true)
    self._txtSubTitle_Fight:SetText(_strSubTitle)
    local _strTime = MailShowHelper.GetAbstractCreateTime(maildata)
    self._txtTime:SetText(_strTime)
    local ext = self._mailData:GetMailExt()
    self.allianceFlagN:SetActive(false)
    if ext~=nil then
        self.extData = ext:GetExtData()
        if self.extData~=nil then
            local icon = ext:GetTargetIcon()
            if icon~=nil and icon~="" then
                self.build_icon:LoadSprite(icon)
            end
            self._right_name:SetText(ext:GetTargetName())
            self._left_name:SetText(ext:GetOwnerName())
            local point = self.extData.pointId
            if self.extData.destroyPlayerInfo~=nil then
                point= self.extData.destroyPlayerInfo.pointId
            end
            local vecPos = SceneUtils.IndexToTilePos(point,ForceChangeScene.World)
            local strPoint = "<u>X:" .. vecPos.x .. " Y:" .. vecPos.y
            self._pos_txt:SetText(strPoint)
            if self.extData.destroyUnitInfo~=nil then
                self._txt_num:SetText("-"..string.GetFormattedSeperatorNum(self.extData.destroyUnitInfo.dmg))
                local curValue = self.extData.destroyUnitInfo.durability
                local maxValue = self.extData.destroyUnitInfo.initDurability
                self._slider_num:SetText(string.GetFormattedSeperatorNum(curValue).."/"..string.GetFormattedSeperatorNum(maxValue))
                local percent = math.min((curValue/math.max(maxValue,1)),1)
                self.slider:SetValue(percent)
            end
            if self.extData~=nil then
                local targetType = self.extData.destroyUnitInfo.type
                if targetType == BattleType.Building or targetType == BattleType.CROSS_WORM or targetType == BattleType.City then
                    self.player_head_obj:SetActive(true)
                    self.alliance_icon:SetActive(false)
                    if self.extData.destroyPlayerInfo~=nil then
                        local uid = self.extData.destroyPlayerInfo.uid
                        local pic = self.extData.destroyPlayerInfo.pic or ""
                        local picVer = self.extData.destroyPlayerInfo.picVer or 0
                        local careerType = self.extData.destroyPlayerInfo.careerType or 0
                        local careerLv = self.extData.destroyPlayerInfo.careerLv or 0
                        self._uiPlayerHead:SetData(uid, pic, picVer)
                    end
                elseif targetType == BattleType.ALLIANCE_OCCUPIED_CITY or targetType == BattleType.ALLIANCE_BUILDING or targetType == BattleType.THRONE_ARMY or targetType == BattleType.ACT_ALLIANCE_MINE or targetType == BattleType.DRAGON_BUILDING then
                    self.player_head_obj:SetActive(false)
                    if self.extData.allianceInfo then
                        self.alliance_icon:SetActive(false)
                        self.allianceFlagN:SetActive(true)
                        self.allianceFlagN:SetData(self.extData.allianceInfo.alIcon)
                    else
                        self.alliance_icon:SetActive(true)
                        self.alliance_icon:LoadSprite("Assets/Main/Sprites/UI/UIAlliance/UIAlliance_icon_flag1.png")
                    end
                elseif targetType == BattleType.ALLIANCE_NEUTRAL_CITY then
                    self.player_head_obj:SetActive(false)
                    self.alliance_icon:SetActive(true)
                    local cityId = self.extData.destroyUnitInfo.itemId
                    local cityTemplate = LocalController:instance():getLine(TableName.WorldCity, cityId)
                    if cityTemplate~=nil then
                        local monster_icon = cityTemplate:getValue("monster_icon")
                        self.alliance_icon:LoadSprite(LoadPath.HeroIconsSmallPath..monster_icon)
                    end
                end
            end
        end
    end
    
end


return MailDestroyBuild