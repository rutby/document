---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2021/8/10 15:49
---

local MailScoutTroopItem = BaseClass("MailScoutTroopItem", UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization
local UIHeroTipView = require "UI.UIHero2.UIHeroTip.View.UIHeroTipView"

--local troop_icon_path = "Troop/IconBg/Icon"
local troop_lv_node_path = "UISoldierItem/lvTextBg"
local troop_lv_txt_path = "UISoldierItem/LevelText"
local troop_count_txt_path = "Count"
local infoIcon_path = "UISoldierItem/Icon"
local infoBtn_path = "UISoldierItem"

-- 创建
local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
end

-- 销毁
local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

-- 显示
local function OnEnable(self)
    base.OnEnable(self)
end

-- 隐藏
local function OnDisable(self)
    base.OnDisable(self)
end


--控件的定义
local function ComponentDefine(self)
    self.TroopIconN = self:AddComponent(UIImage, infoIcon_path)
    self.TroopLvRootN = self:AddComponent(UIBaseContainer, troop_lv_node_path)
    self.TroopLvNumN = self:AddComponent(UITextMeshProUGUIEx, troop_lv_txt_path)
    self.TroopCountNumN = self:AddComponent(UITextMeshProUGUIEx, troop_count_txt_path)
    self.InfoBtnN = self:AddComponent(UIButton, infoBtn_path)
    self.InfoBtnN:SetOnClick(function()  
SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnClickGo()
    end)
end

--控件的销毁
local function ComponentDestroy(self)
    self.TroopIconN = nil
    self.TroopLvRootN = nil
    self.TroopLvNumN = nil
    self.TroopCountNumN = nil
    self.InfoBtnN = nil
end

--变量的定义
local function DataDefine(self)
    
end

--变量的销毁
local function DataDestroy(self)
    
end

local function RefreshData(self, scoutTroop)
    self.scoutTroop = scoutTroop
    if not scoutTroop.armsId or scoutTroop.armsId == "" then
        local tempIcon = self:GetTroopTypeIcon(scoutTroop.type.value)
        self.TroopIconN:LoadSprite(string.format(LoadPath.SoldierIcons,tempIcon))
        self.TroopLvRootN:SetActive(false)
    else
        local template = DataCenter.ArmyTemplateManager:GetArmyTemplate(scoutTroop.armsId)
        if template ~= nil then
            self.TroopIconN:LoadSprite(string.format(LoadPath.SoldierIcons,template.icon))
            self.TroopLvRootN:SetActive(true)
            self.TroopLvNumN:SetText(RomeNum[template.show_level])
        end
    end
    
    self.TroopCountNumN:SetText(string.GetFormattedStr(scoutTroop.total.value))
end

local function GetTroopTypeIcon(self, intType)
    if intType == ArmType.Tank then
        return "SoldierIcons_hunter_1"
    elseif intType == ArmType.Robot then
        return "SoldierIcons_infantry_1"
    elseif intType == ArmType.Plane then
        return "SoldierIcons_rider_1"
    elseif intType == ArmType.Trap then
        return "SoldierIcons_trap_1"
    end
end

local function GetTroopTypeName(self, troopType)
    if troopType == ArmType.Robot then
        return Localization:GetString("100639")
    elseif troopType == ArmType.Tank then
        return Localization:GetString("100640")
    elseif troopType == ArmType.Plane then
        return Localization:GetString("100641")
    elseif troopType == ArmType.Trap then
        return Localization:GetString("104337")
    end
end

local function OnClickGo(self)
    local scaleFactor = UIManager:GetInstance():GetScaleFactor()
    local position = self.InfoBtnN.transform.position + Vector3.New(0, 50, 0) * scaleFactor

    local param = UIHeroTipView.Param.New()
    --param.content = Localization:GetString("150209")
    param.dir = UIHeroTipView.Direction.ABOVE
    param.defWidth = 180
    param.pivot = 0.5
    param.position = position
    
    if not self.scoutTroop.armsId or self.scoutTroop.armsId == "" then
        param.content = self:GetTroopTypeName(self.scoutTroop.type.value)
    else
        local template = DataCenter.ArmyTemplateManager:GetArmyTemplate(self.scoutTroop.armsId)
        if template ~= nil then
            local tempType = template.arm
            param.title = self:GetTroopTypeName(tempType)
            param.content = Localization:GetString(template.name)
        end
    end
    
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIHeroTip, { anim = false }, param)
end


MailScoutTroopItem.OnCreate = OnCreate
MailScoutTroopItem.OnDestroy = OnDestroy
MailScoutTroopItem.OnEnable = OnEnable
MailScoutTroopItem.OnDisable = OnDisable
MailScoutTroopItem.ComponentDefine = ComponentDefine
MailScoutTroopItem.ComponentDestroy = ComponentDestroy
MailScoutTroopItem.DataDefine = DataDefine
MailScoutTroopItem.DataDestroy = DataDestroy

MailScoutTroopItem.RefreshData = RefreshData
MailScoutTroopItem.GetTroopTypeIcon = GetTroopTypeIcon
MailScoutTroopItem.OnClickGo = OnClickGo
MailScoutTroopItem.GetTroopTypeName = GetTroopTypeName

return MailScoutTroopItem