---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by mac.
--- DateTime: 7/26/21 5:15 PM
---
local MailBossRewardView = BaseClass("MailBossRewardView",UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization
local MailRewardItem = require "UI.UIMailNew.UIMailMainPanel.Component.MailRewardItem"

local _cp_txtMainTitle = "UIMailItemTitle/txtMainTitle"
local _cp_txtSubTitle = "UIMailItemTitle/txtSubTitle"
local _cp_txtTime = "UIMailItemTitle/txtTime"
local _cp_txtDesc = "txtDesc"
local _cp_objReward = "objRewardNode"
local _cp_objGetReward = "objGetReward"
local _cp_btnGetReward = "objGetReward/btnGetReward"
local _cp_txtGetReward = "objGetReward/btnGetReward/txtGetReward"
local _cp_btnGiveBack = "objGetReward/btnGiveBack"
local _cp_txtGiveBack = "objGetReward/btnGiveBack/txtGiveBack"


function MailBossRewardView:OnCreate()
    base.OnCreate(self)
    self._txtMainTitle = self:AddComponent(UITextMeshProUGUIEx, _cp_txtMainTitle)
    self._txtSubTitle = self:AddComponent(UITextMeshProUGUIEx, _cp_txtSubTitle)
    self._txtTime = self:AddComponent(UITextMeshProUGUIEx, _cp_txtTime)
    self._txtDesc = self:AddComponent(UITextMeshProUGUI, _cp_txtDesc)
    self._objReward = self:AddComponent(UIBaseContainer, _cp_objReward)
    
    self._objGetReward = self:AddComponent(UIBaseContainer, _cp_objGetReward)
    self._btnGetReward = self:AddComponent(UIButton, _cp_btnGetReward)
    self._btnGetReward:SetActive(true)
    self._btnGetReward:SetOnClick(BindCallback(self, self.OnClickBtnGetReward))
    self._txtGetReward = self:AddComponent(UITextMeshProUGUIEx, _cp_txtGetReward)
    self._txtGetReward:SetLocalText(GameDialogDefine.GET_REWARD) 
    self.cell_prefab = self.transform:Find("MailRewardItem").gameObject
    self.cell_prefab:GameObjectCreatePool()
    self._btnGiveBack = self:AddComponent(UIButton, _cp_btnGiveBack)
    self._btnGiveBack:SetActive(false)
    self._txtGiveBack = self:AddComponent(UITextMeshProUGUIEx, _cp_txtGiveBack)
end

function MailBossRewardView:OnDisable()
    self._objReward:RemoveComponents(MailRewardItem)
    self.cell_prefab.gameObject:GameObjectRecycleAll()
    base.OnDisable(self)
end


function MailBossRewardView:OnAddListener()
    base.OnAddListener(self)
    self:AddUIListener(EventId.MailPush, self.CheckRewardState)
end

function MailBossRewardView:OnRemoveListener()
    base.OnRemoveListener(self)
    self:RemoveUIListener(EventId.MailPush,self.CheckRewardState)
end


function MailBossRewardView:setData( maildata )
    -- 设置数据
    self._mailData = maildata
    local _strTitle = MailShowHelper.GetMainTitle(maildata)
    self._txtMainTitle:SetText(_strTitle)
    local _strSubTitle = MailShowHelper.GetMailSubTitle(maildata)
    self._txtSubTitle:SetText(_strSubTitle)
    local _strTime = MailShowHelper.GetAbstractCreateTime(maildata)
    self._txtTime:SetText(_strTime)
    local _strContents = maildata:GetMailMessage()
    self._txtDesc:SetText(_strContents)


    local totalCnt = self:ShowReward(maildata)
    self._objReward:SetActive(totalCnt > 0)

    self._objGetReward:SetActive(maildata.rewardStatus == 0)
    
end

function MailBossRewardView:CheckRewardState()
    self._mailData = DataCenter.MailDataManager:GetMailInfoById(self._mailData.uid)
    self._objGetReward:SetActive(self._mailData.rewardStatus == 0)
end

function MailBossRewardView:OnClickBtnGetReward()
    DataCenter.MailDataManager:RewardMail(self._mailData.uid)
    
    local reward = self._mailData:GetMailReward()
    if reward ~= nil and table.count(reward["rewardInfo"]) > 0 then
        for i = 1, #reward.rewardInfo do
            local child = self._objReward.transform:GetChild(i - 1)
            local img = child.gameObject.transform:Find("clickBtn/ItemIcon")
            local pic = DataCenter.RewardManager:GetPicByType(reward.rewardInfo[i].type,reward.rewardInfo[i].id)
            local flyPos =Vector3.New(0,0,0)
            UIUtil.DoFly(reward.rewardInfo[i].type,1,pic,img.gameObject.transform.position,flyPos,100,100)
        end
    end
end

function MailBossRewardView:ShowRewardItem(rewardData)
    local objName = rewardData["type"] .. rewardData["itemId"]
    --复制基础prefab，每次循环创建一次
    local item = self.cell_prefab:GameObjectSpawn(self._objReward.transform)
    item.name = objName
    local obj = self._objReward:AddComponent(MailRewardItem,item.name)
    obj:RefreshData(rewardData)
end


--[[
    展示奖励
]]
function MailBossRewardView:ShowReward(maildata)
    local pay = maildata:GetMailPay()
    local reward = maildata:GetMailReward()
    local totalCnt = 0
    -- 检测钻石
    if pay ~= nil then
        local goldCnt = pay["gold"] or 0
        if goldCnt > 0 then
            totalCnt = totalCnt + 1
            self:ShowRewardItem({["type"] = "gold", ["itemId"] = "gold", ["count"] = goldCnt, ["rewardType"] = RewardType.GOLD})
        end
    end
    -- 检测道具
    if reward ~= nil and reward["rewardInfo"] ~= nil then
        local rewardList = self:GetRewardItemList(reward["rewardInfo"])
        for itemId, count in pairs(rewardList) do
            local param = {["type"] = "item", ["itemId"] = itemId, ["count"] = count, ["rewardType"] = RewardType.GOODS}
            totalCnt = totalCnt + 1
            self:ShowRewardItem(param)
        end
    end
    return totalCnt
end

function MailBossRewardView:GetRewardItemList( tabReward )
    local tabItemReward = {}
    -- 老邮件历史处理，保留到21.10.01
    if type(tabReward) ~= "table" then
        return tabItemReward
    end
    for _, iteminfo in pairs(tabReward) do
        if (iteminfo["type"] == RewardType.GOODS) then
            tabItemReward[iteminfo["id"]] = iteminfo["num"]
        end
    end
    return tabItemReward
end


function MailBossRewardView:GetRewardList(maildata)
    local tabItemReward = {}
    if (string.IsNullOrEmpty(maildata.rewardId)) then
        return tabItemReward
    end
    local tabReward = string.split(maildata.rewardId, '|')
    for _, iteminfo in pairs(tabReward) do
        local tabItem = string.split(iteminfo, ',')
        if (#tabItem == 3 and tabItem[1] == "goods") then
            tabItemReward[tabItem[2]] = tabItem[3]
        end
    end
    return tabItemReward
end

return MailBossRewardView