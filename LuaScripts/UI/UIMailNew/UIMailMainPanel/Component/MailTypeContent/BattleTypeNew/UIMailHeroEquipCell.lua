---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by admin.
--- DateTime: 2024/4/7 17:16
---

local UIMailHeroEquipCell = BaseClass("UIMailHeroEquipCell", UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization

local UIHeroCellSmall = require "UI.UIHero2.Common.UIHeroCellSmall"
local UIHeroEtoileList = require "UI.UIHero2.Common.UIHeroEtoileList"
local UIHeroEquipSlot = require "UI.UIHeroEquip.Component.UIHeroEquipSlot"
local UIHeroEquipCell = require "UI.UIHeroEquip.Component.UIHeroEquipCell"
local HeroEquipModel = require "DataCenter.HeroEquipManager.HeroEquipModel"

local hero_cell_path = "UIHeroCellSmall"
local hero_star_path = "UIHeroEtoileList"
local name_path = "Name"
local camp_path = "imgCamp"
local equip_slot_path = "Slot/UIHeroEquipSlot%s"
local equip_path = "Equip/UIHeroEquipCell%s"

function UIMailHeroEquipCell:OnCreate()
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

function UIMailHeroEquipCell:OnDestroy()
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

function UIMailHeroEquipCell:ComponentDefine()
    self.hero = self:AddComponent(UIHeroCellSmall, hero_cell_path)
    self.star = self:AddComponent(UIHeroEtoileList, hero_star_path)
    self.name = self:AddComponent(UITextMeshProUGUIEx, name_path)
    self.camp = self:AddComponent(UIImage, camp_path)
    for i = 1, HeroEquipConst.EquipSlot do
        self.equipSlot[i] = self:AddComponent(UIHeroEquipSlot, string.format(equip_slot_path, i))
        self.equipCell[i] = self:AddComponent(UIHeroEquipCell, string.format(equip_path, i))
    end
end

function UIMailHeroEquipCell:ComponentDestroy()

end

function UIMailHeroEquipCell:DataDefine()
    self.equipSlot = {}
    self.equipCell = {}
end

function UIMailHeroEquipCell:DataDestroy()
    self.equipSlot = {}
    self.equipCell = {}
end

function UIMailHeroEquipCell:OnEnable()
    base.OnEnable(self)
end

function UIMailHeroEquipCell:OnDisable()
    base.OnDisable(self)
end

function UIMailHeroEquipCell:OnAddListener()
    base.OnAddListener(self)
end

function UIMailHeroEquipCell:OnRemoveListener()
    base.OnRemoveListener(self)
end

function UIMailHeroEquipCell:SetData(data)
    self.hero:SetActive(true)
    self.hero:InitWithConfigId(data.heroId, data.heroQuality, nil)
    self.hero:SetStarActive(false)
    self.hero:SetCampActive(false)
    local curMilitaryRankId = HeroUtils.GetRankIdByLvAndStage(data.heroId, data.rankLv, data.stage)
    self.star:SetRankId(curMilitaryRankId)
    self.camp:LoadSprite(HeroUtils.GetCampIconPath(data.camp))
    self.name:SetText(HeroUtils.GetHeroNameByConfigId(data.heroId))
    
    table.walk(self.equipSlot,function(slot, cell)
        cell:SetData(data.heroId, slot)
    end)
    local equipDict = self:GenerateEquipInfo(data.equipInfos)
    for i = 1, HeroEquipConst.EquipSlot do
        local equip = equipDict[i]
        local cell = self.equipCell[i]
        if equip == nil then
            cell:SetActive(false)
        else
            cell:SetActive(true)
            cell:SetData(equip)
        end
    end
end

function UIMailHeroEquipCell:GenerateEquipInfo(equipInfos)
    local result = {}
    for i, v in pairs(equipInfos) do
        local template = DataCenter.HeroEquipTemplateManager:GetTemplate(v.equipId)
        if template ~= nil then
            local data = HeroEquipModel.New()
            data:ParseData(v)
            result[template.slot] = data
        end
    end
    return result
end

return UIMailHeroEquipCell