---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by admin.
--- DateTime: 2024/4/7 17:05
---

local UIMailHeroEquip = BaseClass("UIMailHeroEquip", UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization

local UIMailHeroEquipCell = require "UI.UIMailNew.UIMailMainPanel.Component.MailTypeContent.BattleTypeNew.UIMailHeroEquipCell"

local name_path = "Title/Name"
local left_path = "Content/Left"
local right_path = "Content/Right"
local left_power_path = "Title/Power/PowerLeft"
local right_power_path = "Title/Power/PowerRight"

function UIMailHeroEquip:OnCreate()
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

function UIMailHeroEquip:OnDestroy()
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

function UIMailHeroEquip:ComponentDefine()
    self.name = self:AddComponent(UITextMeshProUGUIEx, name_path)
    self.name:SetLocalText(GameDialogDefine.HERO_EQUIP23)
    self.leftNode = self:AddComponent(UIBaseContainer, left_path)
    self.rightNode = self:AddComponent(UIBaseContainer, right_path)
    self.leftPower = self:AddComponent(UITextMeshProUGUIEx, left_power_path)
    self.rightPower = self:AddComponent(UITextMeshProUGUIEx, right_power_path)
end

function UIMailHeroEquip:ComponentDestroy()

end

function UIMailHeroEquip:DataDefine()
    self.leftCellRequest = {}
    self.rightCellRequest = {}
end

function UIMailHeroEquip:DataDestroy()
    self.leftCellRequest = {}
    self.rightCellRequest = {}
end

function UIMailHeroEquip:OnEnable()
    base.OnEnable(self)
end

function UIMailHeroEquip:OnDisable()
    base.OnDisable(self)
end

function UIMailHeroEquip:OnAddListener()
    base.OnAddListener(self)
end

function UIMailHeroEquip:OnRemoveListener()
    base.OnRemoveListener(self)
end

function UIMailHeroEquip:SetData(list, left)
    local count = #list
    local powerTitle = nil
    local assets = ''
    local parent = nil
    local cellRequests = nil
    if left then
        powerTitle = self.leftPower
        assets = UIAssets.UIMailHeroEquipLeftCell
        parent = self.leftNode
        cellRequests = self.leftCellRequest
    else
        powerTitle = self.rightPower
        assets = UIAssets.UIMailHeroEquipRightCell
        parent = self.rightNode
        cellRequests = self.rightCellRequest
    end
    if count > 0 then
        local power = 0
        for i = 1, count do
            local hero = list[i]
            if cellRequests[i] == nil then
                cellRequests[i] = self:GameObjectInstantiateAsync(assets, function(request)
                    if request.isError then
                        return
                    end
                    local go = request.gameObject
                    local nameStr = tostring(i)
                    go.name = nameStr
                    go.transform:SetParent(parent.transform)
                    go.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
                    local cell = parent:AddComponent(UIMailHeroEquipCell, nameStr)
                    cell:SetData(hero)
                end)
            end

            power = power + self:GetPower(hero.equipInfos)
        end
        powerTitle:SetText(string.GetFormattedSeperatorNum(power))
    end
    local height = count*190
    return height
end

function UIMailHeroEquip:GetPower(equipInfos)
    local power = 0
    for i, v in pairs(equipInfos) do
        power = power + DataCenter.HeroEquipTemplateManager:GetEquipmentPower(v.equipId, v.equipLv, v.promote);
    end
    return power
end

return UIMailHeroEquip