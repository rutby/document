---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2022/3/7 16:26
---
local MailPlayerHeroItem = require "UI.UIMailNew.UIMailMainPanel.Component.MailTypeContent.BattleTypeNew.MailPlayerHeroItem"
local PlayerReportTroopListCell = require "UI.UIMailNew.UIMailMainPanel.Component.MailTypeContent.BattleTypeNew.PlayerReportTroopListCell"
local MailPlayerResResult = require "UI.UIMailNew.UIMailMainPanel.Component.MailTypeContent.BattleTypeNew.MailPlayerResResult"
local CampRestraintItem = require "UI.UIFormation.UIFormationTableNew.Component.CampRestraintItem"
local UIHeroTipView = require "UI.UIHero2.UIHeroTip.View.UIHeroTipView"
local UIMailHeroEquip = require "UI.UIMailNew.UIMailMainPanel.Component.MailTypeContent.BattleTypeNew.UIMailHeroEquip"
local MailPlayerReport = BaseClass("MailPlayerReport",UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization
local Setting = CS.GameEntry.Setting

local _cp_root = ""

-- 双方简要信息部分
local _cp_txtNameLeft = "root/PlayerReportTop/Left/txtNameLeft"
local _cp_txtKillLeft = "root/PlayerReportTop/Left/objKillLeft/txtKillLeft"
local _cp_txtKillNumLeft = "root/PlayerReportTop/Left/objKillLeft/txtKillNumLeft"
local _cp_txtKillRight = "root/PlayerReportTop/Right/objKillRight/txtKillRight"
local _cp_txtKillNumRight = "root/PlayerReportTop/Right/objKillRight/txtKillNumRight"
local _cp_txtName_right = "root/PlayerReportTop/Right/txtName_right"
local _cp_img_normal_left = "root/PlayerReportTop/objUserHead_left/ImageNormal_left"
local _cp_img_normal_right = "root/PlayerReportTop/objUserHead_right/ImageNormal_right"
local _cp_imgUserHead_left = "root/PlayerReportTop/objUserHead_left/imgUserHead_left"
local _cp_imgHeadBg_left = "root/PlayerReportTop/objUserHead_left/HeadBtnL"
local _cp_imgHeadFg_left = "root/PlayerReportTop/objUserHead_left/HeadFgL"
local _cp_imgUserHead_right = "root/PlayerReportTop/objUserHead_right/imgUserHead_right"
local _cp_imgHeadBg_right = "root/PlayerReportTop/objUserHead_right/HeadBtnR"
local _cp_imgHeadFg_right = "root/PlayerReportTop/objUserHead_right/HeadFgR"
local _cp_txtResult_right = "root/PlayerReportTop/txtResult_right"
local _cp_txtResult_left = "root/PlayerReportTop/txtResult_left"
local _cp_txtRound = "root/PlayerReportTop/txtRound"

-- 英雄部分
local _cp_txtHeroTitle_left = "root/PlayerReportTop/line/txtHeroTitle_left"
local _cp_txtHeroTitle_right = "root/PlayerReportTop/line/txtHeroTitle_right"
local _cp_txtHeroTitle_mid = "root/PlayerReportTop/line/txtHeroTitle_mid"
local _cp_ObjHeroesLeftNode = "root/PlayerReportTop/ObjHeroesLeftNode/leftContent"
local _cp_ObjHeroesRightNode = "root/PlayerReportTop/ObjHeroesRightNode/rightContent"
local _cp_detail_left_btn = "root/PlayerReportTop/ObjHeroesLeftNode/leftBtnInfo"
local _cp_detail_right_btn = "root/PlayerReportTop/ObjHeroesRightNode/rightBtnInfo"
local _cp_txtNoHeroTips_Left = "root/PlayerReportTop/txtNoHeroTips_Left"
local _cp_txtNoHeroTips_Right = "root/PlayerReportTop/txtNoHeroTips_Right"
local _cp_CampRestraintItem_LeftBtn = "root/PlayerReportTop/leftCamp"
local _cp_CampRestraintItem_RightBtn = "root/PlayerReportTop/rightCamp"
local _cp_CampRestraintItem_Left = "root/PlayerReportTop/leftCamp/LeftCampRestraintItem"
local _cp_CampRestraintItem_Left_Add = "root/PlayerReportTop/leftCamp/camp_faction"
local _cp_CampRestraintItem_Right = "root/PlayerReportTop/rightCamp/RightCampRestraintItem"
local _cp_leftStatus = "root/PlayerReportTop/leftStatus"
local _cp_rightStatus = "root/PlayerReportTop/rightStatus"
--local _cp_troopDetail = "root/PlayerReportTop/troopDetail"
local hero_equip_path = "root/UIMailHeroEquip"
-- 属性标题
local _cp_txtTroops = "root/troopList/titleBg/txtTroops"
local _cp_troopCell1 = "root/troopList/cell1"
local _cp_troopCell2 = "root/troopList/cell2"
local _cp_troopCell3 = "root/troopList/cell3"
local _cp_troopCell4 = "root/troopList/cell4"
local _cp_troopCell5 = "root/troopList/cell5"
local _cp_troopCell6 = "root/troopList/cell6"
local _cp_troopCell7 = "root/troopList/cell7"
-- 玩家奖励部分
local _cp_ObjBattleUserResult = "root/PlayerReportIncome"
local _cp_btnObj = "root/ObjBtnNode"
local _cp_ObjBattleDamageResult = "root/PlayerDamageObj"
local _cp_damageDes = "root/PlayerDamageObj/Des"
local _cp_damageImgBg = "root/PlayerDamageObj/dmgSliderBg"
local _cp_damageSlider = "root/PlayerDamageObj/dmgSliderBg/Image/dmgLeft/dmgSlider"
local _cp_damageLeft = "root/PlayerDamageObj/dmgSliderBg/Image/dmgLeft"
local _cp_damageLeft_text = "root/PlayerDamageObj/dmgSliderBg/Image/dmgLeft/dmgLeftText"
local _cp_damageSlider_text = "root/PlayerDamageObj/dmgSliderBg/Image/dmgLeft/dmgSlider/dmgSliderText"
-- 底部按钮 -- 战报详情/部队详情
local _cp_btnReport = "root/ObjBtnNode/layout/btnReport"
local _cp_txtReport = "root/ObjBtnNode/layout/btnReport/txtBtnReport"
local _cp_btnTroopInfo = "root/ObjBtnNode/layout/btnTroopInfo"
local _cp_txtTroopInfo = "root/ObjBtnNode/layout/btnTroopInfo/txtTroopInfo"
local _cp_btnReplay = "root/ObjBtnNode/layout/btnReplay"
local _cp_txtReplay = "root/ObjBtnNode/layout/btnReplay/txtReplay"

function MailPlayerReport:DataDefine()

end

function MailPlayerReport:OnCreate()
    base.OnCreate(self)
    self._root = self:AddComponent(UIBaseContainer, _cp_root)
    self._txtNameLeft = self:AddComponent(UITextMeshProUGUIEx, _cp_txtNameLeft)
    self._imgUserHead_left = self:AddComponent(UIPlayerHead, _cp_imgUserHead_left)
    self._btnUserHead_left = self:AddComponent(UIButton, _cp_imgHeadBg_left)
    self._btnUserHead_left:SetOnClick(function()
        self:OnClickLeftHead()
    end)
    self._imgHeadBg_left = self:AddComponent(UIImage, _cp_imgHeadBg_left)
    self._imgHeadFg_left = self:AddComponent(UIImage, _cp_imgHeadFg_left)
    self._imgUserHead_right = self:AddComponent(UIPlayerHead, _cp_imgUserHead_right)
    self._btnUserHead_right = self:AddComponent(UIButton, _cp_imgHeadBg_right)
    self._btnUserHead_right:SetOnClick(function()
        self:OnClickRightHead()
    end)
    self._imgHeadBg_right = self:AddComponent(UIImage, _cp_imgHeadBg_right)
    self._imgHeadFg_right = self:AddComponent(UIImage, _cp_imgHeadFg_right)
    self._imgUserHead_left_normal = self:AddComponent(CircleImage, _cp_img_normal_left)
    self._imgUserHead_right_normal = self:AddComponent(CircleImage, _cp_img_normal_right)
    self._cp_txtKillLeft = self:AddComponent(UITextMeshProUGUIEx, _cp_txtKillLeft)
    self._cp_txtKillNumLeft = self:AddComponent(UITextMeshProUGUIEx, _cp_txtKillNumLeft)
    self._cp_txtKillRight = self:AddComponent(UITextMeshProUGUIEx, _cp_txtKillRight)
    self._cp_txtKillNumRight = self:AddComponent(UITextMeshProUGUIEx, _cp_txtKillNumRight)
    self._txtNameRight = self:AddComponent(UITextMeshProUGUIEx, _cp_txtName_right)
    --self._cp_troopDetail = self:AddComponent(UITextMeshProUGUIEx, _cp_troopDetail)
    self._txtResult_right = self:AddComponent(UITextMeshProUGUIEx, _cp_txtResult_right)
    self._txtResult_left = self:AddComponent(UITextMeshProUGUIEx, _cp_txtResult_left)

    self._txtRound = self:AddComponent(UITextMeshProUGUIEx, _cp_txtRound)

    self._cp_txtTroops = self:AddComponent(UITextMeshProUGUIEx, _cp_txtTroops)
    self._cp_txtTroops:SetLocalText(310141)
    self._cp_troopCell1 = self:AddComponent(PlayerReportTroopListCell,_cp_troopCell1)
    self._cp_troopCell2 = self:AddComponent(PlayerReportTroopListCell,_cp_troopCell2)
    self._cp_troopCell3 = self:AddComponent(PlayerReportTroopListCell,_cp_troopCell3)
    self._cp_troopCell4 = self:AddComponent(PlayerReportTroopListCell,_cp_troopCell4)
    self._cp_troopCell5 = self:AddComponent(PlayerReportTroopListCell,_cp_troopCell5)
    self._cp_troopCell6 = self:AddComponent(PlayerReportTroopListCell,_cp_troopCell6)
    self._cp_troopCell7 = self:AddComponent(PlayerReportTroopListCell,_cp_troopCell7)
    self._ObjBattleUserResult = self:AddComponent(MailPlayerResResult, _cp_ObjBattleUserResult)
    self._ObjBtn = self:AddComponent(UIBaseContainer, _cp_btnObj)
    self.ObjBattleDamageResult = self:AddComponent(UIBaseContainer, _cp_ObjBattleDamageResult)
    self.damageDes = self:AddComponent(UITextMeshProUGUIEx, _cp_damageDes)
    self.damageImgBg = self:AddComponent(UIImage, _cp_damageImgBg)
    self.damageSlider = self:AddComponent(UIImage, _cp_damageSlider)
    self.damageLeft = self:AddComponent(UIImage, _cp_damageLeft)

    self.damageSliderText = self:AddComponent(UITextMeshProUGUIEx, _cp_damageSlider_text)
    self.damageLeftText = self:AddComponent(UITextMeshProUGUIEx, _cp_damageLeft_text)
    
    self._btnReport = self:AddComponent(UIButton, _cp_btnReport)
    self._btnReport:SetOnClick(BindCallback(self, self.OnClickBtnReport))
    --self._btnReport:SetActive(false)
    
    self._txtReport = self:AddComponent(UITextMeshProUGUIEx, _cp_txtReport)
    self._btnTroopInfo = self:AddComponent(UIButton, _cp_btnTroopInfo)
    self._btnTroopInfo:SetOnClick(BindCallback(self, self.OnClickBtnTroopInfo))
    self._txtTroopInfo = self:AddComponent(UITextMeshProUGUIEx, _cp_txtTroopInfo)
    self._btnReplay = self:AddComponent(UIButton, _cp_btnReplay)
    self._btnReplay:SetOnClick(BindCallback(self, self.OnClickBtnReplay))
    self._txtReplay = self:AddComponent(UITextMeshProUGUIEx, _cp_txtReplay)
    self.leftBtn = self:AddComponent(UIButton, _cp_detail_left_btn)
    self.leftBtn:SetOnClick(function()
        self:OnHeroDetailClick(true)
    end)

    self.rightBtn = self:AddComponent(UIButton,_cp_detail_right_btn)
    self.rightBtn:SetOnClick(function()
        self:OnHeroDetailClick(false)
    end)
    -- 标题

    self._txtHeroTitle_left = self:AddComponent(UITextMeshProUGUIEx, _cp_txtHeroTitle_left)
    self._txtHeroTitle_left:SetLocalText(321551)
    self._txtHeroTitle_right = self:AddComponent(UITextMeshProUGUIEx, _cp_txtHeroTitle_right)
    self._txtHeroTitle_right:SetLocalText(321552)
    self._txtHeroTitle_mid = self:AddComponent(UITextMeshProUGUIEx, _cp_txtHeroTitle_mid)
    self._txtHeroTitle_mid:SetLocalText(100275)
    self._ObjHeroesLeftNode = self:AddComponent(UIBaseContainer, _cp_ObjHeroesLeftNode)
    self._ObjHeroesRightNode = self:AddComponent(UIBaseContainer, _cp_ObjHeroesRightNode)
    self._CampRestraintItem_LeftBtn = self:AddComponent(UIButton, _cp_CampRestraintItem_LeftBtn)
    self._CampRestraintItem_RightBtn = self:AddComponent(UIButton, _cp_CampRestraintItem_RightBtn)
    self._CampRestraintItem_LeftBtn:SetOnClick(function()
        self:OnLeftCampClick()
    end)
    self._CampRestraintItem_RightBtn:SetOnClick(function()
        self:OnRightCampClick()
    end)
    self._CampRestraintItem_Left = self:AddComponent(CampRestraintItem, _cp_CampRestraintItem_Left)
    self._CampRestraintItem_Right = self:AddComponent(CampRestraintItem, _cp_CampRestraintItem_Right)
    self._CampRestraintImg = self:AddComponent(UIImage, _cp_CampRestraintItem_Left_Add)
    self._txtNoHeroTips_Left = self:AddComponent(UITextMeshProUGUIEx, _cp_txtNoHeroTips_Left)
    self._txtNoHeroTips_Right = self:AddComponent(UITextMeshProUGUIEx, _cp_txtNoHeroTips_Right)
    self.leftModel = {}
    self.rightModel = {}
    self._leftStatus = self:AddComponent(UIButton, _cp_leftStatus)
    self._rightStatus = self:AddComponent(UIButton, _cp_rightStatus)
    self._leftStatus:SetOnClick(function()
        self:OnLeftStatusClick()
    end)
    self._rightStatus:SetOnClick(function()
        self:OnRightStatusClick()
    end)

    self.heroEquip = self:AddComponent(UIMailHeroEquip, hero_equip_path)
    self.heroEquipLayout = self:AddComponent(UILayoutElement, hero_equip_path)
end

function MailPlayerReport:OnEnable()
    base.OnEnable(self)
    self:InitDialog()
end

function MailPlayerReport:InitDialog()
    self._txtReport:SetLocalText(311047)
    self._txtTroopInfo:SetLocalText(311048)
    self._cp_txtKillLeft:SetLocalText(310139)
    self._cp_txtKillRight:SetLocalText(310139)
    self._txtReplay:SetLocalText(372265)
    --self._cp_troopDetail:SetLocalText(310141)
    self._cp_troopCell1:InitDialog(130068,BattleReportShowType.Soldier)
    self._cp_troopCell4:InitDialog(163138,BattleReportShowType.Atk)
    self._cp_troopCell5:InitDialog(163139,BattleReportShowType.Def)
    self._cp_troopCell7:InitDialog(163141,BattleReportShowType.SoldierLevel)
    self._cp_troopCell6:InitDialog(163140,BattleReportShowType.Health)
    self._cp_troopCell2:InitDialog(111138,BattleReportShowType.EdenSignal)
    --self._cp_troopCell3:InitDialog(220207,BattleReportShowType.HeroDef)
    self._txtResult_right:SetText("")
    self._txtResult_left:SetText("")
    self._txtRound:SetText("")
end

function MailPlayerReport:OnClickBtnReport()
    SFSNetwork.SendMessage(MsgDefines.MailGetFightReportDetail, self.bigRoundUuid, self._mailId, self.bigRoundIndex, self._mailInfo)
end

function MailPlayerReport:OnClickBtnTroopInfo()
    local param = {}
    param["leftFightData"] = self.leftFightData
    param["rightFightData"] = self.rightFightData
    param["leftBattleEffect"] = self.leftBattleEffect
    param["rightBattleEffect"] = self.rightBattleEffect
    param["leftUuid"] = self.leftUuid
    param["rightUuid"] = self.rightUuid
    param['leftHeroBattleEffect'] = self.leftHeroBattleEffect
    param['rightHeroBattleEffect'] = self.rightHeroBattleEffect
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIMailBattleAttrDetail,{ anim = false, isBlur = true },param)
end

function MailPlayerReport:OnDisable()
    self:ClearLeftHero()
    self:ClearRightHero()
    base.OnDisable(self)
end

function MailPlayerReport:ClearLeftHero()
    self._ObjHeroesLeftNode:RemoveComponents(MailPlayerHeroItem)
    if self.leftModel~=nil then
        for k,v in pairs(self.leftModel) do
            if v ~= nil then
                self:GameObjectDestroy(v)
            end
        end
    end
    self.leftModel ={}
end
function MailPlayerReport:ClearRightHero()
    self._ObjHeroesRightNode:RemoveComponents(MailPlayerHeroItem)
    if self.rightModel~=nil then
        for k,v in pairs(self.rightModel) do
            if v ~= nil then
                self:GameObjectDestroy(v)
            end
        end
    end
    self.rightModel ={}
end
function MailPlayerReport:SetData( maildata, roundIndex,showReplay,jumpType)
    self._btnReplay:SetActive(showReplay~=nil and showReplay == true)
    self._mailId = maildata["uid"]
    self.roundIndex = roundIndex
    self.jumpType = jumpType
    local _showData = maildata:GetMailExt():GetShowRoundListDataByIndex(roundIndex)
    if (_showData == nil) then
        return
    end
    self._mailInfo = maildata
    self.leftFightData = _showData.leftData
    self.rightFightData = _showData.rightData
    self.bigRoundIndex = _showData._roundIndex
    self.bigRoundUuid = _showData.roundUuid
    self.fightResult = _showData.fightResult
    self.leftHurt = _showData.leftHurt
    self.rightHurt = _showData.rightHurt
    self.leftUuid = _showData.leftUuid
    self.rightUuid = _showData.rightUuid
    self.actBossDamage = _showData.actBossDamage
    self.leftBattleEffect = self._mailInfo:GetMailExt():GetMySideBattleEffect(self.leftUuid)
    self.leftHeroBattleEffect = self._mailInfo:GetMailExt():GetMySideHeroBattleEffect(self.leftUuid)
    self.rightBattleEffect = self._mailInfo:GetMailExt():GetOtherSideBattleEffect(self.rightUuid)
    self.rightHeroBattleEffect = self._mailInfo:GetMailExt():GetOtherSideHeroBattleEffect(self.leftUuid)
    self:DataDefine()
    self._cp_troopCell1:SetRoundData(self.leftFightData,self.rightFightData)
    self._cp_troopCell2:SetRoundData(self.leftFightData,self.rightFightData)
    self._cp_troopCell3:SetRoundData(self.leftFightData,self.rightFightData)
    self._cp_troopCell4:SetRoundData(self.leftFightData,self.rightFightData)
    self._cp_troopCell5:SetRoundData(self.leftFightData,self.rightFightData)
    self._cp_troopCell6:SetRoundData(self.leftFightData,self.rightFightData)
    self._cp_troopCell7:SetRoundData(self.leftFightData,self.rightFightData)
    local showDetail = (self.leftFightData.unitData~=nil and self.leftFightData.unitAttrInfo~=nil and self.rightFightData.unitData~=nil and self.rightFightData.unitAttrInfo~=nil)
    local signalLeft =0
    local signalRight =0
    local battleServerId = self._mailInfo:GetMailExt():GetBattleServerId()
    if DataCenter.AccountManager:GetServerTypeByServerId(battleServerId) == ServerType.EDEN_SERVER then
        if self.leftFightData.unitData~=nil then
            signalLeft=  self.leftFightData.unitData:GetEdenSignal()
        end
        if self.rightFightData.unitData~=nil then
            signalRight = self.rightFightData.unitData:GetEdenSignal()
        end
    end
    
    self._cp_troopCell2:SetActive(showDetail and (signalLeft>0 or signalRight>0))
    --self._cp_troopCell3:SetActive(showDetail)
    self._cp_troopCell4:SetActive(showDetail)
    self._cp_troopCell5:SetActive(showDetail)
    self._cp_troopCell6:SetActive(showDetail)
    self._cp_troopCell7:SetActive(showDetail)
    local canShowResult, resultDesc = self:CanShowResResult()
    if canShowResult then
        self._ObjBattleUserResult:SetData(self.leftFightData,self.rightFightData,self.bigRoundIndex, maildata,self.leftUuid,self.rightUuid, resultDesc)
        self._ObjBattleUserResult:SetActive(true)
    else
        self._ObjBattleUserResult:SetActive(false)
    end

    self:ShowHeadInfo()
    self:ShowHeroes()
    self:ShowTroopAttr()
    self:SetAttackAddData()
    self:SetDefenceAddData()
    self:SetHealthAddData()
    self:ShowHurt()
    self:ShowDamage()
    self:SetCampData()
    self:SetStatusData()
    CS.UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(self.rectTransform)
end

-- 显示上方双方信息
function MailPlayerReport:ShowHeadInfo()
    if self.leftFightData.unitData==nil then
        if self.leftFightData.name~=nil then
            self._txtNameLeft:SetText(self.leftFightData.name)
        end
        if self.leftFightData.pic~=nil and self.leftFightData.pic~="" then
            self._imgUserHead_left:SetActive(false)
            self._imgUserHead_left_normal:SetActive(true)
            self._imgUserHead_left_normal:LoadSprite(self.leftFightData.pic)
            
        end
    else
        local selfAbbr = self.leftFightData.unitData.alAbbr
        local selfname = self.leftFightData.unitData.name
        local selfType = self.leftFightData.unitData:GetSpecialType()
        if selfType == SpecialUnitType.BUILDING_STATION or selfType == SpecialUnitType.CITY_POLICE_NPC then
            self._txtNameLeft:SetText(Localization:GetString("121552"))
            self._imgUserHead_left:SetActive(false)
            self._imgUserHead_left_normal:SetActive(true)
            self._imgUserHead_left_normal:LoadSprite("Assets/Main/Sprites/HeroIconsSmall/round_hero_icon_43001.png")
        elseif selfType == SpecialUnitType.ACT_ALLIANCE_MINE_GUARD then
            self._txtNameLeft:SetText(Localization:GetString("374018"))
            self._imgUserHead_left:SetActive(false)
            self._imgUserHead_left_normal:SetActive(true)
            self._imgUserHead_left_normal:LoadSprite("Assets/Main/Sprites/HeroIconsSmall/round_hero_icon_43001.png")
        elseif selfType == SpecialUnitType.ALLIANCE_CITY_NPC or selfType == SpecialUnitType.ALLIANCE_CITY_POLICE_NPC then
            self._txtNameLeft:SetText(Localization:GetString("121550"))
            self._imgUserHead_left:SetActive(false)
            self._imgUserHead_left_normal:SetActive(true)
            self._imgUserHead_left_normal:LoadSprite("Assets/Main/Sprites/BuildIconOutCity/alliance_city.png")
        elseif selfType == SpecialUnitType.DESERT_NPC then
            self._txtNameLeft:SetText(Localization:GetString("110251"))
            self._imgUserHead_left:SetActive(false)
            self._imgUserHead_left_normal:SetActive(true)
            local imgStr = "Assets/Main/Sprites/UI/UIMail/world_monster_boss_coin.png"
            if self.leftFightData.battleType == BattleType.Desert or self.leftFightData.battleType == BattleType.TRAIN_DESERT then
                if self.leftFightData.pic~=nil and self.leftFightData.pic~="" then
                    imgStr = self.leftFightData.pic
                end
            end
            self._imgUserHead_left_normal:LoadSprite(imgStr)
        elseif selfType == SpecialUnitType.ALLIANCE_BUILD_POLICE_NPC then
            self._txtNameLeft:SetText(Localization:GetString("121551"))
            self._imgUserHead_left:SetActive(false)
            self._imgUserHead_left_normal:SetActive(true)
            local imgStr = "Assets/Main/Sprites/UI/UIAlliance/UIleagueduel_img_circular_center.png"
            if self.leftFightData.pic~=nil and self.leftFightData.pic~="" then
                imgStr = self.leftFightData.pic
            end
            self._imgUserHead_left_normal:LoadSprite(imgStr)
        else
            local str = selfname
            if selfAbbr~=nil and selfAbbr~="" then
                str  = "["..selfAbbr.."]"..str
            end
            self._txtNameLeft:SetText(str)
            self._imgUserHead_left:SetActive(true)
            self._imgUserHead_left_normal:SetActive(false)
            self._imgUserHead_left:SetData(self.leftFightData.unitData:GetUserId(), self.leftFightData.unitData.pic, self.leftFightData.unitData.picVer)
            self._imgHeadFg_left:SetActive(false)
        end

    end
    if self.rightFightData.unitData==nil then
        if self.rightFightData.name~=nil then
            self._txtNameRight:SetText(self.rightFightData.name)
        end
        if self.rightFightData.pic~=nil and self.rightFightData.pic~="" then
            self._imgUserHead_right:SetActive(false)
            self._imgUserHead_right_normal:SetActive(true)
            self._imgUserHead_right_normal:LoadSprite(self.rightFightData.pic)
        end
    else
        local otherAbbr = self.rightFightData.unitData.alAbbr
        local othername = self.rightFightData.unitData.name
        local otherType = self.rightFightData.unitData:GetSpecialType()
        if self.rightFightData.battleType == BattleType.Monster or self.rightFightData.battleType == BattleType.CHALLENGE_BOSS or self.rightFightData.battleType == BattleType.BLACK_KNIGHT then
            self._txtNameRight:SetText(self.rightFightData.name)
            local monsterPic = "Assets/Main/Sprites/UI/UIMail/world_monster_boss_coin.png"
            self._imgUserHead_right:SetActive(false)
            self._imgUserHead_right_normal:SetActive(true)
            self._imgUserHead_right_normal:LoadSprite(monsterPic)
        elseif self.rightFightData.battleType == BattleType.Boss then
            self._txtNameRight:SetText(self.rightFightData.name)
            local pic = DataCenter.MonsterTemplateManager:GetTableValue(self.rightFightData.monsterId, "mail_head_pic")
            local monsterPic = string.IsNullOrEmpty(pic) and "Assets/Main/Sprites/UI/UIMail/world_monster_boss_big.png" or "Assets/Main/Sprites/UI/UIMail/"..pic
            self._imgUserHead_right:SetActive(false)
            self._imgUserHead_right_normal:SetActive(true)
            self._imgUserHead_right_normal:LoadSprite(monsterPic)
        elseif self.rightFightData.battleType == BattleType.ACT_BOSS then
            self._txtNameRight:SetText(self.rightFightData.name)
            local monsterPic = "Assets/Main/Sprites/UI/UIMail/world_monster_boss_act.png"
            self._imgUserHead_right:SetActive(false)
            self._imgUserHead_right_normal:SetActive(true)
            self._imgUserHead_right_normal:LoadSprite(monsterPic)
        elseif self.rightFightData.battleType == BattleType.PUZZLE_BOSS then
            self._txtNameRight:SetText(self.rightFightData.name)
            local monsterPic = "Assets/Main/Sprites/UI/Common/New/hero_icon_bossBoat.png"
            self._imgUserHead_right:SetActive(false)
            self._imgUserHead_right_normal:SetActive(true)
            self._imgUserHead_right_normal:LoadSprite(monsterPic)
        elseif self.rightFightData.battleType == BattleType.AllianceBoss then
            self._txtNameRight:SetText(self.rightFightData.name)
            local monsterPic = "Assets/Main/Sprites/UI/UIAllianceBoss/activity_alianceboss_head.png"
            self._imgUserHead_right:SetActive(false)
            self._imgUserHead_right_normal:SetActive(true)
            self._imgUserHead_right_normal:LoadSprite(monsterPic)
        elseif self.rightFightData.battleType == BattleType.Explore then
            self._txtNameRight:SetText(self.rightFightData.name)
            local monsterPic = "Assets/Main/Sprites/HeroIconsSmall/hero_icon_monster02.png"
            self._imgUserHead_right:SetActive(false)
            self._imgUserHead_right_normal:SetActive(true)
            self._imgUserHead_right_normal:LoadSprite(monsterPic)
        else
            if otherType == SpecialUnitType.BUILDING_STATION or otherType == SpecialUnitType.CITY_POLICE_NPC then
                self._txtNameRight:SetText(Localization:GetString("121552"))
                self._imgUserHead_right:SetActive(false)
                self._imgUserHead_right_normal:SetActive(true)
                self._imgUserHead_right_normal:LoadSprite("Assets/Main/Sprites/HeroIconsSmall/round_hero_icon_43001.png")
            elseif otherType == SpecialUnitType.ACT_ALLIANCE_MINE_GUARD then
                self._txtNameRight:SetText(Localization:GetString("374018"))
                self._imgUserHead_right:SetActive(false)
                self._imgUserHead_right_normal:SetActive(true)
                self._imgUserHead_right_normal:LoadSprite("Assets/Main/Sprites/HeroIconsSmall/round_hero_icon_43001.png")
            elseif otherType == SpecialUnitType.ALLIANCE_CITY_NPC or otherType == SpecialUnitType.ALLIANCE_CITY_POLICE_NPC then
                self._txtNameRight:SetText(Localization:GetString("121550"))
                self._imgUserHead_right:SetActive(false)
                self._imgUserHead_right_normal:SetActive(true)
                self._imgUserHead_right_normal:LoadSprite("Assets/Main/Sprites/BuildIconOutCity/alliance_city.png")
            elseif otherType == SpecialUnitType.DESERT_NPC then
                self._txtNameRight:SetText(Localization:GetString("110251"))
                self._imgUserHead_right:SetActive(false)
                self._imgUserHead_right_normal:SetActive(true)
                local imgStr = "Assets/Main/Sprites/UI/UIMail/world_monster_boss_coin.png"
                if self.rightFightData.battleType == BattleType.Desert or self.rightFightData.battleType == BattleType.TRAIN_DESERT then
                    if self.rightFightData.pic~=nil and self.rightFightData.pic~="" then
                        imgStr = self.rightFightData.pic
                    end
                end
                self._imgUserHead_right_normal:LoadSprite(imgStr)
            elseif otherType == SpecialUnitType.ALLIANCE_BUILD_POLICE_NPC then
                self._txtNameRight:SetText(Localization:GetString("121551"))
                self._imgUserHead_right:SetActive(false)
                self._imgUserHead_right_normal:SetActive(true)
                local imgStr = "Assets/Main/Sprites/UI/UIAlliance/UIleagueduel_img_circular_center.png"
                if self.rightFightData.pic~=nil and self.rightFightData.pic~="" then
                    imgStr = self.rightFightData.pic
                end
                self._imgUserHead_right_normal:LoadSprite(imgStr)
            else
                if othername == "" then
                    othername = Localization:GetString("100184")
                end
                local str = othername
                if otherAbbr~=nil and otherAbbr~="" then
                    str  = "["..otherAbbr.."]"..str
                end
                self._txtNameRight:SetText(str)
                self._imgUserHead_right:SetActive(true)
                self._imgUserHead_right_normal:SetActive(false)
                self._imgUserHead_right:SetData(self.rightFightData.unitData:GetUserId(), self.rightFightData.unitData.pic, self.rightFightData.unitData.picVer)
                self._imgHeadFg_right:SetActive(false)
            end
        end
    end
    if self._mailInfo.type == MailType.ELITE_FIGHT_MAIL and self.rightFightData.battleType == BattleType.ELITE_FIGHT_MAIL then
        self:ShowBattleResultInfo()
        self:ShowBattleRoundInfo()
    end
end
function MailPlayerReport:OnClickLeftHead()
    if self.leftFightData~=nil and self.leftFightData.unitData~=nil then
        local uid = self.leftFightData.unitData:GetUserId()
        if uid~=nil and uid~="" then
            if uid ~= LuaEntry.Player.uid then
                UIManager:GetInstance():OpenWindow(UIWindowNames.UIOtherPlayerInfo,uid)
            else
                UIManager:GetInstance():OpenWindow(UIWindowNames.UIPlayerInfo,LuaEntry.Player.uid)
            end
        end
    end
end

function MailPlayerReport:OnClickRightHead()
    if self.rightFightData then
        if self.rightFightData.unitData then
            local uid = self.rightFightData.unitData:GetUserId()
            if not string.IsNullOrEmpty(uid) then
                if uid ~= LuaEntry.Player.uid then
                    UIManager:GetInstance():OpenWindow(UIWindowNames.UIOtherPlayerInfo, uid)
                else
                    UIManager:GetInstance():OpenWindow(UIWindowNames.UIPlayerInfo, uid)
                end
            end
        end
    end
end
function MailPlayerReport:ShowBattleResultInfo()
    if self.fightResult == FightResult.OTHER_WIN  then
        self._txtResult_right:SetLocalText(390186)
        self._txtResult_left:SetLocalText(390187)
    else
        self._txtResult_right:SetLocalText(390187)
        self._txtResult_left:SetLocalText(390186)
    end
end

function MailPlayerReport:ShowBattleRoundInfo()
    self._txtRound:SetLocalText(302069, self.roundIndex)
end

--展示双方英雄,怪物不显示
function MailPlayerReport:ShowHeroes()
    local leftHight = self:ShowHeroes_Self()
    local rightHight =self:ShowHeroes_TargetUser()
    local height = math.max(leftHight,rightHight)
    self.heroEquipLayout:SetMinHeight(height)
end

function MailPlayerReport:AddHeroNode(heroInfo, parentNode)
    local item = self._prefab_hero:GameObjectSpawn(parentNode.transform)
    NameCount = NameCount + 1
    item.name = NameCount
    local obj = parentNode:AddComponent(MailPlayerHeroItem, item.name)
    obj:SetData(heroInfo)
end

function MailPlayerReport:ShowHeroes_Self()
    self:ClearLeftHero()
    local heroes = {}
    local selfType = SpecialUnitType.NONE
    if self.leftFightData.unitData~=nil then
        heroes = self.leftFightData.unitData:GetPlayerHeroes()
        selfType = self.leftFightData.unitData:GetSpecialType()
    end
    if (table.count(heroes) == 0) then
        local des = Localization:GetString("182047")
        if selfType == SpecialUnitType.BUILDING_STATION then
            des = Localization:GetString("140330",self.leftFightData.name)
        end

        --self._txtNoHeroTips_Left:SetActive(true)
        self._txtNoHeroTips_Left:SetText(des)
        --self.leftBtn:SetActive(false)
        return 0
        
    end
    --if self.leftFightData ~=nil and self.leftFightData.battleType ~= BattleType.Monster and self.leftFightData.battleType ~= BattleType.Boss and self.leftFightData.battleType ~= BattleType.Explore 
    --        and (selfType == SpecialUnitType.NONE or selfType == SpecialUnitType.CITY_STATION or selfType == SpecialUnitType.TEAM_MEMBER or selfType == SpecialUnitType.TEAM_LEADER) then
    --    self.leftBtn:SetActive(true)
    --else
    --    self.leftBtn:SetActive(false)
    --end
    --self._txtNoHeroTips_Left:SetActive(false)
    local heroList = table.values(heroes)
    table.sort(heroList, function(heroA, heroB)
        return heroA["index"] < heroB["index"]
    end)
    for _, heroInfo in pairs(heroList) do
        if self.leftModel[_]==nil then
            self.leftModel[_] = self:GameObjectInstantiateAsync(UIAssets.MailPlayerHeroItem, function(request)
                if request.isError then
                    return
                end
                local go = request.gameObject;
                go.gameObject:SetActive(true)
                go.transform:SetParent(self._ObjHeroesLeftNode.transform)
                go.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
                local nameStr = tostring(NameCount)
                go.name = nameStr
                NameCount = NameCount + 1
                local cell = self._ObjHeroesLeftNode:AddComponent(MailPlayerHeroItem,nameStr)
                cell:SetData(heroInfo,self,true)
            end)
        end
    end
    
    local height = self.heroEquip:SetData(heroList, true)
    return height
end

function MailPlayerReport:ShowHeroes_TargetUser()
    self:ClearRightHero()
    --if self.rightFightData.battleType == BattleType.Monster or self.rightFightData.battleType == BattleType.Boss then
    --    self._txtNoHeroTips_Right:SetActive(true)
    --    self._txtNoHeroTips_Right:SetText(Localization:GetString("182047"))
    --    return
    --end
    local heroes = {}
    local otherType = SpecialUnitType.NONE
    if self.rightFightData.unitData~=nil then
        heroes = self.rightFightData.unitData:GetPlayerHeroes()
        otherType = self.rightFightData.unitData:GetSpecialType()
    end
    if (table.count(heroes) == 0) then
        local des = Localization:GetString("182047")
        if otherType == SpecialUnitType.BUILDING_STATION then
            des = Localization:GetString("140330",self.rightFightData.name)
        end
        --self._txtNoHeroTips_Right:SetActive(true)
        --self._txtNoHeroTips_Right:SetText(des)
        --self.rightBtn:SetActive(false)
        return 0
    end
    --if self.rightFightData ~=nil and self.rightFightData.battleType ~= BattleType.Monster and self.rightFightData.battleType ~= BattleType.Boss and self.rightFightData.battleType ~= BattleType.Explore
    --        and (otherType == SpecialUnitType.NONE or otherType == SpecialUnitType.CITY_STATION or otherType == SpecialUnitType.TEAM_MEMBER or otherType == SpecialUnitType.TEAM_LEADER) then
    --    self.rightBtn:SetActive(true)
    --else
    --    self.rightBtn:SetActive(false)
    --end
    --self._txtNoHeroTips_Right:SetActive(false)
    local heroList = table.values(heroes)
    table.sort(heroList, function(heroA, heroB)
        return heroA["index"] < heroB["index"]
    end)
    for _, heroInfo in pairs(heroList) do
        if self.rightModel[_]==nil then
            self.rightModel[_] = self:GameObjectInstantiateAsync(UIAssets.MailPlayerHeroItem, function(request)
                if request.isError then
                    return
                end
                local go = request.gameObject;
                go.gameObject:SetActive(true)
                go.transform:SetParent(self._ObjHeroesRightNode.transform)
                go.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
                local nameStr = tostring(NameCount)
                go.name = nameStr
                NameCount = NameCount + 1
                local cell = self._ObjHeroesRightNode:AddComponent(MailPlayerHeroItem,nameStr)
                cell:SetData(heroInfo,self,false)
            end)
        end
    end

    local height = self.heroEquip:SetData(heroList, false)
    return height
end

function MailPlayerReport:ShowTroopAttr()
    self:ShowAttrLeft()
    self:ShowAttrRight()
end

function MailPlayerReport:ShowAttrLeft()
    if self.leftFightData.unitData~=nil and self.leftFightData.unitAttrInfo~=nil then
        local total = self.leftFightData.unitData:GetAttTotalCnt(eMailSoldierAttr.Total)
        local lost = self.leftFightData.unitData:GetAttTotalCnt(eMailSoldierAttr.Lost)
        local rest = math.max(0,(total-lost))
        local levelStr = self.leftFightData.unitData:GetSoliderLvStr()
        local attr = self.leftFightData.unitAttrInfo
        local heroAtk =  attr:GetAtkAttrByType(AtkDefReason.HERO)
        local heroDef =  attr:GetDefAttrByType(AtkDefReason.HERO)
        local edenSignal = self.leftFightData.unitData:GetEdenSignal()
        self._cp_troopCell1:SetLeftValue(string.GetFormattedSeperatorNum(math.floor(rest)))
        self._cp_troopCell7:SetLeftValue(levelStr)
        self._cp_troopCell2:SetLeftValue(string.GetFormattedSeperatorNum(math.floor(edenSignal)))
        self._cp_troopCell3:SetLeftValue(string.GetFormattedSeperatorNum(math.floor(heroDef)))
    else
        self._cp_troopCell1:SetLeftValue("0")
        self._cp_troopCell2:SetLeftValue("0")
        self._cp_troopCell3:SetLeftValue("0")
        self._cp_troopCell7:SetLeftValue("")
    end

end
function MailPlayerReport:ShowAttrRight()
    if self.rightFightData.unitData~=nil and self.rightFightData.unitAttrInfo~=nil then
        local total = self.rightFightData.unitData:GetAttTotalCnt(eMailSoldierAttr.Total)
        local lost = self.rightFightData.unitData:GetAttTotalCnt(eMailSoldierAttr.Lost)
        local rest = math.max(0,(total-lost))
        local levelStr = self.rightFightData.unitData:GetSoliderLvStr()
        local attr = self.rightFightData.unitAttrInfo
        local heroAtk =  attr:GetAtkAttrByType(AtkDefReason.HERO)
        local heroDef =  attr:GetDefAttrByType(AtkDefReason.HERO)
        local edenSignal = self.rightFightData.unitData:GetEdenSignal()
        self._cp_troopCell1:SetRightValue(string.GetFormattedSeperatorNum(math.floor(rest)))
        self._cp_troopCell7:SetRightValue(levelStr)
        self._cp_troopCell2:SetRightValue(string.GetFormattedSeperatorNum(math.floor(edenSignal)))
        self._cp_troopCell3:SetRightValue(string.GetFormattedSeperatorNum(math.floor(heroDef)))
    else
        self._cp_troopCell1:SetRightValue("0")
        self._cp_troopCell2:SetRightValue("0")
        self._cp_troopCell3:SetRightValue("0")
        self._cp_troopCell7:SetRightValue("")
    end

end

function MailPlayerReport:ShowHurt()
    self._cp_txtKillNumLeft:SetText(string.GetFormattedSeperatorNum(math.floor(self.leftHurt)))
    self._cp_txtKillNumRight:SetText(string.GetFormattedSeperatorNum(math.floor(self.rightHurt)))
    if self.rightFightData.battleType == BattleType.ACT_BOSS or self.rightFightData.battleType == BattleType.PUZZLE_BOSS or self.rightFightData.battleType == BattleType.CHALLENGE_BOSS
            or self.rightFightData.battleType == BattleType.AllianceBoss then
        self._cp_txtKillLeft:SetText("")
        self._cp_txtKillRight:SetText("")
        self._cp_txtKillNumLeft:SetText("")
        self._cp_txtKillNumRight:SetText("")
    end
end

function MailPlayerReport:ShowDamage()
    self.damageImgBg:SetActive(false)

    if self.rightFightData.battleType == BattleType.ACT_BOSS or self.rightFightData.battleType == BattleType.PUZZLE_BOSS or self.rightFightData.battleType == BattleType.CHALLENGE_BOSS
    or self.rightFightData.battleType == BattleType.AllianceBoss then
        self._ObjBtn:SetActive(false)
        self.ObjBattleDamageResult:SetActive(true)
        local damage = 0
        local damagePercentStr = ""
        if self.rightFightData.battleType == BattleType.ACT_BOSS and self.actBossDamage > 0 then
            damage = self.actBossDamage
        elseif self.rightFightData.unitData~=nil and self.rightFightData.afterUnitData~=nil and self.rightFightData.damagePercent~=nil then
            local beforeHealth = self.rightFightData.unitData:GetHealth()
            local afterHealth = self.rightFightData.afterUnitData:GetHealth()
            local initHealth = self.rightFightData.unitData:GetInitHealth()
            local rightDamagePercent = self.rightFightData.damagePercent.damagePercent
            damage = math.max(((beforeHealth-afterHealth)*rightDamagePercent),0)
            --进度条
            if self.rightFightData.battleType == BattleType.PUZZLE_BOSS then
                self.damageImgBg:SetActive(true)
                local rect = self.damageImgBg.rectTransform.rect
                --dmgPercent百分比显示向下取整，配合招怪面板上得显示
                local leftPercent = math.ceil(afterHealth * 1000 / initHealth) / 1000
                local dmgPercent = math.floor((beforeHealth - afterHealth) * 1000 / initHealth) / 1000
                
                if dmgPercent + leftPercent > 1 then
                    leftPercent = 1 - dmgPercent
                end
                leftPercent = Mathf.Clamp(leftPercent, 0, 1)
                dmgPercent = Mathf.Clamp(dmgPercent, 0, 1)

                self.damageLeft.rectTransform:Set_sizeDelta(rect.width * leftPercent, rect.height)
                self.damageSlider.rectTransform:Set_sizeDelta(rect.width * dmgPercent, rect.height)
                self.damageSliderText:SetText("")
                if beforeHealth ~= afterHealth then
                    damagePercentStr = string.GetFormattedPercentStr(dmgPercent)
                end
                if afterHealth == 0 then
                    self.damageLeftText:SetText("")
                else
                    self.damageLeftText:SetText(string.GetFormattedPercentStr(leftPercent))
                end
            end
        end
        local damageStr = string.format("<color=#dd2828> %s</color>",string.GetFormattedSeperatorNum(math.ceil(damage)))
        if not string.IsNullOrEmpty(damagePercentStr) then
            damageStr = damageStr.."("..damagePercentStr..")"
        end
        self.damageDes:SetText(Localization:GetString("302192",damageStr))
    else
        self._ObjBtn:SetActive(true)
        self.ObjBattleDamageResult:SetActive(false)
    end
end
function MailPlayerReport:SetAttackAddData()
    --	【部队攻击力35000】
    --	单兵攻击力【35001】【35002】【35003】（根据兵力配比打包生成一个【兵种混合攻击力】）
    --	【野外战斗攻击加成类35024】
    --	【攻城战斗攻击增益35040】
    --	【驻防建筑攻击增益35048】
    --	【打怪攻击力加成类35056】
    --	【加入集结时攻击力提升35032】只有集结时出现
    --	【增援别人城市或者中立城市时攻击力提升35133】只有增援时出现
    --	【编队1~4攻城攻击力增益%】
    --	【编队1~4攻击力增益%】
    local leftNum = 0
    local rightNum = 0
    local leftFightData = self.leftFightData
    local rightFightData = self.rightFightData
    local leftBattleEffect = self.leftBattleEffect or { GetValue = function() return 0 end }
    local rightBattleEffect = self.rightBattleEffect or { GetValue = function() return 0 end }
    local leftHeroBattleEffect = self.leftHeroBattleEffect or { GetValue = function() return nil end }
    local rightHeroBattleEffect = self.rightHeroBattleEffect or { GetValue = function() return nil end }
    if leftBattleEffect~=nil then
        leftNum = leftNum+leftBattleEffect:GetValue(35000)
        local aLeftPercent = 0
        if leftFightData~=nil and leftFightData.unitData~=nil then
            aLeftPercent = leftFightData.unitData:GetSoldierPercentByType(ArmType.Tank)
        end
        leftNum = leftNum + (leftBattleEffect:GetValue(35001)*aLeftPercent)
        local bLeftPercent = 0
        if leftFightData~=nil and leftFightData.unitData~=nil then
            bLeftPercent = leftFightData.unitData:GetSoldierPercentByType(ArmType.Robot)
        end
        leftNum = leftNum + (leftBattleEffect:GetValue(35002)*bLeftPercent)
        local cLeftPercent = 0
        if leftFightData~=nil and leftFightData.unitData~=nil then
            cLeftPercent = leftFightData.unitData:GetSoldierPercentByType(ArmType.Plane)
        end
        leftNum = leftNum + (leftBattleEffect:GetValue(35003)*cLeftPercent)
        rightNum = rightNum-leftBattleEffect:GetValue(35195)
    end
    if rightBattleEffect~=nil then
        rightNum = rightNum+rightBattleEffect:GetValue(35000)
        local aRightPercent = 0
        if rightFightData~=nil and rightFightData.unitData~=nil then
            aRightPercent = rightFightData.unitData:GetSoldierPercentByType(ArmType.Tank)
        end
        rightNum = rightNum + (rightBattleEffect:GetValue(35001)*aRightPercent)
        local bRightPercent = 0
        if rightFightData~=nil and rightFightData.unitData~=nil then
            bRightPercent = rightFightData.unitData:GetSoldierPercentByType(ArmType.Robot)
        end
        rightNum = rightNum + (rightBattleEffect:GetValue(35002)*bRightPercent)
        local cRightPercent = 0
        if rightFightData~=nil and rightFightData.unitData~=nil then
            cRightPercent = rightFightData.unitData:GetSoldierPercentByType(ArmType.Plane)
        end
        rightNum = rightNum + (rightBattleEffect:GetValue(35003)*cRightPercent)
        leftNum = leftNum-rightBattleEffect:GetValue(35195)
    end
    if leftFightData~=nil and rightFightData~=nil then
        if leftFightData.battleType == BattleType.Building or leftFightData.battleType == BattleType.CROSS_WORM or leftFightData.battleType == BattleType.City
                or leftFightData.battleType == BattleType.ALLIANCE_OCCUPIED_CITY or leftFightData.battleType == BattleType.ALLIANCE_NEUTRAL_CITY or leftFightData.battleType == BattleType.THRONE_ARMY
                or leftFightData.battleType == BattleType.ALLIANCE_CITY_GUARD or leftFightData.battleType == BattleType.ALLIANCE_BUILDING or leftFightData.battleType == BattleType.ACT_ALLIANCE_MINE or leftFightData.battleType == BattleType.DRAGON_BUILDING
                or leftFightData.battleType == BattleType.CITY_GUARD or leftFightData.battleType == BattleType.ALLIANCE_BUILD_GUARD
                or leftFightData.battleType == BattleType.Turret then
            if leftBattleEffect~=nil then
                leftNum = leftNum + leftBattleEffect:GetValue(35048)
            end
        end
        if rightFightData.battleType == BattleType.Building or rightFightData.battleType == BattleType.CROSS_WORM or rightFightData.battleType == BattleType.City
                or rightFightData.battleType == BattleType.ALLIANCE_OCCUPIED_CITY or rightFightData.battleType == BattleType.ALLIANCE_NEUTRAL_CITY or rightFightData.battleType == BattleType.THRONE_ARMY
                or rightFightData.battleType == BattleType.ALLIANCE_CITY_GUARD or rightFightData.battleType == BattleType.ALLIANCE_BUILDING or rightFightData.battleType == BattleType.ACT_ALLIANCE_MINE or rightFightData.battleType == BattleType.DRAGON_BUILDING
                or rightFightData.battleType == BattleType.CITY_GUARD or rightFightData.battleType == BattleType.ALLIANCE_BUILD_GUARD
                or rightFightData.battleType == BattleType.Turret then
            if rightBattleEffect~=nil then
                rightNum = rightNum + rightBattleEffect:GetValue(35048)
            end
        end
        if rightFightData.battleType == BattleType.Building or rightFightData.battleType == BattleType.CROSS_WORM or rightFightData.battleType == BattleType.City
                or rightFightData.battleType == BattleType.ALLIANCE_OCCUPIED_CITY or rightFightData.battleType == BattleType.ALLIANCE_NEUTRAL_CITY or rightFightData.battleType == BattleType.THRONE_ARMY
                or rightFightData.battleType == BattleType.ALLIANCE_CITY_GUARD or rightFightData.battleType == BattleType.ALLIANCE_BUILDING or rightFightData.battleType == BattleType.ACT_ALLIANCE_MINE or rightFightData.battleType == BattleType.DRAGON_BUILDING
                or rightFightData.battleType == BattleType.CITY_GUARD or rightFightData.battleType == BattleType.ALLIANCE_BUILD_GUARD
                or rightFightData.battleType == BattleType.Turret then
            if leftBattleEffect~=nil then
                leftNum = leftNum + leftBattleEffect:GetValue(35040)
            end
        end
        if leftFightData.battleType == BattleType.Building or leftFightData.battleType == BattleType.CROSS_WORM or leftFightData.battleType == BattleType.City
                or leftFightData.battleType == BattleType.ALLIANCE_OCCUPIED_CITY or leftFightData.battleType == BattleType.ALLIANCE_NEUTRAL_CITY or leftFightData.battleType == BattleType.THRONE_ARMY
                or leftFightData.battleType == BattleType.ALLIANCE_CITY_GUARD or leftFightData.battleType == BattleType.ALLIANCE_BUILDING or leftFightData.battleType == BattleType.ACT_ALLIANCE_MINE or leftFightData.battleType == BattleType.DRAGON_BUILDING
                or leftFightData.battleType == BattleType.CITY_GUARD or leftFightData.battleType == BattleType.ALLIANCE_BUILD_GUARD
                or leftFightData.battleType == BattleType.Turret then
            if rightBattleEffect~=nil then
                rightNum = rightNum + rightBattleEffect:GetValue(35040)
            end
        end

        if (leftFightData.battleType == BattleType.RallyFormation or leftFightData.battleType == BattleType.Formation or leftFightData.buildId == BuildingTypes.APS_BUILD_WORMHOLE_SUB or BuildingUtils.IsInEdenSubwayGroup(leftFightData.buildId)==true) and (rightFightData.battleType == BattleType.RallyFormation or rightFightData.battleType == BattleType.Formation or rightFightData.buildId == BuildingTypes.APS_BUILD_WORMHOLE_SUB) then
            if leftBattleEffect~=nil then
                leftNum = leftNum + leftBattleEffect:GetValue(35024)
            end
            if rightBattleEffect~=nil then
                rightNum = rightNum + rightBattleEffect:GetValue(35024)
            end
            if leftFightData.unitData~=nil and leftBattleEffect~=nil then
                local index = leftFightData.unitData:GetFormationIndex()
                local effectId = 0
                if index == 1 then
                    effectId = 40108
                elseif index ==2 then
                    effectId = 40109
                elseif index ==3 then
                    effectId = 40110
                end
                if effectId>0 then
                    local effectNum = leftBattleEffect:GetValue(effectId)
                    leftNum = leftNum + effectNum
                end
            end
            if rightFightData.unitData~=nil and rightBattleEffect~=nil then
                local index = rightFightData.unitData:GetFormationIndex()
                local effectId = 0
                if index == 1 then
                    effectId = 40108
                elseif index ==2 then
                    effectId = 40109
                elseif index ==3 then
                    effectId = 40110
                end
                if effectId>0 then
                    local effectNum = rightBattleEffect:GetValue(effectId)
                    rightNum = rightNum + effectNum
                end
            end
        end
        if (leftFightData.battleType == BattleType.RallyFormation or leftFightData.battleType == BattleType.Formation) and (rightFightData.battleType == BattleType.Monster or rightFightData.battleType == BattleType.Boss or rightFightData.battleType == BattleType.ACT_BOSS or rightFightData.battleType == BattleType.PUZZLE_BOSS or rightFightData.battleType == BattleType.CHALLENGE_BOSS or rightFightData.battleType == BattleType.BLACK_KNIGHT) then
            if leftBattleEffect~=nil then
                leftNum = leftNum + leftBattleEffect:GetValue(35056)
            end
            if rightBattleEffect~=nil then
                rightNum = rightNum + rightBattleEffect:GetValue(35056)
            end
            if leftFightData.unitData~=nil and leftBattleEffect~=nil then
                local index = leftFightData.unitData:GetFormationIndex()
                local effectId = 0
                if index == 1 then
                    effectId = 40108
                elseif index ==2 then
                    effectId = 40109
                elseif index ==3 then
                    effectId = 40110
                end
                if effectId>0 then
                    local effectNum = leftBattleEffect:GetValue(effectId)
                    leftNum = leftNum + effectNum
                end
            end
            if rightFightData.unitData~=nil and rightBattleEffect~=nil then
                local index = rightFightData.unitData:GetFormationIndex()
                local effectId = 0
                if index == 1 then
                    effectId = 40108
                elseif index ==2 then
                    effectId = 40109
                elseif index ==3 then
                    effectId = 40110
                end
                if effectId>0 then
                    local effectNum = rightBattleEffect:GetValue(effectId)
                    rightNum = rightNum + effectNum
                end
            end
        end

        if (leftFightData.battleType == BattleType.RallyFormation) then
            if leftBattleEffect~=nil then
                leftNum = leftNum + leftBattleEffect:GetValue(35032)
            end
        end

        if (rightFightData.battleType == BattleType.RallyFormation) then
            if rightBattleEffect~=nil then
                rightNum = rightNum + rightBattleEffect:GetValue(35032)
            end
        end
        if leftFightData.battleType == BattleType.Building or leftFightData.battleType == BattleType.CROSS_WORM or leftFightData.battleType == BattleType.City
                or leftFightData.battleType == BattleType.ALLIANCE_OCCUPIED_CITY or leftFightData.battleType == BattleType.ALLIANCE_NEUTRAL_CITY or leftFightData.battleType == BattleType.THRONE_ARMY
                or leftFightData.battleType == BattleType.ALLIANCE_CITY_GUARD or leftFightData.battleType == BattleType.ALLIANCE_BUILDING or leftFightData.battleType == BattleType.ACT_ALLIANCE_MINE or leftFightData.battleType == BattleType.DRAGON_BUILDING
                or leftFightData.battleType == BattleType.CITY_GUARD or leftFightData.battleType == BattleType.ALLIANCE_BUILD_GUARD
                or leftFightData.battleType == BattleType.Turret then
            if leftFightData.unitData~=nil then
                if leftFightData.unitData:GetSpecialType() == SpecialUnitType.NONE  then
                    if leftBattleEffect~=nil then
                        leftNum = leftNum + leftBattleEffect:GetValue(35133)
                    end
                end
            end
            if leftFightData.unitData~=nil and leftBattleEffect~=nil then
                local index = leftFightData.unitData:GetFormationIndex()
                local effectId = 0
                if index == 1 then
                    effectId = 40116
                elseif index ==2 then
                    effectId = 40117
                elseif index ==3 then
                    effectId = 40118
                end
                if effectId>0 then
                    local effectNum = leftBattleEffect:GetValue(effectId)
                    leftNum = leftNum + effectNum
                end
            end
        end
        if rightFightData.battleType == BattleType.Building or rightFightData.battleType == BattleType.CROSS_WORM or rightFightData.battleType == BattleType.City
                or rightFightData.battleType == BattleType.ALLIANCE_OCCUPIED_CITY or rightFightData.battleType == BattleType.ALLIANCE_NEUTRAL_CITY or rightFightData.battleType == BattleType.THRONE_ARMY
                or rightFightData.battleType == BattleType.ALLIANCE_CITY_GUARD or rightFightData.battleType == BattleType.ALLIANCE_BUILDING or rightFightData.battleType == BattleType.ACT_ALLIANCE_MINE or rightFightData.battleType == BattleType.DRAGON_BUILDING
                or rightFightData.battleType == BattleType.CITY_GUARD or rightFightData.battleType == BattleType.ALLIANCE_BUILD_GUARD 
                or rightFightData.battleType == BattleType.Turret then
            if rightFightData.unitData~=nil then
                if rightFightData.unitData:GetSpecialType() == SpecialUnitType.NONE then
                    if rightBattleEffect~=nil then
                        rightNum = rightNum + rightBattleEffect:GetValue(35133)
                    end
                end
            end
            if rightFightData.unitData~=nil and rightBattleEffect~=nil then
                local index = rightFightData.unitData:GetFormationIndex()
                local effectId = 0
                if index == 1 then
                    effectId = 40116
                elseif index ==2 then
                    effectId = 40117
                elseif index ==3 then
                    effectId = 40118
                end
                if effectId>0 then
                    local effectNum = rightBattleEffect:GetValue(effectId)
                    rightNum = rightNum + effectNum
                end
            end
        end
        if leftFightData.unitData~=nil then
            local index = leftFightData.unitData:GetFormationIndex()
            local effectId = 0
            if rightFightData.battleType == BattleType.Building or rightFightData.battleType == BattleType.CROSS_WORM or rightFightData.battleType == BattleType.City
                    or rightFightData.battleType == BattleType.ALLIANCE_OCCUPIED_CITY or rightFightData.battleType == BattleType.ALLIANCE_NEUTRAL_CITY or rightFightData.battleType == BattleType.THRONE_ARMY
                    or rightFightData.battleType == BattleType.ALLIANCE_CITY_GUARD or rightFightData.battleType == BattleType.ALLIANCE_BUILDING or rightFightData.battleType == BattleType.ACT_ALLIANCE_MINE or rightFightData.battleType == BattleType.DRAGON_BUILDING
                    or rightFightData.battleType == BattleType.CITY_GUARD or rightFightData.battleType == BattleType.ALLIANCE_BUILD_GUARD
                    or rightFightData.battleType == BattleType.Turret then
                if index == 1 then
                    effectId = 40051
                elseif index ==2 then
                    effectId = 40052
                elseif index ==3 then
                    effectId = 40053
                elseif index == 4 then
                    effectId = 40054
                end
                if effectId>0 then
                    local effectNum = leftBattleEffect:GetValue(effectId)
                    leftNum = leftNum + effectNum
                end
            end
            effectId =0
            if index == 1 then
                effectId = 40036
            elseif index ==2 then
                effectId = 40037
            elseif index ==3 then
                effectId = 40038
            elseif index == 4 then
                effectId = 40039
            end
            if effectId>0 then
                local effectNum = leftBattleEffect:GetValue(effectId)
                leftNum = leftNum + effectNum
            end
        end
        if rightFightData.unitData~=nil then
            local index = rightFightData.unitData:GetFormationIndex()
            local effectId = 0
            if leftFightData.battleType == BattleType.Building or leftFightData.battleType == BattleType.CROSS_WORM or leftFightData.battleType == BattleType.City
                    or leftFightData.battleType == BattleType.ALLIANCE_OCCUPIED_CITY or leftFightData.battleType == BattleType.ALLIANCE_NEUTRAL_CITY or leftFightData.battleType == BattleType.THRONE_ARMY
                    or leftFightData.battleType == BattleType.ALLIANCE_CITY_GUARD or leftFightData.battleType == BattleType.ALLIANCE_BUILDING or leftFightData.battleType == BattleType.ACT_ALLIANCE_MINE or leftFightData.battleType == BattleType.DRAGON_BUILDING
                    or leftFightData.battleType == BattleType.CITY_GUARD or leftFightData.battleType == BattleType.ALLIANCE_BUILD_GUARD
                    or leftFightData.battleType == BattleType.Turret then
                if index == 1 then
                    effectId = 40051
                elseif index ==2 then
                    effectId = 40052
                elseif index ==3 then
                    effectId = 40053
                elseif index == 4 then
                    effectId = 40054
                end
                if effectId>0 then
                    local effectNum = rightBattleEffect:GetValue(effectId)
                    rightNum = rightNum + effectNum
                end
            end
            effectId =0
            if index == 1 then
                effectId = 40036
            elseif index ==2 then
                effectId = 40037
            elseif index ==3 then
                effectId = 40038
            elseif index == 4 then
                effectId = 40039
            end
            if effectId>0 then
                local effectNum = rightBattleEffect:GetValue(effectId)
                rightNum = rightNum + effectNum
            end
        end
    end
    local addList = self:GetHeroAttackData(leftFightData,rightFightData,leftBattleEffect,rightBattleEffect,leftHeroBattleEffect,rightHeroBattleEffect)
    if addList~=nil then
        leftNum = leftNum+ (addList.leftNum/100)
        rightNum = rightNum+(addList.rightNum/100)
    end
    local leftHeroCampAdd,rightHeroCampAdd = self:GetHeroCampAdd(leftFightData,rightFightData,leftBattleEffect,rightBattleEffect)
    leftNum = leftNum+ leftHeroCampAdd
    rightNum = rightNum+rightHeroCampAdd


    local strLeft = string.GetFormattedPercentStr(leftNum/100)
    local strRight = string.GetFormattedPercentStr(rightNum/100)
    local RestraintData = self:GetHeroRestraintValue(leftFightData,rightFightData,leftBattleEffect,rightBattleEffect,true)
    local value = 0
    if RestraintData~=nil then
        if RestraintData.isLeft then
            self._cp_troopCell4:SetCampData(RestraintData.leftCampRestraintData,nil,RestraintData.value)
            value = RestraintData.value
            if value>0 then
                strLeft = strLeft.."<color=#00B200>".."+"..string.GetFormattedPercentStr(leftNum*value/10000).."</color>"
            end
        else
            self._cp_troopCell4:SetCampData(nil,RestraintData.rightCampRestraintData,RestraintData.value)
            value = RestraintData.value
            if value>0 then
                strRight = strRight.."<color=#00B200>".."+"..string.GetFormattedPercentStr(rightNum*value/10000).."</color>"
            end
        end
    else
        self._cp_troopCell4:SetCampData(nil,nil)
    end
    
    self._cp_troopCell4:SetLeftValue(strLeft)
    self._cp_troopCell4:SetRightValue(strRight)
end
function MailPlayerReport:GetHeroAttackData(leftFightData,rightFightData,leftBattleEffect,rightBattleEffect,leftHeroBattleEffect,rightHeroBattleEffect)
    local oneData = {}
    oneData.dialogId = "220206"
    oneData.leftNum = 0
    oneData.rightNum = 0
    oneData.showType = BattleSubTitleShowType.HeroAttack
    --	英雄等级
    --	英雄进阶
    --	英雄军阶
    --	英雄阵营
    if leftFightData~=nil and rightFightData~=nil then
        if leftFightData.unitData~=nil then
            local heroes = leftFightData.unitData:GetPlayerHeroes()
            local atkInLevel = 0
            local atkInQuality = 0
            local atkInRarity = 0
            local atkRest = 0
            local atkInHeroSkill = 0
            for k,v in pairs(heroes) do
                local level = v["heroLevel"]
                local heroId = v["heroId"]
                local rankLv = v["rankLv"] or 0
                local stage = v["stage"] or 0
                local quality = v["heroQuality"] or 0
                local maxLevel = v["maxLevel"] or 0
                local beyondTimes = HeroUtils.GetBeyondTimesByLevel(maxLevel)
                local config = LocalController:instance():getLine(HeroUtils.GetHeroXmlName(), heroId)
                local curMilitaryRankId = HeroUtils.GetRankIdByLvAndStage(heroId, rankLv, stage)
                local qualityAddAttack =  config['hero_quality_attr_attack'][math.min(#config['hero_quality_attr_attack'], quality)]
                --local starAddAttack =  config['hero_star_attack'][math.min(#config['hero_star_attack'], quality)]

                local rarityAddAtt = 0
                local template = DataCenter.HeroLevelUpTemplateManager:GetTemplate(level)
                if template ~= nil then
                    rarityAddAtt = template:GetAtk(config['rarity'])
                end

                local levelAttack =  config['base_attack'] + config['attr_attack'] *rarityAddAtt + config['special_attr_attack'] * beyondTimes
                local rankAtk = 0
                local strArr = GetTableData(TableName.HeroMilitaryRank, curMilitaryRankId, 'atk')
                if #strArr>0 then
                    rankAtk  = tonumber(strArr[config['rarity']])
                    if rankAtk==nil then
                        rankAtk = 0
                    end
                end
                atkInLevel = atkInLevel+levelAttack
                atkInQuality = atkInQuality + qualityAddAttack
                atkInRarity = atkInRarity+ rankAtk
                if leftBattleEffect~=nil then
                    local camp = HeroUtils.GetCamp(v)
                    local troopAddPercentId = HeroUtils.GetTroopExtraAtkAddByCamp(camp)
                    local addTroopNum =leftBattleEffect:GetValue(troopAddPercentId)
                    atkInHeroSkill = atkInHeroSkill+addTroopNum*100
                    local realLevelAttack = levelAttack
                    local realQualityAttack = qualityAddAttack
                    local realRankAtk = rankAtk
                    local atkAddPercent = leftBattleEffect:GetValue(EffectDefine.APS_BATTLE_HERO_TOTAL_ATK_PERCENT_INCR)
                    local effectId = HeroUtils.GetExtraAtkByCamp(camp)
                    local addNum = leftBattleEffect:GetValue(effectId)
                    if leftHeroBattleEffect~=nil then
                        local heroAddEffect = leftHeroBattleEffect:GetValue(heroId)
                        if heroAddEffect~=nil then
                            atkAddPercent = atkAddPercent+heroAddEffect:GetValue(EffectDefine.APS_BATTLE_HERO_TOTAL_ATK_PERCENT_INCR)
                            addNum = addNum+heroAddEffect:GetValue(effectId)
                        end
                    end
                    realLevelAttack = realLevelAttack*(1+(atkAddPercent/100))
                    realQualityAttack = realQualityAttack*(1+(atkAddPercent/100))
                    realRankAtk = realRankAtk*(1+(atkAddPercent/100))
                    local extraNum = realLevelAttack+realQualityAttack+realRankAtk+addNum-levelAttack-qualityAddAttack-rankAtk
                    atkRest = atkRest+extraNum
                end

            end
            local pluginAdd = 0
            if leftBattleEffect~=nil then
                pluginAdd = leftBattleEffect:GetValue(30331)
            end
            oneData.leftNum  =oneData.leftNum + atkInLevel + atkInQuality+atkInRarity+atkRest+atkInHeroSkill+pluginAdd
        end
        if rightFightData.unitData~=nil then
            local heroes = rightFightData.unitData:GetPlayerHeroes()
            local atkInLevel = 0
            local atkInQuality = 0
            local atkInRarity = 0
            local atkRest = 0
            local atkInHeroSkill = 0
            for k,v in pairs(heroes) do
                local level = v["heroLevel"]
                local heroId = v["heroId"]
                local rankLv = v["rankLv"] or 0
                local stage = v["stage"] or 0
                local quality = v["heroQuality"] or 0
                local maxLevel = v["maxLevel"] or 0
                local beyondTimes = HeroUtils.GetBeyondTimesByLevel(maxLevel)
                local config = LocalController:instance():getLine(HeroUtils.GetHeroXmlName(), heroId)
                local curMilitaryRankId = HeroUtils.GetRankIdByLvAndStage(heroId, rankLv, stage)
                local qualityAddAttack =  config['hero_quality_attr_attack'][math.min(#config['hero_quality_attr_attack'], quality)]
                --local starAddAttack =  config['hero_star_attack'][math.min(#config['hero_star_attack'], quality)]
                
                local rarityAddAtt = 0
                local template = DataCenter.HeroLevelUpTemplateManager:GetTemplate(level)
                if template ~= nil then
                    rarityAddAtt = template:GetAtk(config['rarity'])
                end

                local levelAttack =  config['base_attack'] + config['attr_attack'] * rarityAddAtt + config['special_attr_attack'] * beyondTimes
                local rankAtk = 0
                local strArr = GetTableData(TableName.HeroMilitaryRank, curMilitaryRankId, 'atk')
                if #strArr>0 then
                    rankAtk  = tonumber(strArr[config['rarity']])
                    if rankAtk==nil then
                        rankAtk = 0
                    end
                end
                atkInLevel = atkInLevel+levelAttack
                atkInQuality = atkInQuality + qualityAddAttack
                atkInRarity = atkInRarity+ rankAtk
                if rightBattleEffect~=nil then
                    local camp = HeroUtils.GetCamp(v)
                    local troopAddPercentId = HeroUtils.GetTroopExtraAtkAddByCamp(camp)
                    local addTroopNum =rightBattleEffect:GetValue(troopAddPercentId)
                    atkInHeroSkill = atkInHeroSkill+addTroopNum*100
                    local realLevelAttack = levelAttack
                    local realQualityAttack = qualityAddAttack
                    local realRankAtk = rankAtk
                    local atkAddPercent = rightBattleEffect:GetValue(EffectDefine.APS_BATTLE_HERO_TOTAL_ATK_PERCENT_INCR)
                    local effectId = HeroUtils.GetExtraAtkByCamp(camp)
                    local addNum = rightBattleEffect:GetValue(effectId)
                    if rightHeroBattleEffect~=nil then
                        local heroAddEffect = rightHeroBattleEffect:GetValue(heroId)
                        if heroAddEffect~=nil then
                            atkAddPercent = atkAddPercent+heroAddEffect:GetValue(EffectDefine.APS_BATTLE_HERO_TOTAL_ATK_PERCENT_INCR)
                            addNum = addNum+heroAddEffect:GetValue(effectId)
                        end
                    end
                    realLevelAttack = realLevelAttack*(1+(atkAddPercent/100))
                    realQualityAttack = realQualityAttack*(1+(atkAddPercent/100))
                    realRankAtk = realRankAtk*(1+(atkAddPercent/100))
                    local extraNum = realLevelAttack+realQualityAttack+realRankAtk+addNum-levelAttack-qualityAddAttack-rankAtk
                    atkRest = atkRest+extraNum
                end
            end
            local pluginAdd = 0
            if rightBattleEffect~=nil then
                pluginAdd = rightBattleEffect:GetValue(30331)
            end
            oneData.rightNum  =oneData.rightNum + atkInLevel + atkInQuality+atkInRarity+atkRest+atkInHeroSkill+pluginAdd
        end
    end
    return oneData
end
function MailPlayerReport:GetHeroDefenceData(leftFightData,rightFightData,leftBattleEffect,rightBattleEffect,leftHeroBattleEffect,rightHeroBattleEffect)
    local oneData = {}
    oneData.dialogId = "220207"
    oneData.leftNum = 0
    oneData.rightNum = 0
    oneData.showType = BattleSubTitleShowType.HeroDefence
    --	英雄等级
    --	英雄进阶
    --	英雄军阶
    if leftFightData~=nil and rightFightData~=nil then
        if leftFightData.unitData~=nil then
            local heroes = leftFightData.unitData:GetPlayerHeroes()
            local defInLevel = 0
            local defInQuality = 0
            local defInRarity = 0
            local defRest = 0
            local defInHeroSkill = 0
            for k,v in pairs(heroes) do
                local level = v["heroLevel"]
                local heroId = v["heroId"]
                local rankLv = v["rankLv"] or 0
                local stage = v["stage"] or 0
                local quality = v["heroQuality"] or 0
                local maxLevel = v["maxLevel"] or 0
                local beyondTimes = HeroUtils.GetBeyondTimesByLevel(maxLevel)
                local config = LocalController:instance():getLine(HeroUtils.GetHeroXmlName(), heroId)
                local curMilitaryRankId = HeroUtils.GetRankIdByLvAndStage(heroId, rankLv, stage)
                local qualityAddDefence = config['hero_quality_attr_defens'][math.min(#config['hero_quality_attr_defens'], quality)]
                --local starAddDefence = config['hero_star_defens'][math.min(#config['hero_star_defens'], quality)]

                local rarityAddDef = 0
                local template = DataCenter.HeroLevelUpTemplateManager:GetTemplate(level)
                if template ~= nil then
                    rarityAddDef = template:GetDef(config['rarity'])
                end

                local levelDefence = config['base_defens'] + config['attr_defens'] * rarityAddDef+ config['special_attr_defens'] * beyondTimes
                local rankDef = 0
                local strArr = GetTableData(TableName.HeroMilitaryRank, curMilitaryRankId, 'def')
                if #strArr>0 then
                    rankDef  = tonumber(strArr[config['rarity']])
                    if rankDef==nil then
                        rankDef = 0
                    end
                end
                defInLevel = defInLevel+levelDefence
                defInQuality = defInQuality + qualityAddDefence
                defInRarity = defInRarity+ rankDef
                if leftBattleEffect~=nil then
                    local camp = HeroUtils.GetCamp(v)
                    local troopAddPercentId = HeroUtils.GetTroopExtraDefAddByCamp(camp)
                    local addTroopNum =leftBattleEffect:GetValue(troopAddPercentId)
                    defInHeroSkill = defInHeroSkill +addTroopNum*100
                    local realLevelDefence = levelDefence
                    local realQualityDefence = qualityAddDefence
                    local realRankDef = rankDef
                    local defAddPercent = leftBattleEffect:GetValue(EffectDefine.APS_BATTLE_HERO_TOTAL_DEF_PERCENT_INCR)
                    local effectId = HeroUtils.GetExtraDefByCamp(camp)
                    local addNum = leftBattleEffect:GetValue(effectId)
                    if leftHeroBattleEffect~=nil then
                        local heroAddEffect = leftHeroBattleEffect:GetValue(heroId)
                        if heroAddEffect~=nil then
                            defAddPercent = defAddPercent+heroAddEffect:GetValue(EffectDefine.APS_BATTLE_HERO_TOTAL_DEF_PERCENT_INCR)
                            addNum = addNum+heroAddEffect:GetValue(effectId)
                        end
                    end
                    realLevelDefence = realLevelDefence*(1+(defAddPercent/100))
                    realQualityDefence = realQualityDefence*(1+(defAddPercent/100))
                    realRankDef = realRankDef*(1+(defAddPercent/100))
                    local extraNum = realLevelDefence+realQualityDefence+realRankDef+addNum-levelDefence-qualityAddDefence-rankDef
                    defRest = defRest+extraNum
                end
            end
            local pluginAdd = 0
            if leftBattleEffect~=nil then
                pluginAdd = leftBattleEffect:GetValue(30332)
            end
            oneData.leftNum  =oneData.leftNum + defInLevel + defInQuality+defInRarity+defRest+defInHeroSkill+pluginAdd
        end
        if rightFightData.unitData~=nil then
            local heroes = rightFightData.unitData:GetPlayerHeroes()
            local defInLevel = 0
            local defInQuality = 0
            local defInRarity = 0
            local defRest = 0
            local defInHeroSkill = 0
            for k,v in pairs(heroes) do
                local level = v["heroLevel"]
                local heroId = v["heroId"]
                local rankLv = v["rankLv"] or 0
                local stage = v["stage"] or 0
                local quality = v["heroQuality"] or 0
                local beyondTimes = HeroUtils.GetBeyondTimesByLevel(level)
                local config = LocalController:instance():getLine(HeroUtils.GetHeroXmlName(), heroId)
                local curMilitaryRankId = HeroUtils.GetRankIdByLvAndStage(heroId, rankLv, stage)
                local qualityAddDefence = config['hero_quality_attr_defens'][math.min(#config['hero_quality_attr_defens'], quality)]
                --local starAddDefence = config['hero_star_defens'][math.min(#config['hero_star_defens'], quality)]

                local rarityAddDef = 0
                local template = DataCenter.HeroLevelUpTemplateManager:GetTemplate(level)
                if template ~= nil then
                    rarityAddDef = template:GetDef(config['rarity'])
                end

                local levelDefence = config['base_defens'] + config['attr_defens'] * rarityAddDef + config['special_attr_defens'] * beyondTimes
                local rankDef = 0
                local strArr = GetTableData(TableName.HeroMilitaryRank, curMilitaryRankId, 'def')
                if #strArr>0 then
                    rankDef  = tonumber(strArr[config['rarity']])
                    if rankDef==nil then
                        rankDef = 0
                    end
                end
                defInLevel = defInLevel+levelDefence
                defInQuality = defInQuality + qualityAddDefence
                defInRarity = defInRarity+ rankDef
                if rightBattleEffect~=nil then
                    local camp = HeroUtils.GetCamp(v)
                    local troopAddPercentId = HeroUtils.GetTroopExtraDefAddByCamp(camp)
                    local addTroopNum =leftBattleEffect:GetValue(troopAddPercentId)
                    defInHeroSkill = defInHeroSkill +addTroopNum*100
                    local realLevelDefence = levelDefence
                    local realQualityDefence = qualityAddDefence
                    local realRankDef = rankDef
                    local defAddPercent = rightBattleEffect:GetValue(EffectDefine.APS_BATTLE_HERO_TOTAL_DEF_PERCENT_INCR)
                    local effectId = HeroUtils.GetExtraDefByCamp(camp)
                    local addNum = rightBattleEffect:GetValue(effectId)
                    if rightHeroBattleEffect~=nil then
                        local heroAddEffect = rightHeroBattleEffect:GetValue(heroId)
                        if heroAddEffect~=nil then
                            defAddPercent = defAddPercent+heroAddEffect:GetValue(EffectDefine.APS_BATTLE_HERO_TOTAL_DEF_PERCENT_INCR)
                            addNum = addNum+heroAddEffect:GetValue(effectId)
                        end
                    end
                    realLevelDefence = realLevelDefence*(1+(defAddPercent/100))
                    realQualityDefence = realQualityDefence*(1+(defAddPercent/100))
                    realRankDef = realRankDef*(1+(defAddPercent/100))
                    local extraNum = realLevelDefence+realQualityDefence+realRankDef+addNum-levelDefence-qualityAddDefence-rankDef
                    defRest = defRest+extraNum
                end
            end
            local pluginAdd = 0 
            if rightBattleEffect~=nil then
                pluginAdd = rightBattleEffect:GetValue(30332)
            end
            oneData.rightNum  =oneData.rightNum + defInLevel + defInQuality+defInRarity+defRest+defInHeroSkill+pluginAdd
        end
    end
    return oneData
end

function MailPlayerReport:GetHeroRestraintValue(leftFightData,rightFightData,leftBattleEffect,rightBattleEffect,isAttack)
    local campRestraintLeft = 0
    local campRestraintRight = 0
    if leftFightData~=nil and rightFightData~=nil and leftFightData.unitData~=nil and rightFightData.unitData~=nil then
        local leftHeroes = leftFightData.unitData:GetPlayerHeroes()
        local rightHeroes = rightFightData.unitData:GetPlayerHeroes()
        local leftEffectList ={}
        local rightEffectList = {}
        for k,v in pairs(CheckHeroRestraintEffectList) do
            local leftValue = 0
            local rightValue = 0
            if leftBattleEffect~=nil then
                leftValue = leftBattleEffect:GetValue(v)
            end
            if rightBattleEffect~=nil then
                rightValue = rightBattleEffect:GetValue(v)
            end
            if leftValue>0 then
                local oneData = {}
                oneData.effectId = v
                oneData.value = leftValue
                table.insert(leftEffectList,oneData)
            end
            if rightValue>0 then
                local oneData = {}
                oneData.effectId = v
                oneData.value = rightValue
                table.insert(rightEffectList,oneData)
            end
        end
        return MarchUtil.GetBaseHeroRestraintValue(table.values(leftHeroes),table.values(rightHeroes),leftEffectList,rightEffectList,isAttack)
    end

    --return campRestraintLeft,campRestraintRight
end

function MailPlayerReport:GetHeroCampAdd(leftFightData,rightFightData,leftBattleEffect,rightBattleEffect,leftUuid,rightUuid)
    local leftCampAdd = 0
    local rightCampAdd = 0
    local leftEffectList ={}
    local rightEffectList = {}
    for k,v in pairs(CheckHeroCampAddEffectList) do
        local leftValue = 0
        local rightValue = 0
        if leftBattleEffect~=nil then
            leftValue = leftBattleEffect:GetValue(v)
        end
        if rightBattleEffect~=nil then
            rightValue = rightBattleEffect:GetValue(v)
        end
        if leftValue>0 then
            local oneData = {}
            oneData.effectId = v
            oneData.value = leftValue
            table.insert(leftEffectList,oneData)
        end
        if rightValue>0 then
            local oneData = {}
            oneData.effectId = v
            oneData.value = rightValue
            table.insert(rightEffectList,oneData)
        end
    end
    if leftFightData~=nil and leftFightData.unitData~=nil then
        local leftHeroes = leftFightData.unitData:GetPlayerHeroes()
        local leftHeroKey = table.values(leftHeroes)
        leftCampAdd = MarchUtil.GetCampBonusExtraVal(leftHeroKey,leftEffectList)
    end
    if rightFightData~=nil and rightFightData.unitData~=nil then
        local rightHeroes = rightFightData.unitData:GetPlayerHeroes()
        local rightHeroKey = table.values(rightHeroes)
        rightCampAdd = MarchUtil.GetCampBonusExtraVal(rightHeroKey,rightEffectList)
    end
    return leftCampAdd,rightCampAdd
end
function MailPlayerReport:SetDefenceAddData()
    --	【部队防御力35004】
    --	单兵防御力【35005】【35006】【35007】（根据兵力配比打包生成一个【兵种混合防御力】）
    --	【野外战斗攻击加成类35028】
    --	【攻城战斗攻击增益35044】
    --	【驻防建筑攻击增益35052】
    --	【打怪攻击力加成类35060】
    --	【编队1~4攻城防御力增益%】
    --	【编队1~4防御力增益%】
    --	【加入集结时攻击力提升35036】只有集结时出现
    --	【增援别人城市或者中立城市时攻击力提升35134】只有增援时出现

    local leftNum = 0
    local rightNum = 0
    local leftFightData = self.leftFightData
    local rightFightData = self.rightFightData
    local leftBattleEffect = self.leftBattleEffect or { GetValue = function() return 0 end }
    local rightBattleEffect = self.rightBattleEffect or { GetValue = function() return 0 end }
    local leftHeroBattleEffect = self.leftHeroBattleEffect or { GetValue = function() return nil end }
    local rightHeroBattleEffect = self.rightHeroBattleEffect or { GetValue = function() return nil end }
    if leftBattleEffect~=nil then
        leftNum = leftNum+leftBattleEffect:GetValue(35004)
        local aLeftPercent = 0
        if leftFightData~=nil and leftFightData.unitData~=nil then
            aLeftPercent = leftFightData.unitData:GetSoldierPercentByType(ArmType.Tank)
        end
        leftNum = leftNum + (leftBattleEffect:GetValue(35005)*aLeftPercent)
        local bLeftPercent = 0
        if leftFightData~=nil and leftFightData.unitData~=nil then
            bLeftPercent = leftFightData.unitData:GetSoldierPercentByType(ArmType.Robot)
        end
        leftNum = leftNum + (leftBattleEffect:GetValue(35006)*bLeftPercent)
        local cLeftPercent = 0
        if leftFightData~=nil and leftFightData.unitData~=nil then
            cLeftPercent = leftFightData.unitData:GetSoldierPercentByType(ArmType.Plane)
        end
        leftNum = leftNum + (leftBattleEffect:GetValue(35007)*cLeftPercent)
        rightNum = rightNum-leftBattleEffect:GetValue(35196)
    end
    if rightBattleEffect~=nil then
        rightNum = rightNum+rightBattleEffect:GetValue(35004)
        local aRightPercent = 0
        if rightFightData~=nil and rightFightData.unitData~=nil then
            aRightPercent = rightFightData.unitData:GetSoldierPercentByType(ArmType.Tank)
        end
        rightNum = rightNum + (rightBattleEffect:GetValue(35005)*aRightPercent)
        local bRightPercent = 0
        if rightFightData~=nil and rightFightData.unitData~=nil then
            bRightPercent = rightFightData.unitData:GetSoldierPercentByType(ArmType.Robot)
        end
        rightNum = rightNum + (rightBattleEffect:GetValue(35006)*bRightPercent)
        local cRightPercent = 0
        if rightFightData~=nil and rightFightData.unitData~=nil then
            cRightPercent = rightFightData.unitData:GetSoldierPercentByType(ArmType.Plane)
        end
        rightNum = rightNum + (rightBattleEffect:GetValue(35007)*cRightPercent)
        leftNum = leftNum-rightBattleEffect:GetValue(35196)
    end
    if leftFightData~=nil and rightFightData~=nil then
        if leftFightData.battleType == BattleType.Building or leftFightData.battleType == BattleType.CROSS_WORM or leftFightData.battleType == BattleType.City
                or leftFightData.battleType == BattleType.ALLIANCE_OCCUPIED_CITY or leftFightData.battleType == BattleType.ALLIANCE_NEUTRAL_CITY or leftFightData.battleType == BattleType.THRONE_ARMY
                or leftFightData.battleType == BattleType.ALLIANCE_CITY_GUARD or leftFightData.battleType == BattleType.ALLIANCE_BUILDING or leftFightData.battleType == BattleType.ACT_ALLIANCE_MINE or leftFightData.battleType == BattleType.DRAGON_BUILDING
                or leftFightData.battleType == BattleType.CITY_GUARD or leftFightData.battleType == BattleType.ALLIANCE_BUILD_GUARD
                or leftFightData.battleType == BattleType.Turret then
            if leftBattleEffect~=nil then
                leftNum = leftNum + leftBattleEffect:GetValue(35052)
            end
        end
        if rightFightData.battleType == BattleType.Building or rightFightData.battleType == BattleType.CROSS_WORM or rightFightData.battleType == BattleType.City
                or rightFightData.battleType == BattleType.ALLIANCE_OCCUPIED_CITY or rightFightData.battleType == BattleType.ALLIANCE_NEUTRAL_CITY or rightFightData.battleType == BattleType.THRONE_ARMY
                or rightFightData.battleType == BattleType.Turret then
            if rightBattleEffect~=nil then
                rightNum = rightNum + rightBattleEffect:GetValue(35052)
            end
        end
        if rightFightData.battleType == BattleType.Building or rightFightData.battleType == BattleType.CROSS_WORM or rightFightData.battleType == BattleType.City
                or rightFightData.battleType == BattleType.ALLIANCE_OCCUPIED_CITY or rightFightData.battleType == BattleType.ALLIANCE_NEUTRAL_CITY or rightFightData.battleType == BattleType.THRONE_ARMY
                or rightFightData.battleType == BattleType.Turret then
            if leftBattleEffect~=nil then
                leftNum = leftNum + leftBattleEffect:GetValue(35044)
            end
        end
        if leftFightData.battleType == BattleType.Building or leftFightData.battleType == BattleType.CROSS_WORM or leftFightData.battleType == BattleType.City
                or leftFightData.battleType == BattleType.ALLIANCE_OCCUPIED_CITY or leftFightData.battleType == BattleType.ALLIANCE_NEUTRAL_CITY or leftFightData.battleType == BattleType.THRONE_ARMY
                or leftFightData.battleType == BattleType.ALLIANCE_CITY_GUARD or leftFightData.battleType == BattleType.ALLIANCE_BUILDING or leftFightData.battleType == BattleType.ACT_ALLIANCE_MINE or leftFightData.battleType == BattleType.DRAGON_BUILDING
                or leftFightData.battleType == BattleType.CITY_GUARD or leftFightData.battleType == BattleType.ALLIANCE_BUILD_GUARD
                or leftFightData.battleType == BattleType.Turret then
            if rightBattleEffect~=nil then
                rightNum = rightNum + rightBattleEffect:GetValue(35044)
            end
        end

        if (leftFightData.battleType == BattleType.RallyFormation or leftFightData.battleType == BattleType.Formation or leftFightData.buildId == BuildingTypes.APS_BUILD_WORMHOLE_SUB or BuildingUtils.IsInEdenSubwayGroup(leftFightData.buildId)==true) and (rightFightData.battleType == BattleType.RallyFormation or rightFightData.battleType == BattleType.Formation or rightFightData.buildId == BuildingTypes.APS_BUILD_WORMHOLE_SUB) then
            if leftBattleEffect~=nil then
                leftNum = leftNum + leftBattleEffect:GetValue(35028)
            end
            if rightBattleEffect~=nil then
                rightNum = rightNum + rightBattleEffect:GetValue(35028)
            end
            if leftFightData.unitData~=nil and leftBattleEffect~=nil then
                local index = leftFightData.unitData:GetFormationIndex()
                local effectId = 0
                if index == 1 then
                    effectId = 40112
                elseif index ==2 then
                    effectId = 40113
                elseif index ==3 then
                    effectId = 40114
                end
                if effectId>0 then
                    local effectNum = leftBattleEffect:GetValue(effectId)
                    leftNum = leftNum + effectNum
                end
            end
            if rightFightData.unitData~=nil and rightBattleEffect~=nil then
                local index = rightFightData.unitData:GetFormationIndex()
                local effectId = 0
                if index == 1 then
                    effectId = 40112
                elseif index ==2 then
                    effectId = 40113
                elseif index ==3 then
                    effectId = 40114
                end
                if effectId>0 then
                    local effectNum = rightBattleEffect:GetValue(effectId)
                    rightNum = rightNum + effectNum
                end
            end
        end
        if (leftFightData.battleType == BattleType.RallyFormation or leftFightData.battleType == BattleType.Formation) and (rightFightData.battleType == BattleType.Monster or rightFightData.battleType == BattleType.Boss or rightFightData.battleType == BattleType.ACT_BOSS or rightFightData.battleType == BattleType.PUZZLE_BOSS or rightFightData.battleType == BattleType.CHALLENGE_BOSS or rightFightData.battleType == BattleType.BLACK_KNIGHT) then
            if leftBattleEffect~=nil then
                leftNum = leftNum + leftBattleEffect:GetValue(35060)
            end
            if rightBattleEffect~=nil then
                rightNum = rightNum + rightBattleEffect:GetValue(35060)
            end
            if leftFightData.unitData~=nil and leftBattleEffect~=nil then
                local index = leftFightData.unitData:GetFormationIndex()
                local effectId = 0
                if index == 1 then
                    effectId = 40112
                elseif index ==2 then
                    effectId = 40113
                elseif index ==3 then
                    effectId = 40114
                end
                if effectId>0 then
                    local effectNum = leftBattleEffect:GetValue(effectId)
                    leftNum = leftNum + effectNum
                end
            end
            if rightFightData.unitData~=nil and rightBattleEffect~=nil then
                local index = rightFightData.unitData:GetFormationIndex()
                local effectId = 0
                if index == 1 then
                    effectId = 40112
                elseif index ==2 then
                    effectId = 40113
                elseif index ==3 then
                    effectId = 40114
                end
                if effectId>0 then
                    local effectNum = rightBattleEffect:GetValue(effectId)
                    rightNum = rightNum + effectNum
                end
            end
        end

        if (leftFightData.battleType == BattleType.RallyFormation) then
            if leftBattleEffect~=nil then
                leftNum = leftNum + leftBattleEffect:GetValue(35036)
            end
        end

        if (rightFightData.battleType == BattleType.RallyFormation) then
            if rightBattleEffect~=nil then
                rightNum = rightNum + rightBattleEffect:GetValue(35036)
            end
        end
        if leftFightData.battleType == BattleType.Building or leftFightData.battleType == BattleType.CROSS_WORM or leftFightData.battleType == BattleType.City
                or leftFightData.battleType == BattleType.ALLIANCE_OCCUPIED_CITY or leftFightData.battleType == BattleType.ALLIANCE_NEUTRAL_CITY or leftFightData.battleType == BattleType.THRONE_ARMY
                or leftFightData.battleType == BattleType.ALLIANCE_CITY_GUARD or leftFightData.battleType == BattleType.ALLIANCE_BUILDING or leftFightData.battleType == BattleType.ACT_ALLIANCE_MINE or leftFightData.battleType == BattleType.DRAGON_BUILDING
                or leftFightData.battleType == BattleType.CITY_GUARD or leftFightData.battleType == BattleType.ALLIANCE_BUILD_GUARD
                or leftFightData.battleType == BattleType.Turret then
            if leftFightData.unitData~=nil then
                if leftFightData.unitData:GetSpecialType() == SpecialUnitType.NONE then
                    if leftBattleEffect~=nil then
                        leftNum = leftNum + leftBattleEffect:GetValue(35134)
                    end
                end
            end
            if leftFightData.unitData~=nil and leftBattleEffect~=nil then
                local index = leftFightData.unitData:GetFormationIndex()
                local effectId = 0
                if index == 1 then
                    effectId = 40120
                elseif index ==2 then
                    effectId = 40121
                elseif index ==3 then
                    effectId = 40122
                end
                if effectId>0 then
                    local effectNum = leftBattleEffect:GetValue(effectId)
                    leftNum = leftNum + effectNum
                end
            end

        end
        if rightFightData.battleType == BattleType.Building or rightFightData.battleType == BattleType.CROSS_WORM or rightFightData.battleType == BattleType.City
                or rightFightData.battleType == BattleType.ALLIANCE_OCCUPIED_CITY or rightFightData.battleType == BattleType.ALLIANCE_NEUTRAL_CITY or rightFightData.battleType == BattleType.THRONE_ARMY
                or rightFightData.battleType == BattleType.Turret then
            if rightFightData.unitData~=nil then
                if rightFightData.unitData:GetSpecialType() == SpecialUnitType.NONE then
                    if rightBattleEffect~=nil then
                        rightNum = rightNum + rightBattleEffect:GetValue(35134)
                    end
                end
            end
            if rightFightData.unitData~=nil and rightBattleEffect~=nil then
                local index = rightFightData.unitData:GetFormationIndex()
                local effectId = 0
                if index == 1 then
                    effectId = 40120
                elseif index ==2 then
                    effectId = 40121
                elseif index ==3 then
                    effectId = 40122
                end
                if effectId>0 then
                    local effectNum = rightBattleEffect:GetValue(effectId)
                    rightNum = rightNum + effectNum
                end
            end
        end
        if leftFightData.unitData~=nil then
            local index = leftFightData.unitData:GetFormationIndex()
            local effectId = 0
            if rightFightData.battleType == BattleType.Building or rightFightData.battleType == BattleType.CROSS_WORM or rightFightData.battleType == BattleType.City
                    or rightFightData.battleType == BattleType.ALLIANCE_OCCUPIED_CITY or rightFightData.battleType == BattleType.ALLIANCE_NEUTRAL_CITY or rightFightData.battleType == BattleType.THRONE_ARMY
                    or rightFightData.battleType == BattleType.Turret then
                if index == 1 then
                    effectId = 40055
                elseif index ==2 then
                    effectId = 40056
                elseif index ==3 then
                    effectId = 40057
                elseif index == 4 then
                    effectId = 40058
                end
                if effectId>0 then
                    local effectNum = leftBattleEffect:GetValue(effectId)
                    leftNum = leftNum + effectNum
                end
            end
            effectId =0
            if index == 1 then
                effectId = 40040
            elseif index ==2 then
                effectId = 40041
            elseif index ==3 then
                effectId = 40042
            elseif index == 4 then
                effectId = 40043
            end
            if effectId>0 then
                local effectNum = leftBattleEffect:GetValue(effectId)
                leftNum = leftNum + effectNum
            end
        end
        if rightFightData.unitData~=nil then
            local index = rightFightData.unitData:GetFormationIndex()
            local effectId = 0
            if leftFightData.battleType == BattleType.Building or leftFightData.battleType == BattleType.CROSS_WORM or leftFightData.battleType == BattleType.City
                    or leftFightData.battleType == BattleType.ALLIANCE_OCCUPIED_CITY or leftFightData.battleType == BattleType.ALLIANCE_NEUTRAL_CITY or leftFightData.battleType == BattleType.THRONE_ARMY
                    or leftFightData.battleType == BattleType.ALLIANCE_CITY_GUARD or leftFightData.battleType == BattleType.ALLIANCE_BUILDING or leftFightData.battleType == BattleType.ACT_ALLIANCE_MINE or leftFightData.battleType == BattleType.DRAGON_BUILDING
                    or leftFightData.battleType == BattleType.CITY_GUARD or leftFightData.battleType == BattleType.ALLIANCE_BUILD_GUARD
                    or leftFightData.battleType == BattleType.Turret then
                if index == 1 then
                    effectId = 40055
                elseif index ==2 then
                    effectId = 40056
                elseif index ==3 then
                    effectId = 40057
                elseif index == 4 then
                    effectId = 40058
                end
                if effectId>0 then
                    local effectNum = rightBattleEffect:GetValue(effectId)
                    rightNum = rightNum + effectNum
                end
            end
            effectId =0
            if index == 1 then
                effectId = 40040
            elseif index ==2 then
                effectId = 40041
            elseif index ==3 then
                effectId = 40042
            elseif index == 4 then
                effectId = 40043
            end
            if effectId>0 then
                local effectNum = rightBattleEffect:GetValue(effectId)
                rightNum = rightNum + effectNum
            end
        end
    end
    local addList = self:GetHeroDefenceData(leftFightData,rightFightData,leftBattleEffect,rightBattleEffect,leftHeroBattleEffect,rightHeroBattleEffect)
    if addList~=nil then
        leftNum = leftNum+ (addList.leftNum/100)
        rightNum = rightNum+(addList.rightNum/100)
    end
    local strLeft = string.GetFormattedPercentStr(leftNum/100)
    local strRight = string.GetFormattedPercentStr(rightNum/100)
    local RestraintData = self:GetHeroRestraintValue(leftFightData,rightFightData,leftBattleEffect,rightBattleEffect,false)
    local value = 0
    if RestraintData~=nil then
        if RestraintData.isLeft then
            self._cp_troopCell5:SetCampData(RestraintData.leftCampRestraintData,nil,RestraintData.value)
            value = RestraintData.value
            if value>0 then
                strLeft = strLeft.."<color=#00B200>".."+"..string.GetFormattedPercentStr(leftNum*value/10000).."</color>"
            end
        else
            self._cp_troopCell5:SetCampData(nil,RestraintData.rightCampRestraintData,RestraintData.value)
            value = RestraintData.value
            if value>0 then
                strRight = strRight.."<color=#00B200>".."+"..string.GetFormattedPercentStr(rightNum*value/10000).."</color>"
            end
        end
    else
        self._cp_troopCell5:SetCampData(nil,nil)
    end
    self._cp_troopCell5:SetLeftValue(strLeft)
    self._cp_troopCell5:SetRightValue(strRight)
end

function MailPlayerReport:SetHealthAddData()
    local leftNum = 0
    local rightNum = 0
    local leftFightData = self.leftFightData
    local rightFightData = self.rightFightData
    local leftBattleEffect = self.leftBattleEffect or { GetValue = function() return 0 end }
    local rightBattleEffect = self.rightBattleEffect or { GetValue = function() return 0 end }
    if leftBattleEffect~=nil then
        leftNum = leftNum+leftBattleEffect:GetValue(35012)
        local aLeftPercent = 0
        if leftFightData~=nil and leftFightData.unitData~=nil then
            aLeftPercent = leftFightData.unitData:GetSoldierPercentByType(ArmType.Tank)
        end
        leftNum = leftNum + (leftBattleEffect:GetValue(35013)*aLeftPercent)
        local bLeftPercent = 0
        if leftFightData~=nil and leftFightData.unitData~=nil then
            bLeftPercent = leftFightData.unitData:GetSoldierPercentByType(ArmType.Robot)
        end
        leftNum = leftNum + (leftBattleEffect:GetValue(35014)*bLeftPercent)
        local cLeftPercent = 0
        if leftFightData~=nil and leftFightData.unitData~=nil then
            cLeftPercent = leftFightData.unitData:GetSoldierPercentByType(ArmType.Plane)
        end
        leftNum = leftNum + (leftBattleEffect:GetValue(35015)*cLeftPercent)
    end
    if rightBattleEffect~=nil then
        rightNum = rightNum+rightBattleEffect:GetValue(35012)
        local aRightPercent = 0
        if rightFightData~=nil and rightFightData.unitData~=nil then
            aRightPercent = rightFightData.unitData:GetSoldierPercentByType(ArmType.Tank)
        end
        rightNum = rightNum + (rightBattleEffect:GetValue(35013)*aRightPercent)
        local bRightPercent = 0
        if rightFightData~=nil and rightFightData.unitData~=nil then
            bRightPercent = rightFightData.unitData:GetSoldierPercentByType(ArmType.Robot)
        end
        rightNum = rightNum + (rightBattleEffect:GetValue(35014)*bRightPercent)
        local cRightPercent = 0
        if rightFightData~=nil and rightFightData.unitData~=nil then
            cRightPercent = rightFightData.unitData:GetSoldierPercentByType(ArmType.Plane)
        end
        rightNum = rightNum + (rightBattleEffect:GetValue(35015)*cRightPercent)
    end
    if leftFightData~=nil and rightFightData~=nil then
        if leftFightData.unitData~=nil then
            local heroes = leftFightData.unitData:GetPlayerHeroes()
            local addTotalNum = 0
            for k,v in pairs(heroes) do
                local heroId = v["heroId"]
                local camp = HeroUtils.GetCamp(v)
                local effectId = HeroUtils.GetExtraHealthByCamp(camp)
                local addNum = leftBattleEffect:GetValue(effectId)
                addTotalNum = addTotalNum+addNum
            end
            leftNum = leftNum + addTotalNum
        end
        if rightFightData.unitData~=nil then
            local heroes = rightFightData.unitData:GetPlayerHeroes()
            local addTotalNum = 0
            for k,v in pairs(heroes) do
                local camp = HeroUtils.GetCamp(v)
                local effectId = HeroUtils.GetExtraHealthByCamp(camp)
                local addNum = rightBattleEffect:GetValue(effectId)
                addTotalNum = addTotalNum+addNum
            end
            rightNum = rightNum + addTotalNum
        end
    end
    if leftNum<=0 and rightNum<=0 then
        self._cp_troopCell6:SetActive(false)
    else
        self._cp_troopCell6:SetActive(true)
        self._cp_troopCell6:SetLeftValue(string.GetFormattedPercentStr(leftNum/100))
        self._cp_troopCell6:SetRightValue(string.GetFormattedPercentStr(rightNum/100))
    end
    
end

function MailPlayerReport:SetCampData()
    local leftFightData = self.leftFightData
    local rightFightData = self.rightFightData
    local leftBattleEffect = self.leftBattleEffect or { GetValue = function() return 0 end }
    local rightBattleEffect = self.rightBattleEffect or { GetValue = function() return 0 end }

    self.leftRestraintInfo = nil
    self.rightRestraintInfo = nil
    if self.leftFightData and self.rightFightData and self.leftFightData.unitData and self.rightFightData.unitData then
        local leftEffectList ={}
        local rightEffectList = {}
        for k,v in pairs(CheckHeroRestraintEffectList) do
            local leftValue = 0
            local rightValue = 0
            if leftBattleEffect~=nil then
                leftValue = leftBattleEffect:GetValue(v)
            end
            if rightBattleEffect~=nil then
                rightValue = rightBattleEffect:GetValue(v)
            end
            if leftValue>0 then
                local oneData = {}
                oneData.effectId = v
                oneData.value = leftValue
                table.insert(leftEffectList,oneData)
            end
            if rightValue>0 then
                local oneData = {}
                oneData.effectId = v
                oneData.value = rightValue
                table.insert(rightEffectList,oneData)
            end
        end
        self.leftRestraintInfo = MarchUtil.GetRestraintInfo(table.values(leftFightData.unitData:GetPlayerHeroes()), leftEffectList)
        self.rightRestraintInfo = MarchUtil.GetRestraintInfo(table.values(rightFightData.unitData:GetPlayerHeroes()), rightEffectList)
        
        self._CampRestraintItem_Left:InitData(self.leftRestraintInfo.camp, self.leftRestraintInfo.num)
        self._CampRestraintItem_Right:InitData(self.rightRestraintInfo.camp, self.rightRestraintInfo.num)
        
        self._CampRestraintItem_LeftBtn:SetActive(true)
        self._CampRestraintItem_RightBtn:SetActive(true)
        self._CampRestraintImg:SetActive(false)
    else
        self._CampRestraintItem_LeftBtn:SetActive(false)
        self._CampRestraintItem_RightBtn:SetActive(false)
        self._CampRestraintImg:SetActive(false)
    end
end

function MailPlayerReport:SetStatusData()
    if self.leftFightData.isDirect or self.rightFightData.isDirect then
        -- 奇袭，反着显示
        self._leftStatus:SetActive(self.rightFightData.isDirect)
        self._rightStatus:SetActive(self.leftFightData.isDirect)
    else
        self._leftStatus:SetActive(false)
        self._rightStatus:SetActive(false)
    end
end

function MailPlayerReport:OnLeftCampClick()
    if self.leftRestraintInfo then
        local scaleFactor = UIManager:GetInstance():GetScaleFactor()
        local x = self._CampRestraintItem_Left.transform.position.x-70* scaleFactor
        local y = self._CampRestraintItem_Left.transform.position.y + 30 * scaleFactor
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationRestraint, { anim = false }, self.leftRestraintInfo, x, y, false, true)
    end
end

function MailPlayerReport:OnRightCampClick()
    if self.rightRestraintInfo then
        local scaleFactor = UIManager:GetInstance():GetScaleFactor()
        local x = self._CampRestraintItem_Right.transform.position.x -70* scaleFactor
        local y = self._CampRestraintItem_Right.transform.position.y + 30 * scaleFactor
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationRestraint, { anim = false }, self.rightRestraintInfo, x, y, true, true)
    end
end

function MailPlayerReport:OnHeroDetailClick(isSelf)
    if isSelf ==true then
        if self.leftFightData~=nil and self.leftFightData.unitData~=nil then
            if self.leftFightData.battleType == BattleType.Monster or self.leftFightData.battleType == BattleType.Boss or self.leftFightData.battleType == BattleType.ACT_BOSS or self.leftFightData.battleType == BattleType.Explore or self.leftFightData.battleType == BattleType.PUZZLE_BOSS or self.leftFightData.battleType == BattleType.CHALLENGE_BOSS or self.leftFightData.battleType == BattleType.BLACK_KNIGHT then
                return false
            end
            if self.leftFightData.unitData:GetSpecialType() == SpecialUnitType.NONE  or self.leftFightData.unitData:GetSpecialType() == SpecialUnitType.CITY_STATION or self.leftFightData.unitData:GetSpecialType() == SpecialUnitType.TEAM_LEADER or self.leftFightData.unitData:GetSpecialType() == SpecialUnitType.TEAM_MEMBER then
                local heroes = self.leftFightData.unitData:GetPlayerHeroes()
                local soldierMax = 0
                local attr = self.leftFightData.unitAttrInfo
                local heroAtk =  attr:GetAtkAttrByType(AtkDefReason.HERO)
                local heroDef =  attr:GetDefAttrByType(AtkDefReason.HERO)
                local heroKey = table.values(heroes)
                local leftEffectList ={}
                for k,v in pairs(CheckHeroCampAddEffectList) do
                    local leftValue = 0
                    if self.leftBattleEffect~=nil then
                        leftValue = self.leftBattleEffect:GetValue(v)
                    end
                    if leftValue>0 then
                        local oneData = {}
                        oneData.effectId = v
                        oneData.value = leftValue
                        table.insert(leftEffectList,oneData)
                    end
                end
                local campData = MarchUtil.GetCampBonusExtraVal(heroKey,leftEffectList)
                local heroList = {}
                local index = 0
                for k,v in pairs(heroes) do
                    index = index+1
                    local level = v["heroLevel"]
                    local heroId = v["heroId"]
                    local rankLv = v["rankLv"] or 0
                    local stage = v["stage"] or 0
                    local quality = v["heroQuality"] or 0
                    local camp = HeroUtils.GetCamp(v)
                    local curMilitaryRankId = HeroUtils.GetRankIdByLvAndStage(heroId, rankLv, stage)
                    local rarity = GetTableData(HeroUtils.GetHeroXmlName(), heroId, 'rarity')

                    local template = DataCenter.HeroLevelUpTemplateManager:GetTemplate(level)
                    if template ~= nil then
                        soldierMax = soldierMax + template:GetArmyNum(rarity)
                    end

                    local rankTroop = GetTableData(TableName.HeroMilitaryRank, curMilitaryRankId, 'troop')[rarity]
                    if rankTroop ~= nil then
                        soldierMax = soldierMax + rankTroop
                    end
                    local config = LocalController:instance():getLine(HeroUtils.GetHeroXmlName(), heroId)
                    --local vec = string.split(config['hero_quality_attr_troops'], "|")
                    local starAddTroop = config['hero_star_troops'][math.min(#config['hero_star_troops'],quality)]
                    --local qualityAddTroop = vec[math.min(#vec, curMilitaryRankId)]
                    --if qualityAddTroop ~= nil then
                    --    soldierMax = soldierMax + toInt(qualityAddTroop)
                    --end
                    if starAddTroop ~= nil then
                        soldierMax = soldierMax + toInt(starAddTroop)
                    end
                    local heroData = {}
                    heroData.heroId = heroId
                    heroData.quality = quality
                    heroData.heroLv = level
                    heroData.rankId = curMilitaryRankId
                    heroData.camp = camp
                    heroData.skillList ={}
                    local skillData = v["skillInfos"]
                    for a,b in pairs(skillData) do
                        local skill = {}
                        skill.id = b["skillId"]
                        skill.level = b["skillLv"]
                        table.insert(heroData.skillList,skill)
                    end
                    local key = tostring(index)
                    heroList[key] = heroData
                end
                local para ={}
                para.totalSoliderNum = math.floor(soldierMax)
                para.totalAtkNum = math.floor(heroAtk)
                para.totalDefNum = math.floor(heroDef)
                para.heroList = heroList
                para.campValue = campData
                para.fromMail = 1
                UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationShare, { anim = true ,isBlur = true},para)
                return true
            end
        end
    else
        if self.rightFightData~=nil and self.rightFightData.unitData~=nil then
            if self.rightFightData.battleType == BattleType.Monster or self.rightFightData.battleType == BattleType.Boss or self.rightFightData.battleType == BattleType.ACT_BOSS or self.rightFightData.battleType == BattleType.Explore or self.rightFightData.battleType == BattleType.PUZZLE_BOSS or self.rightFightData.battleType == BattleType.CHALLENGE_BOSS or self.rightFightData.battleType == BattleType.BLACK_KNIGHT then
                return false
            end
            if self.rightFightData.unitData:GetSpecialType() == SpecialUnitType.NONE  or self.rightFightData.unitData:GetSpecialType() == SpecialUnitType.CITY_STATION or self.rightFightData.unitData:GetSpecialType() == SpecialUnitType.TEAM_LEADER or self.rightFightData.unitData:GetSpecialType() == SpecialUnitType.TEAM_MEMBER then
                local heroes = self.rightFightData.unitData:GetPlayerHeroes()
                local soldierMax = 0
                local attr = self.rightFightData.unitAttrInfo
                local heroAtk =  attr:GetAtkAttrByType(AtkDefReason.HERO)
                local heroDef =  attr:GetDefAttrByType(AtkDefReason.HERO)
                local heroKey = table.values(heroes)
                local rightEffectList = {}
                for k,v in pairs(CheckHeroCampAddEffectList) do
                    local rightValue = 0
                    if self.rightBattleEffect~=nil then
                        rightValue = self.rightBattleEffect:GetValue(v)
                    end
                    if rightValue>0 then
                        local oneData = {}
                        oneData.effectId = v
                        oneData.value = rightValue
                        table.insert(rightEffectList,oneData)
                    end
                end
                local campData = MarchUtil.GetCampBonusExtraVal(heroKey,rightEffectList)
                local heroList = {}
                local index = 0
                for k,v in pairs(heroes) do
                    index = index+1
                    local level = v["heroLevel"]
                    local heroId = v["heroId"]
                    local rankLv = v["rankLv"] or 0
                    local stage = v["stage"] or 0
                    local quality = v["heroQuality"] or 0
                    local camp = HeroUtils.GetCamp(v)
                    local curMilitaryRankId = HeroUtils.GetRankIdByLvAndStage(heroId, rankLv, stage)
                    local rarity = GetTableData(HeroUtils.GetHeroXmlName(), heroId, 'rarity')

                    local template = DataCenter.HeroLevelUpTemplateManager:GetTemplate(level)
                    if template ~= nil then
                        soldierMax = soldierMax + template:GetArmyNum(rarity)
                    end

                    local rankTroop = GetTableData(TableName.HeroMilitaryRank, curMilitaryRankId, 'troop')[rarity]
                    if rankTroop ~= nil then
                        soldierMax = soldierMax + rankTroop
                    end
                    local config = LocalController:instance():getLine(HeroUtils.GetHeroXmlName(), heroId)
                    --local vec = string.split(config['hero_quality_attr_troops'], "|")
                    --local qualityAddTroop = vec[math.min(#vec, curMilitaryRankId)]
                    local starAddTroop = config['hero_star_troops'][math.min(#config['hero_star_troops'],quality)]
                    --if qualityAddTroop ~= nil then
                    --    soldierMax = soldierMax + toInt(qualityAddTroop)
                    --end
                    if starAddTroop ~= nil then
                        soldierMax = soldierMax + toInt(starAddTroop)
                    end

                    local heroData = {}
                    heroData.heroId = heroId
                    heroData.quality = quality
                    heroData.heroLv = level
                    heroData.rankId = curMilitaryRankId
                    heroData.camp = camp
                    heroData.skillList ={}
                    local skillData = v["skillInfos"]
                    for a,b in pairs(skillData) do
                        local skill = {}
                        skill.id = b["skillId"]
                        skill.level = b["skillLv"]
                        table.insert(heroData.skillList,skill)
                    end
                    local key = tostring(index)
                    heroList[key] = heroData
                end
                local para ={}
                para.totalSoliderNum = math.floor(soldierMax)
                para.totalAtkNum = math.floor(heroAtk)
                para.totalDefNum = math.floor(heroDef)
                para.heroList = heroList
                para.campValue =campData
                para.fromMail = 1
                UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationShare, { anim = true ,isBlur = true},para)
                return true
            end
        end
    end
    return false
end


function MailPlayerReport:OnClickBtnReplay()
    if LuaEntry.DataConfig:CheckSwitch("new_army_power") then
        self:OnClickBtnReplayNew()
        return
    end
    local currentMail = self._mailInfo
    if currentMail ==nil or (currentMail["type"] ~= MailType.NEW_FIGHT and currentMail["type"] ~= MailType.NEW_FIGHT_ARENA and currentMail["type"] ~= MailType.SHORT_KEEP_FIGHT_MAIL
        and currentMail["type"] ~= MailType.NEW_FIGHT_MINECAVE) then
        return
    end
    local count = currentMail:GetMailExt():GetTotalRoundCnt()
    if count==1 then
        local param = {}
        local _showData = currentMail:GetMailExt():GetShowRoundListDataByIndex(1)
        if (_showData == nil) then
            return
        end
        local roundFight = currentMail:GetMailExt():GetFightReportByRoundIndex(1)
        if ( roundFight == nil ) then
            return
        end
        local bigRoundIndex = _showData._roundIndex
        local bigRoundUuid = _showData.roundUuid
        local selfHealth = roundFight:GetTroopHealth(true)
        local otherHealth = roundFight:GetTroopHealth(false)
        local leftUuid = _showData.leftUuid
        local rightUuid = _showData.rightUuid
        local leftFightData = _showData.leftData
        local rightFightData = _showData.rightData
        local leftBattleEffect = currentMail:GetMailExt():GetMySideBattleEffect(leftUuid)
        local rightBattleEffect = currentMail:GetMailExt():GetOtherSideBattleEffect(rightUuid)
        local leftHero = {}
        local rightHero ={}
        local leftSoliderList = {}
        local rightSoliderList = {}
        local leftPower = 0
        local rightPower = 0
        local rightMonsterId = 0
        local function GetHeroInfo(heroData)
            local oneData = {}
            local power = 0
            local level = heroData["heroLevel"]
            local heroId = heroData["heroId"]
            local rankLv = heroData["rankLv"] or 0
            local stage = heroData["stage"] or 0
            local quality = heroData["heroQuality"] or 0
            local maxLevel = heroData["maxLevel"] or 0
            local curMilitaryRankId = HeroUtils.GetRankIdByLvAndStage(heroId, rankLv, stage)
            local k1 = LuaEntry.DataConfig:TryGetNum("power_setting", "k1")
            local beyondTimes = HeroUtils.GetBeyondTimesByLevel(maxLevel)
            local curAtk, curDef = HeroUtils.GetHeroAttr(heroId,quality,level,beyondTimes,curMilitaryRankId)
            local k5 = LuaEntry.DataConfig:TryGetNum("power_setting", "k5")
            if k5 <=0 then
                k5 = 1
            end
            power = Mathf.Round(Mathf.Pow((curAtk + curDef),k5) * k1)
            local skillData = heroData["skillInfos"]
            local firstSkillId  = HeroUtils.GetHeroFirstSkillId(heroId, rankLv)
            local skillLv = 0
            for a,b in pairs(skillData) do
                local id = b["skillId"]
                local skillLevel = b["skillLv"]
                if id == firstSkillId then
                    skillLv = skillLevel
                end
                local powerStr = GetTableData(TableName.SkillTab, id, 'power')
                local strArr = string.split(powerStr,"|")
                if #strArr>=skillLevel then
                    power  =  power  + tonumber(strArr[skillLevel])
                end
            end
            oneData.heroId = tostring(heroId)
            oneData.heroLv = level
            oneData.heroQuality = quality
            oneData.rankId = curMilitaryRankId
            oneData.index = heroData["index"]
            oneData.power = power
            oneData.damage = HeroUtils.GetHeroSkillDamage(firstSkillId,skillLv)
            return oneData
        end

        local function GetEffectNum(battleEffect,effectId)
            if battleEffect~=nil then
                return battleEffect:GetValue(effectId)
            end
            return 0
        end

        if leftFightData.unitData~=nil then
            local attr = leftFightData.unitAttrInfo
            if attr==nil then
                return
            end
            local heroes = leftFightData.unitData:GetPlayerHeroes()
            if table.count(heroes) == 0 then
                return
            end
            local heroList = table.values(heroes)
            table.sort(heroList, function(heroA, heroB)
                return heroA["index"] < heroB["index"]
            end)
            local heroKey = {}
            local sumSkillDamage = 0
            for i =1,#heroList do
                local heroData = heroList[i]
                local oneData = GetHeroInfo(heroData)
                sumSkillDamage = sumSkillDamage+oneData.damage
                table.insert(heroKey,oneData)
                table.insert(leftHero,oneData)
            end
            local heroAtk =  attr:GetAtkAttrByType(AtkDefReason.HERO)
            local heroDef =  attr:GetDefAttrByType(AtkDefReason.HERO)
            local leftEffectList ={}
            for k,v in pairs(CheckHeroCampAddEffectList) do
                local leftValue = 0
                if leftBattleEffect~=nil then
                    leftValue = leftBattleEffect:GetValue(v)
                end
                if leftValue>0 then
                    local oneData = {}
                    oneData.effectId = v
                    oneData.value = leftValue
                    table.insert(leftEffectList,oneData)
                end
            end
            local campAtkAdd = MarchUtil.GetCampBonusExtraVal(heroKey,leftEffectList)
            --士兵攻击力
            local soldierBasicAtk = 0
            --士兵防御力
            local soldierBasicDef= 0
            --士兵血量
            local soldierBasicHealth = 0
            --兵数
            local soldierTotalNum =0
            local soliderList = leftFightData.unitData:GetSoldiers()
            local index = leftFightData.unitData:GetFormationIndex()
            local formationAtkAddNum = GetEffectNum(leftBattleEffect,MarchUtil.GetFormationAtkAddEffectEnumByIndex(index))
            local formationDefAddNum = GetEffectNum(leftBattleEffect,MarchUtil.GetFormationDefAddEffectEnumByIndex(index))
            local totalFormationAtkAdd = GetEffectNum(leftBattleEffect,EffectDefine.APS_BATTLE_TROOP_TOTAL_ATK_INCR_PERCENT)
            local totalFormationDefAdd = GetEffectNum(leftBattleEffect,EffectDefine.APS_BATTLE_TROOP_TOTAL_DEF_INCR_PERCENT)
            local baseAtkEffectNum = GetEffectNum(leftBattleEffect,GetTableData("effect",EffectCoupleType.BASE_ATTACK,"arm_all"))
            local baseDefEffectNum = GetEffectNum(leftBattleEffect,GetTableData("effect",EffectCoupleType.BASE_DEFEND,"arm_all"))
            local baseHealthEffectNum = GetEffectNum(leftBattleEffect,GetTableData("effect",EffectCoupleType.BASE_HEALTH_PERCENT,"arm_all"))
            for k,v in pairs(soliderList) do
                local armId = k
                local num = v[eMailSoldierAttr.Total]-v[eMailSoldierAttr.Lost]
                local template = DataCenter.ArmyTemplateManager:GetArmyTemplate(k)
                if template ~= nil then
                    local atk = template.attack
                    local def = template.defence
                    local health = template.health
                    local typeStr = template:GetAddValueEffectName()
                    local typeAtkEffectNum = GetEffectNum(leftBattleEffect,GetTableData("effect",EffectCoupleType.BASE_ATTACK,typeStr))
                    local typeDefEffectNum = GetEffectNum(leftBattleEffect,GetTableData("effect",EffectCoupleType.BASE_DEFEND,typeStr))
                    local typeHealthEffectNum = GetEffectNum(leftBattleEffect,GetTableData("effect",EffectCoupleType.BASE_HEALTH_PERCENT,typeStr))
                    soldierBasicAtk = soldierBasicAtk + (atk*(1+((totalFormationAtkAdd+formationAtkAddNum+baseAtkEffectNum+typeAtkEffectNum)/100))*num)
                    soldierBasicDef = soldierBasicDef + (def*(1+((totalFormationDefAdd+formationDefAddNum+baseDefEffectNum+typeDefEffectNum)/100))*num)
                    soldierBasicHealth = soldierBasicHealth + (health*(1+((baseHealthEffectNum+typeHealthEffectNum)/100))*num)
                    soldierTotalNum = soldierTotalNum +num
                    leftSoliderList[armId] = num
                end
            end
            if soldierTotalNum>0 then
                local k1 = LuaEntry.DataConfig:TryGetNum("new_battle_config", "k1")
                local k2 = LuaEntry.DataConfig:TryGetNum("new_battle_config", "k2")
                local k3 = LuaEntry.DataConfig:TryGetNum("new_battle_config", "k3")
                local k15 = LuaEntry.DataConfig:TryGetNum("new_battle_config", "k15")
                local k16 = LuaEntry.DataConfig:TryGetNum("new_battle_config", "k16")
                local k18 = LuaEntry.DataConfig:TryGetNum("new_battle_config", "k18")
                local totalPower = (Mathf.Pow((soldierTotalNum*k1),k2)*(soldierBasicAtk/soldierTotalNum)*(soldierBasicDef/soldierTotalNum)*(soldierBasicHealth/soldierTotalNum)*Mathf.Pow((heroAtk),k3)*Mathf.Pow((heroDef),k3)*(1+(math.min(campAtkAdd,35)/100)))*(1+(sumSkillDamage/10))*soldierTotalNum/math.max(1,k15)
                leftPower = Mathf.Pow(totalPower,k18)
            end
        end

        if rightFightData.unitData~=nil then
            --if rightFightData.battleType == BattleType.Monster then
            --    rightMonsterId = rightFightData.monsterId
            --    if rightMonsterId==nil or rightMonsterId == "" or rightMonsterId == 0 then
            --        return
            --    end
            --else
            local attr = rightFightData.unitAttrInfo
            if attr==nil then
                return
            end
            local heroes = rightFightData.unitData:GetPlayerHeroes()
            if table.count(heroes) == 0 then
                return
            end
            local heroList = table.values(heroes)
            table.sort(heroList, function(heroA, heroB)
                return heroA["index"] < heroB["index"]
            end)
            local heroKey = {}
            local sumSkillDamage = 0
            for i =1,#heroList do
                local heroData = heroList[i]
                local oneData = GetHeroInfo(heroData)
                sumSkillDamage = sumSkillDamage+oneData.damage
                table.insert(heroKey,oneData)
                table.insert(rightHero,oneData)
            end
            local heroAtk =  attr:GetAtkAttrByType(AtkDefReason.HERO)
            local heroDef =  attr:GetDefAttrByType(AtkDefReason.HERO)
            local rightEffectList = {}
            for k,v in pairs(CheckHeroCampAddEffectList) do
                local rightValue = 0
                if rightBattleEffect~=nil then
                    rightValue = rightBattleEffect:GetValue(v)
                end
                if rightValue>0 then
                    local oneData = {}
                    oneData.effectId = v
                    oneData.value = rightValue
                    table.insert(rightEffectList,oneData)
                end
            end
            local campAtkAdd = MarchUtil.GetCampBonusExtraVal(heroKey,rightEffectList)
            --士兵攻击力
            local soldierBasicAtk = 0
            --士兵防御力
            local soldierBasicDef= 0
            --士兵血量
            local soldierBasicHealth = 0
            --兵数
            local soldierTotalNum =0
            local soliderList = rightFightData.unitData:GetSoldiers()
            local totalFormationAtkAdd = GetEffectNum(rightBattleEffect,EffectDefine.APS_BATTLE_TROOP_TOTAL_ATK_INCR_PERCENT)
            local totalFormationDefAdd = GetEffectNum(rightBattleEffect,EffectDefine.APS_BATTLE_TROOP_TOTAL_DEF_INCR_PERCENT)
            local index = rightFightData.unitData:GetFormationIndex()
            local formationAtkAddNum = GetEffectNum(rightBattleEffect,MarchUtil.GetFormationAtkAddEffectEnumByIndex(index))
            local formationDefAddNum = GetEffectNum(rightBattleEffect,MarchUtil.GetFormationDefAddEffectEnumByIndex(index))
            local baseAtkEffectNum = GetEffectNum(rightBattleEffect,GetTableData("effect",EffectCoupleType.BASE_ATTACK,"arm_all"))
            local baseDefEffectNum = GetEffectNum(rightBattleEffect,GetTableData("effect",EffectCoupleType.BASE_DEFEND,"arm_all"))
            local baseHealthEffectNum = GetEffectNum(rightBattleEffect,GetTableData("effect",EffectCoupleType.BASE_HEALTH_PERCENT,"arm_all"))
            for k,v in pairs(soliderList) do
                local armId = k
                local num = v[eMailSoldierAttr.Total]-v[eMailSoldierAttr.Lost]
                local template = DataCenter.ArmyTemplateManager:GetArmyTemplate(k)
                if template ~= nil then
                    local atk = template.attack
                    local def = template.defence
                    local health = template.health
                    local typeStr = template:GetAddValueEffectName()
                    local typeAtkEffectNum = GetEffectNum(rightBattleEffect,GetTableData("effect",EffectCoupleType.BASE_ATTACK,typeStr))
                    local typeDefEffectNum = GetEffectNum(rightBattleEffect,GetTableData("effect",EffectCoupleType.BASE_DEFEND,typeStr))
                    local typeHealthEffectNum = GetEffectNum(rightBattleEffect,GetTableData("effect",EffectCoupleType.BASE_HEALTH_PERCENT,typeStr))
                    soldierBasicAtk = soldierBasicAtk + (atk*(1+((totalFormationAtkAdd+formationAtkAddNum + baseAtkEffectNum+typeAtkEffectNum)/100))*num)
                    soldierBasicDef = soldierBasicDef + (def*(1+((totalFormationDefAdd+formationDefAddNum + baseDefEffectNum+typeDefEffectNum)/100))*num)
                    soldierBasicHealth = soldierBasicHealth + (health*(1+((baseHealthEffectNum+typeHealthEffectNum)/100))*num)
                    soldierTotalNum = soldierTotalNum +num
                    rightSoliderList[armId] = num
                end
            end
            if soldierTotalNum>0 then
                local k1 = LuaEntry.DataConfig:TryGetNum("new_battle_config", "k1")
                local k2 = LuaEntry.DataConfig:TryGetNum("new_battle_config", "k2")
                local k3 = LuaEntry.DataConfig:TryGetNum("new_battle_config", "k3")
                local k15 = LuaEntry.DataConfig:TryGetNum("new_battle_config", "k15")
                local k16 = LuaEntry.DataConfig:TryGetNum("new_battle_config", "k16")
                local k18 = LuaEntry.DataConfig:TryGetNum("new_battle_config", "k18")
                local totalPower = (Mathf.Pow((soldierTotalNum*k1),k2)*(soldierBasicAtk/soldierTotalNum)*(soldierBasicDef/soldierTotalNum)*(soldierBasicHealth/soldierTotalNum)*Mathf.Pow((heroAtk),k3)*Mathf.Pow((heroDef),k3)*(1+(math.min(campAtkAdd,35)/100)))*(1+(sumSkillDamage/10))*soldierTotalNum/math.max(1,k15)
                rightPower = Mathf.Pow(totalPower,k18)
            end
            --end
        end
        param.leftPower = leftPower
        param.rightPower = rightPower
        param.leftHero = leftHero
        param.rightHero = rightHero
        param.leftSoliderList = leftSoliderList
        param.rightSoliderList = rightSoliderList
        param.rightMonsterId = rightMonsterId
        param.selfHealth = selfHealth
        param.otherHealth = otherHealth
        param.bigRoundUuid = bigRoundUuid
        param.bigRoundIndex = bigRoundIndex
        param.pveEntrance = PveEntrance.BattlePlayBack
        param.scene = "PveScene1"
        param.battleResult = currentMail:GetMailExt():GetBattleWinInPve()
        param.jumpType = self.jumpType
        param.leftHeadParam  ={}
        if leftFightData.unitData~=nil then
            param.leftHeadParam.uid = leftFightData.unitData:GetUserId()
            param.leftHeadParam.pic = leftFightData.unitData.pic
            param.leftHeadParam.picVer = leftFightData.unitData.picVer
        end
        param.rightHeadParam = {}
        if rightFightData.battleType == BattleType.Monster or rightFightData.battleType == BattleType.BLACK_KNIGHT then
            param.rightHeadParam.monsterPic = "Assets/Main/Sprites/UI/UIMail/world_monster_boss_coin.png"
        else
            if rightFightData.unitData~=nil then
                param.rightHeadParam.uid = rightFightData.unitData:GetUserId()
                param.rightHeadParam.pic = rightFightData.unitData.pic
                param.rightHeadParam.picVer = rightFightData.unitData.picVer
            end
        end
        local needExchange = currentMail:GetMailExt():CheckIfNeedExchange()
        param.needExchange = needExchange
        param.mailExt = currentMail:GetMailExt()
        DataCenter.BattleLevel:Enter(param)
    end
end

function MailPlayerReport:OnClickBtnReplayNew()
    local currentMail = self._mailInfo
    if currentMail ==nil or (currentMail["type"] ~= MailType.NEW_FIGHT and currentMail["type"] ~= MailType.NEW_FIGHT_ARENA and currentMail["type"] ~= MailType.SHORT_KEEP_FIGHT_MAIL
            and currentMail["type"] ~= MailType.NEW_FIGHT_MINECAVE) then
        return
    end
    local count = currentMail:GetMailExt():GetTotalRoundCnt()
    if count==1 then
        local param = {}
        local _showData = currentMail:GetMailExt():GetShowRoundListDataByIndex(1)
        if (_showData == nil) then
            return
        end
        local roundFight = currentMail:GetMailExt():GetFightReportByRoundIndex(1)
        if ( roundFight == nil ) then
            return
        end
        local bigRoundIndex = _showData._roundIndex
        local bigRoundUuid = _showData.roundUuid
        local selfHealth = roundFight:GetTroopHealth(true)
        local otherHealth = roundFight:GetTroopHealth(false)
        local leftUuid = _showData.leftUuid
        local rightUuid = _showData.rightUuid
        local leftFightData = _showData.leftData
        local rightFightData = _showData.rightData
        local leftBattleEffect = currentMail:GetMailExt():GetMySideBattleEffect(leftUuid)
        local rightBattleEffect = currentMail:GetMailExt():GetOtherSideBattleEffect(rightUuid)
        local leftHero = {}
        local rightHero ={}
        local leftSoliderList = {}
        local rightSoliderList = {}
        local leftPower = 0
        local rightPower = 0
        local rightMonsterId = 0
        local str = LuaEntry.DataConfig:TryGetStr("battle_config", "k28") or ""
        local spls = string.split(str, ";")
        local function GetHeroInfo(heroData,spl)
            local oneData = {}
            local power = 0
            local level = heroData["heroLevel"]
            local heroId = heroData["heroId"]
            local rankLv = heroData["rankLv"] or 0
            local stage = heroData["stage"] or 0
            local quality = heroData["heroQuality"] or 0
            local maxLevel = heroData["maxLevel"] or 0
            local rarity = GetTableData(HeroUtils.GetHeroXmlName(), heroId, 'rarity')
            local curMilitaryRankId = HeroUtils.GetRankIdByLvAndStage(heroId, rankLv, stage)
            local k1 = LuaEntry.DataConfig:TryGetNum("power_setting", "k1")
            local beyondTimes = HeroUtils.GetBeyondTimesByLevel(maxLevel)
            local curAtk, curDef = HeroUtils.GetHeroAttr(heroId,quality,level,beyondTimes,curMilitaryRankId)
            local k5 = LuaEntry.DataConfig:TryGetNum("power_setting", "k5")
            if k5 <=0 then
                k5 = 1
            end
            power = Mathf.Round(Mathf.Pow((curAtk + curDef),k5) * k1)
            local skillData = heroData["skillInfos"]
            local firstSkillId  = HeroUtils.GetHeroFirstSkillId(heroId, rankLv)
            local skillLv = 0
            local showSkillId = nil
            if #spl>= rarity then
                showSkillId = tonumber(spl[rarity])
            end
            for a,b in pairs(skillData) do
                local id = b["skillId"]
                local skillLevel = b["skillLv"]
                if id == firstSkillId then
                    skillLv = skillLevel
                end
                local powerStr = GetTableData(TableName.SkillTab, id, 'power')
                local strArr = string.split(powerStr,"|")
                if #strArr>=skillLevel then
                    power  =  power  + tonumber(strArr[skillLevel])
                end
            end
            oneData.heroId = tostring(heroId)
            oneData.heroLv = level
            oneData.heroQuality = quality
            oneData.rankId = curMilitaryRankId
            oneData.index = heroData["index"]
            oneData.power = power
            oneData.damage = 0
            if showSkillId~=nil then
                oneData.damage = HeroUtils.GetHeroSkillDamage(showSkillId,skillLv)
            end
            return oneData
        end

        local function GetEffectNum(battleEffect,effectId)
            if battleEffect~=nil then
                return battleEffect:GetValue(effectId)
            end
            return 0
        end

        if leftFightData.unitData~=nil then
            local attr = leftFightData.unitAttrInfo
            if attr==nil then
                return
            end
            local heroes = leftFightData.unitData:GetPlayerHeroes()
            if table.count(heroes) == 0 then
                return
            end
            local heroList = table.values(heroes)
            table.sort(heroList, function(heroA, heroB)
                return heroA["index"] < heroB["index"]
            end)
            local heroKey = {}
            local sumSkillDamage = 0
            for i =1,#heroList do
                local heroData = heroList[i]
                local oneData = GetHeroInfo(heroData,spls)
                sumSkillDamage = sumSkillDamage+oneData.damage
                table.insert(heroKey,oneData)
                table.insert(leftHero,oneData)
            end
            local heroAtk =  attr:GetAtkAttrByType(AtkDefReason.HERO)
            local heroDef =  attr:GetDefAttrByType(AtkDefReason.HERO)
            local leftEffectList ={}
            for k,v in pairs(CheckHeroCampAddEffectList) do
                local leftValue = 0
                if leftBattleEffect~=nil then
                    leftValue = leftBattleEffect:GetValue(v)
                end
                if leftValue>0 then
                    local oneData = {}
                    oneData.effectId = v
                    oneData.value = leftValue
                    table.insert(leftEffectList,oneData)
                end
            end
            local campAtkAdd = MarchUtil.GetCampBonusExtraVal(heroKey,leftEffectList)
            --士兵攻击力
            local soldierBasicAtk = 0
            --士兵防御力
            local soldierBasicDef= 0
            --士兵血量
            local soldierBasicHealth = 0
            --兵数
            local soldierTotalNum =0
            local soliderList = leftFightData.unitData:GetSoldiers()
            local index = leftFightData.unitData:GetFormationIndex()
            local formationAtkAddNum = GetEffectNum(leftBattleEffect,MarchUtil.GetFormationAtkAddEffectEnumByIndex(index))
            local formationDefAddNum = GetEffectNum(leftBattleEffect,MarchUtil.GetFormationDefAddEffectEnumByIndex(index))
            local totalFormationAtkAdd = GetEffectNum(leftBattleEffect,EffectDefine.APS_BATTLE_TROOP_TOTAL_ATK_INCR_PERCENT)
            local totalFormationDefAdd = GetEffectNum(leftBattleEffect,EffectDefine.APS_BATTLE_TROOP_TOTAL_DEF_INCR_PERCENT)
            local baseAtkEffectNum = GetEffectNum(leftBattleEffect,GetTableData("effect",EffectCoupleType.BASE_ATTACK,"arm_all"))
            local baseDefEffectNum = GetEffectNum(leftBattleEffect,GetTableData("effect",EffectCoupleType.BASE_DEFEND,"arm_all"))
            local baseHealthEffectNum = GetEffectNum(leftBattleEffect,GetTableData("effect",EffectCoupleType.BASE_HEALTH_PERCENT,"arm_all"))
            local heroAtkValue = heroAtk/100
            local heroDefValue = heroDef/100
            for k,v in pairs(soliderList) do
                local armId = k
                local num = v[eMailSoldierAttr.Total]-v[eMailSoldierAttr.Lost]
                local template = DataCenter.ArmyTemplateManager:GetArmyTemplate(k)
                if template ~= nil then
                    local atk = template.attack
                    local def = template.defence
                    local health = template.health
                    local typeStr = template:GetAddValueEffectName()
                    local typeAtkEffectNum = GetEffectNum(leftBattleEffect,GetTableData("effect",EffectCoupleType.BASE_ATTACK,typeStr))
                    local typeDefEffectNum = GetEffectNum(leftBattleEffect,GetTableData("effect",EffectCoupleType.BASE_DEFEND,typeStr))
                    local typeHealthEffectNum = GetEffectNum(leftBattleEffect,GetTableData("effect",EffectCoupleType.BASE_HEALTH_PERCENT,typeStr))
                    soldierBasicAtk = soldierBasicAtk + (atk*(1+((heroAtkValue+campAtkAdd+totalFormationAtkAdd+formationAtkAddNum+baseAtkEffectNum+typeAtkEffectNum)/100))*num)
                    soldierBasicDef = soldierBasicDef + (def*(1+((heroDefValue+totalFormationDefAdd+formationDefAddNum + baseDefEffectNum+typeDefEffectNum)/100))*num)
                    soldierBasicHealth = soldierBasicHealth + (health*(1+((baseHealthEffectNum+typeHealthEffectNum)/100))*num)
                    soldierTotalNum = soldierTotalNum +num
                    leftSoliderList[armId] = num
                end
            end
            if soldierTotalNum>0 then
                local k25 = LuaEntry.DataConfig:TryGetNum("battle_config", "k25")
                local k26 = LuaEntry.DataConfig:TryGetNum("battle_config", "k26")
                local k27 = LuaEntry.DataConfig:TryGetNum("battle_config", "k27")
                local totalPower = (Mathf.Pow(soldierTotalNum,k25))*(soldierBasicAtk/soldierTotalNum)*(soldierBasicDef/soldierTotalNum)*(soldierBasicHealth/soldierTotalNum)*(1+(sumSkillDamage/10))*soldierTotalNum
                leftPower = Mathf.Pow(totalPower,k26)*k27
            end
        end

        if rightFightData.unitData~=nil then
            --if rightFightData.battleType == BattleType.Monster then
            --    rightMonsterId = rightFightData.monsterId
            --    if rightMonsterId==nil or rightMonsterId == "" or rightMonsterId == 0 then
            --        return
            --    end
            --else
            local attr = rightFightData.unitAttrInfo
            if attr==nil then
                return
            end
            local heroes = rightFightData.unitData:GetPlayerHeroes()
            if table.count(heroes) == 0 then
                return
            end
            local heroList = table.values(heroes)
            table.sort(heroList, function(heroA, heroB)
                return heroA["index"] < heroB["index"]
            end)
            local heroKey = {}
            local sumSkillDamage = 0
            for i =1,#heroList do
                local heroData = heroList[i]
                local oneData = GetHeroInfo(heroData,spls)
                sumSkillDamage = sumSkillDamage+oneData.damage
                table.insert(heroKey,oneData)
                table.insert(rightHero,oneData)
            end
            local heroAtk =  attr:GetAtkAttrByType(AtkDefReason.HERO)
            local heroDef =  attr:GetDefAttrByType(AtkDefReason.HERO)
            local rightEffectList = {}
            for k,v in pairs(CheckHeroCampAddEffectList) do
                local rightValue = 0
                if rightBattleEffect~=nil then
                    rightValue = rightBattleEffect:GetValue(v)
                end
                if rightValue>0 then
                    local oneData = {}
                    oneData.effectId = v
                    oneData.value = rightValue
                    table.insert(rightEffectList,oneData)
                end
            end
            local campAtkAdd = MarchUtil.GetCampBonusExtraVal(heroKey,rightEffectList)
            --士兵攻击力
            local soldierBasicAtk = 0
            --士兵防御力
            local soldierBasicDef= 0
            --士兵血量
            local soldierBasicHealth = 0
            --兵数
            local soldierTotalNum =0
            local soliderList = rightFightData.unitData:GetSoldiers()
            local totalFormationAtkAdd = GetEffectNum(rightBattleEffect,EffectDefine.APS_BATTLE_TROOP_TOTAL_ATK_INCR_PERCENT)
            local totalFormationDefAdd = GetEffectNum(rightBattleEffect,EffectDefine.APS_BATTLE_TROOP_TOTAL_DEF_INCR_PERCENT)
            local index = rightFightData.unitData:GetFormationIndex()
            local formationAtkAddNum = GetEffectNum(rightBattleEffect,MarchUtil.GetFormationAtkAddEffectEnumByIndex(index))
            local formationDefAddNum = GetEffectNum(rightBattleEffect,MarchUtil.GetFormationDefAddEffectEnumByIndex(index))
            local baseAtkEffectNum = GetEffectNum(rightBattleEffect,GetTableData("effect",EffectCoupleType.BASE_ATTACK,"arm_all"))
            local baseDefEffectNum = GetEffectNum(rightBattleEffect,GetTableData("effect",EffectCoupleType.BASE_DEFEND,"arm_all"))
            local baseHealthEffectNum = GetEffectNum(rightBattleEffect,GetTableData("effect",EffectCoupleType.BASE_HEALTH_PERCENT,"arm_all"))
            local heroAtkValue = heroAtk/100
            local heroDefValue = heroDef/100
            for k,v in pairs(soliderList) do
                local armId = k
                local num = v[eMailSoldierAttr.Total]-v[eMailSoldierAttr.Lost]
                local template = DataCenter.ArmyTemplateManager:GetArmyTemplate(k)
                if template ~= nil then
                    local atk = template.attack
                    local def = template.defence
                    local health = template.health
                    local typeStr = template:GetAddValueEffectName()
                    local typeAtkEffectNum = GetEffectNum(rightBattleEffect,GetTableData("effect",EffectCoupleType.BASE_ATTACK,typeStr))
                    local typeDefEffectNum = GetEffectNum(rightBattleEffect,GetTableData("effect",EffectCoupleType.BASE_DEFEND,typeStr))
                    local typeHealthEffectNum = GetEffectNum(rightBattleEffect,GetTableData("effect",EffectCoupleType.BASE_HEALTH_PERCENT,typeStr))
                    soldierBasicAtk = soldierBasicAtk + (atk*(1+((heroAtkValue+campAtkAdd+totalFormationAtkAdd+formationAtkAddNum+baseAtkEffectNum+typeAtkEffectNum)/100))*num)
                    soldierBasicDef = soldierBasicDef + (def*(1+((heroDefValue+totalFormationDefAdd+formationDefAddNum+baseDefEffectNum+typeDefEffectNum)/100))*num)
                    soldierBasicHealth = soldierBasicHealth + (health*(1+((baseHealthEffectNum+typeHealthEffectNum)/100))*num)
                    soldierTotalNum = soldierTotalNum +num
                    rightSoliderList[armId] = num
                end
            end
            if soldierTotalNum>0 then
                local k25 = LuaEntry.DataConfig:TryGetNum("battle_config", "k25")
                local k26 = LuaEntry.DataConfig:TryGetNum("battle_config", "k26")
                local k27 = LuaEntry.DataConfig:TryGetNum("battle_config", "k27")
                local totalPower = (Mathf.Pow(soldierTotalNum,k25))*(soldierBasicAtk/soldierTotalNum)*(soldierBasicDef/soldierTotalNum)*(soldierBasicHealth/soldierTotalNum)*(1+(sumSkillDamage/10))*soldierTotalNum
                rightPower = Mathf.Pow(totalPower,k26)*k27
            end
            --end
        end
        param.leftPower = leftPower
        param.rightPower = rightPower
        param.leftHero = leftHero
        param.rightHero = rightHero
        param.leftSoliderList = leftSoliderList
        param.rightSoliderList = rightSoliderList
        param.rightMonsterId = rightMonsterId
        param.selfHealth = selfHealth
        param.otherHealth = otherHealth
        param.bigRoundUuid = bigRoundUuid
        param.bigRoundIndex = bigRoundIndex
        param.pveEntrance = PveEntrance.BattlePlayBack
        param.scene = "PveScene1"
        param.battleResult = currentMail:GetMailExt():GetBattleWinInPve()
        param.jumpType = self.jumpType
        param.leftHeadParam  ={}
        if leftFightData.unitData~=nil then
            param.leftHeadParam.uid = leftFightData.unitData:GetUserId()
            param.leftHeadParam.pic = leftFightData.unitData.pic
            param.leftHeadParam.picVer = leftFightData.unitData.picVer
        end
        param.rightHeadParam = {}
        if rightFightData.battleType == BattleType.Monster or rightFightData.battleType == BattleType.BLACK_KNIGHT then
            param.rightHeadParam.monsterPic = "Assets/Main/Sprites/UI/UIMail/world_monster_boss_coin.png"
        else
            if rightFightData.unitData~=nil then
                param.rightHeadParam.uid = rightFightData.unitData:GetUserId()
                param.rightHeadParam.pic = rightFightData.unitData.pic
                param.rightHeadParam.picVer = rightFightData.unitData.picVer
            end
        end
        local needExchange = currentMail:GetMailExt():CheckIfNeedExchange()
        param.needExchange = needExchange
        param.mailExt = currentMail:GetMailExt()
        DataCenter.BattleLevel:Enter(param)
    end
end

function MailPlayerReport:OnLeftStatusClick()
    local param = UIHeroTipView.Param.New()
    param.title = Localization:GetString("180219")
    param.content = Localization:GetString("180221")
    param.dir = UIHeroTipView.Direction.BELOW
    param.defWidth = 600
    param.pivot = 0.5
    param.position = self._leftStatus.transform.position + Vector3.New(0, -30, 0)
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIHeroTip, { anim = false }, param)
end

function MailPlayerReport:OnRightStatusClick()
    local param = UIHeroTipView.Param.New()
    param.title = Localization:GetString("180219")
    param.content = Localization:GetString("180221")
    param.dir = UIHeroTipView.Direction.BELOW
    param.defWidth = 600
    param.pivot = 0.5
    param.position = self._rightStatus.transform.position + Vector3.New(0, -30, 0)
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIHeroTip, { anim = false }, param)
end

function MailPlayerReport:CanShowResResult()
    local ext = self._mailInfo:GetMailExt()
    if ext ~= nil and (ext:IsExistBlackKnightBattle() or ext:IsExistExpeditionaryDuelBattle()) then
        return false, ""
    end
    local winRes = ext:GetFightReportByRoundIndex(self.bigRoundIndex):GetFightResItemArr(self.leftUuid)
    local winResItem = ext:GetFightReportByRoundIndex(self.bigRoundIndex):GetResRewardItemArr(self.leftUuid)
    if table.count(winRes) > 0 or table.count(winResItem) > 0 then
        -- 我掠夺别人
        if not ext:IsHelpOther(self.rightFightData.uid) then -- 右方不是援助者
            return true, ""
        end
    end
    local loseRes = ext:GetResLostListByTargetUuid(self.rightUuid)
    local loseResItem = ext:GetResItemLostListByTargetUuid(self.rightUuid)
    if table.count(loseRes) > 0 or table.count(loseResItem) > 0 then
        -- 别人掠夺我
        if not ext:IsHelpOther(self.leftFightData.uid) then -- 左方不是援助者
            return true, ""
        end
    end
    return false, ""
end

function MailPlayerReport:GetResResultDesc()
    local descs = {}
    
    if self.rightBattleEffect~=nil and self.rightBattleEffect:GetValue(EffectDefine.PROTECT_PLUNDER) > 0 then
        table.insert(descs, Localization:GetString("110731"))
    end
    
    if #descs > 0 then
        return string.join(descs, "\n")
    else
        return ""
    end
end

return MailPlayerReport