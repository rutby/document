---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2021/10/25 16:26
---


local MailAlLeaderVote = BaseClass("MailAlLeaderVote", UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization
local rapidjson = require "rapidjson"

local title_path = "UIMailItemTitle/txtMainTitle"
local subTitle_path = "UIMailItemTitle/txtSubTitle"
local time_path = "UIMailItemTitle/txtTime"
local mailMsg_path = "txtDesc"
local voteBtn_path = "vote/btnVote"
local voteBtnTxt_path = "vote/btnVote/txtVote"

local function OnCreate(self)
    base.OnCreate(self)

    self.titleN = self:AddComponent(UITextMeshProUGUIEx, title_path)
    self.subTitleN = self:AddComponent(UITextMeshProUGUIEx, subTitle_path)
    self.timeN = self:AddComponent(UITextMeshProUGUIEx, time_path)
    self.mailMsgN = self:AddComponent(UITextMeshProUGUIEx, mailMsg_path)-- self:AddComponent(UITextMeshProUGUIEx, mailMsg_path)
    self.voteBtnN = self:AddComponent(UIButton, voteBtn_path)
    self.voteBtnN:SetOnClick(function()
        self:OnClickVoteBtn()
    end)
    self.voteBtnTxtN = self:AddComponent(UITextMeshProUGUIEx, voteBtnTxt_path)
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.AlLeaderVoteStatusChange, self.OnVoteStatusChange)
    self:AddUIListener(EventId.AlSysStateChange, self.OnVoteStatusChange)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
    self:RemoveUIListener(EventId.AlLeaderVoteStatusChange, self.OnVoteStatusChange)
    self:RemoveUIListener(EventId.AlSysStateChange, self.OnVoteStatusChange)
end

local function OnDestroy(self)
    base.OnDestroy(self)
end

local function setData(self, mailInfo)
    self.mailInfo = mailInfo
    self:ParseContent()
    self:RefreshUI()
end

local function ParseContent(self)
    if self.mailInfo == nil then
        return;
    end

end

local function RefreshUI(self)
    local strMainTitle = MailShowHelper.GetMainTitle(self.mailInfo)
    self.titleN:SetText(strMainTitle)
    local strSubTitle = MailShowHelper.GetMailSubTitle(self.mailInfo)
    self.subTitleN:SetText(strSubTitle)
    local strTime = MailShowHelper.GetAbstractCreateTime(self.mailInfo)
    self.timeN:SetText(strTime)
    local mailMsg = self.mailInfo:GetMailMessage()
    self.mailMsgN:SetText(mailMsg)
    
    self:SetVoteBtn()
end

local function SetVoteBtn(self)
    local voteStatus = DataCenter.AllianceLeaderElectManager:GetAlLeaderVoteStatus()
    if voteStatus == 0 then
        CS.UIGray.SetGray(self.voteBtnN.transform, false, true)
        self.voteBtnTxtN:SetLocalText(390861) 
        --self.electBtnN:SetInteractable(false)
    else
        CS.UIGray.SetGray(self.voteBtnN.transform, true, false)
        if voteStatus == 3 then
            self.voteBtnTxtN:SetLocalText(390862) 
        else
            self.voteBtnTxtN:SetLocalText(390874) 
        end
    end
end

local function OnClickVoteBtn(self)
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIAlLeaderVote)
end

local function OnVoteStatusChange(self)
    self:RefreshUI()
end

MailAlLeaderVote.OnCreate = OnCreate
MailAlLeaderVote.OnDestroy = OnDestroy
MailAlLeaderVote.setData = setData
MailAlLeaderVote.ParseContent = ParseContent
MailAlLeaderVote.RefreshUI = RefreshUI
MailAlLeaderVote.OnClickVoteBtn = OnClickVoteBtn
MailAlLeaderVote.SetVoteBtn = SetVoteBtn
MailAlLeaderVote.OnAddListener = OnAddListener
MailAlLeaderVote.OnRemoveListener = OnRemoveListener
MailAlLeaderVote.OnVoteStatusChange = OnVoteStatusChange

return MailAlLeaderVote