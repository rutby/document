---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2021/9/7 12:22
---
local ExploreView = BaseClass("ExploreView", UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization
local HeroDamageItem = require "UI.UIMailNew.UIMailMainPanel.Component.MailTypeContent.Explore.HeroDamageItem"

local mail_main_title_path = "UIMailItemTitle/txtMainTitle"
local mail_sub_title_path = "UIMailItemTitle/txtSubTitle"
local mail_time_text_path = "UIMailItemTitle/txtTime"
local mail_hero_path = "HeroAndResult/Hero"

local attacker_head_path = "Info/Left_Part/Attack_User_Info/UIPlayerHead/HeadIcon"
local attacker_head_bg_path = "Info/Left_Part/Attack_User_Info/UIPlayerHead/Foreground"
local attacker_name_path = "Info/Left_Part/Attack_User_Info/Attacker_Name_Text"
local attacker_pos_text_path = "Info/Left_Part/Attack_User_Info/btnPosLeft/txtPosLeft"
local attacker_pos_btn_path = "Info/Left_Part/Attack_User_Info/btnPosLeft"

local defender_head_path = "Info/Right_Part/Defender_User_Info/UIPlayerHead/HeadIcon"
local defender_name_path = "Info/Right_Part/Defender_User_Info/Defender_Name_Text"
local defender_pos_text_path = "Info/Right_Part/Defender_User_Info/btnPosRight/txtPosRight"
local defender_pos_btn_path = "Info/Right_Part/Defender_User_Info/btnPosRight"

local win_path = "HeroAndResult/Win"
local win_text_path = "HeroAndResult/Win/Win_Text"
local win_title_path = "HeroAndResult/Win/Win_Bg/Win_Title"

local loose_path = "HeroAndResult/Loose"
local loose_text_path = "HeroAndResult/Loose/Loose_Text"

local improve1_btn_text_path = "HeroAndResult/Loose/Improve1/Improve1_Btn/Improve1_Btn_Text"
local improve1_btn_path = "HeroAndResult/Loose/Improve1/Improve1_Btn"
local improve1_text_path = "HeroAndResult/Loose/Improve1/Improve1_Text"

local improve2_btn_text_path = "HeroAndResult/Loose/Improve2/Improve2_Btn/Improve2_Btn_Text"
local improve2_btn_path = "HeroAndResult/Loose/Improve2/Improve2_Btn"
local improve2_text_path = "HeroAndResult/Loose/Improve2/Improve2_Text"
local hp_progress_path = "HeroAndResult/Loose/ObjSlideBar"
local hp_progress_slider_path = "HeroAndResult/Loose/ObjSlideBar/imgSlideBar"
local hp_progress_slider_bg_path = "HeroAndResult/Loose/ObjSlideBar/imgSlideBg"
local hp_progress_text_path = "HeroAndResult/Loose/ObjSlideBar/txtSlideBar"
local hp_progress_title_text_path = "HeroAndResult/Loose/ObjSlideBar/sliderTitle"

local improve3_btn_text_path = "HeroAndResult/Loose/Improve3/Improve3_Btn/Improve3_Btn_Text"
local improve3_btn_path = "HeroAndResult/Loose/Improve3/Improve3_Btn"
local improve3_text_path = "HeroAndResult/Loose/Improve3/Improve3_Text"

local improve4_btn_text_path = "HeroAndResult/Loose/Improve4/Improve4_Btn/Improve4_Btn_Text"
local improve4_btn_path = "HeroAndResult/Loose/Improve4/Improve4_Btn"
local improve4_text_path = "HeroAndResult/Loose/Improve4/Improve4_Text"
local improve4_path = "HeroAndResult/Loose/Improve4"


local loose_show_general_on_num = 5

local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
end

local function ComponentDefine(self)
    self.mail_main_title = self:AddComponent(UITextMeshProUGUIEx, mail_main_title_path)
    self.mail_sub_title = self:AddComponent(UITextMeshProUGUIEx, mail_sub_title_path)
    self.mail_time_text = self:AddComponent(UITextMeshProUGUIEx, mail_time_text_path)
    self.mail_hero = self:AddComponent(UIBaseContainer, mail_hero_path)

    self.attacker_head = self:AddComponent(UIPlayerHead, attacker_head_path)
    self.attacker_head_bg = self:AddComponent(UIImage, attacker_head_bg_path)
    self.attacker_name = self:AddComponent(UITextMeshProUGUIEx, attacker_name_path)
    self.attacker_pos_text = self:AddComponent(UITextMeshProUGUI, attacker_pos_text_path)
    self.attacker_pos_btn = self:AddComponent(UIButton, attacker_pos_btn_path)
    self.attacker_pos_btn:SetOnClick(BindCallback(self, self.OnClickPosLeft))

    self.defender_head = self:AddComponent(UIImage, defender_head_path)
    self.defender_name = self:AddComponent(UITextMeshProUGUIEx, defender_name_path)
    self.defender_pos_text = self:AddComponent(UITextMeshProUGUI, defender_pos_text_path)
    self.defender_pos_btn = self:AddComponent(UIButton, defender_pos_btn_path)
    self.defender_pos_btn:SetOnClick(BindCallback(self, self.OnClickPosRight))

    self.win = self:AddComponent(UIBaseContainer, win_path)
    self.win_text = self:AddComponent(UITextMeshProUGUIEx, win_text_path)
    self.win_title = self:AddComponent(UITextMeshProUGUIEx, win_title_path)
    self.win_title:SetLocalText(390186) 
    self.win_text:SetLocalText(140060) 
    
    self.loose = self:AddComponent(UIBaseContainer, loose_path)
    self.loose_text = self:AddComponent(UITextMeshProUGUIEx, loose_text_path)
    self.loose_text:SetLocalText(140061) 

    self.improve1_btn_text = self:AddComponent(UITextMeshProUGUIEx, improve1_btn_text_path)
    self.improve2_btn_text = self:AddComponent(UITextMeshProUGUIEx, improve2_btn_text_path)
    self.improve3_btn_text = self:AddComponent(UITextMeshProUGUIEx, improve3_btn_text_path)
    self.improve4_btn_text = self:AddComponent(UITextMeshProUGUIEx, improve4_btn_text_path)
    self.improve1_btn_text:SetLocalText(GameDialogDefine.GOTO) 
    self.improve2_btn_text:SetLocalText(GameDialogDefine.GOTO) 
    self.improve3_btn_text:SetLocalText(GameDialogDefine.GOTO) 
    self.improve4_btn_text:SetLocalText(GameDialogDefine.GOTO) 

    self.improve1_text = self:AddComponent(UITextMeshProUGUIEx, improve1_text_path)
    self.improve2_text = self:AddComponent(UITextMeshProUGUIEx, improve2_text_path)
    self.improve3_text = self:AddComponent(UITextMeshProUGUIEx, improve3_text_path)
    self.improve4_text = self:AddComponent(UITextMeshProUGUIEx, improve4_text_path)
    self.improve1_text:SetLocalText(140062) 
    self.improve2_text:SetLocalText(140064) 
    self.improve3_text:SetLocalText(140063) 
    self.improve4_text:SetLocalText(140065) 

    self.improve1_btn = self:AddComponent(UIButton, improve1_btn_path)
    self.improve2_btn = self:AddComponent(UIButton, improve2_btn_path)
    self.improve3_btn = self:AddComponent(UIButton, improve3_btn_path)
    self.improve4_btn = self:AddComponent(UIButton, improve4_btn_path)
    self.improve4 = self:AddComponent(UIBaseContainer, improve4_path)

    self.hp_progress = self:AddComponent(UIBaseContainer, hp_progress_path)
    self.hp_progress_slider = self:AddComponent(UIImage, hp_progress_slider_path)
    self.hp_progress_slider_bg = self:AddComponent(UIImage, hp_progress_slider_bg_path)
    self.hp_progress_text = self:AddComponent(UITextMeshProUGUIEx, hp_progress_text_path)
    self.hp_progress_title_text = self:AddComponent(UITextMeshProUGUIEx, hp_progress_title_text_path)
    self.hp_progress_title_text:SetLocalText(311058)
    local sliderRect = self.hp_progress_slider_bg.rectTransform.rect
    self._slideBarTotalWidth_Right = sliderRect.width-4
    self._slideBarTotalHeight_Right = sliderRect.height-5

    self.improve1_btn:SetOnClick(function()  
SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnUpgradeHeroLevel()
    end)
    
    self.improve2_btn:SetOnClick(function()  
SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnUpgradeHeroQuality()
    end)
    
    self.improve3_btn:SetOnClick(function()  
SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnRecruitHero()
    end)

    self.improve4_btn:SetOnClick(function()  
SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnMoreHero()
    end)
end

local function DataDefine(self)
    
end

-- 销毁
local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function ComponentDestroy(self)
    self.mail_hero:RemoveComponents(HeroDamageItem)

end

local function DataDestroy(self)
    self._mailData = nil
end

local function setData(self, maildata)
    self._mailData = maildata
    -- 设置数据
    local _strTitle = MailShowHelper.GetMainTitle(maildata)
    self.mail_main_title:SetText(_strTitle)
    local _strSubTitle = MailShowHelper.GetMailSubTitle(maildata)
    self.mail_sub_title:SetText(_strSubTitle)
    local _strTime = MailShowHelper.GetAbstractCreateTime(maildata)
    self.mail_time_text:SetText(_strTime)
    
    self:SetAttackerView(maildata)
    self:SetDefenderView(maildata)
end

local function  ShowHeroList(self, maildata)
    --local pay = maildata:GetMailPay()
    --local reward = maildata:GetMailReward()
    local mailExt =  maildata:GetMailExt();
    if mailExt ~= nil and mailExt.heroInfos ~= nil then
        table.walk(mailExt.heroInfos, function (_, v)
            local param = {}
            param.totalDamage = mailExt.showTotalDamage
            param.heroId = v.heroId
            param.heroLevel = v.heroLevel
            param.heroQuality = v.heroQuality
            param.damage = v.damage

            self:GameObjectInstantiateAsync(UIAssets.HeroDamageItem, function(request)
                if request.isError then
                    return
                end
                local go = request.gameObject
                go:SetActive(true)
                go.transform:SetParent(self.mail_hero.transform)
                go.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
                go.transform.localPosition = VecZero
                local nameStr = tostring(NameCount)
                go.name = nameStr
                NameCount = NameCount + 1
                local item = self.mail_hero:AddComponent(HeroDamageItem, nameStr)
                item:SetData(param)
            end)
        end)
    end
end

local function SetAttackerView(self, maildata)
    local mailExt =  maildata:GetMailExt();
    if mailExt ~= nil then
        self:ShowHeroList(maildata)
        self.attacker_name:SetText(mailExt:GetUserName())
        
        self.attacker_head:SetData(mailExt["userUid"],  mailExt["userPic"], mailExt["userPicVer"])
        --local headBgImg = mailExt["userHeadFrame"] == 1 and "Common_playerbg_golloes" or nil
        local headBgImg = DataCenter.DecorationDataManager:GetHeadFrame(mailExt["headSkinId"], mailExt["headSkinET"], mailExt["userHeadFrame"] == 1)

        if headBgImg then
            self.attacker_head_bg:SetActive(true)
            --self.attacker_head_bg:LoadSprite(string.format(LoadPath.CommonNewPath, headBgImg))
            self.attacker_head_bg:LoadSprite(headBgImg)
        else
            self.attacker_head_bg:SetActive(false)
        end
        
        local strPoint = Localization:GetString("310137", mailExt.attackerPointX, mailExt.attackerPointY)
        self.attacker_pos_text:SetText(strPoint)
    end
end

local function SetDefenderView(self, maildata)
    local mailExt =  maildata:GetMailExt();
    if mailExt ~= nil then
        self.win:SetActive(mailExt:GetExploreWin())
        self.loose:SetActive(not mailExt:GetExploreWin())
        if not mailExt:GetExploreWin() then
            self.improve4:SetActive(mailExt.heroInfos == nil or table.count(mailExt.heroInfos) < loose_show_general_on_num)
        end
        self.defender_name:SetLocalText(300601) 
        local strPoint = Localization:GetString("310137", mailExt.enemyPointX, mailExt.enemyPointY)
        self.defender_pos_text:SetText(strPoint)
        
        if mailExt.enemyInfo == nil then
            self.hp_progress:SetActive(false)
        else
            self.hp_progress:SetActive(true)
            local ratio = 0.0
            local left = mailExt.enemyInfo["health"]
            local total = mailExt.enemyInfo["initHealth"]
            if (total > 0) then
                ratio = left/total
                ratio = ratio < 0 and 0 or ratio
                ratio = ratio > 1 and 1 or ratio
            end
            
            local curlength = self._slideBarTotalWidth_Right * ratio
            self.hp_progress_slider.rectTransform:Set_sizeDelta(curlength, self._slideBarTotalHeight_Right)
            local strRatio = string.format("%.1f%%", ratio*100)
            self.hp_progress_text:SetText(strRatio)
        end
    end
end

local function OnMoreHero(self)
    self.view.ctrl:OnMoreHero()
    self.view.ctrl:CloseSelf()
end

local function OnUpgradeHeroLevel(self)
    local lowestHeroUid = nil
    local lowestHeroLevel = 1000000
    local mailExt =  self._mailData:GetMailExt();
    table.walk(mailExt.heroInfos, function (_, v)
        local data = DataCenter.HeroDataManager:GetHeroByUuid(v.heroUid)
        if data ~= nil and data.level < lowestHeroLevel then
            lowestHeroUid = data.uuid
            lowestHeroLevel = data.level
        end
    end)
    if lowestHeroUid ~= nil then
        self.view.ctrl:OnUpgradeHeroLevel(lowestHeroUid)
        self.view.ctrl:CloseSelf()
    end
end

local function OnRecruitHero(self)
    self.view.ctrl:OnRecruitHero()
    self.view.ctrl:CloseSelf()
end

local function OnUpgradeHeroQuality(self)
    self.view.ctrl:OnUpgradeHeroQuality()
    self.view.ctrl:CloseSelf()
end

local  function OnClickPosRight(self)
    local mailExt =  self._mailData:GetMailExt();
    if mailExt ~= nil then
        local v2 = CS.UnityEngine.Vector2Int(mailExt.enemyPointX, mailExt.enemyPointY)

        local pointId = SceneUtils.TilePosToIndex(v2)
        self.view.ctrl:OnClickPosBtn(pointId)
    end
end

local function OnClickPosLeft(self)
    local mailExt =  self._mailData:GetMailExt();
    if mailExt ~= nil then
        local v2 = CS.UnityEngine.Vector2Int(mailExt.attackerPointX, mailExt.attackerPointY)

        local pointId = SceneUtils.TilePosToIndex(v2)
        self.view.ctrl:OnClickPosBtn(pointId)
    end
end

ExploreView.ShowHeroList = ShowHeroList
ExploreView.OnCreate = OnCreate
ExploreView.ComponentDefine = ComponentDefine
ExploreView.DataDefine = DataDefine
ExploreView.OnDestroy = OnDestroy
ExploreView.ComponentDestroy = ComponentDestroy
ExploreView.DataDestroy = DataDestroy
ExploreView.setData = setData
ExploreView.SetAttackerView = SetAttackerView
ExploreView.SetDefenderView = SetDefenderView
ExploreView.OnMoreHero = OnMoreHero
ExploreView.OnUpgradeHeroLevel = OnUpgradeHeroLevel
ExploreView.OnRecruitHero = OnRecruitHero
ExploreView.OnUpgradeHeroQuality = OnUpgradeHeroQuality
ExploreView.OnClickPosLeft = OnClickPosLeft
ExploreView.OnClickPosRight = OnClickPosRight

return ExploreView