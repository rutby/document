---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2021/9/14 11:54
---
local MailResSupportItem = BaseClass("MailResSupportItem", UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization
local rapidjson = require "rapidjson"
local MailScoutResourceItem = require "UI.UIMailNew.UIMailMainPanel.Component.MailTypeContent.ScoutType.MailScoutResourceItem"

local titleName_path = "nameTxt/name"
local titleNameTxt_path = "nameTxt"
local titleRate_path = "taxTxt/tax"
local titleRateTxt_path = "taxTxt" 
local titleTime_path = "time"
local resContent_path = "grid"
local resTemplate_path = "grid/resItem"
local newFlag_path = "newFlag"
local bg_path = ""

local function OnCreate(self)
    base.OnCreate(self)
    self.titleNameN = self:AddComponent(UITextMeshProUGUIEx, titleName_path)
    self.titleNameTxtN = self:AddComponent(UITextMeshProUGUIEx, titleNameTxt_path)
    self.titleNameTxtN:SetLocalText(311073) 
    self.titleTaxN = self:AddComponent(UITextMeshProUGUIEx, titleRate_path)
    self.titleTaxTxtN = self:AddComponent(UITextMeshProUGUIEx, titleRateTxt_path)
    self.titleTaxTxtN:SetLocalText(390107) 
    self.titleTimeN = self:AddComponent(UITextMeshProUGUIEx, titleTime_path)
    self.resContentN = self:AddComponent(UIBaseContainer, resContent_path)
    self.resTemplateN = self:AddComponent(UIBaseContainer, resTemplate_path)
    self.resTemplateN.gameObject:GameObjectCreatePool()
    self.resTemplateN:SetActive(false)
    self.newFlagN = self:AddComponent(UIBaseContainer, newFlag_path)
    self.openTimeStamp = UITimeManager:GetInstance():GetServerSeconds()
    self.bgN = self:AddComponent(UIImage, bg_path)
end

local function OnDestroy(self)
    self.titleNameN = nil
    self.titleTaxN = nil
    self.titleTimeN = snil
    self.resContentN = nil
    self.resTemplateN = nil
    local tempMailGroup = MailTypeToInternalGroup[self.mailData.type]
    Setting:SetPrivateInt(SettingKeys.MAIL_LAST_OPEN_TIME_BY_GROUP .. tempMailGroup, self.openTimeStamp)
    base.OnDestroy(self)
end

local function RefreshData(self, mailData)
    self.resContentN:RemoveComponents(MailScoutResourceItem)
    self.resTemplateN.gameObject:GameObjectRecycleAll()
    local bgImg = mailData.type == MailType.RESOURCE_HELP_FROM and "UIMail_bg_cell1" or "UIMail_bg_cell2"
    self.bgN:LoadSprite(string.format(LoadPath.UIMail,bgImg))
    
    self.mailData = mailData
    local contents = rapidjson.decode(mailData["contents"])
    local mailObj = contents["obj"]
    if not mailObj then
        return
    end
    
    self.titleNameN:SetText(mailObj.userName)
    self.titleTaxN:SetText(mailObj.rate .. "%")
    self.titleTimeN:SetText(MailShowHelper.GetRelativeCreateTime(self.mailData))

    local list = mailObj.resArr
    if list~=nil then
        for i = 1, table.length(list) do
            --复制基础prefab，每次循环创建一次
            local item = self.resTemplateN.gameObject:GameObjectSpawn(self.resContentN.transform)
            item:SetActive(true)
            item.name = "item"..i
            local cell = self.resContentN:AddComponent(MailScoutResourceItem,item.name)
            cell:RefreshData(list[i])
        end
        EventManager:GetInstance():Broadcast(EventId.ContentLayoutReposition)
    end

    local tempMailGroup = MailTypeToInternalGroup[self.mailData.type]
    local lastOpenTime = Setting:GetPrivateInt(SettingKeys.MAIL_LAST_OPEN_TIME_BY_GROUP .. tempMailGroup, 0)
    if (self.mailData["createTime"]/1000 > lastOpenTime) then
        self.newFlagN:SetActive(true)
    else
        self.newFlagN:SetActive(false)
    end
end

MailResSupportItem.OnCreate = OnCreate
MailResSupportItem.OnDestroy = OnDestroy
MailResSupportItem.RefreshData = RefreshData
return MailResSupportItem