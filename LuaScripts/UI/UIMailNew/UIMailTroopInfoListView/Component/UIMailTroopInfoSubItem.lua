---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by mac.
--- DateTime: 8/16/21 9:22 PM
---
local UIMailTroopInfoSubItem = BaseClass("UIMailTroopInfoSubItem",UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization

local _cp_imgIcon = "UISoldierItem/Icon"
local _cp_txttotal = "txttotal"
local _cp_txtdead = "txtdead"
local _cp_txtinjure = "txtinjure"
local _cp_txtwounded = "txtwounded"
local _cp_txtalive = "txtalive"
local _cp_txtLevel = "UISoldierItem/LevelText"
local _cp_txtCurve = "txtcurve"

function UIMailTroopInfoSubItem:OnCreate()
    base.OnCreate(self)
    self.level = self:AddComponent(UITextMeshProUGUI, _cp_txtLevel)
    self._imgIcon = self:AddComponent(UIImage, _cp_imgIcon)
    self._txtTotal = self:AddComponent(UITextMeshProUGUI, _cp_txttotal)
    self._txtDead = self:AddComponent(UITextMeshProUGUI, _cp_txtdead)
    self._txtInjure = self:AddComponent(UITextMeshProUGUI, _cp_txtinjure)
    self._txtWounded = self:AddComponent(UITextMeshProUGUI, _cp_txtwounded)
    self._txtAlive = self:AddComponent(UITextMeshProUGUI, _cp_txtalive)
    self._txtCurve = self:AddComponent(UITextMeshProUGUI, _cp_txtCurve)
end


function UIMailTroopInfoSubItem:SetData(sInfo,damagePercent)
    self.soliderInfo = sInfo.soliderData
    self.afterSoliderInfo = sInfo.afterSoliderData
    self.damagePercent = damagePercent
    local sid = self.soliderInfo["armsId"] or ""
    local template = DataCenter.ArmyTemplateManager:GetArmyTemplate(sid)
    if template~=nil then
        if (not string.IsNullOrEmpty(template.icon)) then
            self._imgIcon:LoadSprite(string.format(LoadPath.SoldierIcons,template.icon))
        end
    end
    self.level:SetText(RomeNum[template.show_level])
    local beforeTotal = self.soliderInfo[eMailSoldierAttr.Total]
    local beforeLost = self.soliderInfo[eMailSoldierAttr.Lost]
    local beforeDead = self.soliderInfo[eMailSoldierAttr.Dead]
    local beforeWounded = self.soliderInfo[eMailSoldierAttr.Wounded]
    local beforeInjured = self.soliderInfo[eMailSoldierAttr.Injured]
    local beforeCure = self.soliderInfo[eMailSoldierAttr.Cure]
    local afterLost = self.afterSoliderInfo[eMailSoldierAttr.Lost]
    local afterDead = self.afterSoliderInfo[eMailSoldierAttr.Dead]
    local afterWounded = self.afterSoliderInfo[eMailSoldierAttr.Wounded]
    local afterInjured = self.afterSoliderInfo[eMailSoldierAttr.Injured]
    local afterCure = self.afterSoliderInfo[eMailSoldierAttr.Cure]
    local deadPercent = 0
    local woundedPercent = 0
    local injuredPercent = 0
    if self.damagePercent~=nil then
        deadPercent = self.damagePercent.deadPercent
        woundedPercent = self.damagePercent.woundedPercent
        injuredPercent = self.damagePercent.injuredPercent
    end
    local total = math.max(0,(beforeTotal-beforeLost))
    
    self._txtTotal:SetText(string.GetFormattedSeperatorNum(math.floor(total)))
    local dead = (afterDead-beforeDead)*deadPercent
    self._txtDead:SetText(string.GetFormattedSeperatorNum(math.floor(dead)))
    local injure = (afterInjured-beforeInjured)*injuredPercent
    self._txtInjure:SetText(string.GetFormattedSeperatorNum(math.floor(injure)))
    local wounded = (afterWounded-beforeWounded+afterCure-beforeCure)*woundedPercent
    self._txtWounded:SetText(string.GetFormattedSeperatorNum(math.floor(wounded)))
    local alive = beforeTotal - afterLost
    self._txtAlive:SetText(string.GetFormattedSeperatorNum(math.floor(alive)))
    local curve = (afterCure-beforeCure)*woundedPercent
    self._txtCurve:SetText(string.GetFormattedSeperatorNum(math.floor(curve)))
end



return UIMailTroopInfoSubItem