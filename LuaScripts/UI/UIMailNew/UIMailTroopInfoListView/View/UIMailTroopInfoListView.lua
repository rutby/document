---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by mac.
--- DateTime: 8/12/21 6:48 PM
---
local UIMailTroopInfoItem = require "UI.UIMailNew.UIMailTroopInfoListView.Component.UIMailTroopInfoItem"
local Localization = CS.GameEntry.Localization
local UIMailTroopInfoListView = BaseClass("UIMailTroopInfoListView",UIBaseView)
local base = UIBaseView

local _cp_btnClose = "UICommonPopUpTitle/bg_mid/CloseBtn"
local _cp_txtTitle = "UICommonPopUpTitle/bg_mid/titleText"
local _cp_content = "ScrollView/Viewport/Content"
local _cp_txtTotalPower = "objTopTitle/txtTotalPower"
local _cp_txtTotalDead = "objTopTitle/txtTotalDead"
local _cp_txtTotalInjure = "objTopTitle/layoutTotalInjure/txtTotalInjure"
local _cp_btnTotalInjure = "objTopTitle/layoutTotalInjure/BtnTotalInjure"
local _cp_txtTotalWounded = "objTopTitle/layoutTotalWounded/txtTotalWounded"
local _cp_btnTotalWounded = "objTopTitle/layoutTotalWounded/BtnTotalWounded"
local _cp_txtTotalCurve = "objTopTitle/txtTotalCurve"
local _cp_txtTotalAlive = "objTopTitle/layoutTotalAlive/txtTotalAlive"
local _cp_btnTotalAlive = "objTopTitle/layoutTotalAlive/BtnTotalAlive"


function UIMailTroopInfoListView:OnCreate()
    base.OnCreate(self)
    self._btnClose = self:AddComponent(UIButton, _cp_btnClose)
    self._btnClose:SetOnClick(BindCallback(self, self.OnClickBtnClose))
    self._txtTitle = self:AddComponent(UITextMeshProUGUI, _cp_txtTitle)
    self._content = self:AddComponent(UIBaseContainer, _cp_content)
    self._prefab = self.transform:Find("objToopItem").gameObject
    
    self._txtTotalPower = self:AddComponent(UITextMeshProUGUI, _cp_txtTotalPower)
    self._txtTotalDead = self:AddComponent(UITextMeshProUGUI, _cp_txtTotalDead)
    self._txtTotalInjure = self:AddComponent(UITextMeshProUGUI, _cp_txtTotalInjure)
    self._txtTotalWounded = self:AddComponent(UITextMeshProUGUI, _cp_txtTotalWounded)
    self._txtTotalAlive = self:AddComponent(UITextMeshProUGUI, _cp_txtTotalAlive)
    self._txtTotalCurve = self:AddComponent(UITextMeshProUGUI,_cp_txtTotalCurve)
    self._txtTotalPower:SetLocalText(130068) 
    self._txtTotalDead:SetLocalText(310131) 
    self._txtTotalInjure:SetLocalText(310132) 
    self._txtTotalWounded:SetLocalText(310133) 
    self._txtTotalAlive:SetLocalText(310134)
    self._txtTotalCurve:SetLocalText(310130)
    
    self._btnTotalInjure = self:AddComponent(UIButton,_cp_btnTotalInjure)
    self._btnTotalInjure:SetOnClick(BindCallback(self, self.OnClickBtnInjure))
    self._btnTotalWounded = self:AddComponent(UIButton,_cp_btnTotalWounded)
    self._btnTotalWounded:SetOnClick(BindCallback(self, self.OnClickBtnWounded))
    self._btnTotalAlive = self:AddComponent(UIButton,_cp_btnTotalAlive)
    self._btnTotalAlive:SetOnClick(BindCallback(self, self.OnClickBtnAlive))
end

function UIMailTroopInfoListView:OnClickBtnClose()
    self.ctrl:CloseSelf()
end

function UIMailTroopInfoListView:OnClickBtnInjure()
    local scaleFactor = UIManager:GetInstance():GetScaleFactor()
    local position = self._btnTotalInjure.transform.position + Vector3.New(0, -35, 0) * scaleFactor
    local param = {}
    param.content =  Localization:GetString("121583")
    param.dir = 2
    param.defWidth = 300
    param.pivot = 0.25
    param.position = position
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIHeroTip, { anim = false }, param)
end

function UIMailTroopInfoListView:OnClickBtnWounded()
    local scaleFactor = UIManager:GetInstance():GetScaleFactor()
    local position = self._btnTotalWounded.transform.position + Vector3.New(0, -35, 0) * scaleFactor
    local param = {}
    param.content = Localization:GetString("121584")
    param.dir = 2
    param.defWidth = 300
    param.pivot = 0.5
    param.position = position
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIHeroTip, { anim = false }, param)
end

function UIMailTroopInfoListView:OnClickBtnAlive()
    local scaleFactor = UIManager:GetInstance():GetScaleFactor()
    local position = self._btnTotalAlive.transform.position + Vector3.New(0, -35, 0) * scaleFactor
    local param = {}
    param.content = Localization:GetString("121585")
    param.dir = 2
    param.defWidth = 250
    param.pivot = 0.75
    param.position = position
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIHeroTip, { anim = false }, param)
end


function UIMailTroopInfoListView:OnEnable()
    base.OnEnable(self)
    local param = self:GetUserData()
    -- 这个地方需要进行一些计算,从各个member里面拿出来进行计算拿到总的 armyAttr 和 不同士兵的
    self.leftFightData = param["leftFightData"]
    self.rightFightData = param["rightFightData"]
    self._txtTitle:SetLocalText(310141)
    self.alldatas = {}
    if self.leftFightData.unitData~=nil and self.leftFightData.afterUnitData~=nil then
        local oneData = {}
        oneData.fightData = self.leftFightData
        oneData.type = 1
        table.insert(self.alldatas,oneData)
    end
    if self.rightFightData.unitData~=nil and self.rightFightData.afterUnitData~=nil then
        local oneData = {}
        oneData.fightData = self.rightFightData
        oneData.type = 2
        table.insert(self.alldatas,oneData)
    end
    self:ShowItems()
end

function UIMailTroopInfoListView:ShowItems()
    self._prefab.gameObject:GameObjectRecycleAll()
    self._content:RemoveComponents(UIMailTroopInfoItem)
    if #self.alldatas>0 then
        for _, sItem in pairs(self.alldatas) do
            self:AddTroopNode(sItem)
        end
    end
    
end

function UIMailTroopInfoListView:AddTroopNode(sItemList)
    local item = self._prefab:GameObjectSpawn(self._content.transform)
    NameCount = NameCount + 1
    item.name = NameCount
    local obj = self._content:AddComponent(UIMailTroopInfoItem, item.name)
    obj:SetData(sItemList)
end

function UIMailTroopInfoListView:OnDestroy()
    self._content:RemoveComponents(UIMailTroopInfoItem)
    base.OnDestroy(self)
end

return UIMailTroopInfoListView