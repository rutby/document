---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2022/6/27 16:18
---
local PveBuffCell = BaseClass("PveBuffCell", UIBaseContainer)
local base = UIBaseContainer
local UIHeroTipView = require "UI.UIHero2.UIHeroTip.View.UIHeroTipView"
local btn_path = "img"
local Localization = CS.GameEntry.Localization
local function OnCreate(self)
    base.OnCreate(self)
    self.btn = self:AddComponent(UIButton, btn_path)
    self.btn:SetOnClick(function()
        self:OnClickBuff()
    end)
    self.img = self:AddComponent(UIImage, btn_path)
end

local function OnDestroy(self)
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function InitData(self,buffData,objName,isLeft,skillLevel)
    self.buffId = buffData
    self.objName = objName
    self.isLeft = isLeft
    self.skillLevel = skillLevel
    local skill_icon_str = GetTableData(TableName.StatusTab, self.buffId, "icon") or ""
    local skill_icon = ""
    if skill_icon_str~=nil and skill_icon_str ~="" then
        local arr = string.split(skill_icon_str,"|")
        if #arr>=1 then
            skill_icon = arr[1]
        end
    end
    if skill_icon==nil or skill_icon=="" then
        skill_icon = "skill_icon_add_atk"
    end
    local imgPath = LoadPath.SkillIconsPath..skill_icon
    self.img:LoadSprite(imgPath)
end

local function OnClickBuff(self)
    local effect = GetTableData(TableName.StatusTab, self.buffId, "effect") or ""
    local effectNum = GetTableData(TableName.StatusTab, self.buffId, "effect_num") or ""
    if effect~=nil and effect~="" and effectNum~=nil and effectNum~=""then
        local effectStr = string.split(effect,"|")
        local effectNumStr = string.split(effectNum,"|")
        if #effectStr>0 and #effectNumStr>0 then
            if self.skillLevel>#effectStr then
                self.skillLevel = #effectStr
            end
            if self.skillLevel>#effectNumStr then
                self.skillLevel = #effectNumStr
            end
            local effectArr = string.split(effectStr[self.skillLevel],";")
            local effectNumArr = string.split(effectNumStr[self.skillLevel],";")
            if #effectArr>0 and #effectNumArr>0 then
                local effectId = tonumber(effectArr[1])
                local value = tonumber(effectNumArr[1])
                local  buffAddNum = 0
                local effectDes =GetTableData(TableName.EffectNumDesc,effectId , "des")
                local type = GetTableData(TableName.EffectNumDesc, effectId, 'type')
                type = tonumber(type)
                if type == EffectLocalTypeInEffectDesc.Num then
                    buffAddNum = string.GetFormattedSeperatorNum(value)
                elseif type == EffectLocalTypeInEffectDesc.Percent then
                    buffAddNum = string.GetFormattedPercentStr(value/100)
                elseif type == EffectLocalTypeInEffectDesc.Thousandth then
                    buffAddNum = string.GetFormattedThousandthStr(value/1000)
                end
                if effectDes~=nil and effectDes~="" then
                    local scaleFactor = UIManager:GetInstance():GetScaleFactor()
                    local position = self.btn.transform.position + Vector3.New(0, -30, 0) * scaleFactor
                    local param = UIHeroTipView.Param.New()
                    param.content = Localization:GetString(effectDes)..buffAddNum
                    param.dir = UIHeroTipView.Direction.BELOW
                    param.defWidth = 200
                    if self.isLeft then
                        param.pivot = 0.15
                    else
                        param.pivot = 0.85
                    end
                    param.position = position
                    UIManager:GetInstance():OpenWindow(UIWindowNames.UIHeroTip, { anim = false }, param)
                    self.view:SetSelectBuff(self.buffId,self.isLeft)
                end
            end
        end
    end
    
end
PveBuffCell.OnCreate = OnCreate
PveBuffCell.OnDestroy = OnDestroy
PveBuffCell.OnEnable = OnEnable
PveBuffCell.OnDisable = OnDisable
PveBuffCell.InitData = InitData
PveBuffCell.OnClickBuff = OnClickBuff
return PveBuffCell