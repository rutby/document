---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2022/4/27 20:32
---

local UIPVELoading = BaseClass("UIPVELoading", UIBaseView)
local base = UIBaseView

local title_path = "Root/Title"
local desc_path = "Root/Desc"

local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    self.title_text = self:AddComponent(UITextMeshProUGUIEx, title_path)
    self.desc_text = self:AddComponent(UITextMeshProUGUIEx, desc_path)
end

local function ComponentDestroy(self)
    
end

local function DataDefine(self)
    self.delayTimer = nil
end

local function DataDestroy(self)
    if self.delayTimer then
        self.delayTimer:Stop()
        self.delayTimer = nil
    end
end

local function OnEnable(self)
    base.OnEnable(self)
    self:ReInit()
    self:Enter()
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function OnAddListener(self)
    base.OnAddListener(self)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
end

local function ReInit(self)
    local param = self:GetUserData()
    SoundUtil.PlayEffect(SoundAssets.Music_Effect_PVE_Loading)
    self.title_text:SetText(param.title or "")
    self.desc_text:SetText(param.desc or "")
    
    local t = LuaEntry.DataConfig:TryGetNum("land_unlock", "k2")
    self.delayTimer = TimerManager:GetInstance():DelayInvoke(function()
        if self.onEntered then
            self.onEntered()
        end
    end, t)
end

local function Enter(self)
    local duration = 0.1

    self.finished = false
    self.quited = false
    self.delayTimer = TimerManager:GetInstance():DelayInvoke(function()
        self.finished = true
        self:TryClose()
    end, duration)
end

local function Quit(self)
    self.quited = true
    self:TryClose()
end

local function TryClose(self)
    if self.finished and self.quited then
        self:Close()
    end
end

local function Close(self)
    if self.onClosed then
        self.onClosed()
    end
    if self.ctrl then
        self.ctrl:CloseSelf()
    end
end

local function SetOnEntered(self, onEntered)
    self.onEntered = onEntered
end

local function SetOnClosed(self, onClosed)
    self.onClosed = onClosed
end

UIPVELoading.OnCreate = OnCreate
UIPVELoading.OnDestroy = OnDestroy
UIPVELoading.ComponentDefine = ComponentDefine
UIPVELoading.ComponentDestroy = ComponentDestroy
UIPVELoading.DataDefine = DataDefine
UIPVELoading.DataDestroy = DataDestroy
UIPVELoading.OnEnable = OnEnable
UIPVELoading.OnDisable = OnDisable
UIPVELoading.OnAddListener = OnAddListener
UIPVELoading.OnRemoveListener = OnRemoveListener

UIPVELoading.ReInit = ReInit
UIPVELoading.Enter = Enter
UIPVELoading.Quit = Quit
UIPVELoading.TryClose = TryClose
UIPVELoading.Close = Close
UIPVELoading.SetOnEntered = SetOnEntered
UIPVELoading.SetOnClosed = SetOnClosed

return UIPVELoading
