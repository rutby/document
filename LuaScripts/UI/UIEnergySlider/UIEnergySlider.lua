---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2022/8/12 11:44
---

local UIEnergySlider = BaseClass("UIEnergySlider", UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization

local this_path = ""
local slider_path = "Slider"
local val_path = "Val"
local icon_path = "Icon"
local add_path = "Add"

local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    self.btn = self:AddComponent(UIButton, this_path)
    self.btn:SetOnClick(function()
        self:OnClick()
    end)
    self.slider = self:AddComponent(UISlider, slider_path)
    self.val_text = self:AddComponent(UITweenNumberText_TextMeshPro, val_path)
    self.val_text:SetSeparator(true)
    self.icon_image = self:AddComponent(UIImage, icon_path)
    self.add_btn = self:AddComponent(UIButton, add_path)
    self.add_btn:SetOnClick(function()
        self:OnAddClick()
    end)
end

local function ComponentDestroy(self)
    self.btn = nil
    self.slider = nil
    self.val_text = nil
    self.icon_image = nil
    self.add_btn = nil
    self.red_effect_particle = nil
    self.onClick = nil
end

local function DataDefine(self)
    self.mathFunc = toInt
    self.refreshDuration = 1
    self.refreshDelay = 0
    self.refreshCallback = nil
    self.showMax = true
    self.onClick = nil
    self.timer = nil
end

local function DataDestroy(self)
    self.mathFunc = nil
    self.refreshDuration = nil
    self.refreshDelay = nil
    self.refreshCallback = nil
    self.showMax = nil
    if self.timer then
        self.timer:Stop()
        self.timer = nil
    end
end

local function OnEnable(self)
    base.OnEnable(self)
    self:ReInit()
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.FormationStaminaUpdate, self.OnPveStaminaUpdate)
    self:AddUIListener(EventId.EffectNumChange, self.OnEffectNumChange)
end

local function OnRemoveListener(self)
    self:RemoveUIListener(EventId.FormationStaminaUpdate, self.OnPveStaminaUpdate)
    self:RemoveUIListener(EventId.EffectNumChange, self.OnEffectNumChange)
    base.OnRemoveListener(self)
end

local function ReInit(self)
    local max = self.mathFunc(LuaEntry.Player:GetMaxPveStamina())
    if max > 0 then
        local cur = self.mathFunc(LuaEntry.Player:GetCurPveStamina())
        self.slider:SetValue(cur / max)
        if showMax then
            local maxStr = string.GetFormattedSeperatorNum(max)
            self.val_text:SetSuffix("/" .. maxStr)
        else
            self.val_text:SetSuffix("")
        end
        self.val_text:SetNum(cur)
    end
    if self.timer then
        self.timer:Stop()
    end
    self.timer = TimerManager:GetInstance():GetTimer(1, self.TimerAction, self, false, false, false)
    self.timer:Start()
end

local function Refresh(self)
    local max = self.mathFunc(LuaEntry.Player:GetMaxPveStamina())
    if max > 0 then
        local cur = self.mathFunc(LuaEntry.Player:GetCurPveStamina())
        self.slider.unity_uislider:DOValue(cur / max, self.refreshDuration):SetDelay(self.refreshDelay)
        self.val_text:TweenToNum(cur, self.refreshDuration, self.refreshDelay, nil, self.refreshCallback)
    end
end

local function TimerAction(self)
    local cur = self.mathFunc(LuaEntry.Player:GetCurPveStamina())
    if cur ~= self.val_text:GetTargetNum() then
        self:Refresh()
    end
end

local function ShowRedEffect(self)
end

-- mathFunc: function(x)
local function SetMathFunc(self, mathFunc)
    self.mathFunc = mathFunc
end

local function SetRefreshDuration(self, duration)
    self.refreshDuration = duration
end

local function SetRefreshDelay(self, delay)
    self.refreshDelay = delay
end

local function SetRefreshCallback(self, callback)
    self.refreshCallback = callback
end

local function ShowMax(self, show)
    self.showMax = show
    self:ReInit()
end

local function SetOnClick(self, onClick)
    self.onClick = onClick
    self.btn:SetInteractable(onClick ~= nil)
end

local function GetIconPos(self)
    return self.icon_image.transform.position
end

local function OnAddClick(self)
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationAddStamina)
end

local function OnClick(self)
    if self.onClick then
        self.onClick()
    end
end

local function OnPveStaminaUpdate(self)
    self:Refresh()
end

local function OnEffectNumChange(self)
    self:Refresh()
end

UIEnergySlider.OnCreate= OnCreate
UIEnergySlider.OnDestroy = OnDestroy
UIEnergySlider.ComponentDefine = ComponentDefine
UIEnergySlider.ComponentDestroy = ComponentDestroy
UIEnergySlider.DataDefine = DataDefine
UIEnergySlider.DataDestroy = DataDestroy
UIEnergySlider.OnEnable = OnEnable
UIEnergySlider.OnDisable = OnDisable
UIEnergySlider.OnAddListener = OnAddListener
UIEnergySlider.OnRemoveListener = OnRemoveListener

UIEnergySlider.ReInit = ReInit
UIEnergySlider.Refresh = Refresh
UIEnergySlider.TimerAction = TimerAction
UIEnergySlider.ShowRedEffect = ShowRedEffect
UIEnergySlider.SetMathFunc = SetMathFunc
UIEnergySlider.SetRefreshDuration = SetRefreshDuration
UIEnergySlider.SetRefreshDelay = SetRefreshDelay
UIEnergySlider.SetRefreshCallback = SetRefreshCallback
UIEnergySlider.ShowMax = ShowMax
UIEnergySlider.SetOnClick = SetOnClick
UIEnergySlider.GetIconPos = GetIconPos

UIEnergySlider.OnAddClick = OnAddClick
UIEnergySlider.OnClick = OnClick
UIEnergySlider.OnPveStaminaUpdate = OnPveStaminaUpdate
UIEnergySlider.OnEffectNumChange = OnEffectNumChange

return UIEnergySlider