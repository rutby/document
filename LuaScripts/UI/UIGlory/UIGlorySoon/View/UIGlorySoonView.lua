---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2023/5/9 16:50
---

local UIGlorySoon = BaseClass("UIGlorySoon", UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization

local close_path = "Close"
local title_path = "Title"
local desc1_path = "Desc1"
local desc2_path = "Desc2"
local time_path = "Time"
local go_btn_path = "Go"
local go_text_path = "Go/GoText"

local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
    self:ReInit()
end

local function OnDisable(self)
    if self.timer then
        self.timer:Stop()
        self.timer = nil
    end
    base.OnDisable(self)
end

local function ComponentDefine(self)
    self.close_btn = self:AddComponent(UIButton, close_path)
    self.close_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)
    self.title_text = self:AddComponent(UIText, title_path)
    self.desc1_text = self:AddComponent(UIText, desc1_path)
    self.desc2_text = self:AddComponent(UIText, desc2_path)
    self.time_text = self:AddComponent(UIText, time_path)
    self.go_btn = self:AddComponent(UIButton, go_btn_path)
    self.go_btn:SetOnClick(function()
        self:OnGoClick()
    end)
    self.go_text = self:AddComponent(UIText, go_text_path)
    self.go_text:SetLocalText(110003)
end

local function ComponentDestroy(self)
    
end

local function DataDefine(self)
    self.timer = nil
    self.endTime = 0
end

local function DataDestroy(self)
    if self.timer then
        self.timer:Stop()
        self.timer = nil
    end
    self.endTime = nil
end

local function OnAddListener(self)
    base.OnAddListener(self)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
end

local function ReInit(self)
    self.param = self:GetUserData()

    local curTime = UITimeManager:GetInstance():GetServerTime()
    self.endTime = curTime + self.param.time
    self.timer = TimerManager:GetInstance():GetTimer(1, self.TimerAction, self, false, false, false)
    self.timer:Start()
    self:TimerAction()
end

local function TimerAction(self)
    local curTime = UITimeManager:GetInstance():GetServerTime()
    if self.endTime >= curTime then
        local restTime = math.floor(self.endTime - curTime)
        local restTimeStr = CS.GameEntry.Timer:MilliSecondToFmtString(restTime)
        self.time_text:SetText(restTimeStr)
    else
        self.timer:Stop()
        self.timer = nil
        self.ctrl:CloseSelf()
    end
end

local function OnGoClick(self)
    local activityData = DataCenter.GloryManager:GetActivityData()
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIActivityCenterTable, { anim = true, hideTop = true, UIMainAnim = UIMainAnimType.AllHide }, tonumber(activityData.id))
    self.ctrl:CloseSelf()
end

UIGlorySoon.OnCreate = OnCreate
UIGlorySoon.OnDestroy = OnDestroy
UIGlorySoon.OnEnable = OnEnable
UIGlorySoon.OnDisable = OnDisable
UIGlorySoon.ComponentDefine = ComponentDefine
UIGlorySoon.ComponentDestroy = ComponentDestroy
UIGlorySoon.DataDefine = DataDefine
UIGlorySoon.DataDestroy = DataDestroy
UIGlorySoon.OnAddListener = OnAddListener
UIGlorySoon.OnRemoveListener = OnRemoveListener

UIGlorySoon.OnCreateCell = OnCreateCell
UIGlorySoon.OnDeleteCell = OnDeleteCell
UIGlorySoon.ShowScroll = ShowScroll

UIGlorySoon.ReInit = ReInit
UIGlorySoon.Refresh = Refresh
UIGlorySoon.TimerAction = TimerAction
UIGlorySoon.OnGoClick = OnGoClick

return UIGlorySoon