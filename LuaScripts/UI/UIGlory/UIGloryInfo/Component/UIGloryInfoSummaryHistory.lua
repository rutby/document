---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2023/3/2 17:08
---

local UIGloryInfoSummaryHistory = BaseClass("UIGloryInfoSummaryHistory", UIBaseContainer)
local base = UIBaseContainer
local UIGloryInfoSummaryItem = require "UI.UIGlory.UIGloryInfo.Component.UIGloryInfoSummaryItem"
local AllianceFlagItem = require "UI.UIAlliance.UIAllianceFlag.Component.AllianceFlagItem"
local Localization = CS.GameEntry.Localization

local desc_path = "Head/Desc"
local scroll_view_path = "ScrollView"
local time_path = "Top/Time"
local left_alliance_name_path = "Top/LeftAllianceName"
local left_alliance_flag_path = "Top/LeftAllianceFlag"
local left_score_path = "Top/LeftScore"
local left_win_path = "Top/LeftWin"
local left_lose_path = "Top/LeftLose"
local left_score_change_path = "Top/LeftScoreChange"
local left_rank_change_path = "Top/LeftRankChange"
local left_direct_lose_path = "Top/LeftDirectLose"
local right_alliance_name_path = "Top/RightAllianceName"
local right_alliance_flag_path = "Top/RightAllianceFlag"
local right_score_path = "Top/RightScore"
local right_win_path = "Top/RightWin"
local right_lose_path = "Top/RightLose"
local right_score_change_path = "Top/RightScoreChange"
local right_rank_change_path = "Top/RightRankChange"
local right_direct_lose_path = "Top/RightDirectLose"

local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    self.desc_text = self:AddComponent(UIText, desc_path)
    self.desc_text:SetLocalText(302826)
    self.scroll_view = self:AddComponent(UIScrollView, scroll_view_path)
    self.scroll_view:SetOnItemMoveIn(function(itemObj, index)
        self:OnCreateCell(itemObj, index)
    end)
    self.scroll_view:SetOnItemMoveOut(function(itemObj, index)
        self:OnDeleteCell(itemObj, index)
    end)
    self.time_text = self:AddComponent(UIText, time_path)
    self.left_alliance_name_text = self:AddComponent(UIText, left_alliance_name_path)
    self.left_alliance_flag = self:AddComponent(AllianceFlagItem, left_alliance_flag_path)
    self.left_score_text = self:AddComponent(UIText, left_score_path)
    self.left_win_text = self:AddComponent(UIText, left_win_path)
    self.left_win_text:SetLocalText(390186)
    self.left_lose_text = self:AddComponent(UIText, left_lose_path)
    self.left_lose_text:SetLocalText(390187)
    self.left_score_change_text = self:AddComponent(UIText, left_score_change_path)
    self.left_rank_change_text = self:AddComponent(UIText, left_rank_change_path)
    self.left_direct_lose_text = self:AddComponent(UIText, left_direct_lose_path)
    self.left_direct_lose_text:SetLocalText(302772)
    self.right_alliance_name_text = self:AddComponent(UIText, right_alliance_name_path)
    self.right_alliance_flag = self:AddComponent(AllianceFlagItem, right_alliance_flag_path)
    self.right_score_text = self:AddComponent(UIText, right_score_path)
    self.right_win_text = self:AddComponent(UIText, right_win_path)
    self.right_win_text:SetLocalText(390186)
    self.right_lose_text = self:AddComponent(UIText, right_lose_path)
    self.right_lose_text:SetLocalText(390187)
    self.right_score_change_text = self:AddComponent(UIText, right_score_change_path)
    self.right_rank_change_text = self:AddComponent(UIText, right_rank_change_path)
    self.right_direct_lose_text = self:AddComponent(UIText, right_direct_lose_path)
    self.right_direct_lose_text:SetLocalText(302772)
end

local function ComponentDestroy(self)
    self.desc_text = nil
    self.scroll_view = nil
    self.time_text = nil
    self.left_alliance_name_text = nil
    self.left_alliance_flag = nil
    self.left_score_text = nil
    self.left_win_text = nil
    self.left_lose_text = nil
    self.left_score_change_text = nil
    self.left_rank_change_text = nil
    self.left_direct_lose_text = nil
    self.right_alliance_name_text = nil
    self.right_alliance_flag = nil
    self.right_score_text = nil
    self.right_win_text = nil
    self.right_lose_text = nil
    self.right_score_change_text = nil
    self.right_rank_change_text = nil
    self.right_direct_lose_text = nil
end

local function DataDefine(self)
    self.historyData = nil
    self.dataList = {}
end

local function DataDestroy(self)
    self.historyData = nil
    self.dataList = nil
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function OnAddListener(self)
    base.OnAddListener(self)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
end

local function OnCreateCell(self, itemObj, index)
    itemObj.name = tostring(index)
    local item = self.scroll_view:AddComponent(UIGloryInfoSummaryItem, itemObj)
    item:SetData(self.dataList[index])
end

local function OnDeleteCell(self, itemObj, index)
    self.scroll_view:RemoveComponent(itemObj.name, UIGloryInfoSummaryItem)
end

local function ShowScroll(self)
    local count = #self.dataList
    if count > 0 then
        self.scroll_view:SetActive(true)
        self.scroll_view:SetTotalCount(count)
        self.scroll_view:RefillCells()
    else
        self.scroll_view:SetActive(false)
    end
    self.view:ShowEmpty(count == 0)
end

local function ReInit(self, historyData)
    self.historyData = historyData
    self:Refresh()
end

local function Refresh(self)
    local leftData = self.historyData:GetLeftData()
    local rightData = self.historyData:GetRightData()
    local isLeftWin = (leftData.isWin == 1)
    
    self.time_text:SetText(UITimeManager:GetInstance():TimeStampToTimeForServerMinute(self.historyData.t))
    
    self.left_alliance_name_text:SetText(UIUtil.GetAllianceWholeName(leftData.serverId, leftData.abbr, leftData.alName))
    self.left_alliance_flag:SetData(leftData.alIcon)
    self.left_win_text:SetActive(isLeftWin)
    self.left_lose_text:SetActive(not isLeftWin)
    self.left_score_change_text:SetText(string.format(isLeftWin and "+%s" or "-%s", self.historyData.seasonChangeScore))
    self.left_score_change_text:SetColor(isLeftWin and GreenColor or RedColor)
    self.left_rank_change_text:SetText(string.format(isLeftWin and "+%s" or "-%s", leftData.changeRank))
    self.left_rank_change_text:SetColor(isLeftWin and GreenColor or RedColor)
    if self.historyData.ko == 1 and not isLeftWin then
        self.left_score_text:SetActive(false)
        self.left_direct_lose_text:SetActive(true)
    else
        self.left_score_text:SetText(string.GetFormattedSeperatorNum(leftData.alScore))
        self.left_score_text:SetActive(true)
        self.left_direct_lose_text:SetActive(false)
    end
    
    self.right_alliance_name_text:SetText(UIUtil.GetAllianceWholeName(rightData.serverId, rightData.abbr, rightData.alName))
    self.right_alliance_flag:SetData(rightData.alIcon)
    self.right_score_text:SetText(string.GetFormattedSeperatorNum(rightData.alScore))
    self.right_win_text:SetActive(not isLeftWin)
    self.right_lose_text:SetActive(isLeftWin)
    self.right_score_change_text:SetText(string.format(isLeftWin and "-%s" or "+%s", self.historyData.seasonChangeScore))
    self.right_score_change_text:SetColor(isLeftWin and RedColor or GreenColor)
    self.right_rank_change_text:SetText(string.format(isLeftWin and "-%s" or "+%s", rightData.changeRank))
    self.right_rank_change_text:SetColor(isLeftWin and RedColor or GreenColor)
    if self.historyData.ko == 1 and isLeftWin then
        self.right_score_text:SetActive(false)
        self.right_direct_lose_text:SetActive(true)
    else
        self.right_score_text:SetText(string.GetFormattedSeperatorNum(rightData.alScore))
        self.right_score_text:SetActive(true)
        self.right_direct_lose_text:SetActive(false)
    end
    
    self.dataList = self:GetDataListInternal()
    self:ShowScroll()
end

local function GetDataListInternal(self)
    local dataList = {}
    
    local leftData = self.historyData:GetLeftData()
    local rightData = self.historyData:GetRightData()
    
    table.insert(dataList, {
        descText = Localization:GetString("302827"),
        leftText = leftData.fightMember,
        rightText = rightData.fightMember,
    })
    
    table.insert(dataList, {
        descText = Localization:GetString("302828"),
        leftText = leftData.crashtc,
        rightText = rightData.crashtc,
    })
    
    table.insert(dataList, {
        descText = Localization:GetString("302829"),
        leftText = leftData.crashwb,
        rightText = rightData.crashwb,
    })
    
    table.insert(dataList, {
        descText = Localization:GetString("302830"),
        leftText = leftData.occupy,
        rightText = rightData.occupy,
    })
    
    table.insert(dataList, {
        descText = Localization:GetString("302831"),
        leftText = leftData.placeAssemble,
        rightText = rightData.placeAssemble,
    })
    
    return dataList
end

UIGloryInfoSummaryHistory.OnCreate= OnCreate
UIGloryInfoSummaryHistory.OnDestroy = OnDestroy
UIGloryInfoSummaryHistory.ComponentDefine = ComponentDefine
UIGloryInfoSummaryHistory.ComponentDestroy = ComponentDestroy
UIGloryInfoSummaryHistory.DataDefine = DataDefine
UIGloryInfoSummaryHistory.DataDestroy = DataDestroy
UIGloryInfoSummaryHistory.OnEnable = OnEnable
UIGloryInfoSummaryHistory.OnDisable = OnDisable
UIGloryInfoSummaryHistory.OnAddListener = OnAddListener
UIGloryInfoSummaryHistory.OnRemoveListener = OnRemoveListener

UIGloryInfoSummaryHistory.OnCreateCell = OnCreateCell
UIGloryInfoSummaryHistory.OnDeleteCell = OnDeleteCell
UIGloryInfoSummaryHistory.ShowScroll = ShowScroll

UIGloryInfoSummaryHistory.ReInit = ReInit
UIGloryInfoSummaryHistory.Refresh = Refresh
UIGloryInfoSummaryHistory.GetDataListInternal = GetDataListInternal

return UIGloryInfoSummaryHistory