---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2023/2/28 20:32
---

local UIGloryInfoHistoryItem = BaseClass("UIGloryInfoHistoryItem", UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization

local bg_path = "Bg"
local left_icon_path = "Bg/LeftIcon"
local left_score_path = "Bg/LeftHori/LeftScore"
local left_change_path = "Bg/LeftHori/LeftChange"
local left_desc_path = "Bg/LeftDesc"
local right_icon_path = "Bg/RightIcon"
local right_score_path = "Bg/RightHori/RightScore"
local right_change_path = "Bg/RightHori/RightChange"
local right_desc_path = "Bg/RightDesc"
local time_path = "Bg/Time"

local line_path = "Line"
local line_desc_path = "Line/LineDesc"

local ItemType =
{
    Detail = 1,
    Line = 2,
}

local CRed = "#F26A67"
local CBlue = "#5FA3ED"
local CGreen = "#2FACDF"

local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    self.bg_btn = self:AddComponent(UIButton, bg_path)
    self.bg_btn:SetOnClick(function()
        self:OnClick()
    end)
    self.left_icon_image = self:AddComponent(UIImage, left_icon_path)
    self.left_score_text = self:AddComponent(UIText, left_score_path)
    self.left_change_text = self:AddComponent(UIText, left_change_path)
    self.left_desc_text = self:AddComponent(UIText, left_desc_path)
    self.right_icon_image = self:AddComponent(UIImage, right_icon_path)
    self.right_score_text = self:AddComponent(UIText, right_score_path)
    self.right_change_text = self:AddComponent(UIText, right_change_path)
    self.right_desc_text = self:AddComponent(UIText, right_desc_path)
    self.line_go = self:AddComponent(UIBaseContainer, line_path)
    self.line_desc_text = self:AddComponent(UIText, line_desc_path)
    self.time_text = self:AddComponent(UIText, time_path)
end

local function ComponentDestroy(self)
    self.bg_btn = nil
    self.left_icon_image = nil
    self.left_score_text = nil
    self.left_change_text = nil
    self.left_desc_text = nil
    self.right_icon_image = nil
    self.right_score_text = nil
    self.right_change_text = nil
    self.right_desc_text = nil
    self.line_go = nil
    self.line_desc_text = nil
    self.time_text = nil
end

local function DataDefine(self)
    
end

local function DataDestroy(self)
    
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function OnAddListener(self)
    base.OnAddListener(self)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
end

local function SetData(self, data)
    if data.type == ItemType.Detail then
        self.bg_btn:SetActive(true)
        self.line_go:SetActive(false)
        local detail = data.detail
        local isSelf = (detail.allianceId == LuaEntry.Player.allianceId)
        local icon_image, score_text, change_text, desc_text
        self.time_text:SetText(UITimeManager:GetInstance():TimeStampToTimeForServerSimple(detail.ct))
        if isSelf then
            self.left_icon_image:SetActive(true)
            self.left_score_text:SetActive(true)
            self.left_change_text:SetActive(true)
            self.left_desc_text:SetActive(true)
            self.right_icon_image:SetActive(false)
            self.right_score_text:SetActive(false)
            self.right_change_text:SetActive(false)
            self.right_desc_text:SetActive(false)
            icon_image = self.left_icon_image
            score_text = self.left_score_text
            change_text = self.left_change_text
            desc_text = self.left_desc_text
        else
            self.left_icon_image:SetActive(false)
            self.left_score_text:SetActive(false)
            self.left_change_text:SetActive(false)
            self.left_desc_text:SetActive(false)
            self.right_icon_image:SetActive(true)
            self.right_score_text:SetActive(true)
            self.right_change_text:SetActive(true)
            self.right_desc_text:SetActive(true)
            icon_image = self.right_icon_image
            score_text = self.right_score_text
            change_text = self.right_change_text
            desc_text = self.right_desc_text
        end

        local function ToName(index)
            return string.format("<color=%s>%s</color>", isSelf and CBlue or CRed, detail.p[index])
        end

        local function ToOppoName(index)
            return string.format("<color=%s>%s</color>", isSelf and CRed or CBlue, detail.p[index])
        end

        local function ToBuildName(index)
            return Localization:GetString(GetTableData(DataCenter.BuildTemplateManager:GetTableName(), tonumber(detail.p[index]) + 0,"name"))
        end

        local function ToAllianceBuildName(index)
            local name = GetTableData(TableName.AllianceMine, tonumber(detail.p[index]), "name")
            return Localization:GetString(tostring(name))
        end

        local function ToBuildIcon(index)
            return DataCenter.BuildManager:GetBuildIconPath(tonumber(detail.p[index]), 1)
        end

        local function ToAllianceBuildIcon(index)
            local icon = GetTableData(TableName.AllianceMine, tonumber(detail.p[index]), "icon")
            return string.format(LoadPath.UIAlliance, icon)
        end

        local function ToDesertName(index)
            local name = GetTableData(TableName.Desert, tonumber(detail.p[index]), "desert_name")
            return Localization:GetString(tostring(name))
        end

        local function ToDesertIcon(index)
            local icon = GetTableData(TableName.Desert, tonumber(detail.p[index]), "icon")
            return string.format(LoadPath.SeasonDesert, icon)
        end

        local function ToPos(index)
            return string.format(" <color=%s>%s</color> ", CGreen, detail.p[index])
        end

        local scoreChange = nil
        if detail.t == GloryBattleDetailType.Default then
            desc_text:SetLocalText(302831, table.unpack(detail.p))
        elseif detail.t == GloryBattleDetailType.PlaceFlag then
            desc_text:SetLocalText(302832, ToName(1), ToAllianceBuildName(2), ToPos(3))
            icon_image:LoadSprite(ToAllianceBuildIcon(2))
        elseif detail.t == GloryBattleDetailType.FoldUpFlag then
            desc_text:SetLocalText(302833, ToName(1), ToAllianceBuildName(2), ToPos(3))
            icon_image:LoadSprite(ToAllianceBuildIcon(2))
        elseif detail.t == GloryBattleDetailType.Occupy then
            desc_text:SetLocalText(302836, ToName(1), ToOppoName(2), ToDesertName(3), ToPos(4))
            icon_image:LoadSprite(ToDesertIcon(3))
            scoreChange = detail.p[5]
        elseif detail.t == GloryBattleDetailType.CrashBuilding then
            desc_text:SetLocalText(302835, ToName(1), ToOppoName(2), ToBuildName(3), ToPos(4))
            icon_image:LoadSprite(ToBuildIcon(3))
            scoreChange = detail.p[5]
        elseif detail.t == GloryBattleDetailType.CrashCenter then
            desc_text:SetLocalText(302834, ToOppoName(1), ToAllianceBuildName(2), ToPos(3))
            icon_image:LoadSprite(ToAllianceBuildIcon(2))
            scoreChange = detail.p[4]
        elseif detail.t == GloryBattleDetailType.Win then
            desc_text:SetLocalText(302837, ToName(1))
            icon_image:LoadSprite(string.format(LoadPath.BuildIconOutCity, "pic744000_2_free"))
        elseif detail.t == GloryBattleDetailType.MISSILE_ATTACK_MAIN then
            desc_text:SetLocalText(309007, ToName(1), ToPos(2))
            icon_image:LoadSprite(string.format(LoadPath.UIGlory, "fight_history_missile"))
        end

        if scoreChange ~= nil then
            score_text:SetActive(true)
            change_text:SetActive(true)
            change_text:SetText(string.GetFormattedSeperatorNum(scoreChange))
        else
            score_text:SetActive(false)
            change_text:SetActive(false)
        end
        score_text:SetText("")
    elseif data.type == ItemType.Line then
        self.bg_btn:SetActive(false)
        self.line_go:SetActive(true)
        self.line_desc_text:SetText(data.lineText)
    end
    CS.UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(self.transform)
end

local function OnClick(self)
    
end

UIGloryInfoHistoryItem.OnCreate= OnCreate
UIGloryInfoHistoryItem.OnDestroy = OnDestroy
UIGloryInfoHistoryItem.ComponentDefine = ComponentDefine
UIGloryInfoHistoryItem.ComponentDestroy = ComponentDestroy
UIGloryInfoHistoryItem.DataDefine = DataDefine
UIGloryInfoHistoryItem.DataDestroy = DataDestroy
UIGloryInfoHistoryItem.OnEnable = OnEnable
UIGloryInfoHistoryItem.OnDisable = OnDisable
UIGloryInfoHistoryItem.OnAddListener = OnAddListener
UIGloryInfoHistoryItem.OnRemoveListener = OnRemoveListener

UIGloryInfoHistoryItem.ItemType = ItemType
UIGloryInfoHistoryItem.SetData = SetData
UIGloryInfoHistoryItem.OnClick = OnClick

return UIGloryInfoHistoryItem