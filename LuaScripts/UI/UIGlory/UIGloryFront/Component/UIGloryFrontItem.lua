---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2023/3/3 18:15
---

local UIGloryFrontItem = BaseClass("UIGloryFrontItem", UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization
local UIGray = CS.UIGray

local name_path = "Name"
local desc_path = "Desc"
local icon_path = "Icon"
local cost_path = "Cost"
local btn_path = "Btn"
local btn_text_path = "Btn/BtnText"

local State =
{
    CanPut = 1, -- 可放置
    Normal = 2, -- 已放置
    ColdDown = 3, -- 冷却中
}

local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    self.name_text = self:AddComponent(UIText, name_path)
    self.desc_text = self:AddComponent(UIText, desc_path)
    self.icon_image = self:AddComponent(UIImage, icon_path)
    self.cost_text = self:AddComponent(UIText, cost_path)
    self.btn = self:AddComponent(UIButton, btn_path)
    self.btn:SetOnClick(function()
        self:OnClick()
    end)
    self.btn_text = self:AddComponent(UIText, btn_text_path)
end

local function ComponentDestroy(self)
    self.name_text = nil
    self.desc_text = nil
    self.icon_image = nil
    self.cost_text = nil
    self.btn = nil
    self.btn_text = nil
end

local function DataDefine(self)
    self.state = State.CanPut
    self.template = nil
    self.data = nil
    self.timer = nil
    self.cdEndTime = 0
end

local function DataDestroy(self)
    self.state = nil
    self.template = nil
    self.data = nil
    if self.timer then
        self.timer:Stop()
        self.timer = nil
    end
    self.cdEndTime = nil
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    if self.timer then
        self.timer:Stop()
        self.timer = nil
    end
    base.OnDisable(self)
end

local function OnAddListener(self)
    base.OnAddListener(self)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
end

local function SetTemplate(self, template)
    self.template = template
    self.data = DataCenter.AllianceMineManager:GetAllianceFrontDataByBuildId(template.id)
    self:Refresh()
end

local function Refresh(self)
    if self.data == nil then
        local curTime = UITimeManager:GetInstance():GetServerTime()
        local destroyTime = DataCenter.AllianceMineManager:GetAllianceFrontDestroyStartTime(self.template.id) or 0
        local cdTime = LuaEntry.DataConfig:TryGetNum("allance_build", "k8") * 1000
        self.cdEndTime = destroyTime + cdTime
        if curTime > self.cdEndTime then
            self.state = State.CanPut
        else
            self.state = State.ColdDown
        end
    else
        self.state = State.Normal
    end
    
    self.name_text:SetLocalText(self.template.name)
    self.cost_text:SetText(string.GetFormattedSeperatorNum(self.template.buildCost))
    self.cost_text:SetActive(self.template.buildCost > 0)
    self.icon_image:LoadSprite(self.template:GetIconPath())
    if self.state == State.CanPut then
        self.desc_text:SetLocalText(130006)
        self.btn_text:SetLocalText(110015)
        self.btn:LoadSprite(string.format(LoadPath.CommonNewPath,"Common_btn_green71"))
        UIGray.SetGray(self.btn.transform, false, true)
    elseif self.state == State.Normal then
        local tilePos = SceneUtils.IndexToTilePos(self.data.pointId, ForceChangeScene.World)
        self.desc_text:SetText(" ( " .. tilePos.x .. "," .. tilePos.y.." ) ")
        self.btn_text:SetLocalText(110003)
        self.btn:LoadSprite(string.format(LoadPath.CommonNewPath,"common_btn_yellow71"))
        UIGray.SetGray(self.btn.transform, false, true)
    elseif self.state == State.ColdDown then
        self.desc_text:SetLocalText(100381)
        self.btn_text:SetLocalText(110015)
        self.btn:LoadSprite(string.format(LoadPath.CommonNewPath,"common_btn_yellow71"))
        UIGray.SetGray(self.btn.transform, true, false)
    end

    if self.timer == nil then
        self.timer = TimerManager:GetInstance():GetTimer(1, self.TimerAction , self, false, false, false)
        self.timer:Start()
        self:TimerAction()
    end
end

local function TimerAction(self)
    if self.state == State.ColdDown then
        local curTime = UITimeManager:GetInstance():GetServerTime()
        if curTime <= self.cdEndTime then
            local restTimeStr = UITimeManager:GetInstance():MilliSecondToFmtString(self.cdEndTime - curTime)
            self.desc_text:SetLocalText(120397, restTimeStr)
        else
            self:Refresh()
        end
    end
end

local function OnClick(self)
    local opponentData = DataCenter.GloryManager:GetOpponentData()
    if opponentData == nil then
        return
    end
    if self.state == State.CanPut then
        -- 放置
        if not DataCenter.AllianceBaseDataManager:IsR4orR5() then
            -- 不是 R4 或 R5
            UIUtil.ShowTipsId(300752)
            return
        end

        local period = DataCenter.GloryManager:GetPeriod()
        if period ~= GloryPeriod.Start then
            -- 未到入侵期
            UIUtil.ShowTipsId(302814)
            return
        end

        local battleState = DataCenter.GloryManager:GetBattleState()
        if battleState ~= GloryBattleState.Ongoing then
            -- 战斗未开始
            UIUtil.ShowTipsId(302814)
            return
        end

        local haveCount = DataCenter.AllianceStorageManager:GetResCountByRewardType(RewardType.SAPPHIRE)
        if haveCount < self.template.buildCost then
            -- 资源不足
            UIUtil.ShowTipsId(120020)
            return
        end

        local buildId = self.template.id
        GoToUtil.CloseAllWindows()
        DataCenter.GloryManager:GoToOpponent(function(pointId, list)
            BuildingUtils.ShowPutAllianceBuild(buildId, 0, pointId, PlaceBuildType.Build)
            
            local dataList = {}
            for _, v in ipairs(list) do
                local template = DataCenter.AllianceMineManager:GetAllianceMineTemplate(v.buildingId)
                local data = {}
                data.pointId = v.pointId
                data.serverId = opponentData.serverId
                data.name = Localization:GetString(template.name)
                data.icon = template:GetCircleIconPath()
                table.insert(dataList, data)
            end
            UIManager:GetInstance():OpenWindow(UIWindowNames.UIWorldPointJump, { anim = false }, dataList)
        end)
    elseif self.state == State.Normal then
        -- 跳转
        local pointId = self.data.pointId
        GoToUtil.CloseAllWindows()
        GoToUtil.GotoWorldPos(SceneUtils.TileIndexToWorld(pointId, ForceChangeScene.World), nil, 0.02, nil, opponentData.serverId)
    end
end

UIGloryFrontItem.OnCreate= OnCreate
UIGloryFrontItem.OnDestroy = OnDestroy
UIGloryFrontItem.ComponentDefine = ComponentDefine
UIGloryFrontItem.ComponentDestroy = ComponentDestroy
UIGloryFrontItem.DataDefine = DataDefine
UIGloryFrontItem.DataDestroy = DataDestroy
UIGloryFrontItem.OnEnable = OnEnable
UIGloryFrontItem.OnDisable = OnDisable
UIGloryFrontItem.OnAddListener = OnAddListener
UIGloryFrontItem.OnRemoveListener = OnRemoveListener

UIGloryFrontItem.SetTemplate = SetTemplate
UIGloryFrontItem.Refresh = Refresh
UIGloryFrontItem.TimerAction = TimerAction
UIGloryFrontItem.OnClick = OnClick

return UIGloryFrontItem