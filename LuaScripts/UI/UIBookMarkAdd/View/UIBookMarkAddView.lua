---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by guqu.
--- DateTime: 2020/10/30 12:25
---
local UIBookMarkAddView = BaseClass("UIBookMarkAddView",UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization

local title_path = "ImgBg/TxtTitle"
local return_btn_path = "Panel"
local close_btn_path = "ImgBg/BtnClose"
local point_txt_path= "ImgBg/TxtPosition"
local input_path = "ImgBg/InputField"
local type_des_path = "ImgBg/titleContent/typeText"
local toggle1_path= "ImgBg/GridType/Toggle1"
local toggle2_path= "ImgBg/GridType/Toggle2"
local toggle3_path= "ImgBg/GridType/Toggle3"
local set_btn_path = "ImgBg/setBtnObj/setBtn"
local set_btn_txt_path = "ImgBg/setBtnObj/setBtn/setText"
local del_btn_path = "ImgBg/setBtnObj/delBtn"
local function OnCreate(self)
    base.OnCreate(self)
    local server,point,name = self:GetUserData()
    self.server = tonumber(server)
    self.point =tonumber(point)
    self.name = name
    self.title = self:AddComponent(UIText,title_path)
    self.title:SetLocalText(300033) 
    self.point_txt = self:AddComponent(UIText,point_txt_path)
    self.input = self:AddComponent(UIInput,input_path)
    self.input:SetOnEndEdit(function (value)
        self:IptOnValueChange(value)
    end)
    self.type_des = self:AddComponent(UIText,type_des_path)

    self.toggle1 = self:AddComponent(UIToggle, toggle1_path)
    self.toggle1:SetIsOn(true)
    self.toggle1:SetOnValueChanged(function(tf)
        if tf then
            self:ToggleControlBorS()
        end
    end)
    self.toggle2 = self:AddComponent(UIToggle, toggle2_path)
    self.toggle2:SetIsOn(false)
    self.toggle2:SetOnValueChanged(function(tf)
        if tf then
            self:ToggleControlBorS()
        end
    end)
    self.toggle3 = self:AddComponent(UIToggle, toggle3_path)
    self.toggle3:SetIsOn(false)
    self.toggle3:SetOnValueChanged(function(tf)
        if tf then
            self:ToggleControlBorS()
        end
    end)
    self.set_btn = self:AddComponent(UIButton, set_btn_path)
    self.set_btn:SetOnClick(function()  
SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnSetClick()
    end)
    self.set_btn_txt = self:AddComponent(UIText,set_btn_txt_path)
    self.set_btn_txt:SetLocalText(GameDialogDefine.CONFIRM) 

    self.del_btn = self:AddComponent(UIButton, del_btn_path)
    self.del_btn:SetOnClick(function()  
SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnDelClick()
    end)
    
    self.close_btn = self:AddComponent(UIButton, close_btn_path)
    self.close_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)
    self.return_btn = self:AddComponent(UIButton, return_btn_path)
    self.return_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)
end
local function OnDestroy(self)
    self.server = nil
    self.point =nil
    self.title = nil
    self.point_txt = nil
    self.input = nil
    self.type_des = nil
    self.toggle1 = nil
    self.toggle2 = nil
    self.toggle3 = nil
    self.set_btn = nil
    self.set_btn_txt = nil
    self.del_btn = nil
    self.close_btn = nil
    self.return_btn = nil
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
    self:InitState()
end

local function OnDisable(self)
    base.OnDisable(self)
end
local function InitState(self)
    local data = self.ctrl:GetBookmark(self.point,self.server)
    if data~=nil then
        self.del_btn:SetActive(true)
        self.selectType = data.type
        self.name = data.name
        if self.selectType ==0 then
            self.toggle1:SetIsOn(true)
            self.type_des:SetLocalText(GameDialogDefine.BOOKMARK_SPECIAL) 
        elseif self.selectType ==1 then
            self.toggle2:SetIsOn(true)
            self.type_des:SetLocalText(GameDialogDefine.BOOKMARK_FRIEND) 
        elseif self.selectType ==2 then
            self.toggle3:SetIsOn(true)
            self.type_des:SetLocalText(GameDialogDefine.BOOKMARK_ENEMY) 
        end
    else
        self.del_btn:SetActive(false)
        self.selectType = 0
    end
    self.input:SetText(self.name)
    local pos = SceneUtils.IndexToTilePos(self.point)
    self.point_txt:SetText(self.server.." "..Localization:GetString(GameDialogDefine.SHOW_POS,pos.x,pos.y))
    self:ToggleControlBorS()
end
local function IptOnValueChange(self,value)
    self.name = value
end

local function ToggleControlBorS(self)
    if self.toggle1:GetIsOn() then
        self.selectType = 0
        self.type_des:SetLocalText(GameDialogDefine.BOOKMARK_SPECIAL) 
    elseif self.toggle2:GetIsOn() then
        self.selectType = 1
        self.type_des:SetLocalText(GameDialogDefine.BOOKMARK_FRIEND) 
    elseif self.toggle3:GetIsOn() then
        self.selectType = 2
        self.type_des:SetLocalText(GameDialogDefine.BOOKMARK_ENEMY) 
    end
end

local function OnSetClick(self)
    self.ctrl:AddBookMark(self.point,self.server,self.name,self.selectType,0)
end

local function OnDelClick(self)
    self.ctrl:DelBookMark(self.point,self.server)
end


UIBookMarkAddView.OnCreate = OnCreate
UIBookMarkAddView.OnDestroy = OnDestroy
UIBookMarkAddView.InitState = InitState
UIBookMarkAddView.OnEnable = OnEnable
UIBookMarkAddView.OnDisable = OnDisable
UIBookMarkAddView.IptOnValueChange = IptOnValueChange
UIBookMarkAddView.ToggleControlBorS = ToggleControlBorS
UIBookMarkAddView.OnSetClick = OnSetClick
UIBookMarkAddView.OnDelClick = OnDelClick

return UIBookMarkAddView