---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zzl.
--- DateTime: 
---
local UIActMTRankCell = BaseClass("UIActMTRankCell",UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization

function UIActMTRankCell:OnCreate()
    base.OnCreate(self)
    self._name_txt  = self:AddComponent(UITextMeshProUGUIEx,"Txt_Name")
    self._curLevel_txt      = self:AddComponent(UITextMeshProUGUIEx,"Txt_CurLevel")
    
    self._diff_img   = self:AddComponent(UIImage,"Img_Diff")
    self._help_btn   = self:AddComponent(UIButton,"Btn_Help")
    self._help_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnClickHelp()
    end)

    self._head_btn  = self:AddComponent(UIButton,"UIPlayerHead")
    self.playerHead = self:AddComponent(UIPlayerHead, "UIPlayerHead/HeadIcon")
    self.monthCard  = self:AddComponent(UIImage,"UIPlayerHead/Foreground")
    self._head_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
       self:OnClickHead()
    end)
end

function UIActMTRankCell:OnDestroy()
    base.OnDestroy(self)
end

function UIActMTRankCell:OnEnable()
    base.OnEnable(self)
end

function UIActMTRankCell:OnDisable()
    base.OnDisable(self)
end

function UIActMTRankCell:SetData(data)
    self.data = data
    self._name_txt:SetText(data.name)
    self._curLevel_txt:SetLocalText(300665,data.curLevel)

    local curTime = UITimeManager:GetInstance():GetServerSeconds()

    self.playerHead:SetData(data.uid, data.pic, data.picVer)
    local headBgImg = DataCenter.DecorationDataManager:GetHeadFrame(data.headSkinId, data.headSkinET, data.monthCardEndTime > 0 and data.monthCardEndTime > curTime)
    if headBgImg ~= nil then
        self.monthCard:SetActive(true)
        self.monthCard:LoadSprite(headBgImg)
    else
        self.monthCard:SetActive(false)
    end
    --self.monthCard:SetActive(data.monthCardEndTime > 0 and data.monthCardEndTime > curTime)
    
    self._diff_img:LoadSprite(string.format(LoadPath.UIMonsterTower, ActMonsterTowerDiff[data.difficulty]))

    if data.challengeBoss and data.challengeBoss.callHelp == 1 then
        self._help_btn:SetActive(true)
    else
        self._help_btn:SetActive(false)
    end
end

function UIActMTRankCell:OnClickHelp()
    if self.data.uid == LuaEntry.Player.uid then
        UIUtil.ShowTipsId(372435)
    elseif self.data.challengeBoss and self.data.challengeBoss.pointId then
        GoToUtil.CloseAllWindows()
        local pointId = SceneUtils.TileIndexToWorld(self.data.challengeBoss.pointId,ForceChangeScene.World)
        GoToUtil.GotoWorldPos(pointId, CS.SceneManager.World.InitZoom)
    end
end

function UIActMTRankCell:OnClickHead()
    if self.data.uid ~= LuaEntry.Player.uid then
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIOtherPlayerInfo,self.data.uid)
    else
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIPlayerInfo,LuaEntry.Player.uid)
    end
end

return UIActMTRankCell