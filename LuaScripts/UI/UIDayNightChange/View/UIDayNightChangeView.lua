---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 27/2/2024 上午10:30
---
local UIDayNightChangeView = BaseClass("UIDayNightChangeView",UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization
local anim_path = "anim"
local day_path = "anim/AnimDay/textDay"
local night_path = "anim/AnimNight/textNight"
---
--创建
local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
    self:ReInit()
end

-- 销毁
local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    self.anim = self:AddComponent(UISimpleAnimation,anim_path)
    self.day_txt = self:AddComponent(UITextMeshProUGUIEx,day_path)
    self.day_txt:SetLocalText(430200)
    self.night_txt = self:AddComponent(UITextMeshProUGUIEx,night_path)
    self.night_txt:SetLocalText(430201)
end

local function ComponentDestroy(self)
end


local function DataDefine(self)
end

local function DataDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function ReInit(self)
    local curTime = UITimeManager:GetInstance():GetServerTime()
    local dayNight = DataCenter.VitaManager:GetDayNight(curTime)
    if dayNight == VitaDefines.DayNight.Day then
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Change_Day)
        local ret,time = self.anim:PlayAnimationReturnTime("NightChangeToDay")
        if self.timer then
            self.timer:Stop()
            self.timer = nil
        end
        self.timer = TimerManager:DelayInvoke(function()
            if self.timer then
                self.timer:Stop()
                self.timer = nil
            end
            UIManager:GetInstance():DestroyWindow(UIWindowNames.UIDayNightChange)
        end, time)
    elseif dayNight == VitaDefines.DayNight.Night then
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Change_Night)
        local ret,time = self.anim:PlayAnimationReturnTime("DayChangeToNight")
        if self.timer then
            self.timer:Stop()
            self.timer = nil
        end
        self.timer = TimerManager:DelayInvoke(function()
            if self.timer then
                self.timer:Stop()
                self.timer = nil
            end
            UIManager:GetInstance():DestroyWindow(UIWindowNames.UIDayNightChange)
        end, time)
    end
    
end
local function OnAddListener(self)
    base.OnAddListener(self)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
end

UIDayNightChangeView.OnCreate= OnCreate
UIDayNightChangeView.OnDestroy = OnDestroy
UIDayNightChangeView.OnEnable = OnEnable
UIDayNightChangeView.OnDisable = OnDisable
UIDayNightChangeView.ComponentDefine = ComponentDefine
UIDayNightChangeView.ComponentDestroy = ComponentDestroy
UIDayNightChangeView.DataDefine = DataDefine
UIDayNightChangeView.DataDestroy = DataDestroy
UIDayNightChangeView.ReInit = ReInit
UIDayNightChangeView.OnAddListener =OnAddListener
UIDayNightChangeView.OnRemoveListener =OnRemoveListener
return UIDayNightChangeView