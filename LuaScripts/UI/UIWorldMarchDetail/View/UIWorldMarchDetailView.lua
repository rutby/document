---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2022/9/20 11:20
---
local WorldMarchDetailItem = require "UI.UIWorldMarchDetail.Component.WorldMarchDetailItem"
local UIWorldMarchDetailView = BaseClass("UIWorldMarchDetailView",UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization
local Data = CS.GameEntry.Data
function UIWorldMarchDetailView:OnCreate()
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
end

function UIWorldMarchDetailView:ComponentDefine()
    self._close_btn = self:AddComponent(UIButton,"UICommonPopUpTitle/bg_mid/CloseBtn")
    self._close_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)

    self._return_btn = self:AddComponent(UIButton,"UICommonPopUpTitle/panel")
    self._return_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)
    self._title_txt = self:AddComponent(UIText,"UICommonPopUpTitle/bg_mid/titleText")
    self._title_txt:SetLocalText(121506)
    self.empty_txt = self:AddComponent(UIText, "TxtEmpty")
    self.empty_txt:SetLocalText(121507)
    self.itemCell = self:AddComponent(UIBaseContainer,"ImgBg/ScrollView/Viewport/Content")
    self.timer_action = function(temp)
        self:RefreshTime()
    end
end

function UIWorldMarchDetailView:DataDefine()
    self.itemDataList = {}
    self.itemCellList = {}
end

function UIWorldMarchDetailView:OnDestroy()
    self:ClearItemCell()
    base.OnDestroy(self)
end

function UIWorldMarchDetailView:OnEnable()
    base.OnEnable(self)
    self:ReInit()
    self:AddTimer()
end

function UIWorldMarchDetailView:OnDisable()
    base.OnDisable(self)
    self:DeleteTimer()
end

function UIWorldMarchDetailView:OnAddListener()
    base.OnAddListener(self)
    self:AddUIListener(EventId.MarchItemUpdateSelf, self.RefreshCenterList)
end

function UIWorldMarchDetailView:OnRemoveListener()
    base.OnRemoveListener(self)
    self:RemoveUIListener(EventId.MarchItemUpdateSelf,self.RefreshCenterList)
end


function UIWorldMarchDetailView:ReInit()
    self:RefreshCenterList()
end

function UIWorldMarchDetailView:RefreshCenterList()
    local formationList = self.ctrl:GetInMarchFormationUuidList()
    if #formationList ~= #self.itemDataList then
        self:ClearItemCell()
        self.itemDataList = formationList
        if #self.itemDataList >0 then
            for i = 1, #self.itemDataList do
                self.itemTab[i] = self:GameObjectInstantiateAsync(UIAssets.UITroopDetailItem, function(request)
                    if request.isError then
                        return
                    end
                    local go = request.gameObject;
                    go.transform:SetParent(self.itemCell.transform)
                    go.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
                    local nameStr = tostring(NameCount)
                    go.name = nameStr
                    NameCount = NameCount + 1
                    go.gameObject:SetActive(true)
                    local cell = self.itemCell:AddComponent(WorldMarchDetailItem,go.name)
                    cell:InitData(self.itemDataList[i])
                    self.itemCellList[i] = cell
                end)
            end
        end
        
    else
        for k,v in pairs(self.itemCellList) do
            v:RefreshData()
        end
    end
    self.empty_txt:SetActive(#self.itemDataList<=0)
end

function UIWorldMarchDetailView:ClearItemCell()
    self.itemCell:RemoveComponents(WorldMarchDetailItem)
    if self.itemTab and next(self.itemTab) then
        for k,v in pairs(self.itemTab) do
            if v ~= nil then
                self:GameObjectDestroy(v)
            end
        end
    end
    self.itemTab ={}
    self.itemCellList = {}
end

function UIWorldMarchDetailView:AddTimer()
    if self.timer == nil then
        self.timer = TimerManager:GetInstance():GetTimer(1, self.timer_action , self, false,false,false)
    end
    self.timer:Start()
end

function UIWorldMarchDetailView:DeleteTimer()
    if self.timer ~= nil then
        self.timer:Stop()
        self.timer = nil
    end
end

function UIWorldMarchDetailView:RefreshTime()
    if self.itemCellList~=nil then
        for k,v in pairs(self.itemCellList) do
            v:RefreshTime()
        end
    end
end

return UIWorldMarchDetailView