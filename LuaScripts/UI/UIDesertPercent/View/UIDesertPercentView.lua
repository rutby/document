---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by .
--- DateTime: 
---
local DesertCellItem = require "UI.UIDesertPercent.Component.DesertCellItem"
local UIDesertPercentView = BaseClass("UIDesertPercentView",UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization
local title_path = "ImgBg/titleText"
local return_btn_path = "panel"
local close_btn_path = "ImgBg/CloseBtn"
local content_path = "ImgBg/Common_bg_need_resource/content"
local res_txt_path = "ImgBg/Res_Txt"
local next_btn_path = "ImgBg/Btn_Next"
local next_txt_path = "ImgBg/Btn_Next/Txt_Next"
--创建
local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:ReInit()

end

-- 销毁
local function OnDestroy(self)
    if self.delayTimer ~= nil then
        self.delayTimer:Stop()
        self.delayTimer = nil
    end
    self:ComponentDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    self.title = self:AddComponent(UIText,title_path)
    self.content = self:AddComponent(UIBaseContainer, content_path)
    self.res_txt = self:AddComponent(UIText,res_txt_path)
    self.close_btn = self:AddComponent(UIButton, close_btn_path)
    self.close_btn:SetOnClick(function()
        UIManager:GetInstance():DestroyWindow(UIWindowNames.UIDesertPercent)
    end)
    self.return_btn = self:AddComponent(UIButton, return_btn_path)
    self.return_btn:SetOnClick(function()
        UIManager:GetInstance():DestroyWindow(UIWindowNames.UIDesertPercent)
    end)
    self.needCells = {}
    self.next_btn = self:AddComponent(UIButton,next_btn_path)
    self.next_btn:SetOnClick(function()
        self:OnClickGo()
    end)
    self.next_txt = self:AddComponent(UIText,next_txt_path)
    self.next_txt:SetLocalText(110442)
end

local function ComponentDestroy(self)
    self:ClearList()
    self.title = nil
    self.content = nil
    self.res_txt = nil
    self.close_btn = nil
    self.return_btn = nil
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function ReInit(self)
    local lackResource,pointId,targetType = self:GetUserData()
    self.lackResource = lackResource
    self.pointId = pointId
    self.targetType = targetType
    self.next_btn:SetActive(pointId)
    self.title:SetLocalText(pointId and 312101 or 110515)
    self.res_txt:SetActive(pointId)
    self.res_txt:SetLocalText(312102)
    self.model = {}
    self:ClearList()
    table.walk(self.lackResource[1],function(k,v)
        self.model[k] = self:GameObjectInstantiateAsync(UIAssets.ResourceLackItem, function(request)
            if request.isError then
                return
            end
            local go = request.gameObject
            go:SetActive(true)
            go.transform:SetParent(self.content.transform)
            go.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
            local nameStr = tostring(v:GetTips())
            go.name = nameStr
            self.needCells[k] = self.content:AddComponent(DesertCellItem, nameStr)
            self.needCells[k]:ReInit(v)
        end)
    end)
end

local function ClearList(self)
    self.content:RemoveComponents(DesertCellItem)
    if next(self.model) then
        for k,v in pairs(self.model) do
            if v ~= nil then
                self:GameObjectDestroy(v)
            end
        end
    end
    self.needCells = {}
end

local function OnClickGo(self)
    UIManager:GetInstance():DestroyWindow(UIWindowNames.UIDesertPercent)
    MarchUtil.OnClickStartMarch(self.targetType, self.pointId,self.pointId,-1,0)
end

UIDesertPercentView.OnCreate= OnCreate
UIDesertPercentView.OnDestroy = OnDestroy
UIDesertPercentView.OnEnable = OnEnable
UIDesertPercentView.OnDisable = OnDisable
UIDesertPercentView.ComponentDefine = ComponentDefine
UIDesertPercentView.ComponentDestroy = ComponentDestroy
UIDesertPercentView.ReInit = ReInit
UIDesertPercentView.ClearList = ClearList
UIDesertPercentView.OnClickGo = OnClickGo

return UIDesertPercentView