---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zzl
--- DateTime:
--- 
local UIGolloesTraderRecordView = BaseClass("UIGolloesTraderRecordView", UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization
local UIGolloesTraderItem = require "UI.UIGolloesTraderRecord.Component.UIGolloesTraderItem"
function UIGolloesTraderRecordView:OnCreate()
    base.OnCreate(self)
    
    self._title_txt = self:AddComponent(UITextMeshProUGUIEx,"UICommonMidPopUpTitle/bg_mid/titleText")
    self._title_txt:SetLocalText(321107)
    
    self._close_btn = self:AddComponent(UIButton,"UICommonMidPopUpTitle/bg_mid/CloseBtn")
    self._close_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)

    self.scroll_view = self:AddComponent(UIScrollView, "ScrollView")
    self.scroll_view:SetOnItemMoveIn(function(itemObj, index)
        self:OnItemMoveIn(itemObj, index)
    end)
    self.scroll_view:SetOnItemMoveOut(function(itemObj, index)
        self:OnItemMoveOut(itemObj, index)
    end)
    
    self._noTips_txt = self:AddComponent(UITextMeshProUGUIEx,"Txt_NoTips")
    
    self._give_btn = self:AddComponent(UIButton,"Btn_Give")
    self._onGive_rect = self:AddComponent(UIBaseContainer,"Btn_Give/On_Give")
    self._onNameGive_txt = self:AddComponent(UITextMeshProUGUIEx,"Btn_Give/On_Give/OnNameGive")
    self._offGive_rect = self:AddComponent(UIBaseContainer,"Btn_Give/Off_Give")
    self._offNameGive_txt = self:AddComponent(UITextMeshProUGUIEx,"Btn_Give/Off_Give/OffNameGive")
    --self._giveRed_rect = self:AddComponent(UIBaseContainer,"Btn_Give/Rect_GiveRed")
    self._give_btn:SetOnClick(function()
        self:ClickTab(1)
    end)


    self._received_btn = self:AddComponent(UIButton,"Btn_Received")
    self._onReceived_rect = self:AddComponent(UIBaseContainer,"Btn_Received/On_Received")
    self._onNameReceived_txt = self:AddComponent(UITextMeshProUGUIEx,"Btn_Received/On_Received/OnNameReceived")
    self._offReceived_rect = self:AddComponent(UIBaseContainer,"Btn_Received/Off_Received")
    self._offNameReceived_txt = self:AddComponent(UITextMeshProUGUIEx,"Btn_Received/Off_Received/OffNameReceived")
    --self._receivedRed_rect = self:AddComponent(UIBaseContainer,"Btn_Received/Rect_ReceivedRed")
    self._received_btn:SetOnClick(function()
        self:ClickTab(2)
    end)
end

function UIGolloesTraderRecordView:OnDestroy()
    base.OnDestroy(self)
end

function UIGolloesTraderRecordView:OnEnable()
    base.OnEnable(self)
    SFSNetwork.SendMessage(MsgDefines.GetGolloesCaravanRecord)
    local strCost = LuaEntry.DataConfig:TryGetStr("golloes_dispatch_para", "k2")
    self.golloesCostTb = string.split(strCost, ";")
    self._onNameGive_txt:SetLocalText(321108)
    self._offNameGive_txt:SetLocalText(321108)
    self._onNameReceived_txt:SetLocalText(321109)
    self._offNameReceived_txt:SetLocalText(321109)
    self._noTips_txt:SetLocalText(302233)
end

function UIGolloesTraderRecordView:OnDisable()
    base.OnDisable(self)
end

function UIGolloesTraderRecordView:OnAddListener()
    base.OnAddListener(self)
    self:AddUIListener(EventId.ColloesCaravanRecord, self.RefreshUI)
end

function UIGolloesTraderRecordView:OnRemoveListener()
    base.OnRemoveListener(self)
    self:RemoveUIListener(EventId.ColloesCaravanRecord, self.RefreshUI)
end

function UIGolloesTraderRecordView:RefreshUI()
    self.lastType = 0
    local isShowRed = DataCenter.MonthCardNewManager:CheckIsShowRed()
    if isShowRed then
        self:ClickTab(2)
        EventManager:GetInstance():Broadcast(EventId.ColloesCaravanRed)
    else
        self:ClickTab(1)
    end
end

function UIGolloesTraderRecordView:ClickTab(type)
    if self.lastType ~= type then
        self.lastType = type
        if type == 1 then
            self._onGive_rect:SetActive(true)
            self._offGive_rect:SetActive(false)

            self._onReceived_rect:SetActive(false)
            self._offReceived_rect:SetActive(true)
        elseif type == 2 then
            self._onGive_rect:SetActive(false)
            self._offGive_rect:SetActive(true)

            self._onReceived_rect:SetActive(true)
            self._offReceived_rect:SetActive(false)
            local curTime = UITimeManager:GetInstance():GetServerTime()
            CS.GameEntry.Setting:SetString("Golloes_Receive_" .. LuaEntry.Player.uid, curTime)
        end
        self:CaravanRecordRefresh()
    end
end

function UIGolloesTraderRecordView:CaravanRecordRefresh()
    self:ClearScroll()
    self.list = DataCenter.MonthCardNewManager:GetCaravanRecord(self.lastType)
    if self.list and #self.list >0 then
        self._noTips_txt:SetActive(false)
        self.scroll_view:SetTotalCount(#self.list)
        self.scroll_view:RefillCells()
    else
        self._noTips_txt:SetActive(true)
    end
end

function UIGolloesTraderRecordView:OnItemMoveIn(itemObj, index)
    itemObj.name = tostring(index)
    local cellItem = self.scroll_view:AddComponent(UIGolloesTraderItem, itemObj)
    cellItem:SetData(self.list[index])
end

function UIGolloesTraderRecordView:OnItemMoveOut( itemObj, index)
    self.scroll_view:RemoveComponent(itemObj.name, UIGolloesTraderItem)
end

function UIGolloesTraderRecordView:ClearScroll()
    self.scroll_view:ClearCells()
    self.scroll_view:RemoveComponents(UIGolloesTraderItem)
end

function UIGolloesTraderRecordView:OnClickCell(data)
    local ownNum = DataCenter.GolloesCampManager:GetGolloesCount(3)
    local costNum = tonumber(self.golloesCostTb[3])
    if ownNum < costNum then
        local golloesMonthCard = DataCenter.MonthCardNewManager:GetGolloesMonthCard()
        local isBought = golloesMonthCard:IsBought()
        if isBought then
            UIUtil.ShowTipsId(320255)
            return
        else
            UIUtil.ShowMessage(Localization:GetString("320338"), 1, 110003, "", function()
                self.ctrl:OpenMonthCardPanel()
            end, nil);
            return
        end
    end
    
    self:StartTrade(data.pointId)
    SoundUtil.PlayEffect(GolloesSound[GolloesType.Trader])
    --SFSNetwork.SendMessage(MsgDefines.GolloesTradeCheckTarget, data.uid, data.name, data.pointId)
end

function UIGolloesTraderRecordView:StartTrade(pointId)
    local canSendNum, formationUuids = DataCenter.GolloesCampManager:GetFreeFormationByGolloesType(GolloesType.Trader)
    if canSendNum > 0 then
        local freeUuid = formationUuids[1]
        local marchTargetType = MarchTargetType.GOLLOES_TRADE
        local sfsObj = SFSObject.New()
        sfsObj:PutLong("uuid", freeUuid)
        local formationArray = SFSArray.New()
        sfsObj:PutSFSArray("formations", formationArray)
        local heroArray = SFSArray.New()
        sfsObj:PutSFSArray("heroInfos", heroArray)

        local dataObj = sfsObj
        local startPoint = LuaEntry.Player:GetMainWorldPos()
        MarchUtil.StartMarch(marchTargetType, pointId, -1, -1, 0, freeUuid, 1, dataObj,startPoint)
        UIUtil.ShowTipsId(320331)
    else
        UIUtil.ShowTipsId(320334)
    end
end

return UIGolloesTraderRecordView