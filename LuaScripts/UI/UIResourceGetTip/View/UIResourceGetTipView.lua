---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zzl.
--- DateTime: 
---

local UIResourceGetTipView = BaseClass("UIResourceGetTipView", UIBaseView)
local base = UIBaseView

local Localization = CS.GameEntry.Localization

local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    self.icon          = self:AddComponent(UIImage,"Root/ImageItem")
    self.sliderGreen   = self:AddComponent(UISlider, 'Root/SliderGreen')
    self.sliderYellow  = self:AddComponent(UISlider, 'Root/SliderYellow')
    self.textName      = self:AddComponent(UIText, 'Root/TextName')
    self.textNum       = self:AddComponent(UIText, 'Root/TextNum')
    self.textName1       = self:AddComponent(UIText, 'Root/TextName1')
    self.root          = self:AddComponent(UIBaseContainer, 'Root')
    self.animator      = self:AddComponent(UIAnimator, '')
end

local function ComponentDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
    self.animator:Enable(true)
    
    local rootRt = self.root.transform
    DOTween.Kill(rootRt)
    rootRt:Set_localScale(1, 1, 1)
    
    local add, total, limitBefore, limitCurrent , param = self:GetUserData()
    local last = total - add
    local limitAdd = limitCurrent - limitBefore
    local reached = last / limitBefore >= 1
    local pic
    if param.type == RewardType.GOODS then
        self.icon:LoadSprite(string.format(LoadPath.ItemPath,param.goods.icon))
        self.textName:SetLocalText(param.goods.name)
        pic = string.format(LoadPath.ItemPath,param.goods.icon)
    elseif param.type == 0 then
        self.icon:LoadSprite(param.icon)
        self.textName:SetLocalText(param.name)
        pic = param.icon
    else
        self.icon:LoadSprite(DataCenter.RewardManager:GetPicByType(param.type))
        self.textName:SetLocalText(ResourceTypeTxt[param.type])
        pic = DataCenter.RewardManager:GetPicByType(param.type)
    end
    self.sliderGreen:SetActive(not reached)
    self.sliderYellow:SetActive(reached)
    if param.type == 0 then
        self.textNum:SetText(toInt(last) .. '%')
    else
        self.textNum:SetText(toInt(last) .. '/'.. toInt(limitBefore))
    end
    self.sliderGreen:SetValue(last / limitCurrent)
    local ret, time = self.animator:GetAnimationReturnTime('UIRecruitLotteryTip_show')
    local showTime = (ret and time or 0) + 0.2
    --print('showTime:' .. showTime)

    local pos = param.pos
    local rewardTyp= param.type
    UIUtil.DoFly(tonumber(rewardTyp),5,pic,pos,self.icon.transform.position)
     
    local from = last / limitBefore
    local to = total / limitCurrent
    
    local function OnProAniEnd()
        if param.type == 0 then
            self.textNum:SetText(toInt(total) .. '%')
        else
            self.textNum:SetText(toInt(total) .. '/'.. toInt(limitCurrent))
        end
        local bFull = total / limitCurrent >= 1
        if bFull then
            self.sliderGreen:SetActive(false)
            self.sliderYellow:SetActive(true)

            self.animator:SetTrigger('change')
        end
        
        local changeTime = (bFull and 2.6 or 1.5)
        print('changeTime:' .. changeTime)
        
        
        TimerManager:GetInstance():DelayInvoke(function()
            self.animator:Enable(false)
            DOTween.Kill(rootRt)
            rootRt:Set_localScale(1, 1, 1)
            rootRt:DOScale(Vector3.New(1.2, 1.2, 1.2), 0.15):OnComplete(function()
                rootRt:DOScale(Vector3.zero, 0.25):OnComplete(function()
                    self.ctrl:CloseSelf()
                end)
            end)
        end, changeTime)
    end
    
    local function OnProGet()
        return from
    end
    
    local function OnProSet(x)
        if limitAdd == 0 then
            self.sliderGreen:SetValue(math.min(1, x))
        end

        local t = Mathf.InverseLerp(from, to, x)
        local num = math.floor(last + add * t)
        local limit = math.floor(limitBefore + limitAdd * t)
        if param.type == 0 then
            self.textNum:SetText(toInt(num) .. '%')
        else
            self.textNum:SetText(toInt(num) .. '/'.. toInt(limit))
        end
      
    end
    TimerManager:GetInstance():DelayInvoke(function()
        DOTween.To(OnProGet, OnProSet, to, 0.6):OnComplete(OnProAniEnd):SetDelay(showTime)
    end,2)
end


UIResourceGetTipView.OnCreate= OnCreate
UIResourceGetTipView.OnDestroy = OnDestroy
UIResourceGetTipView.OnEnable = OnEnable
UIResourceGetTipView.ComponentDefine = ComponentDefine
UIResourceGetTipView.ComponentDestroy = ComponentDestroy

return UIResourceGetTipView
