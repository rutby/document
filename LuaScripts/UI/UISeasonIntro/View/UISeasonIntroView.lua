---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2023/2/1 20:55
---

local UISeasonIntro = BaseClass("UISeasonIntro", UIBaseView)
local base = UIBaseView
local UISeasonIntroCell = require "UI.UISeasonIntro.Component.UISeasonIntroCell"
local UISeasonIntroTab = require "UI.UISeasonIntro.Component.UISeasonIntroTab"
local UISeasonIntroHero = require "UI.UISeasonIntro.Component.UISeasonIntroHero"

local block_path = "Block"
local root_path = "Root"
local close_path = "Root/SafeArea/Close"
local title_path = "Root/SafeArea/Title"
local cell_path = "Root/SafeArea/CellList/Cell_%s"
local tab_path = "Root/SafeArea/TabList/UISeasonIntroTab_%s"
local hero_panel_path = "Root/UISeasonIntroHero"

local TAB_COUNT = 6
local TabName =
{
    [1] = "110492", -- 赛季玩法1
    [2] = "110493", -- 赛季玩法2
    [3] = "110494", -- 新英雄
    [4] = "100180", -- 英雄经验
    [5] = "110495", -- 赛季奖励
    [6] = "110496", -- 英雄重置
}

local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
    self:ReInit()
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function ComponentDefine(self)
    self.block_go = self:AddComponent(UIBaseContainer, block_path)
    self.root_anim = self:AddComponent(UIAnimator, root_path)
    self.close_btn = self:AddComponent(UIButton, close_path)
    self.close_btn:SetOnClick(function()
        self:OnCloseClick()
    end)
    self.title_text = self:AddComponent(UIText, title_path)
    self.cells = {}
    self.tabs = {}
    for i = 1, TAB_COUNT do
        self.cells[i] = self:AddComponent(UISeasonIntroCell, string.format(cell_path, i))
        self.tabs[i] = self:AddComponent(UISeasonIntroTab, string.format(tab_path, i))
        self.tabs[i]:SetName(TabName[i])
        self.tabs[i]:SetOnClick(function()
            self:OnTabClick(i)
        end)
    end
    self.hero_panel = self:AddComponent(UISeasonIntroHero, hero_panel_path)
end

local function ComponentDestroy(self)
    self.block_go = nil
    self.root_anim = nil
    self.close_btn = nil
    self.title_text = nil
    self.cells = nil
    self.tabs = nil
    self.hero_panel = nil
end

local function DataDefine(self)
    self.selectIndex = 1
    self.doFlyIcon = false
end

local function DataDestroy(self)
    self.selectIndex = nil
    self.doFlyIcon = nil
end

local function OnAddListener(self)
    base.OnAddListener(self)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
end

local function ReInit(self)
    self.selectIndex = 1
    self.doFlyIcon = self:GetUserData() or false
    self.tabs[4]:SetActive(false)
    
    local x = 0
    
    -- 1
    x = 1
    self.cells[x]:SetLocalText("Subtitle", 110503)
    self.cells[x]:SetLocalText("Text1", 110353)
    self.cells[x]:SetLocalText("Text2", 110352)
    self.cells[x]:SetLocalText("BottomText", 110487)
    
    -- 2
    x = 2
    local buildIds =
    {
        BuildingTypes.SEASON_DESERT_RESISTANCE_1,
        BuildingTypes.SEASON_DESERT_MAX_DESERT_1,
        BuildingTypes.SEASON_DESERT_MAX_FORMATION_SIZE_1,
        BuildingTypes.SEASON_DESERT_ARMY_ATTACK_1,
        BuildingTypes.SEASON_DESERT_ARMY_DEFEND_1,
    }
    for i, buildId in ipairs(buildIds) do
        self.cells[x]:SetLocalText(string.format("Bg%s/Name%s", i, i), 
                GetTableData(DataCenter.BuildTemplateManager:GetTableName(), buildId + 1,"name"))
        self.cells[x]:SetLocalText(string.format("Bg%s/Desc%s", i, i),
                GetTableData(DataCenter.BuildTemplateManager:GetTableName(), buildId + 1,"description"))
    end
    self.cells[x]:SetLocalText("BottomText", 110489)
    
    -- 3
    x = 3
    local heroIds = { 31001, 1010, 42001 }
    for i, heroId in ipairs(heroIds) do
        local heroConfig = LocalController:instance():getLine(HeroUtils.GetHeroXmlName(), heroId)
        self.cells[x]:SetLocalText(string.format("Label%s/Name%s", i, i), heroConfig.name)
        self.cells[x]:SetOnClick(string.format("Label%s", i, i), function()
            self:OnHeroClick(heroId)
        end)
    end
    self.cells[x]:SetLocalText("Text1", 100830)
    self.cells[x]:SetLocalText("Text2", 110494)
    self.cells[x]:SetLocalText("BottomText", 110490)
    
    -- 4
    x = 4
    self.cells[x]:SetLocalText("Text1", 110520)
    self.cells[x]:SetLocalText("Text2", 110519)
    
    -- 5
    x = 5
    self.cells[x]:SetLocalText("Subtitle", 110503)
    self.cells[x]:SetLocalText("Text1", 100817)
    self.cells[x]:SetLocalText("Text2", 100819)
    self.cells[x]:SetLocalText("Text3", 104312)
    self.cells[x]:SetLocalText("Text4", 104312)
    self.cells[x]:SetLocalText("BottomText", 110491)
    
    -- 6
    x = 6
    self.cells[x]:SetLocalText("BottomText", 110488)
    
    self:Refresh()
    self:ShowRoot()
end

local function Refresh(self)
    self.title_text:SetLocalText(TabName[self.selectIndex])
    for i = 1, TAB_COUNT do
        self.cells[i]:SetActive(i == self.selectIndex)
        self.tabs[i]:SetSelected(i == self.selectIndex)
    end
    self.hero_panel:Hide()
end

local function ShowRoot(self)
    self.block_go:SetActive(false)
    self.root_anim:Play("CommonPopup_movein", 0, 0)
end

local function HideRoot(self)
    self.block_go:SetActive(true)
    self.root_anim:Play("CommonPopup_moveout", 0, 0)
end

local function OnTabClick(self, index)
    self.selectIndex = index
    self:Refresh()
end

local function OnHeroClick(self, heroId)
    self.hero_panel:SetHeroId(heroId)
    self.hero_panel:Show()
end

local function OnCloseClick(self)
    self:HideRoot()
    local uiMainWindow = UIManager:GetInstance():GetWindow(UIWindowNames.UIMain)
    local btn = uiMainWindow and uiMainWindow.View:GetRobotWarsBtn()
    local icon = uiMainWindow and uiMainWindow.View:GetRobotWarsIcon()
    TimerManager:GetInstance():DelayInvoke(function()
        if self.doFlyIcon and btn and icon then
            local srcPos = Vector2.New(Screen.width / 2, Screen.height / 2)
            TimerManager:GetInstance():DelayInvoke(function()
                UIUtil.DoFlyCustom(icon, nil, 1, srcPos, btn.transform.position, 118, 118)
                self.ctrl:CloseSelf()
            end, 0.5)
            EventManager:GetInstance():Broadcast(EventId.UIMAIN_VISIBLE, true)
        else
            self.ctrl:CloseSelf()
        end
    end, 0.25)
end

UISeasonIntro.OnCreate = OnCreate
UISeasonIntro.OnDestroy = OnDestroy
UISeasonIntro.OnEnable = OnEnable
UISeasonIntro.OnDisable = OnDisable
UISeasonIntro.ComponentDefine = ComponentDefine
UISeasonIntro.ComponentDestroy = ComponentDestroy
UISeasonIntro.DataDefine = DataDefine
UISeasonIntro.DataDestroy = DataDestroy
UISeasonIntro.OnAddListener = OnAddListener
UISeasonIntro.OnRemoveListener = OnRemoveListener

UISeasonIntro.ReInit = ReInit
UISeasonIntro.Refresh = Refresh
UISeasonIntro.ShowRoot = ShowRoot
UISeasonIntro.HideRoot = HideRoot
UISeasonIntro.OnTabClick = OnTabClick
UISeasonIntro.OnHeroClick = OnHeroClick
UISeasonIntro.OnCloseClick = OnCloseClick

return UISeasonIntro