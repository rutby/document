---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zzl.
--- DateTime:
---
local UIDecorationMainCtrl = BaseClass("UIDecorationMainCtrl", UIBaseCtrl)
local Localization = CS.GameEntry.Localization
local function CloseSelf(self, backToActivity)
    UIManager.Instance:DestroyWindow(UIWindowNames.UIDecorationMain)
    if backToActivity ~= nil then
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIActivityCenterTable, { anim = true, hideTop = true, UIMainAnim = UIMainAnimType.AllHide }, tonumber(backToActivity))
    end
end

local function GetPanelData(self, currentSelectType, currentSelectDecoration, formationUuid)
    local allTypes = DataCenter.DecorationTemplateManager:GetAllTypes()
    currentSelectType = currentSelectType or allTypes[1]
    local allTypeDecoration = DataCenter.DecorationTemplateManager:GetTypeDecorations(currentSelectType)
    --currentSelectDecoration = currentSelectDecoration or allTypeDecoration[1]
    local allTypeResult = {}
    local allTypeDecorationResult = {}
    for _, v in ipairs(allTypes) do
        local tmp = {}
        tmp.id = v
        if tmp.id == DecorationType.DecorationType_Main_City then
            tmp.name = 320559
            tmp.bg = string.format(LoadPath.UIDecorationBG, "UIskin_zhezhao.png")
        elseif tmp.id == DecorationType.DecorationType_Head_Frame then
            tmp.name = 320560
            tmp.bg = string.format(LoadPath.UIDecorationBG, "UIDecoration_BG_2.png")
        elseif tmp.id == DecorationType.DecorationType_TittleName then
            tmp.name = 321000
            tmp.bg = string.format(LoadPath.UIDecorationBG, "UIskin_zhezhao.png")
        elseif tmp.id == DecorationType.DecorationType_MarchSkin then
            tmp.name = GameDialogDefine.MARCH_SKIN
            tmp.bg = string.format(LoadPath.UIDecorationBG, "UIskin_zhezhao.png")
        end
        
        tmp.icon1 = string.format(LoadPath.UIDecoration, "UIskin_btn_skin_"..v.."_1.png")
        tmp.icon2 = string.format(LoadPath.UIDecoration, "UIskin_btn_skin_"..v.."_2.png")
        
        table.insert(allTypeResult, tmp)
    end
    
    for _, v in ipairs(allTypeDecoration) do
        local tmp = {}
        tmp.id = v.id
        local data = DataCenter.DecorationDataManager:GetSkinDataById(tmp.id)
        tmp.isUnlock = v:IsDefault() or (data ~= nil and data:IsInExpireTime())
        local currentSkinId = nil
        if v.type == DecorationType.DecorationType_MarchSkin then
            currentSkinId = DataCenter.DecorationDataManager:GetCurrentSkinByType(v.type, formationUuid)
        else
            currentSkinId = DataCenter.DecorationDataManager:GetCurrentSkinByType(v.type)
        end
        tmp.inUse = currentSkinId == tmp.id
        if currentSelectDecoration == nil and tmp.inUse then
            currentSelectDecoration = v.id
        end
        tmp.colorBg = DataCenter.ItemTemplateManager:GetToolBgByColor(v.quality)
        tmp.icon = v.icon
        tmp.img = v.img
        tmp.order = v.order
        tmp.showRedPoint = false
        local hasGainItem = false
        local hasNew = false
        tmp.showNew = false
        tmp.showAddRedPoint = false
        for _, v1 in pairs(v.gainMethod) do
            local itemCount = DataCenter.ItemData:GetItemCount(v1.id)
            if itemCount > 0 then
                hasGainItem = true
                if not hasNew then
                    hasNew = DataCenter.DecorationDataManager:IsNewDecorationItem(v1.id)
                end
            end
        end

        if not tmp.isUnlock then
            tmp.showRedPoint = hasGainItem
            tmp.showNew = hasNew
            if not tmp.showNew and v:IsHot() then
                tmp.showNew = true
            end
        else
            tmp.showAddRedPoint = hasGainItem
        end
        
        tmp.name = v.name
        tmp.type = v.type
        table.insert(allTypeDecorationResult, tmp)
    end
    table.sort(allTypeDecorationResult, function (k, v)
        if k.isUnlock ~= v.isUnlock then
            return k.isUnlock
        end
        return k.order < v.order
    end)
    currentSelectDecoration = currentSelectDecoration or allTypeDecoration[1].id
    return currentSelectType, currentSelectDecoration, allTypeResult, allTypeDecorationResult
end

local function GetHeadFrameData(self, decorationId) 
    local result = {}
    result.decorationId = decorationId
    result.frame = DataCenter.DecorationDataManager:GetHeadFrame(decorationId, LongMaxValue)
    return result
end

local function GetMainCityData(self, decorationId)
    local result = {}
    result.decorationId = decorationId
    return result
end

local function DoWhenClickUnlock(self, decorationId)
    local template = DataCenter.DecorationTemplateManager:GetTemplate(decorationId)
    if template ~= nil then
        local lastSex = LuaEntry.Player:GetSex()
        if lastSex ~= SexType.Woman and template.type_gain == DecorationGainType.DecorationGainType_Female then
            UIUtil.ShowTipsId(320608)
            return
        end

        if template.type_gain == DecorationGainType.DecorationGainType_Item_Exchange then
            UIManager:GetInstance():OpenWindow(UIWindowNames.UIDecorateUnlock, decorationId)
        elseif template.type_gain == DecorationGainType.DecorationGainType_Month_Card then
            GoToUtil.GoToMonthCard()
        elseif template.type_gain == DecorationGainType.DecorationGainType_Champions or template.type_gain == DecorationGainType.DecorationGainType_Arena then
            GoToResLack.GotoTitleSkin(decorationId)
        elseif template.type_gain == DecorationGainType.DecorationGainType_OfficialPosition then
            UIManager:GetInstance():OpenWindow(UIWindowNames.UIGovernmentMain,2)
        end
    end
end

UIDecorationMainCtrl.CloseSelf = CloseSelf
UIDecorationMainCtrl.GetPanelData = GetPanelData
UIDecorationMainCtrl.GetHeadFrameData = GetHeadFrameData
UIDecorationMainCtrl.GetMainCityData = GetMainCityData
UIDecorationMainCtrl.DoWhenClickUnlock = DoWhenClickUnlock

return UIDecorationMainCtrl