---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1020.
--- DateTime: 2023/4/14 17:47
---

local UIDecorationTittleItem = BaseClass("UIDecorationTittleItem", UIBaseContainer)
local base = UIBaseContainer

local select_effect_path = "select"
local icon_path = "icon"
local btn_path = "selectBtn"
local red_point_path = "redPoint"
local new_path = "newItem"
local txt_title_path = "icon/txtTitle"
local in_use_path = "in_use_img"
local imgLock_path = "imgLock"

--创建
function UIDecorationTittleItem:OnCreate()
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
end

-- 销毁
function UIDecorationTittleItem:OnDestroy()
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

function UIDecorationTittleItem:ComponentDefine()
    self.select_effect = self:AddComponent(UIBaseContainer, select_effect_path)
    self.icon = self:AddComponent(UIImage, icon_path)
    self.btn = self:AddComponent(UIButton, btn_path)
    self.btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:ClickBtn()
    end)
    self.red_point = self:AddComponent(UIBaseContainer, red_point_path)
    self.new = self:AddComponent(UIBaseContainer, new_path)
    self.txtTitle = self:AddComponent(UITextMeshProUGUIEx, txt_title_path)
    self.in_use = self:AddComponent(UITextMeshProUGUIEx, in_use_path)
    self.imgLock = self:AddComponent(UIBaseContainer, imgLock_path)
end

function UIDecorationTittleItem:ComponentDestroy()

end

function UIDecorationTittleItem:DataDefine()
    self.param = {}
end

function UIDecorationTittleItem:DataDestroy()
    self.param = {}
end

function UIDecorationTittleItem:OnEnable()
    base.OnEnable(self)
end

function UIDecorationTittleItem:OnDisable()
    base.OnDisable(self)
end

function UIDecorationTittleItem:ReInit(param)
    self.param = param
    self:RefreshView()
end

function UIDecorationTittleItem:RefreshView()
    if self.param.data ~= nil then
        local defaultId = DataCenter.DecorationDataManager:GetDefaultSkinIdByType(self.param.data.type)
        self.txtTitle:SetActive(self.param.data.id == defaultId)
        self.icon:LoadSprite(self.param.data.img)
        if self.param.data.isUnlock then
            self.icon:SetColor(Color32.New(1, 1, 1, 1))
        else
            self.icon:SetColor(Color32.New(90/255, 90/255, 90/255, 255/255))
        end
        self.red_point:SetActive(self.param.data.showRedPoint)
        self.new:SetActive(self.param.data.showNew)
        self.txtTitle:SetLocalText(self.param.data.name)
        self.in_use:SetActive(self.param.data.inUse)
        self.imgLock:SetActive(not self.param.data.isUnlock)
    end
    self:RefreshSelect()
end

function UIDecorationTittleItem:ClickBtn()
    if not self.param.select then
        if self.param.onBtnClick ~= nil then
            self.param.onBtnClick(self.param.index)
        end
    end
end

function UIDecorationTittleItem:OnAddListener()
    base.OnAddListener(self)
end

function UIDecorationTittleItem:OnRemoveListener()
    base.OnRemoveListener(self)
end

function UIDecorationTittleItem:Select(select)
    if self.param.select ~= select then
        self.param.select = select
        self:RefreshSelect()
    end
end

function UIDecorationTittleItem:RefreshSelect()
    self.select_effect:SetActive(self.param.select)
end

return UIDecorationTittleItem