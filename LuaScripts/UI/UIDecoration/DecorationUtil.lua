---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2023/1/12 21:45
---

local Localization = CS.GameEntry.Localization
local DecorationUtil = {}

local WorldModelPos = Vector3.New(998, 0, 998)--这个是安全的，100以内跳转再跨服王座有问题
local WorldModelPosDeltaMarch = Vector3.New(0 , 1.3, 1)
local WorldModelPosDeltaWorld = Vector3.New(1.6,-1.45,6.07)
local WorldModelPosDeltaWorldCamera = Vector3.New(-3.5 , 0, -2)
local WorldModelPosDeltaCity = Vector3.New(-3.5 , 0, -2)

local function OpenDecorationPanel(type, decorationId, activityId)
    GoToUtil.CloseAllWindows()
    if CS.SceneManager.IsInCity() then
        local onComplete = function()
            UIManager:GetInstance():OpenWindow(UIWindowNames.UIDecorationMain, {anim = true, UIMainAnim = UIMainAnimType.AllHide}, type, decorationId, activityId)
        end
        GoToUtil.GotoCityPos(DecorationUtil.GetCityPos(), DataCenter.CityCameraManager:GetDecorationMainViewCameraZoom(), 0, onComplete)
    else
        local onComplete = function()
            UIManager:GetInstance():OpenWindow(UIWindowNames.UIDecorationMain, {anim = true, UIMainAnim = UIMainAnimType.AllHide}, type, decorationId, activityId)
        end
        GoToUtil.GotoWorldPos(DecorationUtil.GetWorldCameraPos(), DataCenter.CityCameraManager:GetDecorationWorldViewCameraZoom(), 0, onComplete)
    end
end

local function GetEffectNumWithType(value, type)
    local addValue = tonumber(value)
    local addSign = (addValue and tonumber(addValue) > 0) and "+" or ""
    if type == EffectLocalTypeInEffectDesc.Num then
        return  addSign .. string.GetFormattedSeperatorNum(value)
    elseif type == EffectLocalTypeInEffectDesc.Percent then
        return addSign .. string.GetFormattedPercentStr(value/100)
    elseif type == EffectLocalTypeInEffectDesc.Thousandth then
        return addSign .. string.GetFormattedThousandthStr(value/1000)
    end
    return ""
end

local function GetEffectDesc(decorationId)
    local result = {}
    local template = DataCenter.DecorationTemplateManager:GetTemplate(decorationId)
    if template ~= nil then
        result["name"] = Localization:GetString(template.name)
        result["quality"] = Localization:GetString(DecorationUtil.GetQualityName(template.quality))
        result["color"] = DecorationUtil.GetQualityColor(template.quality)
        result["qualityBg"] = DecorationUtil.GetQualityBG(template.quality)
        if template.gain_desc ~= 0 then
            result.gain_desc = Localization:GetString(template.gain_desc)
        end
    
        local useEffect = ""
        local useNum = table.count(template.wearEffect)
        local count = 0
        result.wearEffects = {}
        for _, v in pairs(template.wearEffect) do
            local effectId = v.key
            local value = v.value
            local nameStr = GetTableData(TableName.EffectNumDesc, effectId, 'des')
            local name = Localization:GetString(nameStr)
            local type = toInt(GetTableData(TableName.EffectNumDesc, effectId, 'type'))
            local addValue = DecorationUtil.GetEffectNumWithType(value, type)
            local effectParam = {}
            effectParam.name = name

            if value < 0 then
                useEffect = useEffect..name.."   ".."<color=#f26a67>" .. addValue .. "</color>"
                effectParam.value = "<color=#f26a67>" .. addValue .. "</color>"
            else
                useEffect = useEffect..name.."   ".."<color=#94e138>" .. addValue .. "</color>"
                effectParam.value = "<color=#94e138>" .. addValue .. "</color>"
            end
            count = count + 1
            if useNum > count then
                useEffect = useEffect.."\n"
            end
            
            table.insert(result.wearEffects, effectParam)
        end
        result["useEffect"] = useEffect
        local ownEffect = ""
        count = 0
        local ownNum = table.count(template.ownEffect)
        result.ownEffects = {}
        for _, v in pairs(template.ownEffect) do
            local effectId = v.key
            local value = v.value
            local nameStr = GetTableData(TableName.EffectNumDesc, effectId, 'des')
            local name = Localization:GetString(nameStr)
            local type = toInt(GetTableData(TableName.EffectNumDesc, effectId, 'type'))
            local addValue = DecorationUtil.GetEffectNumWithType(value, type)
            local effectParam = {}
            effectParam.name = name

            if value < 0 then
                ownEffect = ownEffect..name.."   ".."<color=#f26a67>" .. addValue .. "</color>"
                effectParam.value = "<color=#f26a67>" .. addValue .. "</color>"
            else
                ownEffect = ownEffect..name.."   ".."<color=#94e138>" .. addValue .. "</color>"
                effectParam.value = "<color=#94e138>" .. addValue .. "</color>"
            end

            count = count + 1
            if ownNum > count then
                ownEffect = ownEffect.."\n"
            end
            table.insert(result.ownEffects, effectParam)
        end
        result["ownEffect"] = ownEffect
    end
    return result
end

local function GetQualityName(quality)
    if quality == DecorationQuality.DecorationQuality_Normal then
        return "110136"
    end
    if quality == DecorationQuality.DecorationGainType_Rare then
        return "110135"
    end
    if quality == DecorationQuality.DecorationGainType_Epic then
        return "140038"
    end
    if quality == DecorationQuality.DecorationGainType_Legend then
        return "320563"
    end
    return "110136"
end

local function GetQualityBG(quality)
    if quality == DecorationQuality.DecorationQuality_Normal then
        return string.format(LoadPath.HeroDetailPath, "UIHeroInfo_bg_quality_green")
    end
    if quality == DecorationQuality.DecorationGainType_Rare then
        return string.format(LoadPath.HeroDetailPath, "UIHeroInfo_bg_quality_blue")
    end
    if quality == DecorationQuality.DecorationGainType_Epic then
        return string.format(LoadPath.HeroDetailPath, "UIHeroInfo_bg_quality_purple")
    end
    if quality == DecorationQuality.DecorationGainType_Legend then
        return string.format(LoadPath.HeroDetailPath, "UIHeroInfo_bg_quality_orange")
    end
    return string.format(LoadPath.HeroDetailPath, "UIHeroInfo_bg_quality_green")
end

local function GetQualityColor(quality)
    if quality == DecorationQuality.DecorationQuality_Normal then
        return DetectEventGreenColor
    elseif quality == DecorationQuality.DecorationGainType_Rare then
        return DetectEventBlueColor
    elseif quality == DecorationQuality.DecorationGainType_Epic then
        return DetectEventPurpleColor
    elseif quality == DecorationQuality.DecorationGainType_Legend then
        return DetectEventOrangeColor
    end
    return DetectEventGreenColor
end

local function GetCityPos()
    local buildList = DataCenter.BuildManager:GetAllBuildingByItemIdWithoutPickUp(BuildingTypes.FUN_BUILD_MAIN)
    if buildList~=nil and table.count(buildList)>0 and buildList[1] ~=nil then
        local posEnd = buildList[1].pointId
        return SceneUtils.TileIndexToWorld(posEnd) + Vector3.New(0,-3,0)
    end
    return Vector3.New(0,0,0)
end

local function GetWorldCameraPos()
    if CS.SceneManager.IsInCity() then
        local buildList = DataCenter.BuildManager:GetAllBuildingByItemIdWithoutPickUp(BuildingTypes.FUN_BUILD_MAIN)
        if buildList~=nil and table.count(buildList)>0 and buildList[1] ~=nil then
            local posEnd = buildList[1].pointId
            return SceneUtils.TileIndexToWorld(posEnd) + Vector3.New(1.5,9.6,-8.3)
        end
    end
    return WorldModelPos 
end

local function GetWorldPos()
    if CS.SceneManager.IsInCity() then
        local buildList = DataCenter.BuildManager:GetAllBuildingByItemIdWithoutPickUp(BuildingTypes.FUN_BUILD_MAIN)
        if buildList~=nil and table.count(buildList)>0 and buildList[1] ~=nil then
            local posEnd = buildList[1].pointId
            return SceneUtils.TileIndexToWorld(posEnd) + Vector3.New(-0.25,-12.9,17.1)
        end
    end
    return WorldModelPos + Vector3.New(2,4.5,0)
end

local function GetMarchPos()
    if CS.SceneManager.IsInCity() then
        --local mainBuild = DataCenter.BuildManager:GetFunbuildByItemID(BuildingTypes.FUN_BUILD_MAIN)
        --return SceneUtils.TileIndexToWorld(mainBuild.pointId, ForceChangeScene.City) + WorldModelPosDeltaMarch
        local buildList = DataCenter.BuildManager:GetAllBuildingByItemIdWithoutPickUp(BuildingTypes.FUN_BUILD_MAIN)
        if buildList~=nil and table.count(buildList)>0 and buildList[1] ~=nil then
            local posEnd = buildList[1].pointId
            return SceneUtils.TileIndexToWorld(posEnd)+ WorldModelPosDeltaMarch
        end
    end
    return WorldModelPos + WorldModelPosDeltaMarch
end

DecorationUtil.OpenDecorationPanel = OpenDecorationPanel
DecorationUtil.GetEffectDesc = GetEffectDesc
DecorationUtil.GetQualityName = GetQualityName
DecorationUtil.GetQualityBG = GetQualityBG
DecorationUtil.GetQualityColor = GetQualityColor
DecorationUtil.GetEffectNumWithType = GetEffectNumWithType
DecorationUtil.GetCityPos = GetCityPos
DecorationUtil.GetWorldPos = GetWorldPos
DecorationUtil.GetMarchPos = GetMarchPos
DecorationUtil.GetWorldCameraPos = GetWorldCameraPos

return ConstClass("DecorationUtil", DecorationUtil)
