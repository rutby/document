---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2022/12/8 16:45
---

local UIDecorateUnlockView = BaseClass("UIDecorateUnlockView", UIBaseView)
--local UIDecorateUnlockItem = require "UI.UIDecoration.UIDecorateUnlock.Component.UIDecorateUnlockItem"
local UIDecorateUnlockItem = require "UI.UICommonItem.UIDecorateUnlockItem_CommonItem"
local base = UIBaseView
local Localization = CS.GameEntry.Localization


local closeBtn_path = "UICommonMidPopUpTitle/bg_mid/CloseBtn"
local titleTxt_path = "UICommonMidPopUpTitle/bg_mid/titleText"
local return_path = "UICommonMidPopUpTitle/panel"
local scroll_view = "Rect_Content/layout/ScrollViewLayout/ScrollView"
local icon_path = "Rect_Content/decoration_info/decorationIcon"
local name_path = "Rect_Content/decoration_info/decorationName"

local time_layout_path = "Rect_Content/layout/TimeLayout"
local time_title_path = "Rect_Content/layout/TimeLayout/timeBg/decorationTxt"
local time_path = "Rect_Content/layout/TimeLayout/decorationTime"
local item_title_text_path = "Rect_Content/layout/ScrollViewLayout/ItemTitle/ItemTitleText"
--创建
local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
    self:ReInit()
end

-- 销毁
local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    self._title_txt = self:AddComponent(UITextMeshProUGUIEx, titleTxt_path)
    self._title_txt:SetLocalText(320567)
    self._close_btn = self:AddComponent(UIButton, closeBtn_path)
    self._return_btn = self:AddComponent(UIButton, return_path)
    self.item_title_text = self:AddComponent(UITextMeshProUGUIEx, item_title_text_path)
    self.item_title_text:SetLocalText(320568)
    self._close_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self.ctrl:CloseSelf()
    end)
    self._return_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self.ctrl:CloseSelf()
    end)

    self.scroll_view = self:AddComponent(UIScrollView, scroll_view)
    self.scroll_view:SetOnItemMoveIn(function(itemObj, index)
        self:OnCreateCell(itemObj, index)
    end)
    self.scroll_view:SetOnItemMoveOut(function(itemObj, index)
        self:OnDeleteCell(itemObj, index)
    end)
    
    self.icon = self:AddComponent(UIImage, icon_path)
    self.name = self:AddComponent(UITextMeshProUGUIEx, name_path)
    
    self.time_layout = self:AddComponent(UIBaseContainer, time_layout_path)
    self.time_title = self:AddComponent(UITextMeshProUGUIEx, time_title_path)
    self.time_title:SetLocalText(300648)
    self.time = self:AddComponent(UITextMeshProUGUIEx, time_path)
    self.timer_action = function(temp)
        self:RefreshRemainTime()
    end

    self:AddTimer()
end

local function ComponentDestroy(self)
    self:ClearScroll()
    self:DeleteTimer()
end


local function DataDefine(self)

end

local function DataDestroy(self)

end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end


local function ReInit(self)
    self.decorationId = self:GetUserData()
    local data = self.ctrl:GetPanelData(self.decorationId)
    self.icon:LoadSprite(data.img, nil, function()
        self.icon:SetNativeSize()
    end)
    self.dataList = data["list"]
    self.endTime = data.time
    self.name:SetLocalText(data.name)
    local data = DataCenter.DecorationDataManager:GetSkinDataById(self.decorationId)
    self.time_layout:SetActive(data ~= nil and data:IsInExpireTime())
    if next(self.dataList) then
        self:ClearScroll()
        self.scroll_view:SetTotalCount(#self.dataList)
        self.scroll_view:RefillCells()
    end
    self:RefreshRemainTime()
end

local function OnUserSkinUpdate(self)
    self:ReInit()
end

local function OnCreateCell(self,itemObj, index)
    itemObj.name = tostring(index)
    local cellItem = self.scroll_view:AddComponent(UIDecorateUnlockItem, itemObj)
    local data =  self.dataList[index]
    cellItem:ReInit(data)
end

local function OnDeleteCell(self,itemObj, index)
    self.scroll_view:RemoveComponent(itemObj.name, UIDecorateUnlockItem)
end

local function ClearScroll(self)
    self.scroll_view:ClearCells()
    self.scroll_view:RemoveComponents(UIDecorateUnlockItem)
end

local function DeleteTimer(self)
    if self.timer ~= nil then
        self.timer:Stop()
        self.timer = nil
    end
end

local function AddTimer(self)
    if self.timer == nil then
        self.timer = TimerManager:GetInstance():GetTimer(1, self.timer_action, self, false,false,false)
    end
    self.timer:Start()
end

local function RefreshRemainTime(self)
    local now = UITimeManager:GetInstance():GetServerTime()
    local data = DataCenter.DecorationDataManager:GetSkinDataById(self.decorationId)
    if data ~= nil and data:IsInExpireTime() then
        local restTime = data.expireTime - now
        restTime = math.max(0, restTime)
        local restTimeStr = Localization:GetString("302217", UITimeManager:GetInstance():MilliSecondToFmtString(restTime))
        if data.expireTime <= 0 then
            restTimeStr = Localization:GetString("280098")
        end
        self.time:SetText(restTimeStr)
    else
        self.time:SetText("")
    end
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.UserSkinUpdate, self.OnUserSkinUpdate)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
    self:RemoveUIListener(EventId.UserSkinUpdate, self.OnUserSkinUpdate)
end

UIDecorateUnlockView.OnAddListener = OnAddListener
UIDecorateUnlockView.OnRemoveListener = OnRemoveListener
UIDecorateUnlockView.OnCreate = OnCreate
UIDecorateUnlockView.OnDestroy = OnDestroy
UIDecorateUnlockView.OnEnable = OnEnable
UIDecorateUnlockView.OnDisable = OnDisable
UIDecorateUnlockView.ComponentDefine = ComponentDefine
UIDecorateUnlockView.ComponentDestroy = ComponentDestroy
UIDecorateUnlockView.DataDefine = DataDefine
UIDecorateUnlockView.DataDestroy = DataDestroy
UIDecorateUnlockView.ReInit = ReInit
UIDecorateUnlockView.OnCreateCell = OnCreateCell
UIDecorateUnlockView.OnDeleteCell = OnDeleteCell
UIDecorateUnlockView.ClearScroll = ClearScroll
UIDecorateUnlockView.DeleteTimer = DeleteTimer
UIDecorateUnlockView.AddTimer = AddTimer
UIDecorateUnlockView.RefreshRemainTime = RefreshRemainTime
UIDecorateUnlockView.OnUserSkinUpdate = OnUserSkinUpdate

return UIDecorateUnlockView