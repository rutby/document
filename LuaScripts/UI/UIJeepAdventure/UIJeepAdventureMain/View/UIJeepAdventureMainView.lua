---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by guqu.
--- DateTime: 2020/9/2 20:22
---
local UIJeepAdventureMainView = BaseClass("UIJeepAdventureMainView",UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization
local UIGray = CS.UIGray
local UIJeepAdventureMainStageItem = require "UI.UIJeepAdventure.UIJeepAdventureMain.Component.UIJeepAdventureMainStageItem"

local text_title_path = "UICommonFullTop/imgTitle/Common_img_title/titleText"
local info_btn_path = "UICommonFullTop/imgTitle/InfoBtn"
local btn_back_path = "UICommonFullTop/CloseBtn"
local bg_path = "Bg"
local GotoBtn_path = "Root/GotoBtn"
local GotoBtnText_path = "Root/GotoBtn/GotoBtnText"
local rankBtn_path = "Root/rankBtn"
local rankBtnText_path = "Root/rankBtn/rankBtnText"
local rewardContent_path = "Root/rewardContent"
local rewardProgressFill_path = "Root/rewardContent/CircleSlider/FillArea/Fill"
local rewardBtn_path = "Root/rewardContent/rewardBtn"
local rewardBtnText_path = "Root/rewardContent/rewardBtn/rewardBtnText"
local stageItem_path = "Root/stageProgress/stageInfoItem"

local STAGE_SHOW_NUM = 9
local STAGE_SHOW_MID_INDEX = 5

function UIJeepAdventureMainView:OnCreate()
    base.OnCreate(self)
    
    self.curStageId = DataCenter.StoryManager:GetCurLevel()
    self:ComponentDefine()
    self:DataDefine()
    self:OnOpen()
    self:AddTimer()
end

function UIJeepAdventureMainView:OnDestroy()

    self:ComponentDestroy()
    self:DataDestroy()
    self:CloseTimer()
    base.OnDestroy(self)
end

function UIJeepAdventureMainView:OnAddListener()
    base.OnAddListener(self)
    -- self:AddUIListener(EventId.PlayerRank, self.RefreshRankList)
end

function UIJeepAdventureMainView:OnRemoveListener()
    base.OnRemoveListener(self)
    -- self:RemoveUIListener(EventId.PlayerRank, self.RefreshRankList)
end

function UIJeepAdventureMainView:ComponentDefine()
    self.txt_title = self:AddComponent(UITextMeshProUGUIEx, text_title_path)
    self.bg_image = self:AddComponent(UIImage, bg_path)
    self.close_btn = self:AddComponent(UIButton, btn_back_path)
    self.close_btn:SetOnClick(function()  
        self.ctrl:CloseSelf()
    end)
    self.info_btn = self:AddComponent(UIButton, info_btn_path)
    self.info_btn:SetOnClick(function()
        -- TODO
    end)
    self.gotoBtn = self:AddComponent(UIButton, GotoBtn_path)
    self.gotoBtn:SetOnClick(function()
        self:BattleStart()
    end)
    self.rankBtn = self:AddComponent(UIButton, rankBtn_path)
    self.rankBtn:SetOnClick(function()
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIStoryRank)
    end)
    self.rankBtnText = self:AddComponent(UITextMeshProUGUIEx, rankBtnText_path)
    self.rankBtnText:SetLocalText(390040)
    self.gotoBtnText = self:AddComponent(UITextMeshProUGUIEx, GotoBtnText_path)
    self.rewardContentGo = self:AddComponent(UIBaseContainer, rewardContent_path)
    self.rewardProgressFill = self:AddComponent(UIImage, rewardProgressFill_path)
    self.rewardBtn = self:AddComponent(UIButton, rewardBtn_path)
    self.rewardBtn:SetOnClick(function()
        self:OnRewardClick()
    end)
    self.rewardBtnText = self:AddComponent(UITextMeshProUGUIEx, rewardBtnText_path)

    self.stageItemList = {}
    for i = 1,STAGE_SHOW_NUM do
        local stageItem = self:AddComponent(UIJeepAdventureMainStageItem, stageItem_path .. i)
        self.stageItemList[i] = stageItem
    end
end

function UIJeepAdventureMainView:ComponentDestroy()
    self.txt_title = nil
    self.close_btn = nil
    self.info_btn = nil
    self.gotoBtn = nil
    self.gotoBtnText = nil
    self.rankBtn = nil
    self.rewardContentGo = nil
    self.rewardProgressFill = nil
    self.rewardBtn = nil
    self.rewardBtnText = nil
end

function UIJeepAdventureMainView:DataDefine()
    self.stagePosData = {}
    
    local itemH1 = 0
    local itemH2 = 0
    local itemSpaceX1 = 109
    local itemSpaceX2 = 96
    local txtH1 = 9
    local txtH2 = 3
    local arrowX1 = 60
    local arrowX2 = 47.5
    local arrowH1 = 8
    local arrowH2 = 8

    for i = 1,STAGE_SHOW_NUM do
        local midDistance = math.abs(i - 5)
        local midDir = i<STAGE_SHOW_MID_INDEX and -1 or 1

        local posData = {}

        if midDistance == 0 then
            posData.itemPos = {
                x = 0,
                y = itemH1,
            }
            posData.txtH = txtH1
            posData.arrowPos = {
                x = arrowX1,
                y = arrowH1,
            }
        elseif midDistance == 1 then
            posData.itemPos = {
                x = midDir * itemSpaceX1,
                y = itemH2,
            }
            posData.txtH = txtH2
            posData.arrowPos = {
                x = arrowX2,
                y = arrowH2,
            }
        else
            posData.itemPos = {
                x = midDir * (itemSpaceX1 + itemSpaceX2 *(midDistance-1)),
                y = itemH2,
            }
            posData.txtH = txtH2
            posData.arrowPos = {
                x = arrowX2,
                y = arrowH2,
            }
        end

        self.stagePosData[i] = posData
    end

    self.stageShowData = {}
    local firstShowStageId = self.curStageId - (STAGE_SHOW_MID_INDEX - 2)
    local maxStageId = DataCenter.StoryManager:GetMaxLevel()

    for i = 1,STAGE_SHOW_NUM do
        local curStageId = firstShowStageId + (i - 1)
        local isLegal = self:IsStageIdLegal(curStageId)
        local isPass = i < STAGE_SHOW_MID_INDEX
        local isTarget = i == STAGE_SHOW_MID_INDEX
        local isEndIndex = maxStageId == curStageId

        local showData = {
            index = i,
            stageId = curStageId,
            isLegal = isLegal,
            isPass = isPass,
            isTarget = isTarget,
            isEndIndex = isEndIndex,
        }
        self.stageShowData[i] = showData
    end
end

function UIJeepAdventureMainView:DataDestroy()
    self.stagePosData = nil
    self.stageShowData = nil
end

function UIJeepAdventureMainView:OnOpen()
    local curTime = UITimeManager:GetInstance():GetServerTime()
    local dayNight = DataCenter.VitaManager:GetDayNight(curTime)
    self.bg_image:LoadSprite("Assets/Main/TextureEx/UIJeepAdventure/Adventure_" .. (dayNight == VitaDefines.DayNight.Day and "day" or "night"))
    self:RefreshView()
end

function UIJeepAdventureMainView:RefreshView()
    self:RefreshTopView()
    self:RefreshBottomView()
    self:RefreshContentView()
end

function UIJeepAdventureMainView:RefreshTopView()
    self.txt_title:SetLocalText(134001)
end
function UIJeepAdventureMainView:RefreshBottomView()
    self.gotoBtnText:SetLocalText(110003)

    local isHaveTarget = self.stageShowData[STAGE_SHOW_MID_INDEX].isLegal
    self.gotoBtn:SetActive(isHaveTarget)
end
function UIJeepAdventureMainView:RefreshContentView()
    self.rewardBtnText:SetLocalText(170004)
    self:RefreshRewardProgressView()
    self:RefreshStageProgressView()
end

function UIJeepAdventureMainView:RefreshRewardProgressView()
    local hangupTime = DataCenter.StoryManager:GetHangupTime()
    if hangupTime == 0 then
        self.rewardContentGo:SetActive(false)
        return
    end
    
    local curTime = UITimeManager:GetInstance():GetServerTime()
    local minTime = DataCenter.StoryManager:GetMinHangupTime()
    local maxTime = DataCenter.StoryManager:GetMaxHangupTime()
    local time = curTime - hangupTime
    UIGray.SetGray(self.rewardBtn.transform, time < minTime, true)
    local percent = math.max(0, math.min(time / maxTime, 1))
    self.rewardProgressFill:SetFillAmount(percent)
end

function UIJeepAdventureMainView:RefreshStageProgressView()
    for i = 1,STAGE_SHOW_NUM do
        self.stageItemList[i]:SetData(self.stagePosData[i], self.stageShowData[i])
    end
end

function UIJeepAdventureMainView:IsStageIdLegal(stageId)
    local maxStageId = DataCenter.StoryManager:GetMaxLevel()
    return stageId >= 1 and stageId <= maxStageId
end

function UIJeepAdventureMainView:RefreshEverySecond()
    self:RefreshRewardProgressView()
end

function UIJeepAdventureMainView:AddTimer()
    if not self.timer then
        self.timer = TimerManager:GetInstance():GetTimer(1, function()
            self:RefreshEverySecond()
        end,nil,false,false,false)
    end
    self.timer:Start()
end

function UIJeepAdventureMainView:CloseTimer()
    if self.timer then
        self.timer:Stop()
        self.timer=nil
    end
end

function UIJeepAdventureMainView:BattleStart()
    if CS.SceneManager.IsInPVE() then
        self.ctrl:CloseSelf()
    else
        DataCenter.StoryManager.autoNext = false
        DataCenter.StoryManager:StartPve(self.curStageId + 1)
    end
end

function UIJeepAdventureMainView:OnRewardClick()
    local hangupTime = DataCenter.StoryManager:GetHangupTime()
    local curTime = UITimeManager:GetInstance():GetServerTime()
    local minTime = DataCenter.StoryManager:GetMinHangupTime()
    local time = curTime - hangupTime
    if time >= minTime then
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIJeepAdventureReward, NormalPanelAnim)
    else
        UIUtil.ShowTips(Localization:GetString("321382", UITimeManager:GetInstance():MilliSecondToFmtString(minTime - time)))
    end
end

return UIJeepAdventureMainView

