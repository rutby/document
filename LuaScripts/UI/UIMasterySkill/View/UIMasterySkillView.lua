---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2023/3/13 18:49
---

local UIMasterySkill = BaseClass("UIMasterySkill", UIBaseView)
local base = UIBaseView
local UIMasterySkillItem = require "UI.UIMasterySkill.Component.UIMasterySkillItem"
local Localization = CS.GameEntry.Localization

local title_path = "UICommonMidPopUpTitle/bg_mid/titleText"
local close_path = "UICommonMidPopUpTitle/bg_mid/CloseBtn"
local return_path = "UICommonMidPopUpTitle/panel"
local content_path = "Scroll/Content"

local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

local function OnDestroy(self)
    self:ClearItems()
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
    self:ReInit()
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function ComponentDefine(self)
    self.title_text = self:AddComponent(UITextMeshProUGUIEx, title_path)
    self.title_text:SetLocalText(150165)
    self.close_btn = self:AddComponent(UIButton, close_path)
    self.close_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self.ctrl:CloseSelf()
    end)
    self.return_btn = self:AddComponent(UIButton, return_path)
    self.return_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)
    self.content_go = self:AddComponent(UIBaseContainer, content_path)
end

local function ComponentDestroy(self)
    self.title_text = nil
    self.close_btn = nil
    self.return_btn = nil
    self.content_go = nil
end

local function DataDefine(self)
    self.skills = {}
    self.itemReqs = {}
    self.items = {}
end

local function DataDestroy(self)
    self.skills = nil
    self.itemReqs = nil
    self.items = nil
end

local function OnAddListener(self)
    base.OnAddListener(self)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
end

local function ShowItems(self)
    self:ClearItems()
    for _, skill in ipairs(self.skills) do
        self.itemReqs[skill] = self:GameObjectInstantiateAsync(UIAssets.UIMasterySkillItem, function(req)
            if req.isError then
                return
            end
            
            local go = req.gameObject;
            go.gameObject:SetActive(true)
            go.transform:SetParent(self.content_go.transform)
            go.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
            go.name = tostring(skill)
            
            local item = self.content_go:AddComponent(UIMasterySkillItem, go.name)
            item:SetData(skill)
            self.items[skill] = item
        end)
    end
end

local function ClearItems(self)
    self.content_go:RemoveComponents(UIMasterySkillItem)
    for _, req in pairs(self.itemReqs) do
        req:Destroy()
    end
end

local function ReInit(self)
    self.skills = DataCenter.MasteryManager:GetAllSkills(MasterySkillLocation.ActiveSkill)
    self:ShowItems()
end

UIMasterySkill.OnCreate = OnCreate
UIMasterySkill.OnDestroy = OnDestroy
UIMasterySkill.OnEnable = OnEnable
UIMasterySkill.OnDisable = OnDisable
UIMasterySkill.ComponentDefine = ComponentDefine
UIMasterySkill.ComponentDestroy = ComponentDestroy
UIMasterySkill.DataDefine = DataDefine
UIMasterySkill.DataDestroy = DataDestroy
UIMasterySkill.OnAddListener = OnAddListener
UIMasterySkill.OnRemoveListener = OnRemoveListener

UIMasterySkill.ReInit = ReInit
UIMasterySkill.ShowItems = ShowItems
UIMasterySkill.ClearItems = ClearItems

return UIMasterySkill