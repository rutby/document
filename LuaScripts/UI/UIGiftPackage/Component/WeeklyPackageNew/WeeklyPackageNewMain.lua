---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2022/2/16 12:12
---

local WeeklyPackageMain = BaseClass("WeeklyPackageMain", UIBaseView)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization

local WeeklyPackageNewCell = require "UI.UIGiftPackage.Component.WeeklyPackageNew.WeeklyPackageNewCell"
local WeeklyPackageNewItem = require "UI.UIGiftPackage.Component.WeeklyPackageNew.WeeklyPackageNewItem"

local emptyTip_path = "Bg/emptyTip"
local content_path = "Bg/packages/ScrollView/Content"
local dotsContainer_path = "Bg/PointArea"
local dotsTemplate_path = "Bg/Template/UIScrollPackPoint"
local origin_path = "Bg/packages/origin"

local packageScrollView_path = "Bg/packages/ScrollView"
local packageContent_path = "Bg/packages/ScrollView/Viewport/Content"
local title_text_path = "Bg/Rect_Top/Txt_GiftTitle"
local des_text_path = "Bg/Rect_Top/Txt_Desc"
local time_text_path = "Bg/Rect_Top/ActTime/remainTime"

-- 创建
local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

-- 销毁
local function OnDestroy(self)
    self:ClearScroll()
    self:ComponentDestroy()
    self:DataDestroy()
    self:DelTimer()
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    self:DelTimer()
    base.OnDisable(self)
end

local function OnAddListener(self)
    base.OnAddListener(self)
    --self:AddUIListener(EventId.UpdateGold, self.RefreshDiamondCount)
    self:AddUIListener(EventId.UpdateGiftPackData, self.OnRefreshAll)
end


local function OnRemoveListener(self)
    --self:RemoveUIListener(EventId.UpdateGold, self.RefreshDiamondCount)
    self:RemoveUIListener(EventId.UpdateGiftPackData, self.OnRefreshAll)
    base.OnRemoveListener(self)
end

--控件的定义
local function ComponentDefine(self)
    self.packageItemsTb = {}
    self.emptyTipN = self:AddComponent(UITextMeshProUGUIEx, emptyTip_path)
    self.emptyTipN:SetLocalText(320346)
    self.emptyTipN:SetActive(false)
    --self.packageContainerN = self:AddComponent(UIBaseContainer, pageScroll_path)
    --self.pageScrollN = self:AddComponent(UIScrollPage, pageScroll_path)
    --self.dotsContainerN= self:AddComponent(UIBaseContainer, dotsContainer_path)
    --self.dotsTemplateN = self:AddComponent(UIBaseContainer, dotsTemplate_path)
    --self.dotsTemplateN.gameObject:GameObjectCreatePool()
    self.originN = self:AddComponent(UIBaseContainer, origin_path)
    
    self.packageScrollViewN = self:AddComponent(UIScrollView, packageScrollView_path)
    self.packageScrollViewN:SetOnItemMoveIn(function(itemObj, index)
        self:OnItemMoveIn(itemObj, index)
    end)
    self.packageScrollViewN:SetOnItemMoveOut(function(itemObj, index)
        self:OnItemMoveOut(itemObj, index)
    end)
    self.packageContent = self:AddComponent(UIBaseContainer,packageContent_path)
    --self.packageScrollViewN:SetOnValueChanged(function()
    --    self:OnScrollViewChange()
    --end)
    --self.eventTriggerN = self:AddComponent(UIEventTrigger, packageContent_path)
    --self.eventTriggerN:OnBeginDrag(function(eventData)
    --    self:OnBeginDrag(eventData)
    --end)
    --self.eventTriggerN:OnDrag(function(eventData)
    --    self:OnDrag(eventData)
    --end)
    --self.eventTriggerN:OnEndDrag(function(eventData)
    --    self:OnEndDrag(eventData)
    --end)
    self.title_text = self:AddComponent(UITextMeshProUGUIEx,title_text_path)
    self.title_text:SetLocalText(320047)
    self.des_text = self:AddComponent(UITextMeshProUGUIEx,des_text_path)
    self.des_text:SetLocalText(321565)
    self.time_text = self:AddComponent(UITextMeshProUGUIEx,time_text_path)
end

--控件的销毁
local function ComponentDestroy(self)
    self.emptyTipN = nil
    self.originN = nil
    self.packagesTb = nil
    self.packageItemsTb = nil
end

--变量的定义
local function DataDefine(self)
    self.listGO = {}
    self.curPackageIndex = 2
    self.loadedNum = 0
    self.packageList = {}
end

--变量的销毁
local function DataDestroy(self)
    self.listGO = nil
    self.curPackageIndex = nil
    self.loadedNum = nil
    self.packageList = nil
end

local function OnRefreshAll(self)
    if IsNull(self.gameObject) then
        return
    end
    self:RefreshAll()
end

local function ReInit(self,targetPackageId)
    self.targetPackageId = targetPackageId
    self:RefreshAll()
    self:RefreshRemainTime()
    self:AddTimer()
end

local function RefreshRemainTime(self)
    local curTime = UITimeManager:GetInstance():GetServerTime()
    local packageId = self.packageList[1]:getID()
    local packageInfo =  GiftPackageData.get(packageId)
    local remainTime = packageInfo:getEndTime() - curTime
    if remainTime > 0 then
        self.time_text:SetText(UITimeManager:GetInstance():MilliSecondToFmtString(remainTime))
    else
        self.time_text:SetText("")
        self:DelTimer()
    end
end

local function AddTimer(self)
    self.CountDownTimerAction = function()
        self:RefreshRemainTime()
    end

    if self.countDownTimer == nil then
        self.countDownTimer = TimerManager:GetInstance():GetTimer(1, self.CountDownTimerAction , self, false,false,false)
    end
    self.countDownTimer:Start()
end

local function DelTimer(self)
    if self.countDownTimer ~= nil then
        self.countDownTimer:Stop()
        self.countDownTimer = nil
    end
end

local function RefreshAll(self)
    local oldCount = #self.packageList
    self.packageList = GiftPackageData.GetWeeklyPackageNewList()
    local newCount = #self.packageList
    if oldCount == newCount then
        for i, item in pairs(self.packageItemsTb) do
            local data = self.packageList[i]
            item:SetItem(data, self.originN)
        end
    else
        self.curPackageIndex = self:GetPackageIndexById(self.targetPackageId) or 2

        if self.curPackageIndex <= 1 then
            self.curPackageIndex = 2
        end
        if self.curPackageIndex >= #self.packageList then
            self.curPackageIndex = #self.packageList - 1
        end

        if #self.packageList == 0 then
            self.packageScrollViewN:SetActive(false)
            self.emptyTipN:SetActive(true)
        else
            self.packageScrollViewN:SetActive(true)
            self.emptyTipN:SetActive(false)
            self:RefreshPackages()
        end
    end
end

local function RefreshPackages(self)
    --self:ClearScroll()
    self.packageScrollViewN:SetTotalCount(#self.packageList)
    self.packageScrollViewN:RefillCells()
end

local function GetPackageIndexById(self, packId)
    if packId then
        for i, v in ipairs(self.packageList) do
            if v:getID() == packId then
                return i
            end
        end
    end
    return nil
end

local function OnItemMoveIn(self, itemObj, index)
    itemObj.name = tostring(index)
    local cellItem = self.packageScrollViewN:AddComponent(WeeklyPackageNewItem, itemObj)
    local packageInfo = self.packageList[index]
    cellItem:SetItem(packageInfo, self.originN)
    self.packageItemsTb[index] = cellItem
    --self:OnScrollViewChange()
end

local function OnItemMoveOut(self, itemObj, index)
    self.packageItemsTb[index] = nil
    self.packageScrollViewN:RemoveComponent(itemObj.name, WeeklyPackageNewItem)
end

local function RefreshScrollData(self)
  
end

local function OnScrollViewChange(self)
    for i, v in pairs(self.packageItemsTb) do
        if v then
            v:RefreshByExternal()
        end
    end
end

local function ClearScroll(self)
    self.packageScrollViewN:ClearCells()
    self.packageScrollViewN:RemoveComponents(WeeklyPackageNewItem)
end

WeeklyPackageMain.OnCreate = OnCreate
WeeklyPackageMain.OnDestroy = OnDestroy
WeeklyPackageMain.OnEnable = OnEnable
WeeklyPackageMain.OnDisable = OnDisable
WeeklyPackageMain.OnAddListener = OnAddListener
WeeklyPackageMain.OnRemoveListener = OnRemoveListener
WeeklyPackageMain.ComponentDefine = ComponentDefine
WeeklyPackageMain.ComponentDestroy = ComponentDestroy
WeeklyPackageMain.DataDefine = DataDefine
WeeklyPackageMain.DataDestroy = DataDestroy

WeeklyPackageMain.ReInit = ReInit
WeeklyPackageMain.OnRefreshAll = OnRefreshAll
WeeklyPackageMain.RefreshAll = RefreshAll
WeeklyPackageMain.RefreshPackages = RefreshPackages
WeeklyPackageMain.OnPageScroll = OnPageScroll
WeeklyPackageMain.OnItemMoveIn = OnItemMoveIn
WeeklyPackageMain.OnItemMoveOut = OnItemMoveOut
WeeklyPackageMain.OnScrollViewChange = OnScrollViewChange
WeeklyPackageMain.ClearScroll = ClearScroll
WeeklyPackageMain.GetPackageIndexById = GetPackageIndexById
WeeklyPackageMain.RefreshRemainTime = RefreshRemainTime
WeeklyPackageMain.DelTimer = DelTimer
WeeklyPackageMain.AddTimer = AddTimer
WeeklyPackageMain.RefreshScrollData = RefreshScrollData

return WeeklyPackageMain