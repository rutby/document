---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2022/3/28 16:48
---

local HeroMonthCardMain = BaseClass("HeroMonthCardMain", UIBaseContainer)
local base = UIBaseContainer
local HeroMonthCardItem = require "UI.UIGiftPackage.Component.HeroMonthCard.HeroMonthCardItem"
local UIGiftPackagePoint = require "UI.UIGiftPackage.Component.UIGiftPackagePoint"
local UIGray = CS.UIGray
local Localization = CS.GameEntry.Localization

local month_card_name_path = "bookBg/month_card_name"
local subTitle_path = "bookBg/sub_title"
local tip_path = "bookBg/tip"
local scroll_view_path = "bookBg/scroll_view"
local time_text_path = "bookBg/time_text"
local left_text_path = "bookBg/left_text_bg/left_text"
local left_text_bg_path = "bookBg/left_text_bg"
local buy_tip_path = "bookBg/buy_tipBg/buy_tip"
local buy_btn_path = "bookBg/buy_btn"
local buy_btn_text_path = "bookBg/buy_btn/buy_btn_text"
local package_reward_path = "bookBg/packageIcon"
local infoBtn_path = "bookBg/infoBtn"
local getAllRewardBtn_path = "bookBg/GetAllRewardBtn"
local getAllRewardTxt_path = "bookBg/GetAllRewardBtn/GetAllRewardTxt"
local point_path = "bookBg/buy_btn/UIGiftPackagePoint"
local particleMask_path = "bookBg/scroll_view/ParticleMask"
local baseImage_path = "bookBg/scroll_view/BaseImage"

--local particleMaskScaleY = 28400
--local devScreenHeight = 1334
--local panelTop = 202
--local deltaYTop = 407
--local deltaYBottom = 159

local scaleFactor =  50--

-- 创建
local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

-- 销毁
local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.RefreshHeroMonthCardAll, self.DoWhenDataBack)
    self:AddUIListener(EventId.RefreshHeroMonthCard, self.DoWhenDataBack)
end


local function OnRemoveListener(self)
    self:RemoveUIListener(EventId.RefreshHeroMonthCardAll, self.DoWhenDataBack)
    self:AddUIListener(EventId.RefreshHeroMonthCard, self.DoWhenDataBack)
    base.OnRemoveListener(self)
end

--控件的定义
local function ComponentDefine(self)
    self.month_card_name = self:AddComponent(UITextMeshProUGUIEx, month_card_name_path)
    self.subTitle = self:AddComponent(UITextMeshProUGUIEx, subTitle_path)
    self.tip = self:AddComponent(UITextMeshProUGUIEx, tip_path)
    self.tip:SetLocalText(320358)
    self.scroll_view = self:AddComponent(UIScrollView, scroll_view_path)
    self.scroll_view:SetOnItemMoveIn(function(itemObj, index)
        self:OnItemMoveIn(itemObj, index)
    end)
    self.scroll_view:SetOnItemMoveOut(function(itemObj, index)
        self:OnItemMoveOut(itemObj, index)
    end)
    self.time_text = self:AddComponent(UITextMeshProUGUIEx, time_text_path)
    self.left_text = self:AddComponent(UITextMeshProUGUIEx, left_text_path)
    self.buy_tip = self:AddComponent(UITextMeshProUGUIEx, buy_tip_path)
    self.left_text_bg = self:AddComponent(UIBaseContainer, left_text_bg_path)
    self.buy_btn = self:AddComponent(UIButton, buy_btn_path)
    self.buy_btn_text = self:AddComponent(UITextMeshProUGUIEx, buy_btn_text_path)
    self.buy_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnBuyClick()
    end)
    self.package_reward = self:AddComponent(UIButton, package_reward_path)
    self.package_reward:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnRewardPreviewBtnClick()
    end)
    self.infoBtn = self:AddComponent(UIButton, infoBtn_path)
    self.infoBtn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnClickInfoBtn()
    end)
    self.point_rect = self:AddComponent(UIGiftPackagePoint,point_path)
    
    self.getAllRewardBtn = self:AddComponent(UIButton, getAllRewardBtn_path)
    self.getAllRewardBtn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:GetAllReward()
    end)
    self.getAllRewardTxt = self:AddComponent(UITextMeshProUGUIEx, getAllRewardTxt_path)
    self.getAllRewardTxt:SetLocalText(110132)
    self.particleMask = self:AddComponent(UIBaseContainer, particleMask_path)

    self.baseImage = self:AddComponent(UIImage,baseImage_path)
    self.baseImage.anchorMin = Vector2.New(0.5, 0.5)
    self.baseImage.anchorMax =  Vector2.New(0.5, 0.5)
    local rect = self.baseImage.rectTransform.rect
    self.particleMask:SetLocalScaleXYZ(self.particleMask.rectTransform.localScale.x, rect.height * scaleFactor, 1)
    
    --local scaleFactor = UIManager:GetInstance():GetScaleFactor()
    --local screenSize = CS.UnityEngine.Screen
    --local scale = (screenSize.height / scaleFactor - panelTop - deltaYTop - deltaYBottom) / (devScreenHeight - panelTop - deltaYTop - deltaYBottom)
    --self.particleMask:SetLocalScaleXYZ(self.particleMask.rectTransform.localScale.x, particleMaskScaleY * scale, 1)
end

--控件的销毁
local function ComponentDestroy(self)
    if self.delayTimer then
        self.delayTimer:Stop()
        self.delayTimer = nil
    end
    self:ClearScroll()
    self.baseImage.anchorMin = Vector2.New(0, 0)
    self.baseImage.anchorMax =  Vector2.New(1, 1)
end

--变量的定义
local function DataDefine(self)

end

--变量的销毁
local function DataDestroy(self)

end

local function DoWhenDataBack(self)
    self:ReInit(false)
end

local function ReInit(self, autoToCanReceive)
    DataCenter.HeroMonthCardManager:SetNewFlag()
    local data = DataCenter.HeroMonthCardManager:GetHeroMonthCardInfo()
    if data == nil then
        DataCenter.HeroMonthCardManager:GetDataFromServer()
        return
    end
    local template = DataCenter.HeroMonthCardManager:GetTemplate(data.activityId)
    if template ~= nil then
        self.subTitle:SetLocalText(template.sub_name)
    else
        self.subTitle:SetLocalText(470069)
    end
    local timeStr = UITimeManager:GetInstance():TimeStampToDayForLocal(data.startTime).."-"..UITimeManager:GetInstance():TimeStampToDayForLocal(data.endTime - 1000)
    self.time_text:SetText(timeStr)
    self.curRechargeId = data.rechargeId
    local packageInfo = GiftPackageData.get(self.curRechargeId)
    self.month_card_name:SetLocalText(320356)
    local flag = data.buy == BuyFlag.BUY
    --UIGray.SetGray(self.buy_btn.transform, flag, not flag)
    self.buy_btn:SetActive(not flag)
    self.left_text_bg:SetActive(flag)
    local percent = GiftPackageData.getPackPercent(_, self.curRechargeId)
    -- self.subTitle:SetLocalText(320547)
    self:ClearScroll(self)
    self.rewardList = data.rewardArr
    if #self.rewardList > 0 then
        self.scroll_view:SetTotalCount(#self.rewardList)
        self.scroll_view:RefillCells()
        if autoToCanReceive then
            local index = 1
            for _, v in ipairs(self.rewardList) do
                local rewardState = DataCenter.HeroMonthCardManager:GetRewardState(v)
                if rewardState == HeroMonthCardRewardState.REWARD_STATE_CAN_RECEIVE then
                    index = v.day
                    break
                end
            end

            if index > 15 then
                self.delayTimer = TimerManager:GetInstance():DelayInvoke(function()
                    if self.delayTimer then
                        self.delayTimer:Stop()
                        self.delayTimer = nil
                    end
                    self.scroll_view:ScrollToCell(index + self.scroll_view.unity_scroll_view.m_ContentConstraintCount, 10000)
                end, 0.4)
            end
        end

        local canReceiveCount = 0
        for _, v in ipairs(self.rewardList) do
            local rewardState = DataCenter.HeroMonthCardManager:GetRewardState(v)
            if rewardState == HeroMonthCardRewardState.REWARD_STATE_CAN_RECEIVE then
                canReceiveCount = canReceiveCount + 1
            end
        end
        self.getAllRewardBtn:SetActive(canReceiveCount >= 3)
        self.tip:SetActive(canReceiveCount < 3)
    end

    if flag then
        self.buy_btn_text:SetLocalText(280124)
    else
        if packageInfo ~= nil then
            local strPrice = DataCenter.PayManager:GetDollarText(packageInfo:getPrice(), packageInfo:getProductID())
            self.buy_btn_text:SetText(strPrice)
        end
    end

    --积分
    self.point_rect:RefreshPoint(packageInfo)
end

local function OnItemMoveIn(self, itemObj, index)
    itemObj.name = tostring(index)
    local cellItem = self.scroll_view:AddComponent(HeroMonthCardItem, itemObj)
    local numPerLine = self.scroll_view.unity_scroll_view.m_ContentConstraintCount
    local showLine = (index ~= table.count(self.rewardList) and math.fmod(index, numPerLine) ~= 0)
    local day = self.rewardList[index].day
    cellItem:SetItem(day, showLine)
end

local function OnItemMoveOut(self, itemObj, index)
    self.scroll_view:RemoveComponent(itemObj.name, HeroMonthCardItem)
end

local function ClearScroll(self)
    self.scroll_view:ClearCells()
    self.scroll_view:RemoveComponents(HeroMonthCardItem)
end

local function OnBuyClick(self)
    local packageInfo = GiftPackageData.get(self.curRechargeId)
    if packageInfo ~= nil then
        DataCenter.PayManager:BuyGift(packageInfo)
    end
end

local function Update(self)
    local data = DataCenter.HeroMonthCardManager:GetHeroMonthCardInfo()
    local leftTime = 0
    if data ~= nil then
        local now = UITimeManager:GetInstance():GetServerTime()
        leftTime = data.endTime - now
    end
    if leftTime < 1 then
        self.left_text:SetText("")
    else
        leftTime = math.ceil(leftTime / (OneDayTime * 1000))
        if leftTime > 1 then
            self.left_text:SetLocalText(320365, leftTime)
        else
            self.left_text:SetLocalText(320366)
        end
        --leftTime = string.format("%dd", leftTime)
        --self.left_text:SetText(leftTime)
    end
end

local function OnRewardPreviewBtnClick(self)
    local pos = self.package_reward.transform.position
    local x = pos.x
    local y = pos.y
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIActivityRewardTip, Localization:GetString("320361"), -2, x, y, false, 1, 0)
end

local function OnClickInfoBtn()
    UIUtil.ShowIntro(Localization:GetString("470067"),"", Localization:GetString("470068"))
end

local function GetAllReward()
    SFSNetwork.SendMessage(MsgDefines.GetHeroMonthCardAllReward)
end

HeroMonthCardMain.OnCreate = OnCreate
HeroMonthCardMain.OnDestroy = OnDestroy
HeroMonthCardMain.OnAddListener = OnAddListener
HeroMonthCardMain.OnRemoveListener = OnRemoveListener
HeroMonthCardMain.ComponentDefine = ComponentDefine
HeroMonthCardMain.ComponentDestroy = ComponentDestroy
HeroMonthCardMain.DataDefine = DataDefine
HeroMonthCardMain.DataDestroy = DataDestroy
HeroMonthCardMain.ReInit = ReInit
HeroMonthCardMain.OnItemMoveIn = OnItemMoveIn
HeroMonthCardMain.OnItemMoveOut = OnItemMoveOut
HeroMonthCardMain.ClearScroll = ClearScroll
HeroMonthCardMain.DoWhenDataBack = DoWhenDataBack
HeroMonthCardMain.OnBuyClick = OnBuyClick
HeroMonthCardMain.Update = Update
HeroMonthCardMain.OnRewardPreviewBtnClick = OnRewardPreviewBtnClick
HeroMonthCardMain.OnClickInfoBtn = OnClickInfoBtn
HeroMonthCardMain.GetAllReward = GetAllReward

return HeroMonthCardMain