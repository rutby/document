---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2023/1/6 14:59
---

local UIChainPayItem = BaseClass("UIChainPayItem", UIBaseContainer)
local base = UIBaseContainer
local UIGray = CS.UIGray
local UIGiftPackagePoint = require "UI.UIGiftPackage.Component.UIGiftPackagePoint"
local UICommonItemChange = require "UI.UICommonItem.UICommonItemChange"

local arrow_left_path = "ArrowLeft"
local arrow_right_path = "ArrowRight"
local scroll_view_path = "Bg/ScrollView"
local content_path = "Bg/ScrollView/Viewport/Content"
local pay_big_btn_path = "Bg/PayBig"
local pay_big_text_path = "Bg/PayBig/PayBigText"
local pay_small_btn_path = "Bg/PaySmall"
local pay_small_text_path = "Bg/PaySmall/PaySmallText"
local refresh_btn_path = "Bg/Refresh"
local refresh_text_path = "Bg/Refresh/RefreshText"
local free_btn_path = "Bg/Free"
local free_text_path = "Bg/Free/FreeText"
local received_path = "Bg/Received"
local lock_black_path = "Bg/LockBlack"
local lock_big_path = "Bg/LockBig"
local lock_small_path = "Bg/LockSmall"
local point_big_path = "Bg/PointBig"
local point_small_path = "Bg/PointSmall"
local pack_id_path = "PackId"

local ITEM_COUNT = 3
local STATIC_WIDTH = 260

local Gray = Color.New(0.500, 0.500, 0.500, 1.000)
local Green = Color.New(0.310, 0.431, 0.075, 1.000)
local Yellow = Color.New(0.557, 0.247, 0.094, 1.000)

local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    self.arrow_left_go = self:AddComponent(UIBaseContainer, arrow_left_path)
    self.arrow_right_go = self:AddComponent(UIBaseContainer, arrow_right_path)
    self.scroll_view = self:AddComponent(UIScrollView, scroll_view_path)
    self.scroll_view:SetOnItemMoveIn(function(itemObj, index)
        self:OnCreateCell(itemObj, index)
    end)
    self.scroll_view:SetOnItemMoveOut(function(itemObj, index)
        self:OnDeleteCell(itemObj, index)
    end)
    self.content_go = self:AddComponent(UIBaseContainer, content_path)
    self.pay_big_btn = self:AddComponent(UIButton, pay_big_btn_path)
    self.pay_big_btn:SetOnClick(function()
        self:OnClick()
    end)
    self.pay_big_text = self:AddComponent(UIText, pay_big_text_path)
    self.pay_small_btn = self:AddComponent(UIButton, pay_small_btn_path)
    self.pay_small_btn:SetOnClick(function()
        self:OnClick()
    end)
    self.pay_small_text = self:AddComponent(UIText, pay_small_text_path)
    self.refresh_btn = self:AddComponent(UIButton, refresh_btn_path)
    self.refresh_btn:SetOnClick(function()
        self:OnRefreshClick()
    end)
    self.refresh_text = self:AddComponent(UIText, refresh_text_path)
    self.refresh_text:SetLocalText(110028)
    self.free_btn = self:AddComponent(UIButton, free_btn_path)
    self.free_btn:SetOnClick(function()
        self:OnClick()
    end)
    self.free_text = self:AddComponent(UIText, free_text_path)
    self.free_text:SetLocalText(130126)
    self.received_text = self:AddComponent(UIText, received_path)
    self.received_text:SetLocalText(170003)
    self.lock_black_go = self:AddComponent(UIBaseContainer, lock_black_path)
    self.lock_big_go = self:AddComponent(UIBaseContainer, lock_big_path)
    self.lock_small_go = self:AddComponent(UIBaseContainer, lock_small_path)
    self.point_big = self:AddComponent(UIGiftPackagePoint, point_big_path)
    self.point_small = self:AddComponent(UIGiftPackagePoint, point_small_path)
    self.id_text = self:AddComponent(UIText, pack_id_path)
end

local function ComponentDestroy(self)
    self.arrow_left_go = nil
    self.arrow_right_go = nil
    self.scroll_view = nil
    self.content_go = nil
    self.pay_big_btn = nil
    self.pay_big_text = nil
    self.pay_small_btn = nil
    self.pay_small_text = nil
    self.refresh_btn = nil
    self.refresh_text = nil
    self.free_btn = nil
    self.free_text = nil
    self.received_text = nil
    self.lock_black_go = nil
    self.lock_big_go = nil
    self.lock_small_go = nil
    self.point_big = nil
    self.point_small = nil
    self.id_text = nil
end

local function DataDefine(self)
    self.data = nil
    self.box = nil
    self.rewards = nil
    self.items = {}
    self.onClick = nil
    self.onRefreshClick = nil
end

local function DataDestroy(self)
    self.data = nil
    self.box = nil
    self.rewards = nil
    self.items = nil
    self.onClick = nil
    self.onRefreshClick = nil
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function OnAddListener(self)

end

local function OnRemoveListener(self)

end

local function OnCreateCell(self, itemObj, index)
    itemObj.name = tostring(index)
    local reward = self.rewards[index]
    local item = self.scroll_view:AddComponent(UICommonItemChange, itemObj)
    item:ReInit(reward)
    item:SetCheckActive(self.box.state == ChainPayBoxState.Received)
    self.items[index] = item
end

local function OnDeleteCell(self, itemObj, index)
    self.scroll_view:RemoveComponent(itemObj.name, UICommonItemChange)
    self.items[index] = nil
end

local function ShowScroll(self)
    self.scroll_view:SetTotalCount(#self.rewards)
    if #self.rewards > 0 then
        self.scroll_view:SetActive(true)
        self.scroll_view:RefillCells()

        local sizeFitter = self.content_go.transform:GetComponent(typeof(CS.UnityEngine.UI.ContentSizeFitter))
        if #self.rewards > ITEM_COUNT then
            sizeFitter.enabled = true
        else
            sizeFitter.enabled = false
            local size = self.content_go.rectTransform.sizeDelta
            size.x = STATIC_WIDTH
            self.content_go.rectTransform.sizeDelta = size
        end
    else
        self.scroll_view:SetActive(false)
    end
end

local function ClearScroll(self)
    self.scroll_view:ClearCells()
    self.scroll_view:RemoveComponents(UIHeroOfficialHeroItem)
end

local function SetData(self, data, box)
    self.data = data
    self.box = box
    self.rewards = box:GetRewards()
    
    self.arrow_left_go:SetActive(box.index > 1)
    self.arrow_right_go:SetActive(box.index < #data.boxes)

    local isLock = (box.index > data:GetLastReceivedIndex() + 1)
    if box.state == ChainPayBoxState.Default and not box:IsFree() then
        -- 付费
        if box:CanRefresh() then
            self.pay_big_btn:SetActive(false)
            self.lock_big_go:SetActive(false)
            self.point_big:SetActive(false)

            self.pay_small_btn:SetActive(true)
            self.lock_small_go:SetActive(isLock)
            self.point_small:SetActive(true)

            self.refresh_btn:SetActive(true)
            self:SetBtnGray(self.pay_small_btn, isLock, Yellow)
            self:SetBtnGray(self.refresh_btn, isLock, Green)

            self.pay_small_text:SetText(box:GetPriceText())
            self.point_small:RefreshPoint(box:GetPack())
        else
            self.pay_big_btn:SetActive(true)
            self.lock_big_go:SetActive(isLock)
            self.point_big:SetActive(true)

            self.pay_small_btn:SetActive(false)
            self.lock_small_go:SetActive(false)
            self.point_small:SetActive(false)

            self.refresh_btn:SetActive(false)
            self:SetBtnGray(self.pay_big_btn, isLock, Yellow)
            self:SetBtnGray(self.refresh_btn, isLock, Green)

            self.pay_big_text:SetText(box:GetPriceText())
            self.point_big:RefreshPoint(box:GetPack())
        end
        self.lock_black_go:SetActive(isLock)
        self.free_btn:SetActive(false)
        self.received_text:SetActive(false)
    elseif box.state == ChainPayBoxState.Default and box:IsFree() or box.state == ChainPayBoxState.Unlocked then
        -- 免费
        self.pay_big_btn:SetActive(false)
        self.lock_big_go:SetActive(isLock)
        self.point_big:SetActive(false)

        self.pay_small_btn:SetActive(false)
        self.lock_small_go:SetActive(false)
        self.point_small:SetActive(false)

        self.refresh_btn:SetActive(false)

        self.lock_black_go:SetActive(isLock)
        self.free_btn:SetActive(true)
        self.received_text:SetActive(false)
        self:SetBtnGray(self.free_btn, isLock, Green)
    else
        -- 已领取
        self.pay_big_btn:SetActive(false)
        self.lock_big_go:SetActive(false)
        self.point_big:SetActive(false)

        self.pay_small_btn:SetActive(false)
        self.lock_small_go:SetActive(false)
        self.point_small:SetActive(false)

        self.refresh_btn:SetActive(false)

        self.lock_black_go:SetActive(false)
        self.free_btn:SetActive(false)
        self.received_text:SetActive(true)
    end
    self:ShowScroll()
    
    -- debug
    if CS.CommonUtils.IsDebug() then
        local strs = { box.index, box.id }
        if box.exchangeId then
            table.insert(strs, box.exchangeId)
        end
        if not box:IsFree() then
            table.insert(strs, box:GetGroupIndex() .. "/" .. table.count(box.exchangeIds))
        end
        self.id_text:SetText(string.join(strs, " | "))
        self.id_text:SetActive(true)
    else
        self.id_text:SetActive(false)
    end
end

local function SetOnClick(self, onClick, onRefreshClick)
    self.onClick = onClick
    self.onRefreshClick = onRefreshClick
end

local function SetBtnGray(self, btn, isGray, defaultColor)
    CS.UIGray.SetGray(btn.transform, isGray, not isGray)
    local shadows = btn.transform:GetComponentsInChildren(typeof(CS.UnityEngine.UI.Shadow))
    for i = 0, shadows.Length - 1 do
        shadows[i].effectColor = isGray and Gray or defaultColor
    end
end

local function OnClick(self)
    if self.onClick then
        self.onClick(self.box)
    end
end

local function OnRefreshClick(self)
    if self.onRefreshClick then
        self.onRefreshClick(self.box)
    end
end

UIChainPayItem.OnCreate = OnCreate
UIChainPayItem.OnDestroy = OnDestroy
UIChainPayItem.ComponentDefine = ComponentDefine
UIChainPayItem.ComponentDestroy = ComponentDestroy
UIChainPayItem.DataDefine = DataDefine
UIChainPayItem.DataDestroy = DataDestroy
UIChainPayItem.OnEnable = OnEnable
UIChainPayItem.OnDisable = OnDisable
UIChainPayItem.OnAddListener = OnAddListener
UIChainPayItem.OnRemoveListener = OnRemoveListener

UIChainPayItem.OnCreateCell = OnCreateCell
UIChainPayItem.OnDeleteCell = OnDeleteCell
UIChainPayItem.ShowScroll = ShowScroll
UIChainPayItem.ClearScroll = ClearScroll

UIChainPayItem.SetData = SetData
UIChainPayItem.SetOnClick = SetOnClick
UIChainPayItem.SetBtnGray = SetBtnGray
UIChainPayItem.OnClick = OnClick
UIChainPayItem.OnRefreshClick = OnRefreshClick

return UIChainPayItem