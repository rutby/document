---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2022/2/16 12:12
---

local WeeklyPackageMain = BaseClass("WeeklyPackageMain", UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization
local WeeklyPackageItem = require "UI.UIGiftPackage.Component.WeeklyPackage.WeeklyPackageItem"

local title_path = "MsgBg/TitleText"
local subTitle_path = "MsgBg/TopBg/weeklyBg/DescText"
local refreshCD_path = "MsgBg/DescText (1)"
--local diamondNum_path = ""
local svPackages_path = "MsgBg/Scroll View"
local emptyTip_path = "MsgBg/emptyTip"

-- 创建
local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

-- 销毁
local function OnDestroy(self)
    --self:ClearScroll()
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.UpdateGold, self.RefreshDiamondCount)
end


local function OnRemoveListener(self)
    self:RemoveUIListener(EventId.UpdateGold, self.RefreshDiamondCount)
    base.OnRemoveListener(self)
end

--控件的定义
local function ComponentDefine(self)
    self.titleN = self:AddComponent(UIText, title_path)
    self.titleN:SetLocalText(320047)
    self.subTitleN = self:AddComponent(UIText, subTitle_path)
    self.subTitleN:SetLocalText(320316)
    self.refreshCdN = self:AddComponent(UIText, refreshCD_path)
    self.refreshCdN:SetLocalText(320317)
    --self.diamondNumN = self:AddComponent(UIText, diamondNum_path)
    self.svPackagesN = self:AddComponent(UIScrollView, svPackages_path)
    self.svPackagesN:SetOnItemMoveIn(function(itemObj, index)
        self:OnItemMoveIn(itemObj, index)
    end)
    self.svPackagesN:SetOnItemMoveOut(function(itemObj, index)
        self:OnItemMoveOut(itemObj, index)
    end)
    self.emptyTipN = self:AddComponent(UIText, emptyTip_path)
    self.emptyTipN:SetText("")
end

--控件的销毁
local function ComponentDestroy(self)
    self.titleN = nil
    self.subTitleN = nil
    self.refreshCdN = nil
    self.diamondNumN = nil
end

--变量的定义
local function DataDefine(self)
   self.packageList = {} 
    self.cell = {}
end

--变量的销毁
local function DataDestroy(self)
    self.packageList = nil
    self.cell = nil
    self:ClearScroll()
end


local function ReInit(self,targetPackageId)
    self.packageList = GiftPackageData.GetWeeklyPackageList()
    --local lastT = GiftPackageData.GetLastBuyFreeWeekPackageT()
    --local isSameWeek = UITimeManager:GetInstance():CheckIfIsSameWeek(lastT)
    local hasFree = GiftPackageData.CheckIfHasFreeWeeklyPackage()
    table.sort(self.packageList, function(a, b)
        if a.isWeeklyFreePackage then
            return hasFree
        elseif b.isWeeklyFreePackage then
            return not hasFree
        else
            local remainA = a:canGet()
            local remainB = b:canGet()
            if remainA ~= remainB then
                return remainA
            else
                return a:getID() < b:getID()
            end
        end
    end)
    local isTargetGiftId = self:GetPackageIndexById(targetPackageId)
    
    self:RefreshPackages(targetPackageId,isTargetGiftId)
    self:RefreshDiamondCount()
end

local function RefreshPackages(self,targetPackageId,isTargetGiftId)
    if #self.packageList > 0 then
        self.svPackagesN:SetActive(true)
        self.emptyTipN:SetActive(false)
        
        self.svPackagesN:SetTotalCount(#self.packageList)
        if targetPackageId and isTargetGiftId then
            self.svPackagesN:ScrollToCell(isTargetGiftId,10000)

            TimerManager:GetInstance():DelayInvoke(function()
                self.cell[isTargetGiftId]:ShowArrow()
            end, 0.5)
        else
            self.svPackagesN:RefillCells()
        end
    else
        self.svPackagesN:SetActive(false)
        self.emptyTipN:SetActive(true)
    end
end

local function RefreshDiamondCount(self)
    --local curNum = LuaEntry.Player.gold
    --self.diamondNumN:SetText(string.GetFormattedSeperatorNum(curNum))
end

local function GetPackageIndexById(self, packId)
    if packId then
        for i, v in ipairs(self.packageList) do
            if v:getID() == packId then
                return i
            end
        end
    end
    return nil
end

local function OnItemMoveIn(self, itemObj, index)
    itemObj.name = tostring(index)
    local cellItem = self.svPackagesN:AddComponent(WeeklyPackageItem, itemObj)
    local tempPackage = self.packageList[index]
    cellItem:SetItem(tempPackage)
    self.cell[index] = cellItem
end

local function OnItemMoveOut(self, itemObj, index)
    self.svPackagesN:RemoveComponent(itemObj.name, WeeklyPackageItem)
end

local function ClearScroll(self)
    self.svPackagesN:ClearCells()
    self.svPackagesN:RemoveComponents(WeeklyPackageItem)
end
--local function ClearScroll(self)
--    self.svPackagesN:ClearCells()
--    self.svPackagesN:RemoveComponents()
--end

--[[
local function AddTimer(self)
    self.TimerAction = function()
        self:SetRemainTime()
    end

    if self.timer == nil then
        self.timer = TimerManager:GetInstance():GetTimer(1, self.TimerAction , self, false,false,false)
    end
    self.timer:Start()
end

local function SetRemainTime(self)
    local curTime = UITimeManager:GetInstance():GetServerTime()
    local remainTime = self.golloesMonthCard.endTime - curTime
    if remainTime > 0 then
        self.remainTimeTxtN:SetText(Localization:GetString("100238") .. UITimeManager:GetInstance():MilliSecondToFmtString(remainTime))
    else
        self:DelTimer()
    end
end
--]]




WeeklyPackageMain.OnCreate = OnCreate
WeeklyPackageMain.OnDestroy = OnDestroy
WeeklyPackageMain.OnAddListener = OnAddListener
WeeklyPackageMain.OnRemoveListener = OnRemoveListener
WeeklyPackageMain.ComponentDefine = ComponentDefine
WeeklyPackageMain.ComponentDestroy = ComponentDestroy
WeeklyPackageMain.DataDefine = DataDefine
WeeklyPackageMain.DataDestroy = DataDestroy

WeeklyPackageMain.ReInit = ReInit
WeeklyPackageMain.RefreshPackages = RefreshPackages
WeeklyPackageMain.OnItemMoveIn = OnItemMoveIn
WeeklyPackageMain.OnItemMoveOut = OnItemMoveOut
WeeklyPackageMain.RefreshDiamondCount = RefreshDiamondCount
WeeklyPackageMain.GetPackageIndexById = GetPackageIndexById
WeeklyPackageMain.ClearScroll = ClearScroll
--WeeklyPackageMain.AddTimer = AddTimer
--WeeklyPackageMain.SetRemainTime = SetRemainTime
--WeeklyPackageMain.DelTimer = DelTimer

return WeeklyPackageMain