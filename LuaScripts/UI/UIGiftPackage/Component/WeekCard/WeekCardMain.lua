---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2022/2/16 12:12
---

local WeekCardMain = BaseClass("WeekCardMain", UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization

local WeekCardItem = require "UI.UIGiftPackage.Component.WeekCard.WeekCardItem"

local title_path = "MsgBg/titleTxt"
local desc_path = "MsgBg/desTxt"
local freeRewardBtn_path = "MsgBg/freeReward"
local freeRewardTxt_path = "MsgBg/freeReward/freeTxt"
local freeRewardOpen_path = "MsgBg/freeReward/opened"
local freeRewardUnopen_path = "MsgBg/freeReward/unopen"
local freeRewardRed_path = "MsgBg/freeReward/unopen/RedDot"
local packageSv_path = "MsgBg/Scroll View"
local packageContent_path = "MsgBg/Scroll View/Viewport/Content"
local allClaimBtn_path = "MsgBg/allClaimBtn"
local allClaimBtnTxt_path = "MsgBg/allClaimBtn/allClaimBtnTxt"

-- 创建
local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

-- 销毁
local function OnDestroy(self)
    self:ClearScroll()
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.OnWeekCardInfoChange, self.OnRefreshAll)
    self:AddUIListener(EventId.OnWeekCardOneInfoChange, self.OnRefreshAllClaimBtn)
    self:AddUIListener(EventId.RefreshWelfareRedDot,self.RefreshFreePackage)
end

local function OnRemoveListener(self)
    self:RemoveUIListener(EventId.OnWeekCardInfoChange, self.OnRefreshAll)
    self:RemoveUIListener(EventId.OnWeekCardOneInfoChange, self.OnRefreshAllClaimBtn)
    self:RemoveUIListener(EventId.RefreshWelfareRedDot,self.RefreshFreePackage)
    base.OnRemoveListener(self)
end

--控件的定义
local function ComponentDefine(self)
    self.titleN = self:AddComponent(UITextMeshProUGUIEx, title_path)
    self.titleN:SetLocalText(320457)
    self.descN = self:AddComponent(UITextMeshProUGUIEx, desc_path)
    self.descN:SetLocalText(320488)
    self.freeBtnAnimN = self:AddComponent(UIAnimator, freeRewardBtn_path)
    self.freeRewardBtnN = self:AddComponent(UIButton, freeRewardBtn_path)
    self.freeRewardBtnN:SetOnClick(function()
        self:OnClickFreeRewardBtn()
    end)
    self.allClaimBtnN = self:AddComponent(UIButton, allClaimBtn_path)
    self.allClaimBtnN:SetOnClick(function()
        self:OnClickAllClaimBtn()
    end)
    self.allClaimBtnTxtN = self:AddComponent(UITextMeshProUGUIEx, allClaimBtnTxt_path)
    self.buyTest = self:AddComponent(UIBaseContainer, "MsgBg/allClaimBtn/buyTest")
    self.buy_btn_text = self:AddComponent(UITextMeshProUGUIEx, "MsgBg/allClaimBtn/buyTest/buy_btn_text")
    self.txt_Cost = self:AddComponent(UITextMeshProUGUIEx, "MsgBg/allClaimBtn/buyTest/txt_Cost")
    self.freeRewardTxtN = self:AddComponent(UITextMeshProUGUIEx, freeRewardTxt_path)
    self.freeRewardTxtN:SetLocalText(320487)
    self.freeRewardTxtN:SetActive(true)
    self.freeRewardOpenN = self:AddComponent(UIBaseContainer, freeRewardOpen_path)
    self.freeRewardUnopenN = self:AddComponent(UIBaseContainer, freeRewardUnopen_path)
    self.freeRewardRedN = self:AddComponent(UIBaseContainer, freeRewardRed_path)
    self.packageSvN = self:AddComponent(UIScrollView, packageSv_path)
    self.packageSvN:SetOnItemMoveIn(function(itemObj, index)
        self:OnItemMoveIn(itemObj, index)
    end)
    self.packageSvN:SetOnItemMoveOut(function(itemObj, index)
        self:OnItemMoveOut(itemObj, index)
    end)
    self.packageContentN = self:AddComponent(UIBaseContainer, packageContent_path)
end

--控件的销毁
local function ComponentDestroy(self)
    self.titleN = nil
    self.descN = nil
    self.freeRewardBtnN = nil
    self.freeRewardOpenN = nil
    self.freeRewardUnopenN = nil
    self.freeRewardRedN = nil
    self.packageSvN = nil
    self.packageContentN = nil
end

--变量的定义
local function DataDefine(self)
    self.dataInited = false
    self.giftPackUpdated = false
    self.weekCardList = {}
    self.weekCardCellList = {}
end

--变量的销毁
local function DataDestroy(self)
    self.dataInited = nil
    self.giftPackUpdated = nil
    self.weekCardList = nil
    self.weekCardCellList = nil
end

local function ReInit(self)
    self:InitData()
end

local function InitData(self)
    if not self.dataInited then
        SFSNetwork.SendMessage(MsgDefines.GetWeekCardList)
        self.dataInited = true
    else
        self:RefreshAll()
    end
end

local function OnRefreshAll(self, weekCardId)
    if not weekCardId then
        self:RefreshAll()
    end
end

function WeekCardMain:OnRefreshAllClaimBtn()
    self.weekCardList = DataCenter.WeekCardManager:GetWeekCardList()
    self:RefreshAllClaimBtn()
end

local function RefreshAll(self)
    self.weekCardList = DataCenter.WeekCardManager:GetWeekCardList()
    self:TryUpdateGiftPacks()
    self:RefreshFreePackage()
    self:RefreshAllClaimBtn()
    self:RefreshPackages()
    --local oldCount = #self.weekCardList
    --self.weekCardList = DataCenter.WeekCardManager:GetWeekCardList()
    --local newCount = #self.weekCardList
    --self:TryUpdateGiftPacks()
    --self:RefreshFreePackage()
    --self:RefreshAllClaimBtn()
    --if oldCount == newCount then
    --    for i, cellItem in pairs(self.weekCardCellList) do
    --        local data = self.weekCardList[i]
    --        cellItem:SetItem(data)
    --    end
    --else
    --    self:RefreshPackages()
    --end
end

local function RefreshFreePackage(self)
    local hasFree = DataCenter.WeekCardManager:CheckIfHasFreeReward()
    if not hasFree then
        --self.freeBtnAnimN:Play("V_ui_zhoukabaoxiang_01_opened", 0, 0)
        self.freeRewardOpenN:SetActive(true)
        self.freeRewardUnopenN:SetActive(false)
        self.freeRewardTxtN:SetLocalText(170003)
    else
        --self.freeBtnAnimN:Play("V_ui_zhoukabaoxiang_01_idle", 0, 0)
        self.freeRewardOpenN:SetActive(false)
        self.freeRewardUnopenN:SetActive(true)
        self.freeRewardTxtN:SetLocalText(320487)
    end
end

local function RefreshPackages(self)
    self:ClearScroll()
    if #self.weekCardList > 0 then
        self.packageSvN:SetTotalCount(#self.weekCardList)
        self.packageSvN:RefillCells()
    end
end

local function TryUpdateGiftPacks(self)
    if self.giftPackUpdated then
        return
    end
    if not self.weekCardList then
        return
    end
    
    local needUpdate = false
    for i, v in ipairs(self.weekCardList) do
        if v.typeFunction == 1 then
            local giftPackageInfo = GiftPackManager.get(v.exchangeId)
            if not giftPackageInfo then
                needUpdate = true
                break
            end
        elseif v.typeFunction == 2 then
            for m, n in ipairs(v.exchangeIdList) do
                if not needUpdate then
                    local giftPackageInfo = GiftPackManager.get(n)
                    if not giftPackageInfo then
                        needUpdate = true
                        break
                    end
                end
            end
        end
    end
    if needUpdate then
        SFSNetwork.SendMessage(MsgDefines.ExchangeInfo)
        self.giftPackUpdated = true
    end
end

local function OnItemMoveIn(self, itemObj, index)
    itemObj.name = tostring(index)
    local cellItem = self.packageSvN:AddComponent(WeekCardItem, itemObj)
    local weekCardInfo = self.weekCardList[index]
    cellItem:SetItem(weekCardInfo)
    self.weekCardCellList[index] = cellItem
end

local function OnItemMoveOut(self, itemObj, index)
    self.packageSvN:RemoveComponent(itemObj.name, WeekCardItem)
    self.weekCardCellList[index] = nil
end

local function ClearScroll(self)
    self.packageSvN:ClearCells()
    self.packageSvN:RemoveComponents(WeekCardItem)
end


local function OnClickFreeRewardBtn(self)
    local hasFree = DataCenter.WeekCardManager:CheckIfHasFreeReward()
    if hasFree then
        --self.freeBtnAnimN:Play("V_ui_zhoukabaoxiang_01_open", 0, 0)
        self.claimFreeTimer = TimerManager:GetInstance():DelayInvoke(function()
            SFSNetwork.SendMessage(MsgDefines.ClaimWeekCardFreeReward)
            self.claimFreeTimer = nil
            self.freeRewardTxtN:SetLocalText(170003)
        end, 0.5)
    end
end

--刷新按钮状态
function WeekCardMain:RefreshAllClaimBtn()
    local serverTime = UITimeManager:GetInstance():GetServerTime()
    self.isAllClaimBtn = false --一键领取购买的状态--true = 一键领取  --false = 一键购买
    self.canBuy = false --可以购买
    for i = 1, #self.weekCardList do
        local weekCardInfo = self.weekCardList[i]
        local lastClaimT = math.modf(weekCardInfo.lastRecvTime / 1000)
        local serverTimeS = math.modf(serverTime / 1000)
        local hasBought = weekCardInfo.endTime > serverTime
        local todayClaimed = UITimeManager:GetInstance():IsSameDayForServer(lastClaimT, serverTimeS)
        if hasBought and not todayClaimed then
            self.isAllClaimBtn = true
            break
        end
    end

    --配置得可以一键购买得礼包组Id（也是一个礼包，特殊的），从后面查，查到就是当前显示的那些礼包可以一键购买
    local haveGift = false
    local strCost = LuaEntry.DataConfig:TryGetStr("super_week_card", "k2")
    local giftIds = string.split(strCost, "|")
    local curPriceStr = 0 --现价
    for i = #giftIds, 1 , -1 do
        local id = giftIds[i]
        local giftPackageInfo = GiftPackManager.get(id)
        if giftPackageInfo then
            haveGift = true
            curPriceStr = DataCenter.PayManager:GetDollarText(giftPackageInfo:getPrice(), giftPackageInfo:getProductID())
            break
        end
    end

    for i = 1, #self.weekCardList do
        local weekCardInfo = self.weekCardList[i]
        local lastClaimT = math.modf(weekCardInfo.lastRecvTime / 1000)
        local serverTimeS = math.modf(serverTime / 1000)
        local hasBought = weekCardInfo.endTime > serverTime
        local todayClaimed = UITimeManager:GetInstance():IsSameDayForServer(lastClaimT, serverTimeS)
        local isValid = weekCardInfo.conditionFit
        --可购买
        --生效 不是领取状态，不是已领取状态，有礼包
        if isValid and not (hasBought and not todayClaimed) and not (hasBought and todayClaimed) and haveGift then
            self.canBuy = true
        else
            self.canBuy = false
            break
        end
    end
    self.buyTest:SetActive(self.canBuy)
    self.allClaimBtnTxtN:SetActive(not self.canBuy)
    --可以一键购买
    if self.canBuy then
        self.allClaimBtnN:LoadSprite(string.format(LoadPath.CommonNewPath,"common_btn_yellow71"))
        local oldPrice = 0 --原价
        local oldPriceStr = ""
        for i = 1, #self.weekCardList do
            local packageInfo = GiftPackManager.get(self.weekCardList[i].exchangeId)
            oldPrice = oldPrice + packageInfo:getPrice()
            oldPriceStr = DataCenter.PayManager:GetDollarText(oldPrice, packageInfo:getProductID())
        end
        --一键购买
        --self.allClaimBtnTxtN:SetLocalText(375176)
        self.buy_btn_text:SetText(curPriceStr)
        self.txt_Cost:SetText(oldPriceStr)
    else
        --一键领取
        self.allClaimBtnTxtN:SetLocalText(110132)
        CS.UIGray.SetGray(self.allClaimBtnN.transform, not self.isAllClaimBtn, true)--置灰 能点击
        self.allClaimBtnN:LoadSprite(string.format(LoadPath.CommonNewPath,"Common_btn_green71"))
    end
end

function WeekCardMain:OnClickAllClaimBtn()
    if self.canBuy then
        local strCost = LuaEntry.DataConfig:TryGetStr("super_week_card", "k2")
        local giftIds = string.split(strCost, "|")
        local isBuy = false
        for i = #giftIds, 1 , -1 do
            local id = giftIds[i]
            local giftPackageInfo = GiftPackManager.get(id)
            if giftPackageInfo then
                self.view.ctrl:BuyGift(giftPackageInfo)
                isBuy = true
                break
            end
        end
        if not isBuy then
            Logger.LogError("找不到一键购买的礼包")
        end
    else
        --一键领取
        if self.isAllClaimBtn then
            SFSNetwork.SendMessage(MsgDefines.AllClaimWeekCardReward)
        else
            --提示，没有领取的礼包
            --UIUtil.ShowTips(Localization:GetString(message["errorCode"]))
        end
    end
end

WeekCardMain.OnCreate = OnCreate
WeekCardMain.OnDestroy = OnDestroy
WeekCardMain.OnAddListener = OnAddListener
WeekCardMain.OnRemoveListener = OnRemoveListener
WeekCardMain.ComponentDefine = ComponentDefine
WeekCardMain.ComponentDestroy = ComponentDestroy
WeekCardMain.DataDefine = DataDefine
WeekCardMain.DataDestroy = DataDestroy

WeekCardMain.ReInit = ReInit
WeekCardMain.InitData = InitData
WeekCardMain.RefreshAll = RefreshAll
WeekCardMain.RefreshFreePackage = RefreshFreePackage
WeekCardMain.RefreshPackages = RefreshPackages
WeekCardMain.OnRefreshAll = OnRefreshAll
WeekCardMain.OnItemMoveIn = OnItemMoveIn
WeekCardMain.OnItemMoveOut = OnItemMoveOut
WeekCardMain.ClearScroll = ClearScroll
WeekCardMain.OnClickFreeRewardBtn = OnClickFreeRewardBtn
WeekCardMain.TryUpdateGiftPacks = TryUpdateGiftPacks

return WeekCardMain