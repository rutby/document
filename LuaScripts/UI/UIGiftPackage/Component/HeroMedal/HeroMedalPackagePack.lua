---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2022/2/16 11:48
---
local HeroMedalPackagePack = BaseClass("HeroMedalPackagePack", UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization
local UIGray = CS.UIGray
local HeroMedalPackageItem = require "UI.UIGiftPackage.Component.HeroMedal.HeroMedalPackageItem"

local HeroPackagePackFgPath = {
    [0] = "UIHeroMedalPackage_bg_adv1_1",
    [1] = "UIHeroMedalPackage_bg_adv1_1",
    [2] = "UIHeroMedalPackage_bg_adv3_1",
    [3] = "UIHeroMedalPackage_bg_adv2_1",
}

local HeroPackagePackBgPath = {
    [0] = "UIHeroMedalPackage_bg_adv1_2",
    [1] = "UIHeroMedalPackage_bg_adv1_2",
    [2] = "UIHeroMedalPackage_bg_adv3_2",
    [3] = "UIHeroMedalPackage_bg_adv2_2",
}

local packName_path = "TxtName"
local tip_path = "discountTip2"
local tipTxt_path = "discountTip2/Text"
local cdTime_path = "Txt_Times"
local svPackage_path = "CellScroll"
local packIcon_path = "ImgBg/packBg/packIcon"
local packBg_path = "ImgBg"
local packFg_path = "ImgBg/Image (1)"
local event_trigger_path = "CellScroll/Viewport/CellScrollEventTrigger"

-- 创建
local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
end

-- 销毁
local function OnDestroy(self)
    self:ComponentDestroy()
    self:DelTimer()
    self:DataDestroy()
    base.OnDestroy(self)
end

--控件的定义
local function ComponentDefine(self)
    self.packNameN = self:AddComponent(UIText, packName_path)
    self.packTipN = self:AddComponent(UIBaseContainer, tip_path)
    self.packTipN:SetActive(false)
    self.packTipTxtN = self:AddComponent(UIText, tipTxt_path)
    self.cdTimeN = self:AddComponent(UIText, cdTime_path)
    self.svPackageN = self:AddComponent(UIScrollView, svPackage_path)
    self.svPackageN:SetOnItemMoveIn(function(itemObj, index)
        self:OnItemMoveIn(itemObj, index)
    end)
    self.svPackageN:SetOnItemMoveOut(function(itemObj, index)
        self:OnItemMoveOut(itemObj, index)
    end)
    self.packIconN = self:AddComponent(UIImage, packIcon_path)
    self.packBgN = self:AddComponent(UIImage, packBg_path)
    self.packFgN = self:AddComponent(UIImage, packFg_path)
    
    self.event_trigger = self:AddComponent(UIEventTrigger, event_trigger_path)

    self.event_trigger:OnDrag(function(eventData)
        self:OnDrag(eventData)
    end)
    self.event_trigger:OnBeginDrag(function(eventData)
        self:OnBeginDrag(eventData)
    end)
    self.event_trigger:OnEndDrag(function(eventData)
        self:OnEndDrag(eventData)
    end)
end

--控件的销毁
local function ComponentDestroy(self)
    self.packNameN = nil
    self.packTipN = nil
    self.packTipTxtN = nil
    self.cdTimeN = nil
    self.svPackageN = nil
end

--变量的定义
local function DataDefine(self)
    self.delayTimer = nil
    self.heroId = nil
    self.packageIdList = {}
    self.packEndTime = 0
end

--变量的销毁
local function DataDestroy(self)
    self:RemoveDelayTimer()
    self.delayTimer = nil
    self.heroId = nil
    self.packageIdList = nil
    self.packEndTime = nil
end

local function OnAddListener(self)
    base.OnAddListener(self)
    --self:AddUIListener(EventId.UpdateGiftPackData, self.RefreshUI)
end

local function OnRemoveListener(self)
    --self:RemoveUIListener(EventId.UpdateGiftPackData, self.RefreshUI)
    base.OnRemoveListener(self)
end


local function SetItem(self, param, parentSv)
    self.heroId = param.heroId
    self.packageIdList = param.packageIdList
    self.svParent = parentSv
    
    table.sort(self.packageIdList, function(a, b)
        local packageA = GiftPackageData.get(a)
        local packageB = GiftPackageData.get(b)
        local remainA = packageA:canGet()
        local remainB = packageB:canGet()
        if remainA ~= remainB then
            return remainA
        else
            return packageA:getID() < packageB:getID()
        end
    end)
    self:AddDelayTimer()
end

local function RefreshUI(self)
    local firstPackageInfo = GiftPackageData.get(self.packageIdList[1])
    if not firstPackageInfo then
        return
    end

    local strOldPacks = CS.GameEntry.Setting:GetString("CacheHeroMedalPack_" .. LuaEntry.Player.uid)
    local oldPacks = string.split(strOldPacks, ";")
    if table.hasvalue(oldPacks, self.heroId) then
        self.packTipN:SetActive(false)
    else
        self.packTipN:SetActive(true)
    end

    local iconPath = HeroUtils.GetHeroIconPath(self.heroId, true)
    self.packIconN:LoadSprite(iconPath)
    local camp = GetTableData(HeroUtils.GetHeroXmlName(), self.heroId, 'camp')
    self.packBgN:LoadSprite("Assets/Main/Sprites/UI/UIHeroMedalPackage/".. HeroPackagePackBgPath[camp])
    self.packFgN:LoadSprite("Assets/Main/Sprites/UI/UIHeroMedalPackage/".. HeroPackagePackFgPath[camp])
    
    self.packNameN:SetLocalText(firstPackageInfo:getName())  
    
    self.packEndTime = firstPackageInfo:getEndTime()
    self:SetRemainTime()
    self:AddTimer()
    
    self:RefreshPackages()
end

local function RefreshPackages(self)
    self.svPackageN:SetTotalCount(#self.packageIdList)
    self.svPackageN:RefillCells()
end

local function OnItemMoveIn(self, itemObj, index)
    itemObj.name = tostring(index)
    local cellItem = self.svPackageN:AddComponent(HeroMedalPackageItem, itemObj)
    local packageId = self.packageIdList[index]
    cellItem:SetItem(packageId)
end

local function OnItemMoveOut(self, itemObj, index)
    self.svPackageN:RemoveComponent(itemObj.name, HeroMedalPackageItem)
end


local function AddTimer(self)
    self.TimerAction = function()
        self:SetRemainTime()
    end

    if self.timer == nil then
        self.timer = TimerManager:GetInstance():GetTimer(1, self.TimerAction , self, false,false,false)
    end
    self.timer:Start()
end

local function SetRemainTime(self)
    local curTime = UITimeManager:GetInstance():GetServerTime()
    local remainTime = self.packEndTime - curTime
    if remainTime > 0 then
        self.cdTimeN:SetText(UITimeManager:GetInstance():MilliSecondToFmtString(remainTime))
    else
        self.cdTimeN:SetText("")
        self:DelTimer()
    end
end

local function DelTimer(self)
    if self.timer ~= nil then
        self.timer:Stop()
        self.timer = nil
    end
end


local function OnBeginDrag(self,eventData)
    self.needTrans = nil
    self.position = eventData.position
    if self.svParent ~= nil then
        self.svParent:OnBeginDrag(eventData)
    end
    self.svPackageN:OnBeginDrag(eventData)
end

local function OnEndDrag(self,eventData)
    self.needTrans = nil
    if self.svParent ~= nil then
        self.svParent:OnEndDrag(eventData)
    end
    self.svPackageN:OnEndDrag(eventData)
end

local function OnDrag(self,eventData)
    if self.needTrans == nil then
        local X = math.abs(eventData.position.x - self.position.x)
        local Y = math.abs(eventData.position.y - self.position.y)
        if X > Y then
            self.needTrans = true
        elseif X < Y then
            self.needTrans = false
        end
    end
    if self.needTrans ~= nil then
        if self.needTrans then
            if self.svParent ~= nil then
                self.svParent:OnDrag(eventData)
            end
        else
            self.svPackageN:OnDrag(eventData)
        end
    end
end

local function AddDelayTimer(self)
    self:RemoveDelayTimer()
    self.delayTimer = TimerManager:GetInstance():DelayInvoke(function()
        self.delayTimer = nil
        self:RefreshUI()
    end, DelayCreateTime)
end
local function RemoveDelayTimer(self)
    if self.delayTimer ~= nil then
        self.delayTimer:Stop()
        self.delayTimer = nil
    end
end


HeroMedalPackagePack.OnCreate = OnCreate
HeroMedalPackagePack.OnDestroy = OnDestroy
HeroMedalPackagePack.ComponentDefine = ComponentDefine
HeroMedalPackagePack.ComponentDestroy = ComponentDestroy
HeroMedalPackagePack.DataDefine = DataDefine
HeroMedalPackagePack.DataDestroy = DataDestroy
HeroMedalPackagePack.OnAddListener = OnAddListener
HeroMedalPackagePack.OnRemoveListener = OnRemoveListener

HeroMedalPackagePack.SetItem = SetItem
HeroMedalPackagePack.RefreshUI = RefreshUI
HeroMedalPackagePack.RefreshPackages = RefreshPackages
HeroMedalPackagePack.OnItemMoveIn = OnItemMoveIn
HeroMedalPackagePack.OnItemMoveOut = OnItemMoveOut
HeroMedalPackagePack.AddTimer = AddTimer
HeroMedalPackagePack.SetRemainTime = SetRemainTime
HeroMedalPackagePack.DelTimer = DelTimer
HeroMedalPackagePack.OnBeginDrag = OnBeginDrag
HeroMedalPackagePack.OnEndDrag = OnEndDrag
HeroMedalPackagePack.OnDrag = OnDrag
HeroMedalPackagePack.AddDelayTimer = AddDelayTimer
HeroMedalPackagePack.RemoveDelayTimer = RemoveDelayTimer

return HeroMedalPackagePack