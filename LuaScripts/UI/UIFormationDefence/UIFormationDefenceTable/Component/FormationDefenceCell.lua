---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2021/7/20 14:48
---
local FormationDefenceCell = BaseClass("FormationDefenceCell",UIBaseContainer)
local UIHeroTipView = require "UI.UIHero2.UIHeroTip.View.UIHeroTipView"
local base = UIBaseContainer
local FormationDefenceHeroItem = require "UI.UIFormationDefence.UIFormationDefenceTable.Component.FormationDefenceHeroItem"
local FormationHeroAdd = require "UI.UIFormationDefence.UIFormationDefenceTable.Component.FormationHeroAdd"
local Localization = CS.GameEntry.Localization
local formation_name_path = "name"
local attack_num_path = "layoutAtt/attackObj/attack_num"
local defence_num_path ="layoutAtt/defenceObj/defence_num"
local hero_1_obj_path = "layoutHero/hero1"
local hero_2_obj_path = "layoutHero/hero2"
local hero_3_obj_path = "layoutHero/hero3"
local hero_4_obj_path = "layoutHero/hero4"
local hero_5_obj_path = "layoutHero/hero5"
local select_img_path = "selectImg"
--local btn_path = ""
local attack_obj_path ="layoutAtt/attackObj"
local defence_obj_path ="layoutAtt/defenceObj"
local function OnCreate(self)
    base.OnCreate(self)
    self.formation_name = self:AddComponent(UITextMeshProUGUIEx,formation_name_path)
    self.attack_num = self:AddComponent(UITextMeshProUGUIEx,attack_num_path)
    self.defence_num = self:AddComponent(UITextMeshProUGUIEx,defence_num_path)
    self.select_img = self:AddComponent(UIImage,select_img_path)
    self.select_img:SetActive(false)
    self.heroIndexObj = {}
    local index1 = self:AddComponent(UIBaseContainer,hero_1_obj_path)
    self.heroIndexObj[1] = index1
    local index2 = self:AddComponent(UIBaseContainer,hero_2_obj_path)
    self.heroIndexObj[2] = index2
    local index3 = self:AddComponent(UIBaseContainer,hero_3_obj_path)
    self.heroIndexObj[3] = index3
    local index4 = self:AddComponent(UIBaseContainer,hero_4_obj_path)
    self.heroIndexObj[4] = index4
    local index5 = self:AddComponent(UIBaseContainer,hero_5_obj_path)
    self.heroIndexObj[5] = index5
    self.attack_obj = self:AddComponent(UIButton,attack_obj_path)
    self.attack_obj:SetOnClick(function()  
SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnAttackClick()
    end)
    self.defence_obj = self:AddComponent(UIButton,defence_obj_path)
    self.defence_obj:SetOnClick(function()  
SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnDefenceClick()
    end)
--    self.click_btn = self:AddComponent(UIButton, btn_path)
--    self.click_btn:SetOnClick(function()  
--SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
--        self:OnSelectClick()
--    end)
    self.model ={}

end

local function OnDestroy(self)
    table.walk(self.heroIndexObj,function(k,v)
        v:RemoveComponents(FormationDefenceHeroItem)
        v:RemoveComponents(FormationHeroAdd)
    end)
    if self.model~=nil then
        for k,v in pairs(self.model) do
            if v ~= nil then
                self:GameObjectDestroy(v)
            end
        end
    end
    base.OnDestroy(self)
end

local function CreateHeroByIndex(self,index,heroData)
    if heroData[index]~=nil then
        if self.model[index]==nil then
            self.model[index] = self:GameObjectInstantiateAsync(UIAssets.FormationDefenceHeroItem, function(request)
                if request.isError then
                    return
                end
                local go = request.gameObject;
                go.gameObject:SetActive(true)
                go.transform:SetParent(self.heroIndexObj[index].transform)
                go.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
                go.transform:Set_localPosition(ResetPosition.x, ResetPosition.y, ResetPosition.z)
                go.name = index
                local cell = self.heroIndexObj[index]:AddComponent(FormationDefenceHeroItem,go.name)
                cell:InitData(heroData[index], index, self.uuid)
            end)
        else
        end
    else
        if self.model[index]==nil then
            self.model[index] = self:GameObjectInstantiateAsync(UIAssets.FormationHeroAdd, function(request)
                if request.isError then
                    return
                end
                local go = request.gameObject;
                go.gameObject:SetActive(true)
                go.transform:SetParent(self.heroIndexObj[index].transform)
                go.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
                go.transform:Set_localPosition(ResetPosition.x, ResetPosition.y, ResetPosition.z)
                go.name = index
                local cell = self.heroIndexObj[index]:AddComponent(FormationHeroAdd,go.name)
                local maxNum = self.view.ctrl:GetMaxHeroNumByFormationUuid(self.uuid)
                cell:RefreshData(maxNum<index,self.formationIndex,index,self.uuid)
            end)
        else
        end
    end

end

local function RefreshData(self,formationUuid,index)
    self.formation_name:SetLocalText(GameDialogDefine.DEFENCE_FORMATION,  "") 
    self.uuid = formationUuid
    self.formationIndex = index
    local heroData = self.view.ctrl:GetCurHeroData(self.uuid)
    for i =1,5 do
        self:CreateHeroByIndex(i,heroData)
    end
    self:RefreshPowerData()
end
local function RefreshPowerData(self)
    local curPowerData = self.view.ctrl:GetPowerData(self.uuid)
    if curPowerData~=nil then
        self.attack_num:SetText(string.GetFormattedSeperatorNum(math.floor(curPowerData.attackNum)))
        self.defence_num:SetText(string.GetFormattedSeperatorNum(math.floor(curPowerData.defNum)))
    end
    self.attack_obj:SetActive(curPowerData.attackNum>0)
    self.defence_obj:SetActive(curPowerData.defNum>0)
end
local function OnSelectHeroFinish(self,index)
    if self.heroIndexObj[index]~=nil then
        self.heroIndexObj[index]:RemoveComponents(FormationDefenceHeroItem)
        self.heroIndexObj[index]:RemoveComponents(FormationHeroAdd)
        if self.model[index]~=nil then
            self:GameObjectDestroy(self.model[index])
            self.model[index] =nil
        end
        local heroData = self.view.ctrl:GetCurHeroData(self.uuid)
        self:CreateHeroByIndex(index,heroData)
    end
    self:RefreshPowerData()
end
local function OnSelectClick(self)
    self.view:OnSelectClick(self.uuid)
end
local function SetSelectState(self,isSelect)
    self.select_img:SetActive(isSelect)
end
local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function OnAttackClick(self)
    local scaleFactor = UIManager:GetInstance():GetScaleFactor()
    local position = self.attack_obj.transform.position + Vector3.New(0, 30, 0) * scaleFactor

    local param = UIHeroTipView.Param.New()
    param.content = Localization:GetString("220097")
    param.dir = UIHeroTipView.Direction.ABOVE
    param.defWidth = 180
    param.pivot = 0.5
    param.position = position
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIHeroTip, { anim = false }, param)
end

local function OnDefenceClick(self)
    local scaleFactor = UIManager:GetInstance():GetScaleFactor()
    local position = self.defence_obj.transform.position + Vector3.New(0, 30, 0) * scaleFactor

    local param = UIHeroTipView.Param.New()
    param.content = Localization:GetString("220101")
    param.dir = UIHeroTipView.Direction.ABOVE
    param.defWidth = 180
    param.pivot = 0.5
    param.position = position
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIHeroTip, { anim = false }, param)
end
FormationDefenceCell.OnCreate = OnCreate
FormationDefenceCell.OnDestroy = OnDestroy
FormationDefenceCell.RefreshData = RefreshData
FormationDefenceCell.OnEnable = OnEnable
FormationDefenceCell.OnDisable = OnDisable
FormationDefenceCell.RefreshPowerData = RefreshPowerData
FormationDefenceCell.OnSelectHeroFinish = OnSelectHeroFinish
FormationDefenceCell.CreateHeroByIndex = CreateHeroByIndex
FormationDefenceCell.OnSelectClick = OnSelectClick
FormationDefenceCell.SetSelectState = SetSelectState
FormationDefenceCell.OnAttackClick =OnAttackClick
FormationDefenceCell.OnDefenceClick =OnDefenceClick
return FormationDefenceCell