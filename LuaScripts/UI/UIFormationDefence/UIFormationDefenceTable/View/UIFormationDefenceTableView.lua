---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2021/7/20 14:46
---
local FormationHeroSelectList = require "UI.UIFormationDefence.UIFormationDefenceTable.Component.FormationHeroSelectList"
local FormationDefenceCell = require "UI.UIFormationDefence.UIFormationDefenceTable.Component.FormationDefenceCell"
local FormationDefenceUnlock = require "UI.UIFormationDefence.UIFormationDefenceTable.Component.FormationDefenceUnlock"
local CityManage = require "UI.UIFormationDefence.UIFormationDefenceTable.Component.CityManage"
local UIFormationDefenceTableView = BaseClass("UIFormationDefenceTableView", UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization
local close_btn_path ="fullTop/CloseBtn"
local txt_title_path ="fullTop/imgTitle/Common_img_title/titleText"
local layout_content_path = "fullTop/Bg2/defence/layoutContent"
local build_name_path = "fullTop/Bg2/defence/mainObj/buildName"
local build_des_path = "fullTop/Bg2/defence/mainObj/buildDes"
local destroy_des_path = "fullTop/Bg2/defence/mainObj/layoutBtn/destroyDes"
local build_icon_path = "fullTop/Bg2/defence/mainObj/img_building"
local protect_time_text_path = "fullTop/Bg2/defence/mainObj/layoutBtn/warProtectTimeText"
local fix_btn_path = "fullTop/Bg2/defence/mainObj/layoutBtn/fixBtn"
local fix_btn_des_path = "fullTop/Bg2/defence/mainObj/layoutBtn/fixBtn/btnDesObj/Txt1"
local fix_btn_num_path = "fullTop/Bg2/defence/mainObj/layoutBtn/fixBtn/btnDesObj/txt2"
local fix_btn_icon_path = "fullTop/Bg2/defence/mainObj/layoutBtn/fixBtn/btnDesObj/icon_go/icon"
local slider_path = "fullTop/Bg2/defence/mainObj/TreatingSlider"
local slider_txt_path = "fullTop/Bg2/defence/mainObj/TreatingSlider/slider_txt"
local hero_select_obj_path = "fullTop/Bg2/defence/layoutList/hero_list_choose"
local cold_down_btn_path = "fullTop/Bg2/defence/mainObj/layoutBtn/colddownBtn"
local cold_down_txt_path = "fullTop/Bg2/defence/mainObj/layoutBtn/colddownBtn/colddownTxt"
local mainObj_path = "fullTop/Bg2/defence/mainObj"
local info_btn_path = "fullTop/Bg2/defence/mainObj/Button"



local defence_path = "fullTop/Bg2/defence"
local cityBuff_path = "fullTop/Bg2/citybuff"
local defence_btn_path = "fullTop/Bg2/TabContent/DefenceTab"
local citybuff_btn_path="fullTop/Bg2/TabContent/CityBuffTab"
local DSelectName_path = "fullTop/Bg2/TabContent/DefenceTab/DSelectName"
local DUnselectName_path = "fullTop/Bg2/TabContent/DefenceTab/DUnselectName"
local CSelectName_path = "fullTop/Bg2/TabContent/CityBuffTab/CSelectName"
local CUnselectName_path = "fullTop/Bg2/TabContent/CityBuffTab/CUnselectName"

local  TabType =
{
    Defence =1,
    CityBuff  =2
}

--创建
local function OnCreate(self)
    base.OnCreate(self)
    self.ctrl:InitData()
    self.timer = nil
    self.timer_action = function(temp)
        self:UpdateTime()
    end
    self:ComponentDefine()
end

-- 销毁
local function OnDestroy(self)
    self:DeleteTimer()
    self.timer_action=nil
    self:ComponentDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    --self.main_obj = self.transform:Find("ImgBg").gameObject
    self.layout_content = self:AddComponent(UIBaseContainer, layout_content_path)
    self.txt_title = self:AddComponent(UITextMeshProUGUIEx, txt_title_path)
    self.slider = self:AddComponent(UISlider, slider_path)
    self.build_name = self:AddComponent(UITextMeshProUGUIEx, build_name_path)
    self.build_des = self:AddComponent(UITextMeshProUGUIEx, build_des_path)
    self.destroy_des = self:AddComponent(UITextMeshProUGUIEx,destroy_des_path)
    self.build_icon = self:AddComponent(UIImage, build_icon_path)
    self.mainObj = self:AddComponent(UIBaseContainer, mainObj_path)
    self.close_btn = self:AddComponent(UIButton, close_btn_path)
    self.close_btn:SetOnClick(function()
        self.hero_select_obj:SetActive(false)
        self.ctrl:CloseSelf()
    end)

    self.fix_btn = self:AddComponent(UIButton, fix_btn_path)
    self.fix_btn:SetOnClick(function()  
SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self.ctrl:fixDefencePower()
    end)
    self.fix_btn_des = self:AddComponent(UITextMeshProUGUIEx, fix_btn_des_path)
    self.cold_down_btn = self:AddComponent(UIButton, cold_down_btn_path)
    self.cold_down_btn:SetOnClick(function()  
SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
    end)
    self.cold_down_txt = self:AddComponent(UITextMeshProUGUIEx, cold_down_txt_path)
    self.fix_btn_num = self:AddComponent(UITextMeshProUGUIEx, fix_btn_num_path)
    self.fix_btn_icon_path = self:AddComponent(UITextMeshProUGUIEx, fix_btn_icon_path)
    self.slider_txt = self:AddComponent(UITextMeshProUGUIEx, slider_txt_path)
    self.hero_select_obj = self:AddComponent(FormationHeroSelectList, hero_select_obj_path)
    self.protect_time_text = self:AddComponent(UITextMeshProUGUIEx, protect_time_text_path)

    self.defence = self:AddComponent(UIBaseContainer,defence_path)
    self.cityBuff = self:AddComponent(CityManage,cityBuff_path)

    self.toggle1 = self:AddComponent(UIToggle,defence_btn_path)
    self.toggle2 = self:AddComponent(UIToggle,citybuff_btn_path)
    self.toggle1:SetIsOn(true)
    self.toggle1:SetOnValueChanged(function(tf)
        if tf then
            SoundUtil.PlayEffect(SoundAssets.Music_Effect_change_toggle)
            self:TabClick(1)
        end
    end)
    self.toggle2:SetIsOn(false)
    self.toggle2:SetOnValueChanged(function(tf)
        if tf then
            SoundUtil.PlayEffect(SoundAssets.Music_Effect_change_toggle)
            self:TabClick(2)
        end
    end)
    self.info_btn = self:AddComponent(UIButton, info_btn_path)
    self.info_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:InfoBtnClick()
    end)
    self.DSelectName = self:AddComponent(UITextMeshProUGUIEx, DSelectName_path)
    self.DUnselectName = self:AddComponent(UITextMeshProUGUIEx, DUnselectName_path)
    self.CSelectName = self:AddComponent(UITextMeshProUGUIEx, CSelectName_path)
    self.CUnselectName = self:AddComponent(UITextMeshProUGUIEx, CUnselectName_path)
    self.DSelectName:SetLocalText(372281)
    self.DUnselectName:SetLocalText(372281)
    self.CSelectName:SetLocalText(100162)
    self.CUnselectName:SetLocalText(100162)
    
    self.itemList ={}
    self.model ={}
    self.curFormationUuid = 0
    self.isUpdate = false
    self:SetPic()
end

local function DeleteTimer(self)
    if self.timer ~= nil then
        self.timer:Stop()
        self.timer = nil
    end
end

local function AddTimer(self)
    if self.timer == nil then
        self.timer = TimerManager:GetInstance():GetTimer(1, self.timer_action, self, false,false,false)
    end

    self.timer:Start()
end

local function ComponentDestroy(self)
    --self.main_obj = nil
    self.layout_content = nil
    self.txt_title = nil
    self.slider = nil
    self.build_name = nil
    self.build_des = nil
    self.build_icon = nil
    self.btn = nil
    self.close_btn = nil
    self.fix_btn = nil
    self.fix_btn_des = nil
    self.cold_down_btn = nil
    self.cold_down_txt = nil
    self.fix_btn_num = nil
    self.fix_btn_icon_path = nil
    self.slider_txt = nil
    self.hero_select_obj = nil
    self.protect_time_text = nil
    self.mainObj = nil
end
local function OnEnable(self)
    base.OnEnable(self)
    self:TabClick(TabType.Defence)
    --self:InitData()
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function OnAddListener(self)
    base.OnAddListener(self)
end
local function OnRemoveListener(self)
    base.OnRemoveListener(self)
end


local function TabClick(self,tabType)

    --if self.normalState == false then
    --    return
    --end
    if tabType == TabType.Defence then
        self.defence:SetActive(true)
        self.DSelectName:SetActive(true)
        self.DUnselectName:SetActive(false)

        self.cityBuff:SetActive(false)
        self.CSelectName:SetActive(false)
        self.CUnselectName:SetActive(true)
        self.defence:SetActive(true)
        self:InitData()
    elseif tabType == TabType.CityBuff then
        self.defence:SetActive(false)
        self.DSelectName:SetActive(false)
        self.DUnselectName:SetActive(true)
        
        self.cityBuff:SetActive(true)
        self.CSelectName:SetActive(true)
        self.CUnselectName:SetActive(false)
        self.cityBuff:ReInit()
    end
end

local function InitData(self)
    self.txt_title:SetLocalText(100532) 
    self.normalState =true
    self:SetViewPos()
    self.build_name:SetLocalText(GameDialogDefine.DOME_DURABILITY) 
    self.fix_btn_des:SetLocalText(GameDialogDefine.REPAIR_FIX) 
    self:RefreshFormationList()
    self:RefreshBuildData()
end

local function RefreshFormationList(self)
    local list = self.ctrl:GetFormationIdList()
    self:SetAllCellDestroy()
    local total = math.min(DataCenter.DefenceWallDataManager:GetMaxDefenceNum(), table.count(list)) 
    if total == 0 then
        return
    end
    for i = 1, total do
        if self.model[i] ==nil then
            if list[i]~=nil then
                self.model[i] = self:GameObjectInstantiateAsync(UIAssets.FormationDefenceCell,function(request)
                    if request.isError then
                        return
                    end
                    local go = request.gameObject;
                    go.gameObject:SetActive(true)
                    go.transform:SetParent(self.layout_content.transform)
                    go.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
                    go.name = i
                    local cell = self.layout_content:AddComponent(FormationDefenceCell,go.name)
                    cell:RefreshData(list[i],i)
                    self.formationList[list[i]] = cell
                end)
            else
                self.model[i] = self:GameObjectInstantiateAsync(UIAssets.FormationDefenceUnlock,function(request)
                    if request.isError then
                        return
                    end
                    local go = request.gameObject;
                    go.gameObject:SetActive(true)
                    go.transform:SetParent(self.layout_content.transform)
                    go.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
                    go.name = i
                    local cell = self.layout_content:AddComponent(FormationDefenceUnlock,go.name)
                    self.formationList[i] = cell
                    cell:RefreshData(i)
                end)
            end
        end
    end
end

local function RefreshBuildData(self)
    local buildData = self.ctrl:GetBuildData()
    self.buildData = buildData
    if buildData~=nil then
		self.destroy_des:SetText("")
        self.slider_txt:SetText(string.GetFormattedSeperatorNum(math.floor(buildData.durability)).."/"..string.GetFormattedSeperatorNum(math.floor(buildData.defDomeMaxNum)))
        self.fix_btn_num:SetText(string.GetFormattedSeperatorNum(math.floor(buildData.fixDiamond)))
        local curTime = UITimeManager:GetInstance():GetServerTime()
        if buildData.durability < buildData.defDomeMaxNum then
            if buildData.fireEndTime>curTime then
                self.build_des:SetLocalText(121549)
            else
                self.build_des:SetLocalText(GameDialogDefine.DOME_DURABILITY_DESTROY)
            end
            
            local percent = buildData.durability/buildData.defDomeMaxNum
            self.slider:SetValue(percent)
            local k3 = LuaEntry.DataConfig:TryGetNum("city_wall", "k3")
            if curTime> buildData.lastGoldRecoverDurabilityTime+(k3*1000) then
                self.fix_btn:SetActive(true)
                self.cold_down_btn:SetActive(false)
            else
                self.fix_btn:SetActive(false)
                self.cold_down_btn:SetActive(true)
            end
            self:AddTimer()
            self.isUpdate = true
            self:UpdateTime()
        else
            local protectEndTime = DataCenter.DefenceWallDataManager:GetDefenceWallData().protectEndTime
            local leftTime = protectEndTime - UITimeManager:GetInstance():GetServerTime()
            if leftTime > 0 then
                self:AddTimer()
                self:UpdateTime()
            else
                if buildData.fireEndTime>curTime then
                    self.build_des:SetLocalText(121549)
                    self:AddTimer()
                    self:UpdateTime()
                else
                    self.build_des:SetLocalText(GameDialogDefine.DOME_DURABILITY_FULL)
                    self:DeleteTimer()
                end
            end
            self.isUpdate = false
			self.slider:SetValue(1)
            
            self.fix_btn:SetActive(false)
            self.cold_down_btn:SetActive(false)
        end
        
    end
end

local function OnSelectHeroFinish(self,index)
    if self.formationList[self.curFormationUuid]~=nil then
        self.formationList[self.curFormationUuid]:OnSelectHeroFinish(index)
    end
end

local function SetAllCellDestroy(self)
    self.layout_content:RemoveComponents(FormationDefenceCell)
    self.layout_content:RemoveComponents(FormationDefenceUnlock)
    if self.model~=nil then
        for k,v in pairs(self.model) do
            if v ~= nil then
                self:GameObjectDestroy(v)
            end
        end
    end
    self.model = {}
    self.formationList = {}
end

local function OnReturnClick(self)
    if self.normalState == false then
        self.normalState = true
        self:SetViewPos()
    else
        self.ctrl:CloseSelf()
    end
end
local function OnSelectClick(self, formationUuid, index)
    if self.normalState == false and index ~= nil then
        self.ctrl:OnDeleteHeroByIndex(index)
        self.view:OnSelectHeroFinish(index)
        return
    end
    self.curFormationUuid = formationUuid
    self.ctrl:SelectCurFormationUuid(formationUuid)
    self.normalState = false
    --策划需求，不需要选中效果
    --table.walk(self.formationList,function(k,v)
    --    if k~= formationUuid then
    --        v:SetSelectState(false)
    --    else
    --        v:SetSelectState(true)
    --    end
    --end)
    self:SetViewPos()
end

local function SetViewPos(self)
    if self.normalState then
        --self.main_obj.transform:Set_localPosition(0, self.main_obj.transform.localPosition.y, 0)
        self.hero_select_obj:SetActive(false)
        if self.formationList~=nil then
            table.walk(self.formationList, function(k,v)
                v:SetSelectState(false)
            end)
        end

    else
        --self.main_obj.transform:Set_localPosition(125, self.main_obj.transform.localPosition.y, 0)
        self.hero_select_obj:SetActive(true)
        if self.curFormationUuid~=0 then
            self.hero_select_obj:RefreshData(self.curFormationUuid)
        end
    end
end

local function UpdateTime(self)
    local inProtect = false
    local inResume = false
    local curData = self.ctrl:GetBuildData()
    self.buildData = curData
    local curTime = UITimeManager:GetInstance():GetServerTime()
    if self.isUpdate then
        if curData~=nil then
            local curNum = curData.durability
            if curNum>=self.buildData.defDomeMaxNum then
                self:RefreshBuildData()
				return
            else
                curNum = curNum + self.buildData.defDomeAddSpeed
                self.slider_txt:SetText(string.GetFormattedSeperatorNum(math.floor(curNum)).."/"..string.GetFormattedSeperatorNum(math.floor(self.buildData.defDomeMaxNum)))
                local percent = curNum/self.buildData.defDomeMaxNum
                self.slider:SetValue(percent)
            end
            
        end
        local k3 = LuaEntry.DataConfig:TryGetNum("city_wall", "k3")
        local deltaTime = self.buildData.lastGoldRecoverDurabilityTime+(k3*1000)-curTime
        if deltaTime>=0 then
            self.cold_down_txt:SetText(UITimeManager:GetInstance():MilliSecondToFmtString(deltaTime))
            self.fix_btn:SetActive(false)
            self.cold_down_btn:SetActive(true)
            inResume = true
        else
            self.fix_btn:SetActive(true)
            self.cold_down_btn:SetActive(false)
        end
    end
    if self.buildData~=nil and self.buildData.fireEndTime~= nil and curTime<self.buildData.fireEndTime then
        local needTime = self.buildData.fireEndTime-curTime
        if needTime>0 then
            local des = Localization:GetString("110603")..": "..UITimeManager:GetInstance():MilliSecondToFmtString(needTime)
            self.destroy_des:SetText(des)
        end
    else
        self.destroy_des:SetText("")
    end
    local protectEndTime = DataCenter.DefenceWallDataManager:GetDefenceWallData().protectEndTime
    local leftTime = protectEndTime - UITimeManager:GetInstance():GetServerTime()
    if leftTime > 0 then
        local des = Localization:GetString("111187")..UITimeManager:GetInstance():MilliSecondToFmtString(leftTime)
        self.protect_time_text:SetText(des)
        inProtect = true
    else
        self.protect_time_text:SetText("")
    end
    self:SetPic(inProtect, inResume)
end

local function GetPicPath(self, inProtect, inResume)
    if inProtect == true then
        return "Assets/Main/Sprites/UI/UIFormationDefence/UIFormationDefence_img_building_inProtect"
    end
    local isFeverStatu = DataCenter.StatusManager:GetWarFeverStatusValue()
    if  isFeverStatu ~= nil then
        return "Assets/Main/Sprites/UI/UIFormationDefence/UIFormationDefence_img_building_inWarFeverStatu"
    end
    return "Assets/Main/Sprites/UI/UIFormationDefence/UIFormationDefence_img_building"
end

local function SetPic(self, inProtect, inResume)
    local pic = self:GetPicPath(inProtect, inResume)
    if pic == self.pic then
        return
    end
    self.pic = pic
    self.build_icon:LoadSprite(pic)
end


local function SwitchContent(self,param)
    self.cityBuff:SwitchContent(param)
end

local function InfoBtnClick(self)
    UIUtil.ShowIntro(Localization:GetString("100532"),"", Localization:GetString("140306"))
end
UIFormationDefenceTableView.OnCreate = OnCreate
UIFormationDefenceTableView.OnDestroy = OnDestroy
UIFormationDefenceTableView.OnEnable = OnEnable
UIFormationDefenceTableView.OnDisable = OnDisable
UIFormationDefenceTableView.ComponentDefine = ComponentDefine
UIFormationDefenceTableView.ComponentDestroy = ComponentDestroy
UIFormationDefenceTableView.OnAddListener = OnAddListener
UIFormationDefenceTableView.OnRemoveListener = OnRemoveListener
UIFormationDefenceTableView.InitData =InitData
UIFormationDefenceTableView.SetAllCellDestroy = SetAllCellDestroy
UIFormationDefenceTableView.RefreshBuildData = RefreshBuildData
UIFormationDefenceTableView.RefreshFormationList = RefreshFormationList
UIFormationDefenceTableView.OnSelectHeroFinish =OnSelectHeroFinish
UIFormationDefenceTableView.OnReturnClick= OnReturnClick
UIFormationDefenceTableView.OnSelectClick = OnSelectClick
UIFormationDefenceTableView.SetViewPos = SetViewPos
UIFormationDefenceTableView.AddTimer = AddTimer
UIFormationDefenceTableView.DeleteTimer = DeleteTimer
UIFormationDefenceTableView.UpdateTime = UpdateTime
UIFormationDefenceTableView.GetPicPath = GetPicPath
UIFormationDefenceTableView.SetPic = SetPic
UIFormationDefenceTableView.TabClick = TabClick

UIFormationDefenceTableView.SwitchContent = SwitchContent
UIFormationDefenceTableView.InfoBtnClick = InfoBtnClick
return UIFormationDefenceTableView