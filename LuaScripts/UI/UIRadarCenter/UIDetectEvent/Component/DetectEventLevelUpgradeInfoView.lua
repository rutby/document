---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2021/8/2 14:08
---
local DetectEventLevelUpgradeInfoView = BaseClass("DetectEventLevelUpgradeInfoView", UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization

local UICommonItem = require "UI.UICommonItem.UICommonItem"

local normal_path = "normal"
local upgrade_condition_title_path = "normal/TxtName"
local upgrade_condition_text_path = "normal/Upgrade_Condition_Text"
local current_lv_text_path = "normal/Level/Current_lv/Current_Lv_Text"

local current_lv_max_num_title_path = "normal/Effect/Node3/Current_Lv_Max_Num_Title"
local current_lv_max_num_text_path = "normal/Effect/Node3/Current_Lv_Max_Num_Text"
local next_lv_max_num_text_path = "normal/Effect/Node3/Next_Lv_Max_Num_Text"

local current_event_max_num_Title_path = "normal/Effect/Node2/Current_event_Max_Num_Title"
local current_event_max_num_text_path = "normal/Effect/Node2/Attr/Current_event_Max_Num_Text"
local next_event_max_num_text_path = "normal/Effect/Node2/Attr/Next_event_Max_Num_Text"

local Current_Lv_Time_Title_path = "normal/Effect/Node1/Current_Lv_Time_Title"
local Current_Lv_Time_path = "normal/Effect/Node1/Attr/Current_Lv_Time"
local Next_Lv_Time_path = "normal/Effect/Node1/Attr/Next_Lv_Time"

local next_lv_text_path = "normal/Level/Next_lv/Next_Lv_Text"
local scroll_view_path = "normal/UpgradeReward/ScrollView"

function DetectEventLevelUpgradeInfoView:OnCreate()
    base.OnCreate(self)
    self:ComponentDefine()
    self:ReInit()
end

function DetectEventLevelUpgradeInfoView:ComponentDefine()
    self.upgrade_condition_title = self:AddComponent(UITextMeshProUGUIEx, upgrade_condition_title_path)
    self.upgrade_condition_text = self:AddComponent(UITextMeshProUGUIEx, upgrade_condition_text_path)
    self.current_lv_text = self:AddComponent(UITextMeshProUGUIEx, current_lv_text_path)
    self.current_lv_max_num_title = self:AddComponent(UITextMeshProUGUIEx, current_lv_max_num_title_path)
    self.current_lv_max_num_text = self:AddComponent(UITextMeshProUGUIEx, current_lv_max_num_text_path)
    self.Current_Lv_Time_Title = self:AddComponent(UITextMeshProUGUIEx, Current_Lv_Time_Title_path)
    self.Current_Lv_Time = self:AddComponent(UITextMeshProUGUIEx, Current_Lv_Time_path)
    self.Current_Lv_Time_Title:SetLocalText(140068)
    self.next_lv_text = self:AddComponent(UITextMeshProUGUIEx, next_lv_text_path)
    self.next_lv_max_num_text = self:AddComponent(UITextMeshProUGUIEx, next_lv_max_num_text_path)
    self.Next_Lv_Time = self:AddComponent(UITextMeshProUGUIEx, Next_Lv_Time_path)
    self.normal = self:AddComponent(UIBaseContainer, normal_path)
    self.current_lv_max_num_title:SetLocalText(GameDialogDefine.DETECT_EVENT_MAX_NUM)
    self.current_event_max_num_text = self:AddComponent(UITextMeshProUGUIEx, current_event_max_num_text_path)
    self.next_event_max_num_text = self:AddComponent(UITextMeshProUGUIEx, next_event_max_num_text_path)
    self.current_event_max_num_Title = self:AddComponent(UITextMeshProUGUIEx, current_event_max_num_Title_path)

    self.scroll_view = self:AddComponent(UIScrollView, scroll_view_path)
    self.scroll_view:SetOnItemMoveIn(function(itemObj, index)
        self:OnCellMoveIn(itemObj, index)
    end)
    self.scroll_view:SetOnItemMoveOut(function(itemObj, index)
        self:OnCellMoveOut(itemObj, index)
    end)
end

function DetectEventLevelUpgradeInfoView:OnDestroy()
    self:ComponentDestroy()

    base.OnDestroy(self)
end

function DetectEventLevelUpgradeInfoView:ComponentDestroy()
    self.upgrade_condition_title = nil
    self.upgrade_condition_text = nil
    self.current_lv_text = nil
    self.current_lv_max_num_title = nil
    self.current_lv_max_num_text = nil
    self.next_lv_text = nil
    self.next_lv_max_num_text = nil
    self.normal = nil
    self.current_event_max_num_text = nil
    self.next_event_max_num_text = nil
end

function DetectEventLevelUpgradeInfoView:ReInit()
    local currentLv = DataCenter.RadarCenterDataManager:GetDetectInfoLevel()
    local maxLv = self.view.ctrl:GetDetectEventMaxLevel()
    if maxLv > currentLv then
        self.normal:SetActive(true)
        self:RefreshNormal()
    else
        self.normal:SetActive(false)
        self:RefreshMax()
    end
end

function DetectEventLevelUpgradeInfoView:RefreshNormal()
    local currentLv = DataCenter.RadarCenterDataManager:GetDetectInfoLevel()
    local nextLv = currentLv + 1
    local currentComplete = DataCenter.RadarCenterDataManager:GetDetectInfoCompleteNum()
    local nextLvNeed = self.view.ctrl:GetDetectEventLevelUpNum(currentLv)
    local currentLvEventNum = self.view.ctrl:GetDetectEventNum(currentLv)
    local nextLvEventNum = self.view.ctrl:GetDetectEventNum(nextLv)

    self.upgrade_condition_title:SetLocalText(GameDialogDefine.UPGRADE_CONDITION)
    self.upgrade_condition_text:SetLocalText(GameDialogDefine.DETECT_UPGRADE_CONDITION,  nextLvNeed,  currentComplete,  nextLvNeed)

    self.current_lv_max_num_text:SetText(string.GetFormattedSeperatorNum(currentLvEventNum))
    self.next_lv_max_num_text:SetText(string.GetFormattedSeperatorNum(nextLvEventNum))
    
    local time = self.view.ctrl:GetEventRecoverTime(currentLv)
    local nextTime = self.view.ctrl:GetEventRecoverTime(nextLv)
    self.Current_Lv_Time:SetText(UITimeManager:GetInstance():MilliSecondToFmtString(time))
    self.Next_Lv_Time:SetText(UITimeManager:GetInstance():MilliSecondToFmtString(nextTime))
    
    self.current_lv_text:SetText(currentLv)
    self.next_lv_text:SetText(nextLv)
    local currentMax = self.view.ctrl:GetEventStoreMax(currentLv)
    local nextMax = self.view.ctrl:GetEventStoreMax(nextLv)

    self.current_event_max_num_Title:SetLocalText(140069)
    self.current_event_max_num_text:SetText(currentMax)
    self.next_event_max_num_text:SetText(nextMax)
    
    self:ShowRewards()
end

function DetectEventLevelUpgradeInfoView:RefreshMax()

end

function DetectEventLevelUpgradeInfoView:ShowRewards()
    self:ClearScroll()
    self.rewardList = DataCenter.RadarCenterDataManager:GetLevelRewardList()
    local count = table.count(self.rewardList)
    if count > 0 then
        self.scroll_view:SetTotalCount(count)
        self.scroll_view:RefillCells()
    end
end

function DetectEventLevelUpgradeInfoView:ClearScroll()
    self.scroll_view:ClearCells()--清循环列表数据
    self.scroll_view:RemoveComponents(UICommonItem)--清循环列表gameObject
end

function DetectEventLevelUpgradeInfoView:OnCellMoveIn(itemObj, index)
    itemObj.name = tostring(index)
    local item = self.scroll_view:AddComponent(UICommonItem, itemObj)
    item:ReInit(self.rewardList[index])
end

function DetectEventLevelUpgradeInfoView:OnCellMoveOut(itemObj, index)
    self.scroll_view:RemoveComponent(itemObj.name, UICommonItem)
end

return DetectEventLevelUpgradeInfoView