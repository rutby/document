---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2021/8/17 15:30
---
local DetectEventRewardEffect = BaseClass("DetectEventRewardEffect", UIBaseContainer)
local base = UIBaseContainer

local lv_progress_particle1_path = "Lv_Progress_Particle1"
local lv_progress_particle2_path = "Lv_Progress_Particle2"
local goto_lv_progress_particle_path = "Goto_Lv_progress_particle"
local detect_event_item_path = "Detect_event_go"
local detect_event_tween_path = "Detect_event_go/Detect_event_item"
local detect_event_item_icon_path = "Detect_event_go/Detect_event_item/Detect_Event_Img"
local detect_event_item_quality_path = "Detect_event_go/Detect_event_item/Detect_Event_Quality_Img"
local detect_event_item_special_path = "Detect_event_go/Detect_event_item/Detect_event_special"

local fly_speed = 3.0
local item_fly_time = 600.0

local function OnCreate(self)
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

local function ComponentDefine(self)
    --self.lv_progress_particle1 = self:AddComponent(UIBaseContainer, lv_progress_particle1_path)
    --self.lv_progress_particle2 = self:AddComponent(UIBaseContainer, lv_progress_particle2_path)
    --self.goto_lv_progress_particle = self:AddComponent(UIBaseContainer, goto_lv_progress_particle_path)
    self.detect_event_item = self:AddComponent(UIBaseContainer, detect_event_item_path)
    self.detect_event_tween = self:AddComponent(UIBaseContainer, detect_event_tween_path)
    self.detect_event_item_icon = self:AddComponent(UIImage, detect_event_item_icon_path)
    self.detect_event_item_quality = self:AddComponent(UIImage, detect_event_item_quality_path)
    self.detect_event_item_special = self:AddComponent(UIBaseContainer, detect_event_item_special_path)
    --self.detect_event_item:SetActive(false)
    --self.lv_progress_particle1:SetActive(false)
    --self.lv_progress_particle2:SetActive(false)
    --self.goto_lv_progress_particle:SetActive(false)
end

local function DataDefine(self)
    self.startTime = UITimeManager:GetInstance():GetServerTime()
    self.passTime = 0
end

local function SetParam(self, param)
    self.param = param
    self:ReInit()
    self:CalculateTime()
end

local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function Update(self)
    --if self.flyParticleTimeEnd == nil then
    --    return
    --end
    --local currentTime = UITimeManager:GetInstance():GetServerTime()
    --local passTime = currentTime - self.startTime

    --if passTime <= self.flyParticleTimeEnd and passTime >= self.flyParticleTimeStart then
    --    self.detect_event_item:SetActive(false)
    --    self.goto_lv_progress_particle:SetActive(true)
    --    local startPos = self.detect_event_tween.transform.position
    --    local endPos = Vector3.New(self.param.lvPosX, self.lv_progress_particle1.transform.position.y, 0)
    --    local posX = startPos.x + (passTime - self.flyParticleTimeStart) * (endPos.x - startPos.x) / (self.flyParticleTimeEnd - self.flyParticleTimeStart)
    --    local posY = startPos.y + (passTime - self.flyParticleTimeStart) * (endPos.y - startPos.y) / (self.flyParticleTimeEnd - self.flyParticleTimeStart)
    --    self.goto_lv_progress_particle.transform.position = Vector3.New(posX, posY, 0)
    --else
    --    
    --end
    --
    --if self.passTime < self.flyParticleTimeEnd and passTime >= self.flyParticleTimeEnd then
    --    self.goto_lv_progress_particle:SetActive(false)
    --    self.lv_progress_particle1:SetActive(true)
    --    self.lv_progress_particle2:SetActive(true)
    --    --self.goto_lv_progress_particle = self:AddComponent(UIBaseContainer, goto_lv_progress_particle_path)
    --end

    --self.passTime = passTime
    --if passTime > self.totalTime then
    --    self:EndAnimation()
    --end
end

local function ComponentDestroy(self)
    self.lv_progress_particle1 = nil
    self.lv_progress_particle2 = nil
    self.goto_lv_progress_particle = nil
    self.detect_event_item = nil
    self.detect_event_tween = nil
    self.detect_event_item_icon = nil
    self.detect_event_item_quality = nil
    self.detect_event_item_special = nil
end

local function DataDestroy(self)
    
end

local function ReInit(self)
    local template = DataCenter.DetectEventTemplateManager:GetDetectEventTemplate(self.param.eventId)
    if template == nil then
        return
    end
    
    self.detect_event_item_quality:LoadSprite(DetectEvenColorImage[template:getValue("quality")])
    self.detect_event_item_icon:LoadSprite(string.format(LoadPath.RadarCenterPath, template:getValue("icon")))
    --self.detect_event_item_special:SetActive(template.type == DetectEventType.DetectEventTypeSpecial)
    self:EndAnimation()
    --self:StartAnimation()
end

local function StartAnimation(self)
    self.detect_event_item.transform.position = self.param.eventPos
    self.detect_event_item:SetActive(true)
    self.detect_event_tween.transform:Set_localPosition(0, 0, 0)
    self.detect_event_tween.transform:DOLocalMove(Vector3.New(-50, 160, 0), item_fly_time / 1000)
end

local function EndAnimation(self)
    self.view:RemoveRewardGetAnimation(self.param.name)
end

local function CalculateTime(self)
    --self.flyParticleTimeStart = item_fly_time
    --local progressPos = Vector3.New(self.param.lvPosX, self.lv_progress_particle1.transform.position.y, 0)
    --self.lv_progress_particle1.transform.position = progressPos
    --local start = progressPos
    --local dis = Vector3.Distance(start, self.detect_event_item.transform.position)
    --self.flyParticleTimeEnd = self.flyParticleTimeStart + dis / fly_speed
    --self.totalTime = self.flyParticleTimeEnd + 1000
end

DetectEventRewardEffect.OnCreate = OnCreate
DetectEventRewardEffect.OnDestroy = OnDestroy
DetectEventRewardEffect.ComponentDefine = ComponentDefine
DetectEventRewardEffect.ComponentDestroy = ComponentDestroy
DetectEventRewardEffect.DataDefine = DataDefine
DetectEventRewardEffect.DataDestroy = DataDestroy
DetectEventRewardEffect.ReInit = ReInit
DetectEventRewardEffect.StartAnimation = StartAnimation
DetectEventRewardEffect.EndAnimation = EndAnimation
DetectEventRewardEffect.OnEnable = OnEnable
DetectEventRewardEffect.OnDisable = OnDisable
DetectEventRewardEffect.Update = Update
DetectEventRewardEffect.SetParam = SetParam
DetectEventRewardEffect.CalculateTime = CalculateTime;

return DetectEventRewardEffect