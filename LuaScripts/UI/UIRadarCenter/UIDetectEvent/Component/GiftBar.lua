---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2023/1/16 10:44
---

local GiftBar = BaseClass("GiftBar", UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization
local UIGiftPackagePoint = require "UI.UIGiftPackage.Component.UIGiftPackagePoint"
local function OnCreate(self)
    base.OnCreate(self)

    self:DataDefine()
    self:ComponentDefine()
end

local function ComponentDefine(self)
    self._giftBar_rect = self:AddComponent(UIButton,"")
    self._giftName_txt = self:AddComponent(UITextMeshProUGUIEx,"Txt_GiftName")
    self._giftContent_rect = self:AddComponent(UIBaseContainer,"Rect_GiftContentMask")
    self._giftContent_txt = self:AddComponent(UITextMeshProUGUIEx,"Rect_GiftContentMask/Txt_GiftContent")
    self._giftType_img = self:AddComponent(UIImage,"Img_GiftType")
    self._giftBuy_btn = self:AddComponent(UIButton,"BtnBuy")
    self._giftBuy_txt = self:AddComponent(UITextMeshProUGUIEx,"BtnBuy/Txt_Buy")
    self.point_rect = self:AddComponent(UIGiftPackagePoint,"BtnBuy/UIGiftPackagePoint")
    self._giftBar_rect:SetOnClick(function()
        self:GoWindowPackage()
    end)
    self._giftBuy_btn:SetOnClick(function()
        if self.packageInfo then
            self:BuyGift()
        end
    end)
end

local function DataDefine(self)
    self._timer_loop_action = function(temp)
        self:RefreshGiftContent()
    end

end

local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()

    base.OnDestroy(self)
end

local function ComponentDestroy(self)
    DOTween.Kill(self._giftContent_txt.transform)
    if self.delayTimer ~= nil then
        self.delayTimer:Stop()
        self.delayTimer = nil
    end
    self:DeleteTimer()
end

local function SetData(self, packageInfo)
    self.packageInfo = packageInfo
    self:RefreshView()
end

local function DataDestroy(self)
end

local function GoWindowPackage(self)
    --if self.packageInfo then
        --GoToUtil.GotoGiftPackView(self.packageInfo)
        --UIManager:GetInstance():OpenWindow(UIWindowNames.UIScrollPack, {anim = true}, self.packageInfo)
    --end
end

local function BuyGift(self)
    DataCenter.PayManager:CallPayment(self.packageInfo, UIWindowNames.UIResourceBag)
end

local function RefreshView(self)
    self._giftBar_rect:SetActive(true)
    self._giftName_txt:SetLocalText(self.packageInfo:getName())
    self._giftContent_txt:SetText(self.packageInfo:getDescText())
    DOTween.Kill(self._giftContent_txt.transform)
    CS.UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(self._giftContent_txt.rectTransform)
    self._giftContent_txt:SetAnchoredPositionXY(-80,0)
    local iconPath = DataCenter.ItemTemplateManager:GetIconPath(RadarDetectEventFillFullItemId)
    self._giftType_img:LoadSprite(iconPath)
    local price = DataCenter.PayManager:GetDollarText(self.packageInfo:getPrice(), self.packageInfo:getProductID())
    self._giftBuy_txt:SetText(price)
    if self._giftContent_txt:GetSizeDelta().x > self._giftContent_rect:GetSizeDelta().x then
        self:AddTimer()
        if self.delayTimer == nil then
            self.delayTimer = TimerManager:GetInstance():DelayInvoke(function()
                self:RefreshGiftContent()
                if self.delayTimer ~= nil then
                    self.delayTimer:Stop()
                    self.delayTimer = nil
                end
            end, 1)
        end
    end
    self.point_rect:RefreshPoint(self.packageInfo)
end

local function RefreshGiftContent(self)
    if self._giftContent_txt == nil then
        return
    end
    local time = 6
    local offset = self._giftContent_txt:GetSizeDelta().x
    if offset > 900 then
        time = 15
    elseif offset > 700 then
        time = 12
    elseif offset > 500 then
        time = 9
    end
    local curPos = self._giftContent_txt:GetAnchoredPosition()
    self._giftContent_txt.rectTransform:DOAnchorPosX( curPos.x - offset - 10, time,true):OnComplete(function()
        self._giftContent_txt:SetAnchoredPositionXY(80,curPos.y)
        self._giftContent_txt.rectTransform:DOAnchorPosX(curPos.x, 3)
    end):SetEase(CS.DG.Tweening.Ease.Linear)
end

local function DeleteTimer(self)
    if self._timer_loop ~= nil then
        self._timer_loop:Stop()
        self._timer_loop = nil
    end
end

local function AddTimer(self)
    if self._timer_loop == nil then
        local time = 15
        local width = self._giftContent_txt:GetSizeDelta().x
        if width > 900 then
            time = 24
        elseif width > 700 then
            time = 21
        elseif width > 500 then
            time = 18
        end
        self._timer_loop = TimerManager:GetInstance():GetTimer(time, self._timer_loop_action , self, false,false,false)
        self._timer_loop:Start()
    end
end

GiftBar.AddTimer = AddTimer
GiftBar.DeleteTimer = DeleteTimer
GiftBar.RefreshGiftContent = RefreshGiftContent
GiftBar.OnCreate = OnCreate
GiftBar.OnDestroy = OnDestroy
GiftBar.ComponentDefine = ComponentDefine
GiftBar.ComponentDestroy = ComponentDestroy
GiftBar.DataDefine = DataDefine
GiftBar.DataDestroy = DataDestroy
GiftBar.GoWindowPackage = GoWindowPackage
GiftBar.BuyGift = BuyGift
GiftBar.RefreshView = RefreshView
GiftBar.SetData = SetData

return GiftBar