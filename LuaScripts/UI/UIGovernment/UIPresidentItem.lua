---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2023/3/13 14:07
---

local UIPresidentItem = BaseClass("UIPresidentItem", UIBaseContainer)
local base = UIBaseContainer
local GovernmentConst = require("DataCenter.GovernmentManager.GovernmentConst")
local has_path = "Image/HasPresident"

local player_head_btn_path = "Image/HasPresident/UIPlayerHead"
local player_head_path = "Image/HasPresident/UIPlayerHead/HeadIcon"
local playerIconFg_path = "Image/HasPresident/UIPlayerHead/Foreground"

local player_name_path = "Image/HasPresident/NameText"
local PresidentStateText_path = "Image/HasPresident/PresidentStateText"
local InauguralTimeText_path = "Image/HasPresident/InauguralTimeText"

local not_has_path = "Image/NoPresident"

local PresidentAppoint_path = "Image/NoPresident/PresidentAppoint"
local PresidentAppointBtn_path = "Image/NoPresident/PresidentAppoint/PresidentAppointBtn"
local PresidentAppointBtnText_path = "Image/NoPresident/PresidentAppoint/PresidentAppointBtn/PresidentAppointBtnText"
local AppointLeftTimeText_path = "Image/NoPresident/PresidentAppoint/AppointLeftTimeText"

local NoPresidentNormal_path = "Image/NoPresident/NoPresidentNormal"
local NoPresidentNormalText_path = "Image/NoPresident/NoPresidentNormal/NoPresidentNormalText"
local NoPresidentText_path = "Image/NoPresident/NoPresidentNormal/NoPresidentText"
local NoPresidentInfo_btn_path = "Image/NoPresident/UIPlayerHead1"
--创建
local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
end

-- 销毁
local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    self.has = self:AddComponent(UIBaseContainer, has_path)
    self.player_name = self:AddComponent(UIText, player_name_path)
    self.PresidentStateText = self:AddComponent(UIText, PresidentStateText_path)
    self.PresidentStateText:SetLocalText(250003)
    
    self.InauguralTimeText = self:AddComponent(UIText, InauguralTimeText_path)

    self.not_has = self:AddComponent(UIBaseContainer, not_has_path)

    self.PresidentAppoint = self:AddComponent(UIBaseContainer, PresidentAppoint_path)
    self.PresidentAppointBtn = self:AddComponent(UIButton, PresidentAppointBtn_path)
    self.PresidentAppointBtnText = self:AddComponent(UIText, PresidentAppointBtnText_path)
    self.PresidentAppointBtnText:SetLocalText(250046)
    
    self.AppointLeftTimeText = self:AddComponent(UIText, AppointLeftTimeText_path)

    self.NoPresidentNormal = self:AddComponent(UIBaseContainer, NoPresidentNormal_path)
    self.NoPresidentNormalText = self:AddComponent(UIText, NoPresidentNormalText_path)
    self.NoPresidentText = self:AddComponent(UIText, NoPresidentText_path)
    self.NoPresidentText:SetLocalText(250122)
    self.PresidentAppointBtn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:ClickBtn()
    end)

    self.player_img = self:AddComponent(UIPlayerHead, player_head_path)
    self.playerHeadFg = self:AddComponent(UIImage, playerIconFg_path)
    self.timer_action = function(temp)
        self:RefreshAppointTime()
    end
    self.player_head_btn = self:AddComponent(UIButton, player_head_btn_path)
    self.player_head_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OpenUIGovernmentInfo()
    end)
    
    self.NoPresidentInfo_btn = self:AddComponent(UIButton, NoPresidentInfo_btn_path)
    self.NoPresidentInfo_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OpenUIGovernmentInfo()
    end)
end

local function ComponentDestroy(self)
    self:RemoveTimer()
end

local function DataDefine(self)

end

local function DataDestroy(self)

end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function ReInit(self, data)
    self.data = data
    self:RefreshView()
end

local function RefreshView(self)
    self:RemoveTimer()
    if self.data == nil or self.data.presidentInfo == nil then
        self.has:SetActive(false)
        self.not_has:SetActive(true)
        self:RefreshNoPresident()
    else
        self.has:SetActive(true)
        self.not_has:SetActive(false)
        self:RefreshPresident()
    end
end

local function ClickBtn(self)
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIPresidentAppoint)
end

local function RefreshPresident(self)
    if self.data == nil or self.data.presidentInfo == nil then
        return
    end
    self.player_img:SetData(self.data.presidentInfo.uid, self.data.presidentInfo.pic, self.data.presidentInfo.picVer)
    local fgImg = DataCenter.DecorationDataManager:GetHeadFrame(self.data.presidentInfo.headSkinId, self.data.presidentInfo.headSkinET)
    if not string.IsNullOrEmpty(fgImg) then
        self.playerHeadFg:SetActive(true)
        self.playerHeadFg:LoadSprite(fgImg)
    else
        self.playerHeadFg:SetActive(false)
    end
    local nameStr = ""
    if not string.IsNullOrEmpty(self.data.presidentInfo.allianceAbbr) then
        nameStr = "["..self.data.presidentInfo.allianceAbbr.."]"
    end
    nameStr = nameStr..self.data.presidentInfo.name
    self.player_name:SetText(nameStr)
    local timeStr = UITimeManager:GetInstance():TimeStampToDayForLocal(self.data.presidentInfo.beKingTime)
    self.InauguralTimeText:SetLocalText(250008, timeStr)
end

local function RefreshNoPresident(self)
    local now = UITimeManager:GetInstance():GetServerTime()
    if self.data.canAssign == true and now < self.data.assignEndTime then
        self.PresidentAppoint:SetActive(true)
        self.NoPresidentNormal:SetActive(false)
        self:AddTimer()
    else
        self.PresidentAppoint:SetActive(false)
        self.NoPresidentNormal:SetActive(true)
    end
end

local function RemoveTimer(self)
    if self.timer ~= nil then
        self.timer:Stop()
        self.timer = nil
    end
end

local function AddTimer(self)
    if self.timer == nil then
        self.timer = TimerManager:GetInstance():GetTimer(1, self.timer_action , self, false,false,false)
    end
    self.timer:Start()
end

local function RefreshAppointTime(self)
    local now = UITimeManager:GetInstance():GetServerTime()
    if self.data.canAssign == true and now < self.data.assignEndTime then
        local restTime = self.data.assignEndTime - now
        local restTimeStr = UITimeManager:GetInstance():MilliSecondToFmtString(restTime)
        self.AppointLeftTimeText:SetLocalText(250049, restTimeStr)
    else
        self.PresidentAppoint:SetActive(false)
        self.NoPresidentNormal:SetActive(true)
        if string.IsNullOrEmpty(self.data.occupyAllianceId) then
            self.NoPresidentText:SetLocalText(250122)
        else
            self.NoPresidentText:SetLocalText(250134)
        end
        self:RemoveTimer()
    end
end

local function OpenUIGovernmentInfo(self)
    local positionInfo = DataCenter.GovernmentManager:GetPositionInfoByPositionId(GovernmentConst.King_Position_id)
    local para
    if positionInfo ~= nil then
        para = {}
        para.uid = positionInfo.uid
        para.pic = positionInfo.pic
        para.picVer = positionInfo.picVer
        para.headSkinId = positionInfo.headSkinId
        para.headSkinET = positionInfo.headSkinET
        para.serverId = LuaEntry.Player:GetSelfServerId()
        para.canAssign = false
    end
    
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIGovernmentInfo, {anim = true}, GovernmentConst.King_Position_id, para)
end

UIPresidentItem.RefreshPresident = RefreshPresident
UIPresidentItem.RefreshNoPresident = RefreshNoPresident
UIPresidentItem.OnCreate = OnCreate
UIPresidentItem.OnDestroy = OnDestroy
UIPresidentItem.OnEnable = OnEnable
UIPresidentItem.OnDisable = OnDisable
UIPresidentItem.ComponentDefine = ComponentDefine
UIPresidentItem.ComponentDestroy = ComponentDestroy
UIPresidentItem.DataDefine = DataDefine
UIPresidentItem.DataDestroy = DataDestroy
UIPresidentItem.ReInit = ReInit
UIPresidentItem.RefreshView = RefreshView
UIPresidentItem.ClickBtn = ClickBtn
UIPresidentItem.AddTimer = AddTimer
UIPresidentItem.RemoveTimer = RemoveTimer
UIPresidentItem.RefreshAppointTime = RefreshAppointTime
UIPresidentItem.OpenUIGovernmentInfo = OpenUIGovernmentInfo

return UIPresidentItem