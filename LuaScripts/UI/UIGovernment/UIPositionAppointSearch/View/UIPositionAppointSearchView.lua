---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2023/3/20 16:33
---
local UIPositionAppointSearchView = BaseClass("UIPositionAppointSearchView",UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization
local Cell = require("UI.UIGovernment.UIPositionAppointSearch.Component.UIPositionAppointSearchViewCell")

local txt_title_path ="UICommonPopUpTitle/bg_mid/titleText"
local close_btn_path = "UICommonPopUpTitle/bg_mid/CloseBtn"
local return_btn_path = "UICommonPopUpTitle/panel"
local scroll_path = "ImgBg/ScrollView"

local name_path = "ImgBg/TxtOfficialName"
local icon_path = "ImgBg/OfficialIconBg/OfficialIcon"

local name_input_path = "ImgBg/InputField"
local name_place_holder_txt_path = "ImgBg/InputField/Placeholder"

local search_btn_path = "ImgBg/BtnSearch"
local emptyTxt_path = "ImgBg/TxtEmpty"

local confirm_btn_path = "ImgBg/ConfirmBtn"
local confirm_btn_text_path = "ImgBg/ConfirmBtn/ConfirmBtnText"

local function OnCreate(self)
    base.OnCreate(self)
    local data = self:GetUserData()
    self.governmentId = data
    self.txt_title = self:AddComponent(UITextMeshProUGUIEx, txt_title_path)
    self.txt_title:SetLocalText(250014)

    self.close_btn = self:AddComponent(UIButton, close_btn_path)
    self.close_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)

    self.return_btn = self:AddComponent(UIButton, return_btn_path)
    self.return_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)

    self.name_text = self:AddComponent(UIText, name_path)
    self.icon = self:AddComponent(UIImage, icon_path)
    --self.name_title:SetLocalText(320763)
    self.nameInput = self:AddComponent(UIInput, name_input_path)
    self.nameInput:SetOnEndEdit(function (value)
        self:IptOnNameValueChange(value)
    end)
    self.nameInput:SetText("")
    self.name_place_holder_txt = self:AddComponent(UIText, name_place_holder_txt_path)
    self.name_place_holder_txt:SetText("")

    self.search_btn = self:AddComponent(UIButton, search_btn_path)
    self.search_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnClickSearch()
    end)

    self.ScrollView = self:AddComponent(UIScrollView, scroll_path)
    self.ScrollView:SetOnItemMoveIn(function(itemObj, index)
        self:OnAllianceItemMoveIn(itemObj, index)
    end)
    self.ScrollView:SetOnItemMoveOut(function(itemObj, index)
        self:OnAllianceItemMoveOut(itemObj, index)
    end)

    self.EmptyTxt = self:AddComponent(UIText, emptyTxt_path)
    self.EmptyTxt:SetActive(false)
    self.inputValueName = ""

    self.confirm_btn = self:AddComponent(UIButton, confirm_btn_path)
    self.confirm_btn_text = self:AddComponent(UIText, confirm_btn_text_path)
    self.confirm_btn_text:SetLocalText(250141)
    self.confirm_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnConfirmClick()
    end)
    self.curSelectUuid = nil
    
    local template = DataCenter.GovernmentTemplateManager:GetTemplate(self.governmentId)
    if template then
        local effectStr = ""
        local total = table.count(template.effect)
        local i = 1
        for k, v in pairs(template.effect) do
            local effectId = k
            local value = v
            local nameStr = GetTableData(TableName.EffectNumDesc, effectId, 'des')
            local name = Localization:GetString(nameStr)
            local type = toInt(GetTableData(TableName.EffectNumDesc, effectId, 'type'))
            local addValue = DecorationUtil.GetEffectNumWithType(value, type)
            effectStr = effectStr..name..addValue
            if i < total then
                effectStr = effectStr..", "
            end
            i = i + 1
        end
        self.name_text:SetText(Localization:GetString(template.name)..": "..effectStr)
        self.icon:LoadSprite(template.icon)
    end
    self:GetDataFromServer()
end

local function OnDestroy(self)
    self:ClearScroll()
    self.txt_title = nil
    self.close_btn = nil
    self.return_btn = nil
    self.input = nil
    self.search_btn = nil
    self.curSelectUuid = nil

    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function OnAllianceItemMoveIn(self,itemObj, index)
    itemObj.name = tostring(index)
    local cellItem = self.ScrollView:AddComponent(Cell, itemObj)
    cellItem:SetData(self.dataList[index], self.curSelectUuid)
end

local function OnAllianceItemMoveOut(self, itemObj, index)
    self.ScrollView:RemoveComponent(itemObj.name, Cell)
end

local function ClearScroll(self)
    self.ScrollView:ClearCells()
    self.ScrollView:RemoveComponents(Cell)
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.SendContactGiftSearchBack, self.OnSearchBack)
    self:AddUIListener(EventId.SearchSelectUser, self.OnSelect)
    self:AddUIListener(EventId.AllianceMember, self.OnDataBack)
end

local function OnRemoveListener(self)
    self:RemoveUIListener(EventId.SendContactGiftSearchBack, self.OnSearchBack)
    self:RemoveUIListener(EventId.SearchSelectUser, self.OnSelect)
    self:RemoveUIListener(EventId.AllianceMember, self.OnDataBack)

    base.OnRemoveListener(self)
end

local function IptOnNameValueChange(self,value)
    self.inputValueName = value
    --self:SendSearchCmd()
end

local function SendSearchCmd(self)
    if not string.IsNullOrEmpty(self.inputValueName) and #self.inputValueName >= 3 then
        --if server > 0 then
        SFSNetwork.SendMessage(MsgDefines.SendContactGiftSearch, LuaEntry.Player:GetSelfServerId(), self.inputValueName)
        --end
    end
end

local function OnClickSearch(self)
    self:SendSearchCmd()
end

local function OnSearchBack(self, message)
    self.dataList = {}
    self.curSelectUuid = nil
    if message["searchRet"] then
        for _, v in ipairs(message["searchRet"]) do
            if v.uid ~= LuaEntry.Player.uid then
                table.insert(self.dataList, DeepCopy(v))
            end
        end
    end

    self:ShowCells()
end

local function OnDataBack(self)
    self.dataList = self.ctrl:GetPanelData()
    self:ShowCells()
end

local function OnSelect(self, para)
    self.curSelectUuid = para
    self:RefreshBtn()
end

local function ShowCells(self)
    self:ClearScroll()
    local count = #self.dataList
    if count == 0 then
        return
    end
    self.ScrollView:SetTotalCount(count)
    self.ScrollView:RefillCells()
end

local function OnConfirmClick(self)
    if string.IsNullOrEmpty(self.curSelectUuid) then
        return
    end
    local positionInfo = DataCenter.GovernmentManager:GetPositionInfoByPositionId(self.governmentId)
    if positionInfo and positionInfo.uid == self.curSelectUuid then
        DataCenter.GovernmentManager:KingdomPositionAppoint(self.curSelectUuid, self.governmentId, 2)
    else
        DataCenter.GovernmentManager:KingdomPositionAppoint(self.curSelectUuid, self.governmentId, 1)
    end

    self.ctrl:CloseSelf()
end

local function GetDataFromServer(self)
    DataCenter.GovernmentManager:GetKingdomPositions(LuaEntry.Player:GetSrcServerId())
    SFSNetwork.SendMessage(MsgDefines.AlRank, LuaEntry.Player.allianceId)
end

local function RefreshBtn(self)
    local positionInfo = DataCenter.GovernmentManager:GetPositionInfoByPositionId(self.governmentId)
    if positionInfo and positionInfo.uid == self.curSelectUuid then
        self.confirm_btn_text:SetLocalText(250140)
    else
        self.confirm_btn_text:SetLocalText(250141)
    end
end

UIPositionAppointSearchView.GetDataFromServer = GetDataFromServer
UIPositionAppointSearchView.OnSelect = OnSelect
UIPositionAppointSearchView.OnCreate= OnCreate
UIPositionAppointSearchView.OnDestroy = OnDestroy
UIPositionAppointSearchView.OnEnable = OnEnable
UIPositionAppointSearchView.OnDisable = OnDisable
UIPositionAppointSearchView.OnAllianceItemMoveIn = OnAllianceItemMoveIn
UIPositionAppointSearchView.OnAllianceItemMoveOut = OnAllianceItemMoveOut
UIPositionAppointSearchView.ClearScroll = ClearScroll
UIPositionAppointSearchView.OnAddListener = OnAddListener
UIPositionAppointSearchView.OnRemoveListener = OnRemoveListener
UIPositionAppointSearchView.OnClickSearch = OnClickSearch
UIPositionAppointSearchView.IptOnNameValueChange = IptOnNameValueChange
UIPositionAppointSearchView.SendSearchCmd = SendSearchCmd
UIPositionAppointSearchView.OnSearchBack = OnSearchBack
UIPositionAppointSearchView.ShowCells = ShowCells
UIPositionAppointSearchView.OnConfirmClick = OnConfirmClick
UIPositionAppointSearchView.OnDataBack = OnDataBack
UIPositionAppointSearchView.RefreshBtn = RefreshBtn

return UIPositionAppointSearchView