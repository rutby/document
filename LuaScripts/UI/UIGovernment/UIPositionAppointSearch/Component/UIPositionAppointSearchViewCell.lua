---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2023/3/20 18:18
---


local UIPositionAppointSearchViewCell = BaseClass("UIPositionAppointSearchViewCell",UIBaseContainer)
local base = UIBaseContainer

local player_name_path = "NameLayoutGo/NameTxt"
local power_path = "power"
local player_icon_path="head/UIPlayerHead/HeadIcon"
local playerHeadFg_path = "head/UIPlayerHead/Foreground"
local player_head_btn_path = "head/UIPlayerHead"
local check_box_path = "showBtn"
local check_box_select_path = "checkBox/select"

local function OnCreate(self)
    base.OnCreate(self)
    self.player_name = self:AddComponent(UIText,player_name_path)
    --self.abbr = self:AddComponent(UIText,abbr_path)
    self.power_txt = self:AddComponent(UIText, power_path)
    self.player_img =self:AddComponent(UIPlayerHead,player_icon_path)
    self.playerHeadFg = self:AddComponent(UIImage, playerHeadFg_path)

    self.check_box = self:AddComponent(UIButton, check_box_path)
    self.check_box:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnClick()
    end)

    self.check_box_select = self:AddComponent(UIBaseContainer, check_box_select_path)

    self.player_head_btn = self:AddComponent(UIButton, player_head_btn_path)
    self.player_head_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:ClickPlayerHeadBtn()
    end)
end

local function SetData(self, data, curSelect)
    self.data = data
    self.curSelect = curSelect
    self.power_txt:SetText(string.GetFormattedSeperatorNum(math.floor(data.power)))

    self.player_name:SetText(data.name)
    self.player_img:SetData(data.uid, data.pic, data.picVer)
    local headBgImg = DataCenter.DecorationDataManager:GetHeadFrame(data.headSkinId, data.headSkinET)
    if headBgImg ~= nil  then
        self.playerHeadFg:SetActive(true)
        self.playerHeadFg:LoadSprite(headBgImg)
    else
        self.playerHeadFg:SetActive(false)
    end
    self:RefreshSelect()
end

local function OnClick(self)
    --self.view:SelectPlayer(self.data)
    if self.curSelect == self.data.uid then
        EventManager:GetInstance():Broadcast(EventId.SearchSelectUser, nil)
    else
        EventManager:GetInstance():Broadcast(EventId.SearchSelectUser, self.data.uid)
    end
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.SearchSelectUser, self.OnSelect)
end

local function OnRemoveListener(self)
    self:RemoveUIListener(EventId.SearchSelectUser, self.OnSelect)
    base.OnRemoveListener(self)
end

local function OnSelect(self, para)
    self.curSelect = para
    self:RefreshSelect()
end

local function RefreshSelect(self)
    self.check_box_select:SetActive(self.data and self.data.uid == self.curSelect)
end

local function OnDestroy(self)
    base.OnDestroy(self)
end

local function ClickPlayerHeadBtn(self)
    if self.data and not string.IsNullOrEmpty(self.data.uid) then
        if self.data.uid ~= LuaEntry.Player.uid then
            UIManager:GetInstance():OpenWindow(UIWindowNames.UIOtherPlayerInfo, self.data.uid)
        else
            UIManager:GetInstance():OpenWindow(UIWindowNames.UIPlayerInfo, LuaEntry.Player.uid)
        end
    end
end

UIPositionAppointSearchViewCell.OnCreate = OnCreate
UIPositionAppointSearchViewCell.SetData = SetData
UIPositionAppointSearchViewCell.OnClick = OnClick
UIPositionAppointSearchViewCell.OnDestroy = OnDestroy
UIPositionAppointSearchViewCell.OnAddListener = OnAddListener
UIPositionAppointSearchViewCell.OnRemoveListener = OnRemoveListener
UIPositionAppointSearchViewCell.OnSelect = OnSelect
UIPositionAppointSearchViewCell.RefreshSelect = RefreshSelect
UIPositionAppointSearchViewCell.ClickPlayerHeadBtn = ClickPlayerHeadBtn

return UIPositionAppointSearchViewCell