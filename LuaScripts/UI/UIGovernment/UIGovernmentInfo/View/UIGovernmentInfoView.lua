---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2023/3/23 14:56
---

local UIGovernmentInfoView = BaseClass("UIGovernmentInfoView",UIBaseView)
local base = UIBaseView
local UIGovernmentInfoCell = require "UI.UIGovernment.UIGovernmentInfo.Component.UIGovernmentInfoCell"
local txt_title_path ="UICommonMiniPopUpTitle/Bg_mid/titleText"
local close_btn_path = "UICommonMiniPopUpTitle/Bg_mid/CloseBtn"
local return_btn_path = "UICommonMiniPopUpTitle/panel"

local icon_bg_path = "ImgBg/OfficialIconBg"
local icon_path = "ImgBg/OfficialIconBg/OfficialIcon"

local assignBtn_path = "ImgBg/Btns/AssignBtn"
local assignBtn_text_path = "ImgBg/Btns/AssignBtn/AssignBtnText"

local fireBtn_path = "ImgBg/Btns/FireBtn"
local fireBtn_text_path = "ImgBg/Btns/FireBtn/FireBtnText"

local player_head_path = "ImgBg/UIPlayerHead/HeadIcon"
local head_path = "ImgBg/UIPlayerHead"
local headFg_path = "ImgBg/UIPlayerHead/Foreground"

local function OnCreate(self)
    base.OnCreate(self)
    self.governmentId, self.playerInfo = self:GetUserData()
    self.txt_title = self:AddComponent(UITextMeshProUGUIEx, txt_title_path)
    self.close_btn = self:AddComponent(UIButton, close_btn_path)
    self.close_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)

    self.return_btn = self:AddComponent(UIButton, return_btn_path)
    self.return_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)

    self.icon = self:AddComponent(UIImage, icon_path)
    
    self.assignBtn = self:AddComponent(UIButton, assignBtn_path)
    self.assignBtn_text = self:AddComponent(UIText, assignBtn_text_path)
    self.assignBtn_text:SetLocalText(250141)
    self.assignBtn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnAssignClick()
    end)

    self.fireBtn = self:AddComponent(UIButton, fireBtn_path)
    self.fireBtn_tex = self:AddComponent(UIText, fireBtn_text_path)
    self.fireBtn_tex:SetLocalText(250140)
    self.fireBtn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnFireClick()
    end)
    
    self.cells = {}
    for i = 1, 4 do
        local cell = self:AddComponent(UIGovernmentInfoCell, "ImgBg/Attr"..i)
        table.insert(self.cells, cell)
    end
    
    self.icon_bg = self:AddComponent(UIBaseContainer, icon_bg_path)

    self.player_head = self:AddComponent(UIPlayerHead, player_head_path)
    self.headBg = self:AddComponent(UIButton, head_path)
    self.headBg:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:ClickPlayerHeadBtn()
    end)

    self.headFg = self:AddComponent(UIImage, headFg_path)

    self:RefreshView()
end

local function OnDestroy(self)
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function RefreshView(self)
    self.data = self.ctrl:GetPanelData(self.governmentId, self.playerInfo)
    self.txt_title:SetLocalText(self.data.name)

    if self.data.playerInfo and not string.IsNullOrEmpty(self.data.playerInfo.uid) then
        self.headBg:SetActive(true)
        self.icon_bg:SetActive(false)
        self.player_head:SetData(self.data.playerInfo.uid, self.data.playerInfo.pic, self.data.playerInfo.picVer)
        local headBgImg = DataCenter.DecorationDataManager:GetHeadFrame(self.data.playerInfo.headSkinId, self.data.playerInfo.headSkinET)
        if headBgImg ~= nil then
            self.headFg:SetActive(true)
            self.headFg:LoadSprite(headBgImg)
        else
            self.headFg:SetActive(false)
        end
    else
        self.icon:LoadSprite(self.data.icon)
        self.headBg:SetActive(false)
        self.icon_bg:SetActive(true)
    end
    self.assignBtn:SetActive(self.data.canAssign)
    self.fireBtn:SetActive(self.data.canAssign and self.data.playerInfo ~= nil and not string.IsNullOrEmpty(self.data.playerInfo.uid))
    self:RefreshAttrList()
end

local function RefreshAttrList(self)
    for i = 1, 4 do
        local data = self.data.attrList[i]
        self.cells[i]:SetActive(data ~= nil)
        if data ~= nil then
            self.cells[i]:SetData(data)
        end
    end
end

local function OnAssignClick(self)
    if self.data.playerInfo then
        local positionInfo = DataCenter.GovernmentManager:GetPositionInfoByPositionId(self.governmentId)
        if positionInfo and positionInfo:IsInAppointTimeCD() then
            UIUtil.ShowTipsId(250129)
            return
        end
    end
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIPositionAppointSearch, {anim = true}, self.governmentId)
    self.ctrl:CloseSelf()
end

local function ClickPlayerHeadBtn(self)
    if self.playerUid == nil and self.data.playerInfo and not string.IsNullOrEmpty(self.data.playerInfo.uid) then
        if self.data.playerInfo.uid ~= LuaEntry.Player.uid then
            UIManager:GetInstance():OpenWindow(UIWindowNames.UIOtherPlayerInfo, self.data.playerInfo.uid)
        else
            UIManager:GetInstance():OpenWindow(UIWindowNames.UIPlayerInfo, LuaEntry.Player.uid)
        end
    end
end

local function OnFireClick(self)
    if self.data.playerInfo and not string.IsNullOrEmpty(self.data.playerInfo.uid) then
        DataCenter.GovernmentManager:KingdomPositionAppoint(self.data.playerInfo.uid, self.governmentId, 2)
    end
    self.view.ctrl:CloseSelf()
end

function UIGovernmentInfoView:OnAddListener()
    base.OnAddListener(self)
    self:AddUIListener(EventId.KingdomPositionInfoUpdate, self.KingdomPositionInfoUpdateSignal)
end

function UIGovernmentInfoView:OnRemoveListener()
    self:RemoveUIListener(EventId.KingdomPositionInfoUpdate, self.KingdomPositionInfoUpdateSignal)
    base.OnRemoveListener(self)
end

function UIGovernmentInfoView:KingdomPositionInfoUpdateSignal()
    self:RefreshView()
end

UIGovernmentInfoView.OnCreate= OnCreate
UIGovernmentInfoView.OnDestroy = OnDestroy
UIGovernmentInfoView.OnEnable = OnEnable
UIGovernmentInfoView.OnDisable = OnDisable
UIGovernmentInfoView.RefreshView = RefreshView
UIGovernmentInfoView.RefreshAttrList = RefreshAttrList
UIGovernmentInfoView.OnAssignClick = OnAssignClick
UIGovernmentInfoView.ClickPlayerHeadBtn = ClickPlayerHeadBtn
UIGovernmentInfoView.OnFireClick = OnFireClick

return UIGovernmentInfoView