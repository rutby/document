---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2021/11/4 21:03
---

local UICommonIntroTipView = BaseClass("UICommonIntroTipView", UIBaseView)
local base = UIBaseView

local title_path = "UICommonMidPopUpTitle/bg_mid/titleText"
local subtitle_path = "Subtitle"
local scroll_view = "Scroll View"
local intro_path = "Scroll View/Viewport/Content/Intro"
local close_path = "UICommonMidPopUpTitle/bg_mid/CloseBtn"
local return_path = "UICommonMidPopUpTitle/panel"

--创建
function UICommonIntroTipView:OnCreate()
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
    self:ReInit()
end

-- 销毁
function UICommonIntroTipView:OnDestroy()
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

function UICommonIntroTipView:ComponentDefine()
    self.title_text = self:AddComponent(UITextMeshProUGUIEx, title_path)
    self.subtitle_text = self:AddComponent(UITextMeshProUGUIEx, subtitle_path)
    self.intro_text = self:AddComponent(UITextMeshProUGUIEx, intro_path)
    self.close_btn = self:AddComponent(UIButton, close_path)
    self.close_btn:SetOnClick(function()
        self:OnClose()
    end)
  
    self.return_btn = self:AddComponent(UIButton, return_path)
    self.return_btn:SetOnClick(function()
        self:OnClose()
    end)
    self.scroll_view = self:AddComponent(UIBaseContainer, scroll_view)
end

function UICommonIntroTipView:ComponentDestroy()
end


function UICommonIntroTipView:DataDefine()
    self.timer_action = function(temp)
        self:RefreshTime()
    end
end

function UICommonIntroTipView:DataDestroy()
    self:DeleteTimer()
end

function UICommonIntroTipView:OnEnable()
    base.OnEnable(self)
end

function UICommonIntroTipView:OnDisable()
    base.OnDisable(self)
end

function UICommonIntroTipView:OnAddListener()
    base.OnAddListener(self)
end

function UICommonIntroTipView:OnRemoveListener()
    base.OnRemoveListener(self)
end

function UICommonIntroTipView:ReInit()
    self.param = self:GetUserData()
    self.title_text:SetText(self.param.title)
    if self.subtitle ~= "" then
        self.subtitle_text:SetActive(true)
        self.subtitle_text:SetText(self.param.subtitle)
        --self.subtitle_text:SetAlignment(CS.UnityEngine.TextAnchor.UpperLeft)
    else
        --self.subtitle_text:SetAlignment(CS.UnityEngine.TextAnchor.UpperCenter)
        if self.param.time and self.param.time ~= 0 then
            self.subtitle_text:SetActive(true)
            self:RefreshTime()
            self:AddTimer()
        else
            self.subtitle_text:SetActive(false)
        end
    end
    self.intro_text:SetText(self.param.intro)
    CS.UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(self.intro_text.rectTransform)
end

function UICommonIntroTipView:AddTimer()
    if self.timer == nil then
        self.timer = TimerManager:GetInstance():GetTimer(1, self.timer_action , self, false,false,false)
    end
    self.timer:Start()
end

--倒計時
function UICommonIntroTipView:RefreshTime()
    local now = UITimeManager:GetInstance():GetServerTime()
    if self.param.time and self.param.time > now then
        self.subtitle_text:SetLocalText(self.param.timeDialog, UITimeManager:GetInstance():MilliSecondToFmtString(self.param.time - now))
    else
        self.subtitle_text:SetActive(false)
        self:DeleteTimer()
        self.ctrl:CloseSelf()
    end
end

function UICommonIntroTipView:DeleteTimer()
    if self.timer ~= nil then
        self.timer:Stop()
        self.timer = nil
    end
end

function UICommonIntroTipView:OnClose()
    if self.param.closeAction then
        self.param.closeAction()
        self.ctrl:CloseSelf()
    else
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self.ctrl:CloseSelf()
    end
end

return UICommonIntroTipView