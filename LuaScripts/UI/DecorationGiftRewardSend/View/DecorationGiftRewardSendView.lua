---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2023/2/7 18:11
---


local DecorationGiftRewardSendView = BaseClass("DecorationGiftRewardSendView", UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization
local UICommonItem = require "UI.UICommonItem.UICommonItem"
--local UIGray = CS.UIGray
local close_btn_path = "UICommonMidPopUpTitle/bg_mid/CloseBtn"
local panel_btn_path = "UICommonMidPopUpTitle/panel"
local title_text_path = "UICommonMidPopUpTitle/bg_mid/titleText"

local send_btn_path = "Send_Btn"
local send_btn_text_path = "Send_Btn/btnTxt_green_mid_new_with_pic/Send_Btn_Text"
local send_btn_num_path = "Send_Btn/btnTxt_green_mid_new_with_pic/Send_Btn_Num"
local send_btn_icon_path = "Send_Btn/btnTxt_green_mid_new_with_pic/Send_Btn_Num/Send_Btn_Icon"

local item_icon_path = "UICommonItem"

local check_box_btn_path = "CheckBox"
local check_box_img_path = "CheckBox/CheckBoxImg"
local check_box_txt_path = "CheckBox/CheckBox_Text"

local player_path = "Player"
local player_head_btn_path = "Player/PlayerHead/UIPlayerHead"
local player_head_path = "Player/PlayerHead/UIPlayerHead/HeadIcon"
local playerHeadFg_path = "Player/PlayerHead/UIPlayerHead/Foreground"

local player_name_path = "Player/PlayerName"

local no_player_path = "NoPlayer"
local add_player_path = "NoPlayer/AddBtn"
local no_player_text_path = "NoPlayer/NoPlayerText"

local sign_txt_path= "InputField"

local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
    self:ReInit()
end

-- 销毁
local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    self.close_btn = self:AddComponent(UIButton, close_btn_path)
    self.panel_btn = self:AddComponent(UIButton, panel_btn_path)
    self.close_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)
    self.panel_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)

    self.title_text = self:AddComponent(UITextMeshProUGUIEx, title_text_path)
    self.title_text:SetLocalText(320758)
    self.sign_input = self:AddComponent(UIInput, sign_txt_path)
    self.sign_input:SetLocalText(320760)
    self.send_btn = self:AddComponent(UIButton, send_btn_path)
    self.send_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnSendClick()
    end)
    self.send_btn_text = self:AddComponent(UIText, send_btn_text_path)
    self.send_btn_text:SetLocalText(320757)
    self.send_btn_icon = self:AddComponent(UIImage, send_btn_icon_path)
    self.send_btn_num = self:AddComponent(UIText, send_btn_num_path)
    self.item_icon = self:AddComponent(UICommonItem, item_icon_path)

    self.check_box_btn = self:AddComponent(UIButton, check_box_btn_path)
    self.check_box_img = self:AddComponent(UIImage, check_box_img_path)
    self.check_box_txt = self:AddComponent(UIText, check_box_txt_path)
    self.check_box_txt:SetLocalText(320761)
    self.check_box_img:SetActive(false)
    self.check_box_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnCheckBoxClick()
    end)

    self.player = self:AddComponent(UIBaseContainer, player_path)
    self.player_head = self:AddComponent(UIPlayerHead, player_head_path)
    self.playerHeadFgN = self:AddComponent(UIImage, playerHeadFg_path)
    self.player_name = self:AddComponent(UIText, player_name_path)
    self.player_head_btn = self:AddComponent(UIButton, player_head_btn_path)
    self.player_head_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnAddClick()
    end)

    self.no_player = self:AddComponent(UIBaseContainer, no_player_path)
    self.add_player = self:AddComponent(UIButton, add_player_path)
    self.no_player_text = self:AddComponent(UIText, no_player_text_path)
    self.no_player_text:SetLocalText(320759)
    self.add_player:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnAddClick()
    end)
end

local function ComponentDestroy(self)

end

local function DataDefine(self)
    local data, detail = self:GetUserData()
    self.data = data
    self.detail = detail
end

local function DataDestroy(self)
    self.data = nil
    self.detail = nil
end

local function OnAddListener(self)
    base.OnAddListener(self)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
end

local function ReInit(self)
    self.player:SetActive(self.detail ~= nil)
    self.no_player:SetActive(self.detail == nil)
    
    if self.detail then
        self.player_head:SetData(self.detail.uid, self.detail.pic, self.detail.picVer)
        local headBgImg = DataCenter.DecorationDataManager:GetHeadFrame(self.detail.headSkinId, self.detail.headSkinET)
        if headBgImg then
            self.playerHeadFgN:SetActive(true)
            self.playerHeadFgN:LoadSprite(headBgImg)
        else
            self.playerHeadFgN:SetActive(false)
        end
        local name = ""
        if self.detail.abbr then
            name = "["..self.detail.abbr.."]"
        end
        name = name..self.detail.name
        self.player_name:SetText(name)
    end
    --param.needNum = self.needList[1].cost
    --param.needItemId = self.needList[1].itemId
    --param.needRewardType = self.needList[1].rewardType
    --
    --param.getNum = self.getList[1].cost
    --param.getItemId = self.getList[1].itemId
    --param.getRewardType = self.getList[1].rewardType
    --param.activityId = self.activityInfo.id
    --param.id = self.barterInfo.id
    local para = {}
    para.rewardType = self.data.getRewardType
    para.itemId = self.data.getItemId
    
    self.item_icon:ReInit(para)
    --self.item_icon:LoadSprite(DataCenter.RewardManager:GetPicByType(self.data.getRewardType, self.data.getItemId))
    self.send_btn_icon:LoadSprite(DataCenter.RewardManager:GetPicByType(self.data.needRewardType, self.data.needItemId))
    self.send_btn_num:SetText(self.data.needNum)
   
    --UIGray.SetGray(self.send_btn.transform, self.detail == nil, self.detail ~= nil)
end

local function OnSendClick(self)
    if self.detail then
        local notice = 0
        if not self.check_box_img:GetActive() then
            notice = 1
        end
        local message = self.sign_input:GetText()
        if message == Localization:GetString("320760") then
            message = ""
        end
        SFSNetwork.SendMessage(MsgDefines.SendGiftByActivity, self.data.activityId, self.data.id, self.detail.uid, notice, message)
        self.ctrl:CloseSelf()
    else
        UIUtil.ShowTipsId(320759)
    end
end

local function OnAddClick(self)
    local param = DeepCopy(self.data)
    local param1 = DeepCopy(self.detail)
    UIManager:GetInstance():OpenWindow(UIWindowNames.DecorationGiftRewardSendSearch, { anim = true }, param, param1)
    self.ctrl:CloseSelf()
end

local function OnCheckBoxClick(self)
    self.check_box_img:SetActive(not self.check_box_img:GetActive())
end

DecorationGiftRewardSendView.OnCreate = OnCreate
DecorationGiftRewardSendView.OnDestroy = OnDestroy
DecorationGiftRewardSendView.ComponentDefine = ComponentDefine
DecorationGiftRewardSendView.ComponentDestroy = ComponentDestroy
DecorationGiftRewardSendView.DataDefine = DataDefine
DecorationGiftRewardSendView.DataDestroy = DataDestroy
DecorationGiftRewardSendView.OnAddListener = OnAddListener
DecorationGiftRewardSendView.OnRemoveListener = OnRemoveListener
DecorationGiftRewardSendView.ReInit = ReInit
DecorationGiftRewardSendView.OnSendClick = OnSendClick
DecorationGiftRewardSendView.OnAddClick = OnAddClick
DecorationGiftRewardSendView.OnCheckBoxClick = OnCheckBoxClick

return DecorationGiftRewardSendView