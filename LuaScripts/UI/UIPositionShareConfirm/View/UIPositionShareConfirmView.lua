---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Still4.
--- DateTime: 2021/7/8 11:12
---
local UIPositionShareConfirmView = BaseClass("UIPositionShareConfirmView", UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization

local return_btn_path = "UICommonMiniPopUpTitle/panel"
local close_btn_path = "UICommonMiniPopUpTitle/Bg_mid/CloseBtn"
local channel_path = "UICommonMiniPopUpTitle/contentBg/Channel"
local channel_flag_path = "UICommonMiniPopUpTitle/contentBg/Channel/Flag"
local channel_name_path = "UICommonMiniPopUpTitle/Bg_mid/titleText"
local preview_text_path = "UICommonMiniPopUpTitle/contentBg/Channel/NameText"
local btn_yes_path = "UICommonMiniPopUpTitle/BtnGo/BtnYes"
local btn_yes_text_path = "UICommonMiniPopUpTitle/BtnGo/BtnYes/BtnYesText"
local btnYesCost_path = "UICommonMiniPopUpTitle/BtnGo/BtnYes/costObj"
local btnYesTxtWithCost_path = "UICommonMiniPopUpTitle/BtnGo/BtnYes/costObj/useText"
local btnYesCostTxt_path = "UICommonMiniPopUpTitle/BtnGo/BtnYes/costObj/itemCount"
local btn_no_path = "UICommonMiniPopUpTitle/BtnGo/BtnNo"
local btn_no_text_path = "UICommonMiniPopUpTitle/BtnGo/BtnNo/BtnNoText"
local userhead = "UICommonMiniPopUpTitle/contentBg/Channel/UIPlayerHead"

local function OnCreate(self)
    base.OnCreate(self)
    local chat_channel, chat_param = self:GetUserData()
    self.chat_channel = chat_channel
    local chat_data = {}
    chat_data.roomId = chat_channel:getRoomId()
    if (chat_param.postType ~= nil) then
        chat_data.post = chat_param.postType
    else
        chat_data.post = PostType.Text_PointShare
    end
    chat_data.param = chat_param
    self.chat_data = chat_data

    self.close_btn = self:AddComponent(UIButton, close_btn_path)
    self.close_btn:SetOnClick(function()  
        self.ctrl:CloseSelf()
    end)

    self.return_btn = self:AddComponent(UIButton, return_btn_path)
    self.return_btn:SetOnClick(function()  
        self.ctrl:CloseSelf()
    end)

    self.userhead = self:AddComponent(UIPlayerHead, userhead)
    
    self.channel_group = self:AddComponent(UIHorizontalOrVerticalLayoutGroup, channel_path)

    self.channel_flag = self:AddComponent(UIImage, channel_flag_path)

    self.channel_name = self:AddComponent(UITextMeshProUGUIEx, channel_name_path)

    self.preview_text = self:AddComponent(UITextMeshProUGUIEx, preview_text_path)

    self.btn_yes = self:AddComponent(UIButton, btn_yes_path)
    self.btn_yes:SetOnClick(function()  
SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnClickConfirmBtn()
        
    end)

    self.btn_yes_text = self:AddComponent(UITextMeshProUGUIEx, btn_yes_text_path)
    self.btn_yes_text:SetLocalText(110073) 
    self.btnYesCost = self:AddComponent(UIBaseContainer, btnYesCost_path)
    self.btnYesTxtWithCost = self:AddComponent(UITextMeshProUGUIEx, btnYesTxtWithCost_path)
    self.btnYesTxtWithCost:SetLocalText(110073)
    self.btnYesCostTxt = self:AddComponent(UITextMeshProUGUIEx, btnYesCostTxt_path)

    self.btn_no = self:AddComponent(UIButton, btn_no_path)
    self.btn_no:SetOnClick(function()  
        self.ctrl:CloseSelf()
    end)

    self.btn_no_text = self:AddComponent(UITextMeshProUGUIEx, btn_no_text_path)
    self.btn_no_text:SetLocalText(GameDialogDefine.CANCEL) 

end

local function OnDestroy(self)
    self.chat_channel = nil
    self.chat_data = nil

    self.close_btn = nil
    self.return_btn = nil
    self.channel = nil
    self.channel_flag = nil
    self.channel_name = nil
    self.send_msg = nil
    self.btn_yes = nil
    self.btn_yes_text = nil
    self.btn_no = nil
    self.btn_no_text = nil
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
    self:InitState()
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function InitState(self)
    local roomImg = self.chat_channel:getRoomImg()
    if (not string.IsNullOrEmpty(roomImg)) then
        self.channel_flag:SetActive(true)
        self.userhead:SetActive(false)
        self.channel_flag:LoadSprite(roomImg)
    else
        self.channel_flag:SetActive(false)
        self.userhead:SetActive(true)
    end
    self.channel_name:SetText(self.chat_channel:getRoomName())
    self.preview_text:SetText(self.ctrl:getPreviewText(self.chat_data))

    if ((self.chat_data.post == PostType.Text_MailScoutResultShare or self.chat_data.post == PostType.Text_ScoutReportContentShare or self.chat_data.post == PostType.Text_ScoutAlertContentShare or self.chat_data.post == PostType.Text_Formation_Fight_Share or self.chat_data.post == PostType.Text_BattleReportContentShare)
            and self.chat_channel.group == ChatGroupType.GROUP_COUNTRY) then
        local diamondCost = LuaEntry.DataConfig:TryGetNum("share_report", "k1")
        if diamondCost > 0 then
            self.btn_yes_text:SetActive(false)
            self.btnYesCost:SetActive(true)
            self.btnYesCostTxt:SetText(diamondCost)
        else
            self.btn_yes_text:SetActive(true)
            self.btnYesCost:SetActive(false)
        end
    elseif (self.chat_data.post == PostType.Text_Formation_Fight_Share or self.chat_data.post == PostType.Text_BattleReportContentShare)
            and self.chat_channel.group == ChatGroupType.GROUP_CUSTOM and string.find(self.chat_channel.roomId, "lang") then
        local diamondCost = LuaEntry.DataConfig:TryGetNum("share_report", "k1")
        if diamondCost > 0 then
            self.btn_yes_text:SetActive(false)
            self.btnYesCost:SetActive(true)
            self.btnYesCostTxt:SetText(diamondCost)
        else
            self.btn_yes_text:SetActive(true)
            self.btnYesCost:SetActive(false)
        end
    else
        self.btn_yes_text:SetActive(true)
        self.btnYesCost:SetActive(false)
    end
end

local function OnClickConfirmBtn(self)
    if self.chat_data.post == PostType.Text_MailScoutResultShare or self.chat_data.post == PostType.Text_Formation_Fight_Share or self.chat_data.post == PostType.Text_BattleReportContentShare or self.chat_data.post == PostType.Text_ScoutReportContentShare or self.chat_data.post == PostType.Text_ScoutAlertContentShare then
        if self.chat_channel.group == ChatGroupType.GROUP_COUNTRY or (self.chat_channel.group == ChatGroupType.GROUP_CUSTOM and string.find(self.chat_channel.roomId, "lang")) then
            local diamondCost = LuaEntry.DataConfig:TryGetNum("share_report", "k1")
            if diamondCost > LuaEntry.Player.gold then
                GoToUtil.GotoPayTips()
            else
                DataCenter.MailDataManager:TryShareMail(self.chat_data)
            end
            UIManager:GetInstance():DestroyWindow(UIWindowNames.UIPositionShare)
            self.ctrl:CloseSelf()
        else
            self.ctrl:Confirm(self.chat_data)
        end
    else
        self.ctrl:Confirm(self.chat_data)
    end
end

UIPositionShareConfirmView.OnCreate = OnCreate
UIPositionShareConfirmView.OnDestroy = OnDestroy
UIPositionShareConfirmView.OnEnable = OnEnable
UIPositionShareConfirmView.InitState = InitState
UIPositionShareConfirmView.OnDisable = OnDisable
UIPositionShareConfirmView.OnClickConfirmBtn = OnClickConfirmBtn

return UIPositionShareConfirmView