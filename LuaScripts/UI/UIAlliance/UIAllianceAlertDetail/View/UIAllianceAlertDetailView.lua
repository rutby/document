---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by guqu.
--- DateTime: 2020/8/10 18:04
---
---
local AllianceAlertItem = require "UI.UIAlliance.UIAllianceWarMainTable.Component.AllianceAlertItem"
local AllianceAlertPlayerItem = require "UI.UIAlliance.UIAllianceAlertDetail.Component.AllianceAlertPlayerItem"
local UIAllianceAlertDetailView = BaseClass("UIAllianceAlertDetailView",UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization

local txt_title_path ="UICommonPopUpTitle/bg_mid/titleText"
local close_btn_path = "UICommonPopUpTitle/bg_mid/CloseBtn"
--local goBack_btn_path = "ImgBg/Btn_GoBack"
local content_path = "ImgBg/ScrollView/Viewport/Content"
local attackContent_path = "ImgBg/ScrollView/Viewport/Content/attackContent"
local return_btn_path = "UICommonPopUpTitle/panel"
local war_item_obj_path = "ImgBg/AllianceWarItem"

local function OnCreate(self)
    base.OnCreate(self)
    self.alertKey,self.marchInfo,self.targetPoint = self:GetUserData()
    self.title = self:AddComponent(UITextMeshProUGUIEx,txt_title_path)
    self.close_btn = self:AddComponent(UIButton, close_btn_path)
    self.close_btn:SetOnClick(function()  
SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:ClickPanel()
    end)
    self.return_btn = self:AddComponent(UIButton, return_btn_path)
    self.return_btn:SetOnClick(function()  
SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:ClickPanel()
    end)
    self.war_item_obj = self:AddComponent(AllianceAlertItem,war_item_obj_path)
    self.war_item_obj:RefreshData(self.alertKey,self.targetPoint)
    self.content = self:AddComponent(UIBaseContainer,content_path)
    self.attackContent = self:AddComponent(UIBaseContainer,attackContent_path)
    
end

local function OnDestroy(self)
    self.isAlliance = nil
    self.helpOrAttack = nil
    self.title = nil
    self:SetAllCellDestroy()
    self.content = nil
    self.return_btn =nil
    self.close_btn = nil
    self.war_item_obj = nil
    self.troops_warobj = nil
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
    self:OnRefresh()
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function OnRefresh(self)
    self:SetAllCellDestroy()
    local list = self.marchInfo
    if list~=nil then
        for i = 1, table.length(list) do
            --复制基础prefab，每次循环创建一次
            self.marchBottom[i] = self:GameObjectInstantiateAsync(UIAssets.AllianceAlertPlayerItem, function(request)
                if request.isError then
                    return
                end
                local go = request.gameObject;
                go.gameObject:SetActive(true)
                go.transform:SetParent(self.attackContent.transform)
                go.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
                local nameStr = tostring(NameCount)
                go.name = nameStr
                NameCount = NameCount + 1
                local cell = self.attackContent:AddComponent(AllianceAlertPlayerItem,nameStr)
                cell:RefreshData(list[i])
            end)
        end
    end
end

local function SetAllCellDestroy(self)
    self.attackContent:RemoveComponents(AllianceAlertPlayerItem)
    if self.marchBottom and next(self.marchBottom) then
        for k,v in pairs(self.marchBottom) do
            if v ~= nil then
                self:GameObjectDestroy(v)
            end
        end
    end
    self.marchBottom ={}
end

local function ClickPanel(self)
    self.ctrl:OnCloseClick()
end

local function CloseMainTable(self)
    self.ctrl:CloseMainTable()
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.UpdateAlertData,self.UpdateAlertDataSignal)
    self:AddUIListener(EventId.AllianceQuitOK, self.AllianceQuit)
end

local function OnRemoveListener(self)
    self:RemoveUIListener(EventId.UpdateAlertData,self.UpdateAlertDataSignal)
    self:RemoveUIListener(EventId.AllianceQuitOK, self.AllianceQuit)
    base.OnRemoveListener(self)
end

local function UpdateAlertDataSignal(self)
    local alertInfo = DataCenter.AllianceAlertDataManager:GetAllianceAlertDataByKey(self.alertKey)
    if alertInfo == nil then
        self.ctrl:CloseSelf()
    end
end

local function AllianceQuit(self)
    self.ctrl:CloseSelf()
end

UIAllianceAlertDetailView.OnCreate = OnCreate 
UIAllianceAlertDetailView.OnDestroy = OnDestroy
UIAllianceAlertDetailView.OnRefresh = OnRefresh
UIAllianceAlertDetailView.OnEnable = OnEnable
UIAllianceAlertDetailView.OnDisable = OnDisable
UIAllianceAlertDetailView.OnAddListener = OnAddListener
UIAllianceAlertDetailView.OnRemoveListener = OnRemoveListener
UIAllianceAlertDetailView.UpdateAlertDataSignal = UpdateAlertDataSignal
UIAllianceAlertDetailView.SetAllCellDestroy = SetAllCellDestroy
UIAllianceAlertDetailView.ClickPanel = ClickPanel
UIAllianceAlertDetailView.CloseMainTable = CloseMainTable
UIAllianceAlertDetailView.AllianceQuit = AllianceQuit
return UIAllianceAlertDetailView