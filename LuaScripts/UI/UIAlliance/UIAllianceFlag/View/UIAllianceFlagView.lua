---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2021/9/15 16:38
---

local base = UIBaseView--Variable
local UIAllianceFlagView = BaseClass("UIAllianceFlagView", base)--Variable
local Localization = CS.GameEntry.Localization
local AllianceFlagItem = require "UI.UIAlliance.UIAllianceFlag.Component.AllianceFlagItem"
local AllianceFlagBgItem = require "UI.UIAlliance.UIAllianceFlag.Component.AllianceFlagBgItem"

local title_path = "UICommonPopUpTitle/bg_mid/titleText"
local closeBtn_path = "UICommonPopUpTitle/bg_mid/CloseBtn"
local flag_path = "ImgBg/preview/AllianceFlag"
local randomBtn_path = "ImgBg/preview/randBtn"
local setBtn_path = "ImgBg/preview/Select"
local setBtnFree_path = "ImgBg/preview/Select/free"
local setBtnCost_path = "ImgBg/preview/Select/layout"
local setBtnTxt_path = "ImgBg/preview/Select/layout/SelectText"
local setCostTxt_path = "ImgBg/preview/Select/layout/NeedCount"
local bgTip_path = "ImgBg/choice/bg/bgTip"
local bgContent_path = "ImgBg/choice/bg/ScrollView/Viewport/bgContent"
local bgColorSlider_path = "ImgBg/choice/bg/bgColorSlider"
local fgTip_path = "ImgBg/choice/fg/fgTip"
local fgContent_path = "ImgBg/choice/fg/ScrollView/Viewport/fgContent"
local fgColorSlider_path = "ImgBg/choice/fg/fgColorSlider"

local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
    self:InitUI()
end

local function OnDestroy(self)
    
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    self.titleN = self:AddComponent(UITextMeshProUGUIEx, title_path)
    self.titleN:SetLocalText(391051)
    self.closeBtnN = self:AddComponent(UIButton, closeBtn_path)
    self.closeBtnN:SetOnClick(function()
        self:OnClickClose()
    end)
    self.flagN = self:AddComponent(AllianceFlagItem, flag_path)
    self.randomBtnN = self:AddComponent(UIButton, randomBtn_path)
    self.randomBtnN:SetOnClick(function()
        self:OnClickRandomBtn()
    end)
    self.setBtnN = self:AddComponent(UIButton, setBtn_path)
    self.setBtnN:SetOnClick(function()
        self:OnClickSetBtn()
    end)
    self.setBtnFreeTxtN = self:AddComponent(UITextMeshProUGUIEx, setBtnFree_path)
    self.setBtnFreeTxtN:SetLocalText(110006)
    self.setBtnCostN = self:AddComponent(UIBaseContainer, setBtnCost_path)
    self.setBtnTxtN = self:AddComponent(UITextMeshProUGUIEx, setBtnTxt_path)
    self.setBtnTxtN:SetLocalText(110006)
    self.setCostTxtN = self:AddComponent(UITextMeshProUGUIEx, setCostTxt_path)
    self.bgTipN = self:AddComponent(UITextMeshProUGUIEx, bgTip_path)
    self.bgTipN:SetLocalText(391052)
    self.bgContentN = self:AddComponent(UIBaseContainer, bgContent_path)
    self.bgColorSliderN = self:AddComponent(UISlider, bgColorSlider_path)
    self.bgColorSliderN:SetOnValueChanged(function (value)
        self:OnBgColorChange(value)
    end)
    self.fgTipN = self:AddComponent(UITextMeshProUGUIEx, fgTip_path)
    self.fgTipN:SetLocalText(391053)
    self.fgContentN = self:AddComponent(UIBaseContainer, fgContent_path)
    self.fgColorSliderN = self:AddComponent(UISlider, fgColorSlider_path)
    self.fgColorSliderN:SetOnValueChanged(function (value)
        self:OnFgColorChange(value)
    end)
end

local function ComponentDestroy(self)
    self.titleN = nil
    self.closeBtnN = nil
    self.flagN = nil
    self.randomBtnN = nil
    self.setBtnN = nil
    self.setBtnTxtN = nil
    self.setCostTxtN = nil
    self.bgTipN = nil
    self.bgContentN = nil
    self.bgColorSliderN = nil
    self.fgTipN = nil
    self.fgContentN = nil
    self.fgColorSliderN = nil
end

local function DataDefine(self)
    self.curFgIndex = 1
    self.curFgColorIndex = 1
    self.curBgIndex = 1
    self.curBgColorIndex = 1
    
    self.bgModels = {}
    self.bgItems = {}
    self.fgModels = {}
    self.fgItems = {}
end

local function DataDestroy(self)
    self.curFgIndex = nil
    self.curFgColorIndex = nil
    self.curBgIndex = nil
    self.curBgColorIndex = nil
end

local function InitUI(self)
    local param = self:GetUserData()
    self.confirmCallBack = param and param.callback or nil
    
    local strIcon = param.curFlag
    local iconTb = string.split(strIcon, ";")
    self.curBgIndex = tonumber(iconTb[1]) or 1
    self.curBgColorIndex = tonumber(iconTb[2]) or 1
    self.curFgIndex = tonumber(iconTb[3]) or 1
    self.curFgColorIndex = tonumber(iconTb[4]) or 1

    --local k3 = LuaEntry.DataConfig:TryGetNum("alliance_cost", "k3")
    local cost = param.cost and param.cost or 0
    if cost > 0 then
        self.setBtnCostN:SetActive(true)
        self.setBtnFreeTxtN:SetActive(false)
        self.setCostTxtN:SetText(cost)
        if cost > LuaEntry.Player.gold then
            self.goldEnough = false
            self.setCostTxtN:SetColor(RedColor)
        else
            self.goldEnough = true
            self.setCostTxtN:SetColor(WhiteColor)
        end
    else
        self.goldEnough = true
        self.setBtnCostN:SetActive(false)
        self.setBtnFreeTxtN:SetActive(true)
    end
    
    self:RefreshAll()
end

local function RefreshAll(self)
    self:ShowBgPart()
    self:ShowFgPart()
    self:RefreshFlagPreview()
end

local function RefreshFlagPreview(self)
    local iconTb = {
        flagBgIcon = self.curBgIndex,
        flagBgColor = self.curBgColorIndex,
        flagFgIcon = self.curFgIndex,
        flagFgColor = self.curFgColorIndex,
    }
    self.flagN:RefreshFlag(iconTb)
end

local function ShowBgPart(self)
    local bgChoiceCount = AllianceFlagBgChoiceCount
    self:SetAllBgItemsDestroy()
    self.bgModels = {}
    self.bgItems = {}
    for i = 1, bgChoiceCount do
        self.bgModels[i] = self:GameObjectInstantiateAsync(UIAssets.AllianceFlagBgItem, function(request)
            if request.isError then
                return
            end
            local go = request.gameObject;
            go.gameObject:SetActive(true)
            go.transform:SetParent(self.bgContentN.transform)
            go.transform:Set_localScale(1, 1, 1)
            go.transform:Set_localPosition(0, 0, 0)
            go.name ="bgItem" .. i
            local cell = self.bgContentN:AddComponent(AllianceFlagBgItem,go.name)
            cell:SetBgItem(i, i == self.curBgIndex)
            self.bgItems[i] = cell
        end)
    end

    self:SetColorPointer(true, self.curBgColorIndex)
end

local function SetAllBgItemsDestroy(self)
    self.bgContentN:RemoveComponents(AllianceFlagBgItem)
    if next(self.bgModels) then
        for k,v in pairs(self.bgModels) do
            if v ~= nil then
                self:GameObjectDestroy(v)
            end
        end
    end
end

local function ShowFgPart(self)
    local fgChoiceCount = AllianceFlagFgChoiceCount
    self:SetAllFgItemsDestroy()
    self.fgModels = {}
    self.fgItems = {}
    for i = 1, fgChoiceCount do
        self.fgModels[i] = self:GameObjectInstantiateAsync(UIAssets.AllianceFlagFgItem, function(request)
            if request.isError then
                return
            end
            local go = request.gameObject;
            go.gameObject:SetActive(true)
            go.transform:SetParent(self.fgContentN.transform)
            go.transform:Set_localScale(1, 1, 1)
            go.transform:Set_localPosition(0, 0, 0)
            go.name ="fgItem" .. i
            local cell = self.fgContentN:AddComponent(AllianceFlagBgItem,go.name)
            cell:SetFgItem(i, i == self.curFgIndex)
            self.fgItems[i] = cell
        end)
    end
    
    self:SetColorPointer(false, self.curFgColorIndex)
end

local function SetAllFgItemsDestroy(self)
    self.fgContentN:RemoveComponents(AllianceFlagBgItem)
    if next(self.fgModels) then
        for k,v in pairs(self.fgModels) do
            if v ~= nil then
                self:GameObjectDestroy(v)
            end
        end
    end
end


--[[
local function OnAddListener(self)
    base.OnAddListener(self)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
end
--]]

local function OnBgColorChange(self, value)
    local stepL = 1
    if #AllianceFlagBgColor > 0 then
        stepL = 1 / #AllianceFlagBgColor
    end
    self.curBgColorIndex = math.ceil(value / stepL)
    self.curBgColorIndex = math.max(self.curBgColorIndex, 1)
    self:SetColorPointer(true, self.curBgColorIndex)
end

local function OnFgColorChange(self, value)
    local stepL = 1
    if #AllianceFlagFgColor > 0 then
        stepL = 1 / #AllianceFlagFgColor
    end
    self.curFgColorIndex = math.ceil(value / stepL)
    self.curFgColorIndex = math.max(1, self.curFgColorIndex)
    self:SetColorPointer(false, self.curFgColorIndex)
end

local function SetColorPointer(self, isBg, tempIndex)
    local stepL = 1
    local colorList = {}
    if isBg then
        colorList = AllianceFlagBgColor
    else
        colorList = AllianceFlagFgColor
    end
    if #colorList > 0 then
        stepL = 1 / #colorList
    end
    if isBg then
        self.bgColorSliderN:SetValue((tempIndex - 1) * stepL + stepL / 2)
    else
        self.fgColorSliderN:SetValue((tempIndex - 1) * stepL + stepL / 2)
    end
    
    self:RefreshFlagPreview()
end

local function OnClickClose(self)
    self.ctrl:CloseSelf()
end

local function OnClickRandomBtn(self)
    self.curBgIndex = math.random(1, AllianceFlagBgChoiceCount)
    self.curBgColorIndex = math.random(1, #AllianceFlagBgColor)
    self.curFgIndex = math.random(1, AllianceFlagFgChoiceCount)
    self.curFgColorIndex = math.random(1, #AllianceFlagFgColor)
    
    self:RefreshAll()
end

local function OnClickSetBtn(self)
    if not self.goldEnough then
        UIUtil.ShowTipsId("E100001")
        return
    end
    
    local strNew = self.curBgIndex .. ";" .. self.curBgColorIndex .. ";" .. self.curFgIndex .. ";" .. self.curFgColorIndex
    if self.confirmCallBack then
        self.confirmCallBack(strNew)
    end
    
    self.ctrl:CloseSelf()
    
    --local baseData = DataCenter.AllianceBaseDataManager:GetAllianceBaseData()
    --if strNew ~= baseData.icon then
        --UIUtil.ShowMessage(Localization:GetString("391054"),2,"","", function()
        --    SFSNetwork.SendMessage(MsgDefines.AllianceChangeAttributes,nil,nil,nil,nil,nil,nil,nil,nil,nil,strNew)
        --    self.ctrl:CloseSelf()
        --end, function()
        --end)
    --else
    --    self.ctrl:CloseSelf()
    --end
end

local function OnSelectBgIcon(self, index)
    if index ~= self.curBgIndex then
        if self.bgItems[self.curBgIndex] then
            self.bgItems[self.curBgIndex]:SetSelected(false)
        end
        
        self.curBgIndex = index
        if self.bgItems[index] then
            self.bgItems[index]:SetSelected(true)
        end
    end

    self:RefreshFlagPreview()
end

local function OnSelectFgIcon(self, index)
    if index ~= self.curFgIndex then
        if self.fgItems[self.curFgIndex] then
            self.fgItems[self.curFgIndex]:SetSelected(false)
        end
    
        self.curFgIndex = index
        if self.fgItems[index] then
            self.fgItems[index]:SetSelected(true)
        end
    end

    self:RefreshFlagPreview()
end


UIAllianceFlagView.OnCreate = OnCreate 
UIAllianceFlagView.OnDestroy = OnDestroy
--UIAllianceFlagView.OnAddListener = OnAddListener
--UIAllianceFlagView.OnRemoveListener = OnRemoveListener
UIAllianceFlagView.ComponentDefine = ComponentDefine
UIAllianceFlagView.ComponentDestroy = ComponentDestroy
UIAllianceFlagView.DataDefine = DataDefine
UIAllianceFlagView.DataDestroy = DataDestroy

UIAllianceFlagView.InitUI = InitUI
UIAllianceFlagView.RefreshAll = RefreshAll
UIAllianceFlagView.RefreshFlagPreview = RefreshFlagPreview
UIAllianceFlagView.ShowBgPart = ShowBgPart
UIAllianceFlagView.SetAllBgItemsDestroy = SetAllBgItemsDestroy
UIAllianceFlagView.ShowFgPart = ShowFgPart
UIAllianceFlagView.SetAllFgItemsDestroy = SetAllFgItemsDestroy
UIAllianceFlagView.OnClickClose = OnClickClose
UIAllianceFlagView.OnClickRandomBtn = OnClickRandomBtn
UIAllianceFlagView.OnClickSetBtn = OnClickSetBtn
UIAllianceFlagView.OnBgColorChange = OnBgColorChange
UIAllianceFlagView.OnFgColorChange = OnFgColorChange
UIAllianceFlagView.SetColorPointer = SetColorPointer
UIAllianceFlagView.OnSelectBgIcon = OnSelectBgIcon
UIAllianceFlagView.OnSelectFgIcon = OnSelectFgIcon
return UIAllianceFlagView