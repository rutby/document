---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2023/2/22 10:44
---
local AllianceCenterItem = BaseClass("AllianceCenterItem", UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization
local YesColor = Color.New(0.4392157, 0.1960784, 0.07058824, 1.0)
local NoColor = Color.New(0.918, 0.26, 0.26, 1.0)

local mineIcon_path = "Bg/icon"
local mineLv_path = "Bg/icon/level"
local mineName_path = "Bg/name"
local minePos_path = "Bg/pos"
local jumpBtn_path = "Bg/posBtn"
local conditionTxt_path = "Bg/layout/condition"
local prog_path = "Bg/ProgressSlider"
local progTip_path = "Bg/ProgressSlider/tip"
local progNum_path = "Bg/ProgressSlider/Txt_Progress"
local buildBtn_path = "Bg/buildBtn"
local buildBtnTxt_path = "Bg/buildBtn/build"
local repairBtn_path = "Bg/repairBtn"
local repairBtnTxt_path = "Bg/repairBtn/repair"
local cancelBtn_path = "Bg/cancelBtn"
local cancelBtnTxt_path = "Bg/cancelBtn/cancel"
local place_des_path = "Bg/placeDes"
local res_obj_path = "Bg/buildResourceBg"
local res_num_path = "Bg/buildResourceBg/needItemNum"
-- 创建
local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
end

-- 销毁
local function OnDestroy(self)
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

--控件的定义
local function ComponentDefine(self)
    self.mineIconN = self:AddComponent(UIImage, mineIcon_path)
    self.mineLvN = self:AddComponent(UITextMeshProUGUIEx, mineLv_path)
    self.mineNameN = self:AddComponent(UITextMeshProUGUIEx, mineName_path)
    self.minePosN = self:AddComponent(UITextMeshProUGUIEx, minePos_path)
    self.jumpBtnN = self:AddComponent(UIButton, jumpBtn_path)
    self.jumpBtnN:SetOnClick(function()
        self:OnClickJumpBtn()
    end)
    self.conditionTbN = {}
    for i = 1, 4 do
        local conditionTxt = self:AddComponent(UITextMeshProUGUIEx, conditionTxt_path .. i)
        local tempGo = self:AddComponent(UIBaseContainer, conditionTxt_path .. i)
        local fitImg = tempGo:AddComponent(UIImage, "fit")
        local newCond = {}
        newCond.conditionTxtN = conditionTxt
        newCond.fitImgN = fitImg
        table.insert(self.conditionTbN, newCond)
    end
    self.progN = self:AddComponent(UISlider, prog_path)
    self.progTipN = self:AddComponent(UITextMeshProUGUIEx, progTip_path)
    self.progNumN = self:AddComponent(UITextMeshProUGUIEx, progNum_path)
    self.buildBtnN = self:AddComponent(UIButton, buildBtn_path)
    self.buildBtnN:SetOnClick(function()
        self:OnClickBuildBtn()
    end)
    self.buildBtnTxtN = self:AddComponent(UITextMeshProUGUIEx, buildBtnTxt_path)
    self.buildBtnTxtN:SetLocalText(300751)
    self.repairBtnN = self:AddComponent(UIButton, repairBtn_path)
    self.repairBtnN:SetOnClick(function()
        self:OnClickRepairBtn()
    end)
    self.repairBtnTxtN = self:AddComponent(UITextMeshProUGUIEx, repairBtnTxt_path)
    self.repairBtnTxtN:SetLocalText(143596)
    self.cancelBtnN = self:AddComponent(UIButton, cancelBtn_path)
    self.cancelBtnN:SetOnClick(function()
        self:OnClickCancelBtn()
    end)
    self.cancelBtnTxtN = self:AddComponent(UITextMeshProUGUIEx, cancelBtnTxt_path)
    self.cancelBtnTxtN:SetLocalText(110440)
    --self.lockedN = self:AddComponent(UIBaseContainer, lockedMask_path)
    self.place_des = self:AddComponent(UITextMeshProUGUIEx, place_des_path)

    self.res_obj = self:AddComponent(UIBaseContainer, res_obj_path)
    self.res_num = self:AddComponent(UITextMeshProUGUIEx, res_num_path)
end

--控件的销毁
local function ComponentDestroy(self)
    self:DelCountDownTimer()
    self.mineIconN = nil
    self.mineLvN = nil
    self.mineNameN = nil
    self.minePosN = nil
    self.conditionTxtN = nil
    self.conditionFitN = nil
    self.progN = nil
    self.progTipN = nil
    self.progNumN = nil
    self.buildBtnN = nil
    self.buildBtnTxtN = nil
    --self.lockedN = nil
    --self.lockedTipN = nil
end

--变量的定义
local function DataDefine(self)
    self.mineTemplate = nil
end

--变量的销毁
local function DataDestroy(self)
    self.mineTemplate = nil
end

local function SetItemShow(self, mineTemplate)
    self.mineTemplate = mineTemplate
    self.mineInfo = DataCenter.AllianceMineManager:GetAllianceCenterDataByBuildId(self.mineTemplate.id)

    self:RefreshAll()
end
local function SetSelectPos(self,pos)
    self.selectPos = pos
end
local function RefreshAll(self)
    self.mineIconN:LoadSprite(self.mineTemplate:GetIconPath())
    self.mineNameN:SetLocalText(self.mineTemplate.name)
    self.mineLvN:SetText(self.mineTemplate.level)

    self:RefreshMine()
    self:RefreshRes()
end

local function RefreshMine(self)
    if self.mineInfo then
        if self.mineInfo.status == AllianceMineStatus.Ruin then
            self.repairBtnN:SetActive(true)
            self.cancelBtnN:SetActive(false)
            self.buildBtnN:SetActive(false)
            CS.UIGray.SetGray(self.repairBtnN.transform,(DataCenter.AllianceBaseDataManager:IsR4orR5()==false),true)
            self.place_des:SetText(Localization:GetString("104202"))
        else
            self.repairBtnN:SetActive(false)
            self.cancelBtnN:SetActive(true)
            self.buildBtnN:SetActive(false)
            CS.UIGray.SetGray(self.cancelBtnN.transform,(DataCenter.AllianceBaseDataManager:IsR4orR5()==false),true)
            self.place_des:SetText(Localization:GetString("110539"))
        end
        self.progN:SetActive(true)
        self.minePosN:SetActive(true)
        local tilePos = SceneUtils.IndexToTilePos(self.mineInfo.pointId,ForceChangeScene.World)
        self.minePosN:SetText(" ( " .. tilePos.x .. "," .. tilePos.y.." ) ")
        self:AddCountDownTimer()
        self:RefreshRemainTime()
        self.progTipN:SetLocalText(100084)
        self:RefreshConditions(false)
    else
        
        self.repairBtnN:SetActive(false)
        self.cancelBtnN:SetActive(false)
        self.buildBtnN:SetActive(true)
        local IsR4orR5 = DataCenter.AllianceBaseDataManager:IsR4orR5()
        local allFit, fitDic = DataCenter.AllianceMineManager:CheckIfConditionFits(self.mineTemplate)
        if allFit and IsR4orR5 then
            CS.UIGray.SetGray(self.buildBtnN.transform,false,true)
        else
            CS.UIGray.SetGray(self.buildBtnN.transform,true,true)
        end
        
        
        self.progN:SetActive(false)
        self.minePosN:SetActive(false)
        self:RefreshConditions(true)
        local str = ""
        local desertLimit = self.mineTemplate.place_ruin_dic
        if desertLimit~=nil and table.count(desertLimit)>0 then
            local levelList = table.keys(desertLimit)
            str = str..Localization:GetString("300665",levelList[1])
            --for i=1 ,#levelList do
            --    if i == #levelList then
            --        str = str..Localization:GetString("300665",levelList[i])
            --    else
            --        str = str..Localization:GetString("300665",levelList[i])..","
            --    end
            --end
        end
        if str~=nil and str ~="" then
            if self.mineTemplate.id == BuildingTypes.ALLIANCE_CENTER_1 then
                self.place_des:SetText(Localization:GetString("302857",str))
            else
                self.place_des:SetText(Localization:GetString("302731",str))
            end
        else
            self.place_des:SetText("")
        end
    end
end

local function RefreshConditions(self, showFit)
    for i, v in ipairs(self.conditionTbN) do
        if showFit then
            local condDesc = DataCenter.AllianceMineManager:GetConditionDesc(self.mineTemplate, i)
            if condDesc == nil or condDesc == "" then
                v.conditionTxtN:SetActive(false)
                v.fitImgN:SetActive(false)
            else
                v.conditionTxtN:SetActive(true)
                v.conditionTxtN:SetText(condDesc)
                local tempFit = DataCenter.AllianceMineManager:CheckIfConditionFits(self.mineTemplate, i)
                v.fitImgN:SetActive(true)
                local fitImg = tempFit and "Assets/Main/Sprites/UI/Common/New/Common_img_select_yes.png" or "Assets/Main/Sprites/UI/Common/New/Common_img_select_no.png"--MK_
                v.fitImgN:LoadSprite(fitImg)
            end

        else
            v.conditionTxtN:SetActive(false)
            v.fitImgN:SetActive(false)
        end
    end
end


local function AddCountDownTimer(self)
    self.CountDownTimerAction = function()
        self:RefreshRemainTime()
    end

    if self.countDownTimer == nil then
        self.countDownTimer = TimerManager:GetInstance():GetTimer(1, self.CountDownTimerAction , self, false,false,false)
    end
    self.countDownTimer:Start()
end

local function RefreshRemainTime(self)
    if self.mineInfo~=nil and self.mineTemplate~=nil then
        if self.mineInfo.status == AllianceMineStatus.Ruin then
            local maxNum = self.mineTemplate.resDurable
            local curNum = 0
            local percent = math.min(curNum/maxNum,1)
            self.progNumN:SetText(string.GetFormattedSeperatorNum(math.floor(curNum)).."/"..string.GetFormattedSeperatorNum(math.floor(maxNum)))
            self.progN:SetValue(percent)
            self:DelCountDownTimer()
        else
            local maxNum = self.mineTemplate.resDurable
            local curNum = math.min(self.mineInfo:GetAllianceCenterDurability(),maxNum)
            local percent = math.min(curNum/maxNum,1)
            self.progNumN:SetText(string.GetFormattedSeperatorNum(math.floor(curNum)).."/"..string.GetFormattedSeperatorNum(math.floor(maxNum)))
            self.progN:SetValue(percent)
            if percent>=1 then
                self:DelCountDownTimer()
            end
        end
    end
end

local function DelCountDownTimer(self)
    if self.countDownTimer ~= nil then
        self.countDownTimer:Stop()
        self.countDownTimer = nil
    end
end

local function RefreshRes(self)
    if self.mineInfo ==nil and self.mineTemplate~=nil then
        self.res_obj:SetActive(true)
        local needNum = self.mineTemplate.buildCost
        local ownNum = DataCenter.AllianceStorageManager:GetResCountByRewardType(RewardType.SAPPHIRE)
        if ownNum >= needNum then
            self.res_num:SetText(string.GetFormattedSeperatorNum(math.floor(needNum)))
            self.res_num:SetColor(YesColor)
        else
            self.res_num:SetText(string.GetFormattedSeperatorNum(math.floor(ownNum)).."/"..string.GetFormattedSeperatorNum(math.floor(needNum)))
            self.res_num:SetColor(NoColor)
        end
    else
        self.res_obj:SetActive(false)
    end
end

local function OnClickBuildBtn(self)
    if self.mineTemplate == nil then
        return
    end
    local allFit, fitDic = DataCenter.AllianceMineManager:CheckIfConditionFits(self.mineTemplate)
    if allFit == false then
        return
    end
    if not DataCenter.AllianceBaseDataManager:IsR4orR5() then
        UIUtil.ShowTipsId(300752)
        return
    end
    local needNum = self.mineTemplate.buildCost
    local ownNum = DataCenter.AllianceStorageManager:GetResCountByRewardType(RewardType.SAPPHIRE)
    if ownNum < needNum then
        UIUtil.ShowTipsId(120020)
        return
    end
    local preBuild = self.mineTemplate.pre_build
    if preBuild~=nil and preBuild>0 then
        local isFit = false
        local mineInfo = DataCenter.AllianceMineManager:GetAllianceCenterDataByBuildId(preBuild)
        local template = DataCenter.AllianceMineManager:GetAllianceMineTemplate(preBuild)
        local preName = ""
        if template~=nil then
            local maxNum = template.resDurable
            preName = Localization:GetString(template.name)
            local curNum = 0
            if mineInfo~=nil then
                curNum = mineInfo:GetAllianceCenterDurability()
            end
            if curNum>=maxNum then
                isFit = true
            end
        end
        if isFit ==false then
            UIUtil.ShowTips(Localization:GetString("302738",preName))
            return
        end
    end
    local period = DataCenter.GloryManager:GetPeriod()
    local battleState = DataCenter.GloryManager:GetBattleState()
    if period == GloryPeriod.Start and battleState == GloryBattleState.Ongoing then
        UIUtil.ShowTipsId(302928)
        return
    end
    local mineId = self.mineTemplate.id
    
    local pointId = nil
    if self.selectPos~=nil and self.selectPos>0 then
        local modelVec = BuildingUtils.GetBuildModelCenterVec(self.selectPos,self.mineTemplate.resSize)
        pointId = SceneUtils.WorldToTileIndex(modelVec)
    end
    if SceneUtils.GetIsInWorld() then
        if pointId==nil or pointId<=0 then
            local curTarget = CS.SceneManager.World.CurTarget
            pointId = SceneUtils.WorldToTileIndex(curTarget)
        end
    else
        pointId = LuaEntry.Player:GetMainWorldPos()
    end
    
    GoToUtil.CloseAllWindows()
    GoToUtil.GotoWorldPos(SceneUtils.TileIndexToWorld(pointId, ForceChangeScene.World),nil,0.02,function()
        BuildingUtils.ShowPutAllianceBuild(mineId, 0, pointId, PlaceBuildType.Build)
    end, LuaEntry.Player:GetSelfServerId())
end

local function OnClickCancelBtn(self)
    if not DataCenter.AllianceBaseDataManager:IsR4orR5() then
        UIUtil.ShowTipsId(300752)
        return
    end
    local period = DataCenter.GloryManager:GetPeriod()
    local battleState = DataCenter.GloryManager:GetBattleState()
    if period == GloryPeriod.Start and battleState == GloryBattleState.Ongoing then
        UIUtil.ShowTipsId(302929)
        return
    end
    if self.mineInfo ~= nil and self.mineTemplate ~= nil then
        local maxNum = self.mineTemplate.resDurable
        local curNum = self.mineInfo:GetAllianceCenterDurability()
        if maxNum > curNum then
            UIUtil.ShowTipsId(302737)
            return
        end
        local uuid = self.mineInfo.uuid
        UIUtil.ShowMessage(Localization:GetString("300768"), 2, nil, nil, function()
            SFSNetwork.SendMessage(MsgDefines.WorldFoldUpAllianceBuilding, uuid)
        end)

    end
end
local function OnClickRepairBtn(self)
    if not DataCenter.AllianceBaseDataManager:IsR4orR5() then
        UIUtil.ShowTipsId(300752)
        return
    end
    local period = DataCenter.GloryManager:GetPeriod()
    local battleState = DataCenter.GloryManager:GetBattleState()
    if period == GloryPeriod.Start and battleState == GloryBattleState.Ongoing then
        UIUtil.ShowTipsId(302930)
        return
    end
    if self.mineInfo then
        SFSNetwork.SendMessage(MsgDefines.WorldFixAllianceBuilding,self.mineInfo.uuid)
    end
end
local function OnClickJumpBtn(self)
    if self.mineInfo then
        GoToUtil.CloseAllWindows()
        GoToUtil.GotoWorldPos(SceneUtils.TileIndexToWorld(self.mineInfo.pointId,ForceChangeScene.World))
    end
end

AllianceCenterItem.OnCreate = OnCreate
AllianceCenterItem.OnDestroy = OnDestroy
AllianceCenterItem.ComponentDefine = ComponentDefine
AllianceCenterItem.ComponentDestroy = ComponentDestroy
AllianceCenterItem.DataDefine = DataDefine
AllianceCenterItem.DataDestroy = DataDestroy

AllianceCenterItem.SetItemShow = SetItemShow
AllianceCenterItem.RefreshAll = RefreshAll
AllianceCenterItem.RefreshMine = RefreshMine
AllianceCenterItem.RefreshConditions = RefreshConditions
AllianceCenterItem.DelCountDownTimer = DelCountDownTimer
AllianceCenterItem.RefreshRemainTime = RefreshRemainTime
AllianceCenterItem.AddCountDownTimer = AddCountDownTimer
AllianceCenterItem.OnClickBuildBtn = OnClickBuildBtn
AllianceCenterItem.OnClickJumpBtn = OnClickJumpBtn
AllianceCenterItem.RefreshRes = RefreshRes
AllianceCenterItem.SetSelectPos = SetSelectPos
AllianceCenterItem.OnClickRepairBtn = OnClickRepairBtn
AllianceCenterItem.OnClickCancelBtn = OnClickCancelBtn
return AllianceCenterItem