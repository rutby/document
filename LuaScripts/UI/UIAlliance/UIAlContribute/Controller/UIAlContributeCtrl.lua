---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by mac.
--- DateTime: 7/22/21 2:48 PM
--- UIAlContributeCtrl.lua
local UIAlContributeCtrl = BaseClass("UIAlContributeCtrl", UIBaseCtrl)

local function CloseSelf(self)
    UIManager:GetInstance():DestroyWindow(UIWindowNames.UIAlContribute)
end

local function Close(self)
    UIManager:GetInstance():DestroyWindowByLayer(UILayer.Normal)
end

local function GetScoreItemInfoList(self, activityId)
    local activityInfo = DataCenter.ActivityListDataManager:GetActivityDataById(tostring(activityId))
    local scoreItemInfoList = {}
    if activityInfo then
        local eventInfo = activityInfo:GetEventInfo()
        if eventInfo then
            local curScore = self:GetCurScore(activityId)
            local defaultScoreInfo = self:CreateDefaultScoreInfo(tonumber(eventInfo.targetList[1]), curScore)
            table.insert(scoreItemInfoList, defaultScoreInfo)
            
            local unLock = LuaEntry.Effect:GetGameEffect(EffectDefine.UNLOCK_MORE_EXPLOIT_REWARDS)
            local listLength = #eventInfo.targetList
            for i, v in ipairs(eventInfo.targetList) do
                local scoreItemInfo = {}
                --是否显示滑动条
                scoreItemInfo.showSlider = i ~= listLength
                --是否显示boxItem
                scoreItemInfo.showBoxItem = true
                -- 是否解锁
                scoreItemInfo.unLock = unLock > 0 or i <= 5
                -- 需要的分数
                local curNeedScore = tonumber(eventInfo.targetList[i])
                scoreItemInfo.needScore = curNeedScore
                -- 进度
                scoreItemInfo.process = 0
                local nextNeedScore = curNeedScore
                if i ~= listLength then
                    nextNeedScore = tonumber(eventInfo.targetList[i + 1])
                end
                if curScore >= nextNeedScore then
                    scoreItemInfo.process = 1
                else
                    if curScore < curNeedScore then
                        scoreItemInfo.process = 0
                    else
                        scoreItemInfo.process = (curScore - curNeedScore) / (nextNeedScore - curNeedScore)
                    end
                end
                -- 领取状态
                local claimed = eventInfo.newRewardFlagList and eventInfo.newRewardFlagList[i] == i or false
                local status = 1
                if curScore >= scoreItemInfo.needScore then
                    status = 2
                end
                if claimed then
                    status = 3
                end
                scoreItemInfo.state = status
                -- 奖励
                scoreItemInfo.reward = nil
                local rewardsList = eventInfo.targetReward[tonumber(v)] or {}
                if rewardsList and #rewardsList > 0 then
                    scoreItemInfo.reward = rewardsList[1]
                end
                
                table.insert(scoreItemInfoList, scoreItemInfo)
            end
        end
    end
    return scoreItemInfoList
end

local function CreateDefaultScoreInfo(self, nextNeedScore, curScore)
    local scoreItemInfo = {}
    --是否显示滑动条
    scoreItemInfo.showSlider = true
    --是否显示boxItem
    scoreItemInfo.showBoxItem = false
    -- 是否解锁
    scoreItemInfo.unLock = true
    -- 需要的分数
    scoreItemInfo.needScore = 0
    -- 进度
    scoreItemInfo.process = 0
    if curScore >= nextNeedScore then
        scoreItemInfo.process = 1
    else
        scoreItemInfo.process = (curScore - 0) / nextNeedScore
    end
    -- 领取状态
    scoreItemInfo.state = 1
    -- 奖励
    scoreItemInfo.reward = nil
    
    return scoreItemInfo
end

local function GetCurScore(self, activityId)
    local activityInfo = DataCenter.ActivityListDataManager:GetActivityDataById(tostring(activityId))
    if activityInfo then
        local eventInfo = activityInfo:GetEventInfo()
        if eventInfo then
            return tonumber(eventInfo.currentScore)
        else
            return 0
        end
    end
    return 0
end

local function GetContributeList(self, activityId)
    local groupDic = {}
    local retTb = {}
    local activityInfo = DataCenter.ActivityListDataManager:GetActivityDataById(tostring(activityId))
    if activityInfo then
        local eventInfo = activityInfo:GetEventInfo()
        if eventInfo then
            for i, v in ipairs(eventInfo.scoreIdListNew) do
                if string.IsNullOrEmpty(v.group) then
                    table.insert(retTb, v)
                else
                    if not groupDic[v.group] then
                        groupDic[v.group] = {}
                    end
                    table.insert(groupDic[v.group], v)
                end
            end
        end
    end
    for i, v in pairs(groupDic) do
        table.insert(retTb, v[1])
    end
    
    table.sort(retTb, function(a, b)
        if a.id ~= b.id then
            return a.id < b.id
        else
            return false
        end
        return a.id < b.id
    end)    
    return retTb
end

local function GetMonthCardInfo(self)
    local monthCardInfo = DataCenter.AlContributeManager:GetMonthCardInfo()
    return monthCardInfo
end


UIAlContributeCtrl.CloseSelf = CloseSelf
UIAlContributeCtrl.Close = Close

UIAlContributeCtrl.GetCurScore = GetCurScore
UIAlContributeCtrl.GetScoreItemInfoList = GetScoreItemInfoList
UIAlContributeCtrl.GetContributeList = GetContributeList
UIAlContributeCtrl.GetMonthCardInfo = GetMonthCardInfo
UIAlContributeCtrl.CreateDefaultScoreInfo = CreateDefaultScoreInfo

return UIAlContributeCtrl