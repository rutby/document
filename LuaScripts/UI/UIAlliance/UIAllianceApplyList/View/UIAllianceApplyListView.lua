---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by guqu.
--- DateTime: 2020/11/11 18:03
---
local AllianceApplyItem = require "UI.UIAlliance.UIAllianceApplyList.Component.AllianceApplyItem"
local UIAllianceApplyListView = BaseClass("UIAllianceApplyListView",UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization

local txt_title_path ="fullTop/imgTitle/Common_img_title/titleText"
local close_btn_path = "fullTop/CloseBtn"
local scroll_path = "ScrollView"
local empty_txt_path = "TxtEmpty"
local function OnCreate(self)
    base.OnCreate(self)
    SFSNetwork.SendMessage(MsgDefines.AlApplyList,1)
    self.txt_title = self:AddComponent(UITextMeshProUGUIEx, txt_title_path)
    self.txt_title:SetLocalText(390834)
    self.empty_txt = self:AddComponent(UITextMeshProUGUIEx, empty_txt_path)
    self.empty_txt:SetLocalText(390154)
    self.close_btn = self:AddComponent(UIButton, close_btn_path)
    self.close_btn:SetOnClick(function()
        --DataCenter.AllianceMemberDataManager:ClearCacheApplyList()
        self.ctrl:CloseSelf()
    end)

    self.ScrollView = self:AddComponent(UIScrollView, scroll_path)
    self.ScrollView:SetOnItemMoveIn(function(itemObj, index)
        self:OnItemMoveIn(itemObj, index)
    end)
    self.ScrollView:SetOnItemMoveOut(function(itemObj, index)
        self:OnItemMoveOut(itemObj, index)
    end)
    self.apply_list ={}
end

local function OnDestroy(self)

    self.txt_title = nil
    self.empty_txt = nil
    self.power_txt = nil
    self.kill_txt = nil
    self.check_txt = nil
    self.close_btn =nil
    self.return_btn = nil
    self.ScrollView = nil
    self.apply_list =nil
    base.OnDestroy(self)
end

local function RefreshApplyList(self)
    self:ClearScroll(self)
    self.apply_list = self.ctrl:GetAllianceApplyList()
    if #self.apply_list > 0 then
        self.ScrollView:SetTotalCount(#self.apply_list)
        self.ScrollView:RefillCells()
        self.empty_txt:SetActive(false)
    else
        self.empty_txt:SetActive(true)
    end
end

local function OnEnable(self)
    base.OnEnable(self)
    self:RefreshApplyList()
end

local function OnDisable(self)
    self:ClearScroll(self)
    base.OnDisable(self)

end

local function OnItemMoveIn(self,itemObj, index)
    itemObj.name = tostring(index)
    local cellItem = self.ScrollView:AddComponent(AllianceApplyItem, itemObj)
    cellItem:SetItemShow(self.apply_list[index])
end

local function OnItemMoveOut(self, itemObj, index)
    self.ScrollView:RemoveComponent(itemObj.name, AllianceApplyItem)
end

local function ClearScroll(self)
    self.ScrollView:ClearCells()
    self.ScrollView:RemoveComponents(AllianceApplyItem)
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.AllianceMemberRedPoint, self.RefreshApplyList)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
    self:RemoveUIListener(EventId.AllianceMemberRedPoint, self.RefreshApplyList)
end

UIAllianceApplyListView.OnCreate= OnCreate
UIAllianceApplyListView.OnDestroy = OnDestroy
UIAllianceApplyListView.RefreshApplyList = RefreshApplyList
UIAllianceApplyListView.OnEnable = OnEnable
UIAllianceApplyListView.OnDisable = OnDisable
UIAllianceApplyListView.OnItemMoveIn = OnItemMoveIn
UIAllianceApplyListView.OnItemMoveOut = OnItemMoveOut
UIAllianceApplyListView.ClearScroll = ClearScroll
UIAllianceApplyListView.OnAddListener = OnAddListener
UIAllianceApplyListView.OnRemoveListener = OnRemoveListener
return UIAllianceApplyListView