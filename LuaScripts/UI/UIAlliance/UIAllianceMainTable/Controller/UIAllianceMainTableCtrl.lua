---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by guqu.
--- DateTime: 2020/7/28 18:57
---
local AllianceListItemShow =
{
    pic ="",
    name = "",
    type = AllianceButtonType.None
}
local OneData = DataClass("OneData", AllianceListItemShow)
local UIAllianceMainTableCtrl = BaseClass("UIAllianceMainTableCtrl", UIBaseCtrl)
local Localization = CS.GameEntry.Localization

local function CloseSelf(self)
    --local inviteType = DataCenter.AllianceBaseDataManager:GetAlMoveInvite(UIWindowNames.UIAllianceMainTable)
    --if inviteType == AlMoveInviteType.SystemInvite then
    --    UIManager:GetInstance():OpenWindow(UIWindowNames.UIMoveCityTip, { anim = true }, {openType = MoveCityTipType.SystemInvite})
    --end
    UIManager:GetInstance():DestroyWindow(UIWindowNames.UIAllianceMainTable)
end

local function CloseAll(self)
    UIManager.Instance:DestroyWindow(UIWindowNames.UIAllianceMainTable)
    UIManager:GetInstance():DestroyWindow(UIWindowNames.UIPlayerInfo)
end

local function Close(self)
    UIManager:GetInstance():DestroyWindowByLayer(UILayer.Background)
end

local function GetAllianceId(self)
    local data =  DataCenter.AllianceBaseDataManager:GetAllianceBaseData()
    return data.uid
end
local function GetAllianceBaseData(self)
    
    return DataCenter.AllianceBaseDataManager:GetAllianceBaseData()
end

local function CheckIsSelfAll(self)
    return true
end


local function GetAllianceButtonShow(self)
    local list ={}
    LocalController:instance():visitTable("alliance_info",function(id,lineData)
        local tempId = lineData:getValue("id")
        local vec = string.split(lineData:getValue("pic"),".")
        if #vec>1 then
            local data = OneData.New()
            data.order = tonumber(lineData:getValue("order"))
            local pic = "Assets/Main/Sprites/UI/UIAlliance/"..vec[1]
            local name = tostring(lineData:getValue("name"))
            if tempId == 6 then
                data.type= AllianceButtonType.AllianceSalary
                data.pic = pic
                data.name = Localization:GetString(name)
            elseif tempId == 5 then
                data.type= AllianceButtonType.AllianceHelp
                data.pic = pic
                data.name = Localization:GetString(name)
                table.insert(list,data)
            elseif tempId == 9 then
                local unlock = DataCenter.AllianceBaseDataManager:CheckIfAllianceFuncOpen(AllianceTaskFuncType.AllianceScience)
                local isSwitchOn = LuaEntry.DataConfig:CheckSwitch("alliance_shop")
                if unlock and isSwitchOn then
                    data.type= AllianceButtonType.AllianceShop
                    data.pic = pic
                    data.name = Localization:GetString(name)
                    table.insert(list,data)
                end
            elseif tempId == 1 then
                data.type= AllianceButtonType.AllianceBattle
                data.pic = pic
                data.name = Localization:GetString(name)
                table.insert(list,data)
            elseif tempId == 7 then
                local unlock = DataCenter.AllianceBaseDataManager:CheckIfAllianceFuncOpen(AllianceTaskFuncType.AllianceScience)
                local isSwitchOn = LuaEntry.DataConfig:CheckSwitch("alliancescience_entrance")
                if isSwitchOn and unlock then
                    data.type= AllianceButtonType.AllianceScience
                    data.pic = pic
                    data.name = Localization:GetString(name)
                    table.insert(list,data)
                end
            elseif tempId == 8 then
                data.type= AllianceButtonType.AllianceGift
                data.pic = pic
                data.name = Localization:GetString(name)
                table.insert(list,data)
            elseif tempId == 2 then
                data.type= AllianceButtonType.AllianceMember
                data.pic = pic
                data.name = Localization:GetString(name)
                table.insert(list,data)
            elseif tempId == 17 then
                data.type= AllianceButtonType.EverydayTask
                data.pic = "Assets/Main/Sprites/UI/UIAlliance/ApsAlliance/img_iconAllianceTask"
                data.name = Localization:GetString(name)
                table.insert(list,data)
            elseif tempId == 21 then
                data.type= AllianceButtonType.AllianceCity
                data.pic = pic
                data.name = Localization:GetString(name)
                table.insert(list,data)
            elseif tempId == 22 then
                if DataCenter.AllianceBaseDataManager:CheckIfCanPayAsLeader() then
                    data.type= AllianceButtonType.BecomeLeader
                    data.pic = pic
                    data.name = Localization:GetString(name)
                    table.insert(list,data)
                end
            elseif tempId == 23 then
                local unlocked = DataCenter.AlLeaderElectManager:CheckModuleUnlocked()
                if unlocked and DataCenter.AlLeaderElectManager:CheckIfLeaderElecting() then
                    data.type= AllianceButtonType.AlLeaderElect
                    data.pic = pic
                    data.name = Localization:GetString(name)
                    table.insert(list,data)
                end  
            elseif tempId == 24 then
                local unlocked = DataCenter.AllianceTaskManager:CheckIfAllianceTaskOpen()
                if unlocked then
                    data.type= AllianceButtonType.AllianceTask
                    data.pic = pic
                    data.name = Localization:GetString(name)
                    table.insert(list,data)
                end
            end
        end
    end)

    table.sort(list, function(a, b)
        if a.order ~= b.order then
            return a.order < b.order
        elseif a.type ~= b.type then
            return a.type < b.type
        else
            return false
        end
    end)
    return list
end 

local function GetRedPotCount(self,type)
    local count = 0
    if type == AllianceButtonType.AllianceBattle then
        --count = DataCenter.AllianceBaseDataManager:CheckIfShowAutoRallyRed()
        count = DataCenter.AllianceWarDataManager:GetAllianceWarCount()
        count = count + DataCenter.AllianceAlertDataManager:GetAlertNum()
        if DataCenter.WorldNewsDataManager:GetShowAttackerRedPot() then
            count = count+1
        end
        --count = count + DataCenter.AllianceWarDataManager:GetCrossServerNum()
        --if count > 1 then
        --    count = 1
        --end
    elseif type==AllianceButtonType.AllianceGift then
        count = DataCenter.AllianceGiftDataManager:GetGiftNum()
    elseif type == AllianceButtonType.AllianceHelp then
        count = DataCenter.AllianceHelpDataManager:GetHelpNum()
    elseif type == AllianceButtonType.AllianceCheck then--申请列表
        count = DataCenter.AllianceMemberDataManager:GetAllianceApplyRedCount()
        --if DataCenter.AllianceBaseDataManager:IsR4orR5() then--策划需求，所有人都有红点
        --end
    elseif type == AllianceButtonType.EverydayTask then
        --临时关闭
        --count = DataCenter.DailyTaskManager:GetRedNum()
        count = 0
    elseif type == AllianceButtonType.AlLeaderElect then
        count = DataCenter.AlLeaderElectManager:GetAlElectRedCount()
    elseif type == AllianceButtonType.AllianceTask then
        count = DataCenter.AllianceTaskManager:GetTaskRedCount()
    elseif type == AllianceButtonType.AllianceSetting then
        local data =  DataCenter.AllianceBaseDataManager:GetAllianceBaseData()
        local showTip = DataCenter.AllianceBaseDataManager:IsR4orR5()
        if showTip then
            --local curTime = UITimeManager:GetInstance():GetServerTime()
            --local isShowTime = data.sysAlState == SysAlState.MergeTime_1 or data.sysAlState == SysAlState.LeaderResult
            --local needChange = isShowTime and data.stateEndTime > curTime
            local needRed = DataCenter.AllianceBaseDataManager:CheckIfNeedSettingTip()
            --if needChange then
            --    if data.rename == 0 or data.abbrRename == 0 or string.IsNullOrEmpty(data.intro) then
            --        needRed = true
            --    end
            --end
            count = needRed and 1 or 0
        end
    elseif type == AllianceButtonType.AllianceScience then
        local num = DataCenter.AllianceScienceDataManager:GetResDonateRestCount()
        if num >= AllianceScienceShowRedCount then
            count = num
        end
    elseif type == AllianceButtonType.AllianceCity then
        if DataCenter.AllianceDeclareWarManager:CheckWarIsNew() then
            count = 1
        end
        if DataCenter.AllianceMineManager:GetShowRedDotNum() then
            count = count+1
        end
        if DataCenter.AllianceMineManager:GetShowAllianceCityRedDotNum() then
            count = count+1
        end
    end
    return count
end

local function OnSetAnnounceClick(self, announce)
    local canChange = DataCenter.AllianceBaseDataManager:IsSelfLeader() or DataCenter.AllianceBaseDataManager:IsR4orR5()
    if canChange then
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIAllianceChangeAnnounce, {anim = true}, 2, announce)
    else
        UIUtil.ShowTipsId(390201) 
    end
end

local function OnGotoClick(self,type)

    if type == AllianceButtonType.AllianceQuit then
        if  DataCenter.AllianceBaseDataManager:IsSelfLeader() then
            local memberCount = DataCenter.AllianceMemberDataManager:GetAllianceMemberCount()
            if memberCount > 1 then
                local message = Localization:GetString("390793")
                UIUtil.ShowMessage(message, 1, GameDialogDefine.CONFIRM, "82001039",function()
                end, function()
                end);
            else
                local message = Localization:GetString("390093")
                UIUtil.ShowMessage(message, 1, GameDialogDefine.CONFIRM, "82001039",function()
                    DataCenter.AllianceBaseDataManager:SetInviteResponded(AlMoveInviteType.SystemInvite)
                    DataCenter.AllianceBaseDataManager:SetInviteResponded(AlMoveInviteType.LeaderInvite)
                    self:DismissAlliance()
                end, function()
                end);
            end
        else
            local message = Localization:GetString("390503")
            
            local isInAlCompete = DataCenter.AllianceCompeteDataManager:CheckIfIsInCompete()
            if isInAlCompete and LuaEntry.DataConfig:CheckSwitch("alliance_duel_quitmode") then
                message = Localization:GetString("372165")
            end
            if LuaEntry.Player.serverType == ServerType.EDEN_SERVER then
                message = Localization:GetString("111091")
            end
            UIUtil.ShowMessage(message, 1, GameDialogDefine.CONFIRM, "82001039",function()
                DataCenter.AllianceBaseDataManager:SetInviteResponded(AlMoveInviteType.SystemInvite)
                DataCenter.AllianceBaseDataManager:SetInviteResponded(AlMoveInviteType.LeaderInvite)
                self:QuitAlliance()
            end, function()
            end);
        end
    elseif type == AllianceButtonType.AllianceBattle then
        --local showAutoRally = LuaEntry.DataConfig:CheckSwitch("world_auto_join")
        --local allianceList =  DataCenter.AllianceWarDataManager:GetAllianceWarIdList()
        --if showAutoRally and allianceList and #allianceList > 0 then
        --    for i, v in ipairs(allianceList) do
        --        local info = DataCenter.AllianceWarDataManager:GetAllianceWarDataByUuid(v)
        --        if info.type == AllianceTeamType.ATTACK_BOSS then
        --            showAutoRally = false
        --            break
        --        end
        --    end
        --end
        --if showAutoRally then
        --    
        --else
        if DataCenter.AllianceWarDataManager:GetLastRedNum() > 0 or DataCenter.AllianceAlertDataManager:GetLastRedNum() > 0 then    --这里要拿准确的数量
            DataCenter.AllianceWarDataManager:SetLastNumClickView(true)
            DataCenter.AllianceAlertDataManager:SetLastNumClickView(true)
            EventManager:GetInstance():Broadcast(EventId.RefreshAlertUI)
            UIManager:GetInstance():OpenWindow(UIWindowNames.UIAllianceWarMainTable,{ anim = true, hideTop = true },3)
        else
            UIManager:GetInstance():OpenWindow(UIWindowNames.UIAllianceWarMainTable,{ anim = true, hideTop = true },2)
        end
        --end
    elseif type == AllianceButtonType.BecomeLeader then
        local goldCost = LuaEntry.DataConfig:TryGetNum("union_Administration", "k3")
        UIUtil.ShowMessage(Localization:GetString("141086", goldCost), 2, GameDialogDefine.CONFIRM, GameDialogDefine.CANCEL, function()
            if LuaEntry.Player.gold >= goldCost then
                SFSNetwork.SendMessage(MsgDefines.BecomeAlLeader)
            else
                GoToUtil.GotoPayTips()
            end
        end, nil);
    elseif type == AllianceButtonType.AllianceGift then
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIAllianceGift,{ anim = true, hideTop = true })
    elseif type == AllianceButtonType.AllianceHelp then
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIAllianceHelp,{ anim = true, hideTop = true })
    elseif type == AllianceButtonType.AllianceShop then
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIAllianceShop,{ anim = true, hideTop = true })
    elseif type == AllianceButtonType.AllianceScience then
        if UIManager:GetInstance():IsWindowOpen(UIWindowNames.UIPlayerInfo) then
            UIManager:GetInstance():DestroyWindow(UIWindowNames.UIPlayerInfo)
        end
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIAllianceScience,{ anim = true, hideTop = true })
    elseif type == AllianceButtonType.AllianceSetting then
        if DataCenter.AllianceBaseDataManager:IsR4orR5() then
            UIManager:GetInstance():OpenWindow(UIWindowNames.UISettingAlliance,{ anim = true, hideTop = true })
        else
            UIUtil.ShowTipsId(390201) 
        end
    elseif type == AllianceButtonType.AllianceCheck then
            UIManager:GetInstance():OpenWindow(UIWindowNames.UIAllianceApplyList,{ anim = true, hideTop = true })
        --if DataCenter.AllianceBaseDataManager:IsR4orR5() then
        --else
        --    UIUtil.ShowTipsId(390201) 
        --end
    elseif type == AllianceButtonType.AllianceList then
        UIManager:GetInstance():OpenWindow(UIWindowNames.UICheckAlliance)
    elseif type == AllianceButtonType.AllianceRank then
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIAllianceRankTable,{ anim = true, hideTop = true })
    elseif type== AllianceButtonType.AllianceMail then
        --if DataCenter.AllianceBaseDataManager:IsR4orR5() then
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIMailSend,{anim = true, isBlur = true },MailType.MAIL_ALLIANCE_ALL)
        --else
        --    UIUtil.ShowTipsId(390201) 
        --end
    elseif type == AllianceButtonType.AllianceMember then
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIAllianceMemberDetail,{ anim = true, hideTop = true },self:GetAllianceId(), AllianceMemberOpenType.AllianceMember)
    elseif type == AllianceButtonType.AllianceMoveInvite then
        local canUnlock,lock_tips = SceneUtils.CheckIsWorldUnlock()
        if canUnlock ==true then
            UIManager:GetInstance():OpenWindow(UIWindowNames.UIMoveCityTip,{ anim = true }, {openType = MoveCityTipType.AlMoveInvite})
        end
       
        --local mainPoint = LuaEntry.Player:GetMainWorldPos()
        --GoToUtil.GotoWorldPos(SceneUtils.TileIndexToWorld(mainPoint,ForceChangeScene.World), CS.SceneManager.World.InitZoom,LookAtFocusTime,function()
        --    if DataCenter.AllianceBaseDataManager:CheckIfCanInviteAlMove(true) then
        --        UIManager:GetInstance():OpenWindow(UIWindowNames.UIMoveCityTip,{ anim = true, hideTop = true }, {openType = MoveCityTipType.AlMoveInvite})
        --    end
        --end)
    elseif type == AllianceButtonType.AllianceInvite then
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIAllianceInviteList,{ anim = true })
    elseif type == AllianceButtonType.EverydayTask then
        UIManager:GetInstance():OpenWindow(UIWindowNames.UITaskMain, HideBlurPanelAnim, TaskType.Daily)
    elseif type == AllianceButtonType.AllianceCity then
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIAllianceCity,{ anim = true, isBlur = true })
    elseif type == AllianceButtonType.AlLeaderElect then
        local baseInfo = DataCenter.AllianceBaseDataManager:GetAllianceBaseData()
        if baseInfo then
            if baseInfo.sysAlState == SysAlState.SignUp or baseInfo.sysAlState == SysAlState.R4Elect
                    or baseInfo.sysAlState == SysAlState.LeaderElect then
                UIManager:GetInstance():OpenWindow(UIWindowNames.UIAlLeaderCandidates)
            else
                UIManager:GetInstance():OpenWindow(UIWindowNames.UIAlLeaderElectResult)
            end
        else
            UIUtil.ShowTipsId(120018)
        end
    elseif type == AllianceButtonType.AllianceTask then
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIAllianceTask)
    else
        UIUtil.ShowTipsId(120018) 
    end

end

local function DismissAlliance(self)
    SFSNetwork.SendMessage(MsgDefines.AlDismiss)
    self:CloseSelf()
end

local function QuitAlliance(self)
    SFSNetwork.SendMessage(MsgDefines.AlLeave)
    self:CloseSelf()
end

local function GetAllianceManageList(self)
    local allianceMemberNum = DataCenter.AllianceMemberDataManager:GetAllianceMemberCount()
    local AllianceManageShow =
    {
        {
            pic = "Assets/Main/Sprites/UI/UIAlliance/alliance_icon_01",
            name = Localization:GetString("280012"),
            type = AllianceButtonType.AllianceSetting
        },
        ----{
        ----    pic = "img_iconAllianceList",
        ----    name = Localization:GetString("390085"),
        ----    type = AllianceButtonType.AllianceList
        ----},
        ----临时隐藏
        ----{
        ----    pic = "Assets/Main/Sprites/UI/UIAlliance/ApsAlliance/img_iconSettingFunction_Ranking",
        ----    name = Localization:GetString("390040"),
        ----    type = AllianceButtonType.AllianceRank
        ----},
        {
            pic = "Assets/Main/Sprites/UI/UIAlliance/alliance_icon_02",
            name = Localization:GetString("390796"),
            type = AllianceButtonType.AllianceList
        },
        {
            pic = "Assets/Main/Sprites/UI/UIAlliance/alliance_icon_03",
            name = Localization:GetString("390834"),
            type = AllianceButtonType.AllianceCheck
        },
        --{ --MK: 临时隐藏
        --    pic = "Assets/Main/Sprites/UI/UIAlliance/ApsAlliance/img_iconSettingFunction_Account",
        --    name = Localization:GetString("390198"),
        --    type = AllianceButtonType.AllianceInvite
        --},
        {
            pic = "Assets/Main/Sprites/UI/UIAlliance/alliance_icon_05",
            name = allianceMemberNum > 1 and Localization:GetString("311007") or Localization:GetString("390951"),
            type = AllianceButtonType.AllianceQuit
        },
        
    }

    --if DataCenter.AllianceBaseDataManager:IsSelfLeader() then
    --    local tb =
    --    {
    --        pic = "Assets/Main/Sprites/UI/UIAlliance/ApsAlliance/img_iconAllianceInviteMove",
    --        name = Localization:GetString("391077"),
    --        type = AllianceButtonType.AllianceMoveInvite
    --    }
    --    table.insert(AllianceManageShow, tb)
    --end
    return AllianceManageShow
end


local function GetToggleRedPointCount(self,index)
    local count = 0
    if index ==1 then 
        local allianceWar = self:GetRedPotCount(AllianceButtonType.AllianceBattle)
        --local giftNum = self:GetRedPotCount(AllianceButtonType.AllianceGift)
        local helpNum = self:GetRedPotCount(AllianceButtonType.AllianceHelp)
        --local task = self:GetRedPotCount(AllianceButtonType.EverydayTask)
        --local city = self:GetRedPotCount(AllianceButtonType.AllianceCity)
        --local task2 = self:GetRedPotCount(AllianceButtonType.AllianceTask)
        local scienceNum = self:GetRedPotCount(AllianceButtonType.AllianceScience)
        --count = allianceWar + giftNum + helpNum + task + city+ task2
        --这一版只显示联盟帮助
        count = helpNum + scienceNum + allianceWar
    elseif index == 2 then
        if DataCenter.AllianceBaseDataManager:IsR4orR5() then
            local applyCount = self:GetRedPotCount(AllianceButtonType.AllianceCheck)-- DataCenter.AllianceMemberDataManager:GetApplyCount()
            count = count + applyCount
        end
        local settingRedCount = self:GetRedPotCount(AllianceButtonType.AllianceSetting)
        count = count + settingRedCount
    --elseif index ==3 then
    --    if DataCenter.AllianceBaseDataManager:IsR4orR5() then
    --        local applyCount = DataCenter.AllianceMemberDataManager:GetApplyCount()
    --        count = applyCount
    --    end
    elseif index == 4 then
        local moduleUnlock = DataCenter.AllianceBaseDataManager:CheckIfAllianceFuncOpen(AllianceTaskFuncType.AllianceCareer)
        if moduleUnlock and DataCenter.AllianceCareerManager:IsCanSetCareer() then
            count = count + DataCenter.AllianceCareerManager:GetRedNum()
        end
    elseif index == 5 then
        count = DataCenter.AllianceMemberDataManager:CheckIfNeedInactiveMemberBubble()
    end
    return count
end

local function InitAllianceMemberData(self)
    local tempAlId = self:GetAllianceId()
    if tempAlId then
        SFSNetwork.SendMessage(MsgDefines.AlRank,tempAlId)
    end
end
--
--local function GetLeaderData(self)
--    local oneData ={}
--    local baseData = DataCenter.AllianceBaseDataManager:GetAllianceBaseData()
--    Logger.Log("leaderName".. baseData.leaderUid)
--    local leaderData = DataCenter.AllianceMemberDataManager:GetAllianceMemberByUid(baseData.leaderUid)
--    oneData.name = leaderData.name
--    oneData.power = string.GetFormattedSeperatorNum(leaderData.power)
--    oneData.kill = 0
--    oneData.uid = leaderData.uid
--    oneData.rank = leaderData.rank
--    return oneData
--end
--
--local function GetMemberListByRank(self,rank)
--    local showList ={}
--    local list = DataCenter.AllianceMemberDataManager:GetAllianceMemberListByRank(rank)
--    if list~=nil then
--        table.walk(list,function (k,v)
--            local oneData ={}
--            oneData.name = v.name
--            oneData.power =v.power
--            oneData.uid =v.uid
--            oneData.rank =v.rank
--            if v.rank==4 then
--                local officialNum = DataCenter.AllianceMemberDataManager:GetOfficialByUid(v.uid)
--                if officialNum =="" then
--                    oneData.officialPic = "img_iconAlliOfficer1a"
--                    oneData.officialNum =0
--                elseif officialNum =="1" then
--                    oneData.officialPic = "img_iconAlliOfficer1"
--                    oneData.officialNum =1
--                elseif officialNum =="2" then
--                    oneData.officialPic = "img_iconAlliOfficer2"
--                    oneData.officialNum =2
--                elseif officialNum =="3" then
--                    oneData.officialPic = "img_iconAlliOfficer3"
--                    oneData.officialNum =3
--                elseif officialNum =="4" then
--                    oneData.officialPic = "img_iconAlliOfficer4"
--                    oneData.officialNum =4
--                end
--            end
--            if v.online then
--                oneData.online_time = Localization:GetString("390188")
--            else
--                local deltaTime  = UITimeManager:GetInstance():GetServerTime()-v.offLineTime
--                if deltaTime>24*60*60*1000 then
--                    local day = math.floor(deltaTime/(24*60*60*1000))
--                    oneData.online_time = Localization:GetString("390506",day)
--                elseif deltaTime>60*60*1000 then
--                    local hour = math.floor(deltaTime/(60*60*1000))
--                    oneData.online_time = Localization:GetString("390505",hour)
--                elseif deltaTime>60*1000 then
--                    local minute = math.floor(deltaTime/(60*1000))
--                    oneData.online_time = Localization:GetString("390504",minute)
--                else
--                    oneData.online_time = Localization:GetString("390504",1)
--                end
--            end
--            table.insert(showList,oneData)
--        end)
--        
--    end
--    return showList
--end
--
--local function GetRankData(self,rank)
--    local oneData = {}
--    oneData.rank =rank
--    local list = DataCenter.AllianceMemberDataManager:GetAllianceMemberListByRank(rank)
--    local k1 = DataConfig:GetStr("alliance_player_limit", "k1")
--    local k2 = DataConfig:GetStr("alliance_player_limit", "k2")
--    if list~=nil and #list>0 then
--        local count = #list
--        if rank ==4 then
--            oneData.rankNum = count.."/"..k1
--        elseif rank ==3 then
--            oneData.rankNum = count.."/"..k2
--        else
--            oneData.rankNum = count
--        end
--    else
--        if rank ==4 then
--            oneData.rankNum = "0".."/"..k1
--        elseif rank ==3 then
--            oneData.rankNum = "0".."/"..k2
--        else
--            oneData.rankNum = "0"
--        end
--    end
--    return oneData
--end
--
--
--local function OnShowAllianceMemberTips(self,uid,rank,posX,posY,name)
--    local selfRank = DataCenter.AllianceBaseDataManager:GetSelfRank()
--    UIManager:GetInstance():OpenWindow(UIWindowNames.UIAllianceMemberTip,uid,rank,posX,posY,selfRank,UIWindowNames.UIAllianceMainTable,name)
--end
--
--local function OnOfficialViewOpen(self,officialNum, uid)
--    local selfRank = DataCenter.AllianceBaseDataManager:GetSelfRank()
--    UIManager:GetInstance():OpenWindow(UIWindowNames.UIAllianceOfficeSelect,selfRank,officialNum,uid)
--end

--  [[ 联盟成员移植

local function GetLeaderData(self)
    local oneData ={}
    oneData.name = ""
    oneData.power = ""
    oneData.kill = ""
    oneData.uid = ""
    oneData.rank = ""
    oneData.isSelfAlliance = true
    oneData.mainCityLv = 0
    local baseData = DataCenter.AllianceBaseDataManager:GetAllianceBaseData()
    if baseData.leaderUid and not baseData:CheckIfIsVirtualLeader() then
        local leaderData = DataCenter.AllianceMemberDataManager:GetAllianceMemberByUid(baseData.leaderUid)
        if leaderData then
            oneData.name = leaderData.name
            oneData.power = string.GetFormattedSeperatorNum(leaderData.power)
            oneData.kill = 0
            oneData.uid = leaderData.uid
            oneData.rank = leaderData.rank
            oneData.isOnline = leaderData.online
            oneData.headBg = leaderData:GetHeadBgImg()
            oneData.pic = leaderData.pic
            oneData.picVer = leaderData.picVer
            oneData.sex = leaderData.sex
            oneData.mainCityLv = leaderData.mainCityLv
            if leaderData.online then
                oneData.online_time = Localization:GetString("390188")
            else
                local deltaTime  = UITimeManager:GetInstance():GetServerTime()-leaderData.offLineTime
                if deltaTime>24*60*60*1000 then
                    local day = math.floor(deltaTime/(24*60*60*1000))
                    oneData.online_time = Localization:GetString("390506",day)
                elseif deltaTime>60*60*1000 then
                    local hour = math.floor(deltaTime/(60*60*1000))
                    oneData.online_time = Localization:GetString("390505",hour)
                elseif deltaTime>60*1000 then
                    local minute = math.floor(deltaTime/(60*1000))
                    oneData.online_time = Localization:GetString("390504",minute)
                else
                    oneData.online_time = Localization:GetString("390504",1)
                end
            end
        end
    end
    
    return oneData
end

local function GetMemberListByRank(self,rank)
    local showList ={}
    local list = DataCenter.AllianceMemberDataManager:GetAllianceMemberListByRank(rank)
    local selfUid = LuaEntry.Player.uid
    
    if list~=nil then
        table.walk(list,function (k,v)
            local oneData ={}
            oneData.name = v.name
            oneData.power =v.power
            oneData.uid =v.uid
            oneData.rank =v.rank
            oneData.pic = v.pic or ""
            oneData.picVer = v.picVer or 0
            oneData.headBg = v:GetHeadBgImg()
            oneData.isSelfAlliance = true
            oneData.sex = v.sex
            oneData.mainCityLv = v.mainCityLv
            if v.rank==4 then
                local officialNum = DataCenter.AllianceMemberDataManager:GetOfficialByUid(v.uid)
                if officialNum =="" then
                    oneData.officialPic = "Assets/Main/Sprites/UI/UIRank/btn_PlusXS"
                    oneData.officialNum =0
                elseif officialNum =="1" then
                    oneData.officialPic = "Assets/Main/Sprites/UI/UIAlliance/UIAlliance_icon_office1"
                    oneData.officialNum =1
                elseif officialNum =="2" then
                    oneData.officialPic = "Assets/Main/Sprites/UI/UIAlliance/UIAlliance_icon_office2"
                    oneData.officialNum =2
                elseif officialNum =="3" then
                    oneData.officialPic = "Assets/Main/Sprites/UI/UIAlliance/UIAlliance_icon_office3"
                    oneData.officialNum =3
                elseif officialNum =="4" then
                    oneData.officialPic = "Assets/Main/Sprites/UI/UIAlliance/UIAlliance_icon_office4"
                    oneData.officialNum =4
                end
            end
            oneData.isInactive = v:CheckIfIsInactivePlayer()
            oneData.online_time =""
            oneData.isOnline = v.online
            if v.online then
                oneData.online_time = Localization:GetString("390188")
            else
                local deltaTime  = UITimeManager:GetInstance():GetServerTime()-v.offLineTime
                if deltaTime>24*60*60*1000 then
                    local day = math.floor(deltaTime/(24*60*60*1000))
                    oneData.online_time = Localization:GetString("390506",day)
                elseif deltaTime>60*60*1000 then
                    local hour = math.floor(deltaTime/(60*60*1000))
                    oneData.online_time = Localization:GetString("390505",hour)
                elseif deltaTime>60*1000 then
                    local minute = math.floor(deltaTime/(60*1000))
                    oneData.online_time = Localization:GetString("390504",minute)
                else
                    oneData.online_time = Localization:GetString("390504",1)
                end
            end
            if v.uid == selfUid then
                table.insert(showList, 1, oneData)
            else
                table.insert(showList,oneData)
            end
        end)

    end
    return showList
end

local function GetRankData(self,rank)
    local oneData = {}
    oneData.rank =rank
    local list = DataCenter.AllianceMemberDataManager:GetAllianceMemberListByRank(rank)
    local k1 = LuaEntry.DataConfig:TryGetStr("alliance_player_limit", "k1")
    local k2 = LuaEntry.DataConfig:TryGetStr("alliance_player_limit", "k2")
    if list~=nil and #list>0 then
        local count = #list
        if rank ==4 then
            oneData.rankNum = count.."/"..k1
        --elseif rank ==3 then--R3取消成员数量上限
        --    oneData.rankNum = count.."/"..k2
        else
            oneData.rankNum = count
        end
    else
        if rank ==4 then
            oneData.rankNum = "0".."/"..k1
        --elseif rank ==3 then--R3取消成员数量上限
        --    oneData.rankNum = "0".."/"..k2
        else
            oneData.rankNum = "0"
        end
    end
    return oneData
end


local function OnShowAllianceMemberTips(self,uid,rank,posX,posY,name)
    
    local selfAllianceId = LuaEntry.Player.allianceId
    if selfAllianceId == self:GetAllianceId() then
        local selfRank = DataCenter.AllianceBaseDataManager:GetSelfRank()
        local allianceMemberTipWind = UIManager:GetInstance():GetWindow(UIWindowNames.UIAllianceMemberTip)
        if allianceMemberTipWind then
            allianceMemberTipWind.View:Refresh(uid,rank,posX,posY,selfRank,UIWindowNames.UIAllianceMemberDetail,name, AllianceMemberOpenType.AllianceMember)
        else
            UIManager:GetInstance():OpenWindow(UIWindowNames.UIAllianceMemberTip,uid,rank,posX,posY,selfRank,UIWindowNames.UIAllianceMemberDetail,name, AllianceMemberOpenType.AllianceMember)
        end
        --UIManager:GetInstance():OpenWindow(UIWindowNames.UIAllianceMemberTip,uid,rank,posX,posY,selfRank,UIWindowNames.UIAllianceMemberDetail,name, AllianceMemberOpenType.AllianceMember)
    else
        local allianceMemberTipWind = UIManager:GetInstance():GetWindow(UIWindowNames.UIAllianceMemberTip)
        if allianceMemberTipWind then
            allianceMemberTipWind.View:Refresh(uid,rank,posX,posY,0,UIWindowNames.UIAllianceMemberDetail,name, AllianceMemberOpenType.AllianceMember)
        else
            UIManager:GetInstance():OpenWindow(UIWindowNames.UIAllianceMemberTip,uid,rank,posX,posY,0,UIWindowNames.UIAllianceMemberDetail,name, AllianceMemberOpenType.AllianceMember)
        end
        --UIManager:GetInstance():OpenWindow(UIWindowNames.UIAllianceMemberTip,uid,rank,posX,posY,0,UIWindowNames.UIAllianceMemberDetail,name, AllianceMemberOpenType.AllianceMember)
    end
    
end

local function OnOfficialViewOpen(self,officialNum, uid)
    local selfAllianceId = LuaEntry.Player.allianceId
    if selfAllianceId == self:GetAllianceId() then
        local selfRank = DataCenter.AllianceBaseDataManager:GetSelfRank()
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIAllianceOfficeSelect,selfRank,officialNum,uid)
    end
    
end

local function NeedShowInactive(self)
    return true
end

UIAllianceMainTableCtrl.GetLeaderData =GetLeaderData
UIAllianceMainTableCtrl.GetMemberListByRank =GetMemberListByRank
UIAllianceMainTableCtrl.GetRankData =GetRankData
UIAllianceMainTableCtrl.OnShowAllianceMemberTips = OnShowAllianceMemberTips
UIAllianceMainTableCtrl.OnOfficialViewOpen = OnOfficialViewOpen

--]]


UIAllianceMainTableCtrl.CloseSelf = CloseSelf
UIAllianceMainTableCtrl.CloseAll = CloseAll
UIAllianceMainTableCtrl.Close = Close
UIAllianceMainTableCtrl.GetAllianceId = GetAllianceId
UIAllianceMainTableCtrl.GetAllianceBaseData = GetAllianceBaseData
UIAllianceMainTableCtrl.CheckIsSelfAll = CheckIsSelfAll
UIAllianceMainTableCtrl.GetAllianceButtonShow = GetAllianceButtonShow
UIAllianceMainTableCtrl.GetRedPotCount = GetRedPotCount
UIAllianceMainTableCtrl.OnGotoClick = OnGotoClick
UIAllianceMainTableCtrl.GetAllianceManageList = GetAllianceManageList
UIAllianceMainTableCtrl.QuitAlliance = QuitAlliance
UIAllianceMainTableCtrl.DismissAlliance =DismissAlliance
UIAllianceMainTableCtrl.GetToggleRedPointCount =GetToggleRedPointCount
UIAllianceMainTableCtrl.InitAllianceMemberData =InitAllianceMemberData
UIAllianceMainTableCtrl.OnSetAnnounceClick = OnSetAnnounceClick
UIAllianceMainTableCtrl.NeedShowInactive = NeedShowInactive
--UIAllianceMainTableCtrl.GetLeaderData =GetLeaderData
--UIAllianceMainTableCtrl.GetMemberListByRank =GetMemberListByRank
--UIAllianceMainTableCtrl.GetRankData =GetRankData
--UIAllianceMainTableCtrl.OnShowAllianceMemberTips = OnShowAllianceMemberTips
--UIAllianceMainTableCtrl.OnOfficialViewOpen =OnOfficialViewOpen
return UIAllianceMainTableCtrl
