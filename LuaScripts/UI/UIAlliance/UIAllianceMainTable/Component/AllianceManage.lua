---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by guqu.
--- DateTime: 2020/7/28 18:58
---
local AllianceManage = BaseClass("AllianceManage",UIBaseContainer)
local base = UIBaseContainer
local AllianceManageButton = require "UI.UIAlliance.UIAllianceMainTable.Component.AllianceManageButton"
local Localization = CS.GameEntry.Localization

local content_path = "Manage/grid"


local function OnCreate(self)
    base.OnCreate(self)

    self.content = self:AddComponent(UIBaseContainer,content_path)
    self.buttonListInType ={}
    
end

local function OnDestroy(self)
    self:SetAllCellDestroy()
    self.buttonListInType =nil
    self.content = nil

    self.item_prefab = nil
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
    self:OnRefresh(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function OnRefresh(self)
    if table.count(self.buttonListInType)>=1 then
        table.walk(self.buttonListInType,function(k,v)
            v:OnRefreshRedPot(k)
        end)
    else
        local list = self.view.ctrl:GetAllianceManageList()
        
        if list~=nil then
            self:SetAllCellDestroy()
            self.modelCount =0
            for i = 1, table.length(list) do
                --复制基础prefab，每次循环创建一次
                self.model[self.modelCount] = self:GameObjectInstantiateAsync(UIAssets.AllianceManageButton, function(request)
                    if request.isError then
                        return
                    end
                    local go = request.gameObject;
                    go.gameObject:SetActive(true)
                    go.transform:SetParent(self.content.transform)
                    go.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
                    local nameStr = tostring(NameCount)
                    go.name = nameStr
                    NameCount = NameCount + 1
                    local cell = self.content:AddComponent(AllianceManageButton,nameStr,list[i])
                    cell:OnRefreshRedPot(list[i].type)
                    self.buttonListInType[list[i].type] =cell
                end)
            end
        end
    end
    
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.AllianceMemberRedPoint, self.OnRefreshApplyRedPot)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
    self:RemoveUIListener(EventId.AllianceMemberRedPoint, self.OnRefreshApplyRedPot)
end

local function OnRefreshApplyRedPot(self)
    if self.buttonListInType[AllianceButtonType.AllianceCheck]~=nil then
        self.buttonListInType[AllianceButtonType.AllianceCheck]:OnRefreshRedPot(AllianceButtonType.AllianceCheck)
    end
end


local function SetAllCellDestroy(self)
    self.content:RemoveComponents(AllianceManageButton)
    if self.model~=nil then
        for k,v in pairs(self.model) do
            if v ~= nil then
                self:GameObjectDestroy(v)
            end
        end
    end
    self.model ={}
    self.buttonListInType ={}
end

local function GetBtnGo(self, manegeType)
    return self.buttonListInType and self.buttonListInType[manegeType]
end

AllianceManage.OnCreate = OnCreate
AllianceManage.OnDestroy = OnDestroy
AllianceManage.OnRefresh = OnRefresh
AllianceManage.OnEnable = OnEnable
AllianceManage.OnDisable = OnDisable
AllianceManage.OnAddListener =OnAddListener
AllianceManage.OnRemoveListener =OnRemoveListener
AllianceManage.OnRefreshApplyRedPot =OnRefreshApplyRedPot
AllianceManage.SetAllCellDestroy = SetAllCellDestroy
AllianceManage.GetBtnGo = GetBtnGo
return AllianceManage