---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by guqu.
--- DateTime: 2020/11/10 21:27
---
local UISettingAllianceView = BaseClass("UISettingAllianceView",UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization
local AllianceFlagItem = require "UI.UIAlliance.UIAllianceFlag.Component.AllianceFlagItem"
local UIHeroTipView = require "UI.UIHero2.UIHeroTip.View.UIHeroTipView"

local txt_title_path ="fullTop/imgTitle/Common_img_title/titleText"
local close_btn_path = "fullTop/CloseBtn"
local abbr_change_btn_path = "AllianceSet/change/alAbbrObj/setAlAbbrBtn"
local cur_abbr_txt_path = "AllianceSet/change/alAbbrObj/alAbbr"
local abbr_des_txt_path = "AllianceSet/change/alAbbrObj/alAbbrTxt"

local name_change_btn_path = "AllianceSet/change/alNameObj/setAlNameBtn"
local cur_name_txt_path = "AllianceSet/change/alNameObj/alName"
local name_des_txt_path = "AllianceSet/change/alNameObj/alNameTxt"

local announce_btn_path = "AllianceSet/change/alAnnounceObj/announceBtn"
local alAnnounceTxt_path = "AllianceSet/change/alAnnounceObj/alAnnounceTxt"
local announce_txt_path = "AllianceSet/change/alAnnounceObj/Scroll/Viewport/Content/alAnnounce"

local language_des_txt_path ="AllianceSet/change/alLanguageObj/alLanguageTxt"
local language_set_txt_path = "AllianceSet/change/alLanguageObj/alLanguage"
local language_set_btn_path = "AllianceSet/change/alLanguageObj/setAlLanguageBtn"

--local join_des_path = "AllianceSet/change/joinSetDesObj"
--local join_des_txt_path = "AllianceSet/change/joinSetDesObj/joinDesText"
--local level_btn_path = "AllianceSet/change/joinSetDesObj/levelBtn"
--local level_des_path = "AllianceSet/change/joinSetDesObj/levelSetText"
--local power_des_path = "AllianceSet/change/joinSetDesObj/powerSetText"

local apply_text_path ="AllianceSet/change/applyObj/applyTxt"
local apply_on_bg_path = "AllianceSet/change/applyObj/applyBtn/guide_rect_dont_destroy"
local apply_on_btn_path = "AllianceSet/change/applyObj/applyBtn/OnRoot"
local apply_off_btn_path = "AllianceSet/change/applyObj/applyBtn/OffRoot"

local country_path = "AllianceSet/change/countryObj"
local countryTxt_path = "AllianceSet/change/countryObj/countryTxt"
local countryFlagImg_path = "AllianceSet/change/countryObj/countryFlag"
local countrySetBtn_path = "AllianceSet/change/countryObj/setCountryBtn"

local allianceFlag_path = "AllianceSet/flagBg/icon/AllianceFlag"
local changeAlFlagBtn_path = "AllianceSet/flagBg/changeFlagBtn"

--local recommend_path = "AllianceSet/change/recommendObj"
--local recommendDesc_path = "AllianceSet/change/recommendObj/recommendDesTxt"
--local recommendOn_path = "AllianceSet/change/recommendObj/recommendOn"
--local recommendOff_path = "AllianceSet/change/recommendObj/recommendOff"
--local recommendSwitchBtn_path = "AllianceSet/change/recommendObj/recommendBtn"
--local recommendInfoBtn_path = "AllianceSet/change/recommendObj/recommendInfoBtn"

local function OnCreate(self)
    base.OnCreate(self)
    self.txt_title = self:AddComponent(UITextMeshProUGUIEx, txt_title_path)
    self.txt_title:SetLocalText(390189) 
    self.cur_abbr_txt = self:AddComponent(UITextMeshProUGUIEx, cur_abbr_txt_path)
    self.abbr_des_txt = self:AddComponent(UITextMeshProUGUIEx, abbr_des_txt_path)
    self.cur_name_txt = self:AddComponent(UITextMeshProUGUIEx, cur_name_txt_path)
    self.name_des_txt = self:AddComponent(UITextMeshProUGUIEx, name_des_txt_path)
    self.language_des_txt = self:AddComponent(UITextMeshProUGUIEx, language_des_txt_path)
    self.language_set_txt = self:AddComponent(UITextMeshProUGUIEx, language_set_txt_path)
    self.alAnnounceTxtN = self:AddComponent(UITextMeshProUGUIEx, alAnnounceTxt_path)
    self.announce_txt = self:AddComponent(UITextMeshProUGUIEx, announce_txt_path)
    self.name_des_txt:SetLocalText(390288) 
    --self.abbr_des_txt:SetLocalText(100548) 
    --self.join_des_txt:SetLocalText(390095) 
    self.language_des_txt:SetLocalText(100101)
    --self.apply_des_txt:SetLocalText(390798)
    self.alAnnounceTxtN:SetLocalText(390513)
    --self.joinSetN = self:AddComponent(UIBaseContainer, join_des_path)
    --self.level_des = self:AddComponent(UITextMeshProUGUIEx, level_des_path)
    --self.power_des = self:AddComponent(UITextMeshProUGUIEx, power_des_path)
    
    --self.join_img = self:AddComponent(UIBaseContainer, join_img_path)
    --self.apply_img = self:AddComponent(UIBaseContainer, apply_img_path)
    
    self.announce_btn = self:AddComponent(UIButton, announce_btn_path)
    self.announce_btn:SetOnClick(function()  
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnIntroClick()
    end)
    
    --self.level_btn = self:AddComponent(UIButton, level_btn_path)
    --self.level_btn:SetOnClick(function()  
    --    SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
    --    self:OnLevelClick()
    --end)
    --self.apply_set_btn = self:AddComponent(UIButton, apply_set_btn_path)
    --self.apply_set_btn:SetOnClick(function()  
    --    SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
    --    self:OnApplySetClick()
    --end)
    
    self.language_set_btn = self:AddComponent(UIButton, language_set_btn_path)
    self.language_set_btn:SetOnClick(function()  
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnLanguageClick()
    end)
    
    self.abbr_change_btn = self:AddComponent(UIButton, abbr_change_btn_path)
    self.abbr_change_btn:SetOnClick(function()  
SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnChangeAbbrClick()
    end)
    self.name_change_btn = self:AddComponent(UIButton, name_change_btn_path)
    self.name_change_btn:SetOnClick(function()  
SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnChangeNameClick()
    end)
    self.close_btn = self:AddComponent(UIButton, close_btn_path)
    self.close_btn:SetOnClick(function()  
        self.ctrl:CloseSelf()
    end)
    
    self.allianceFlagN = self:AddComponent(AllianceFlagItem, allianceFlag_path)
    self.changeAlFlagBtnN = self:AddComponent(UIButton, changeAlFlagBtn_path)
    self.changeAlFlagBtnN:SetOnClick(function()
        self:OnClickChangeAlFlagBtn()
    end)
    
    self.countryN = self:AddComponent(UIBaseContainer, country_path)
    self.countryN:SetActive(not LuaEntry.Player:IsHideCountryFlag())
    self.countryTxtN = self:AddComponent(UITextMeshProUGUIEx, countryTxt_path)
    self.countryTxtN:SetLocalText(143589)
    self.countryFlagN = self:AddComponent(UIImage, countryFlagImg_path)
    self.countryFlagN:SetActive(not LuaEntry.Player:IsHideCountryFlag())
    self.SetCountryBtnN = self:AddComponent(UIButton, countrySetBtn_path)
    self.SetCountryBtnN:SetOnClick(function()
        self:OnClickSetCoutryBtn()
    end)
    self.apply_text = self:AddComponent(UITextMeshProUGUIEx, apply_text_path)
    self.apply_on_bg = self:AddComponent(UIImage, apply_on_bg_path)
    self.apply_on_btn = self:AddComponent(UIButton, apply_on_btn_path)
    self.apply_on_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnApplyOnBtnClick()
    end)
    self.apply_off_btn = self:AddComponent(UIButton, apply_off_btn_path)
    self.apply_off_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnApplyOffBtnClick()
    end)
    
    
    --self.recommendN = self:AddComponent(UIBaseContainer, recommend_path)
    --self.recommendDescN = self:AddComponent(UITextMeshProUGUIEx, recommendDesc_path)
    --self.recommendDescN:SetLocalText(391104)
    --self.recommendOnN = self:AddComponent(UIBaseContainer, recommendOn_path)
    --self.recommendOffN = self:AddComponent(UIBaseContainer, recommendOff_path)
    --self.recommendSwitchBtnN = self:AddComponent(UIButton, recommendSwitchBtn_path)
    --self.recommendSwitchBtnN:SetOnClick(function()
    --    self:OnClickRecommendBtn()
    --end)
    --self.recommendInfoBtnN = self:AddComponent(UIButton, recommendInfoBtn_path)
    --self.recommendInfoBtnN:SetOnClick(function()
    --    self:OnClickRecommendInfoBtn()
    --end)
end

local function OnDestroy(self)
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
    self:OnInitView()
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function OnInitView(self)
    self.data = self.ctrl:GetCurrentAllianceData()
    self:SetCurrentAbbr(self.data.abbr)
    self:SetCurrentName(self.data.name)
    self:SetIntro(self.data.intro)
    self:SetCurrentJoinSetting(self.data.recruitTotal)
    --self:SetRecommendSetting(self.data.recommendFunc)
    self:SetLanguage(self.data.language)
    --local str = self.data.castleRestrictionN ..";"..self.data.powerRestrictionN
    --self:SetRestriction(str)
    self:SetFlag(self.data.icon)
    self:SetCountry(self.data.country)
    self.apply_text:SetLocalText(390798)
end

local function SetFlag(self, value)
    self.allianceFlagN:SetData(value)
end

local function SetCountry(self, value)
    local template = DataCenter.NationTemplateManager:GetNationTemplate(value)
    if template then
        self.countryFlagN:LoadSprite(template:GetNationFlagPath())
    end
end

local function SetIntro(self,value)
    self.intro = value
    DataCenter.AllianceBaseDataManager:SetIntro(value)
    self.announce_txt:SetText(value)
    
end
local function SetCurrentAbbr(self,value)
    self.curAbbr = value
    self.cur_abbr_txt:SetText(value)
end
local function SetCurrentName(self,value)
    self.curName = value
    self.cur_name_txt:SetText(value)
end

local function SetRecommendSetting(self, state)
    self.recommendSwitch = state or 0
    self.recommendOnN:SetActive(self.recommendSwitch == 0)
    self.recommendOffN:SetActive(self.recommendSwitch == 1)
end

local function SetCurrentJoinSetting(self,state)
    self.joinSetting = state
    if state ==0 then
        self.apply_on_btn:SetActive(true)
        self.apply_off_btn:SetActive(false)
        self.apply_on_bg:LoadSprite(string.format(LoadPath.CommonPath, "bonfire_img_on"))
    else
        self.apply_on_btn:SetActive(false)
        self.apply_off_btn:SetActive(true)
        self.apply_on_bg:LoadSprite(string.format(LoadPath.CommonPath, "bonfire_img_off"))
    end
end
local function SetLanguage(self,language)
    self.language = language
    self.language_set_txt:SetLocalText(language) 
end

local function SetRestriction(self,str)
    self.joinSetN:SetActive(false)
    --self.arr = string.split(str,";")
    --if #self.arr>1 then
    --    self.levelRestriction = self.arr[1]
    --    self.powerRestriction = self.arr[2]
    --    self.level_des:SetText(Localization:GetString("100082").." > "..self.levelRestriction)
    --    self.power_des:SetText(Localization:GetString("100644").." > "..string.GetFormattedSeperatorNum(self.powerRestriction))
    --end
    
end

local function OnClickChangeAlFlagBtn(self)
    local param = {}
    local baseData = DataCenter.AllianceBaseDataManager:GetAllianceBaseData()
    param.curFlag = baseData.icon
    local k3 = LuaEntry.DataConfig:TryGetNum("alliance_cost", "k3")
    param.cost = k3
    param.callback = function(strNew)
        UIUtil.ShowMessage(Localization:GetString("391054"),2,"","", function()
            SFSNetwork.SendMessage(MsgDefines.AllianceChangeAttributes,nil,nil,nil,nil,nil,nil,nil,nil,nil,strNew)
            self.ctrl:CloseSelf()
        end, function()
        end)
    end
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIAllianceFlag, {anim = true}, param)
end

local function OnClickRecommendBtn(self)
    local tempState = self.recommendSwitch == 0 and 1 or 0
    self:SetRecommendSetting(tempState)
    self.ctrl:OnRecommendClick(tempState)
end

local function OnLanguageClick(self)
    self.ctrl:OnLanguageClick(self.language)
end
local function OnChangeAbbrClick(self)
    self.ctrl:OnChangeAbbrClick(self.curAbbr)
end
local function OnChangeNameClick(self)
    self.ctrl:OnChangeNameClick(self.curName)
end
local function OnIntroClick(self)
    self.ctrl:OnIntroClick(self.intro)
end

local function OnLevelClick(self)
    self.ctrl:OnLevelClick(self.levelRestriction,self.powerRestriction)
end

local function OnClickSetCoutryBtn(self)
    local tempNation = DefaultNation
    local allianceBase = DataCenter.AllianceBaseDataManager:GetAllianceBaseData()
    if allianceBase and allianceBase.country then
        tempNation = allianceBase.country
    end
    UIManager:GetInstance():OpenWindow(UIWindowNames.UISetPlayerNation, { anim = true, isBlur = true}, {nation = tempNation, callback = function(tempSelected)
        SFSNetwork.SendMessage(MsgDefines.AllianceChangeAttributes,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,tempSelected)
    end})
end

local function OnClickRecommendInfoBtn(self)
    local scaleFactor = UIManager:GetInstance():GetScaleFactor()
    local position = self.recommendInfoBtnN.transform.position + Vector3.New(-15, 0, 0) * scaleFactor

    local param = UIHeroTipView.Param.New()
    param.content = Localization:GetString("391105")
    param.dir = UIHeroTipView.Direction.LEFT
    param.defWidth = 180
    param.pivot = 0.5
    param.position = position
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIHeroTip, { anim = false }, param)
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.AllianceNameChange, self.SetCurrentName)
    self:AddUIListener(EventId.AllianceAbbrChange, self.SetCurrentAbbr)
    self:AddUIListener(EventId.AllianceLanguage, self.SetLanguage)
    self:AddUIListener(EventId.AllianceIntro, self.SetIntro)
    self:AddUIListener(EventId.AllianceRestriction, self.SetRestriction)
    self:AddUIListener(EventId.AllianceFlagChanged, self.SetFlag)
    self:AddUIListener(EventId.AllianceCountryChanged, self.SetCountry)
    self:AddUIListener(EventId.OnAllianceRecommendChange, self.SetRecommendSetting)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
    self:RemoveUIListener(EventId.AllianceNameChange, self.SetCurrentName)
    self:RemoveUIListener(EventId.AllianceAbbrChange, self.SetCurrentAbbr)
    self:RemoveUIListener(EventId.AllianceIntro, self.SetIntro)
    self:RemoveUIListener(EventId.AllianceRestriction, self.SetRestriction)
    self:RemoveUIListener(EventId.AllianceFlagChanged, self.SetFlag)
    self:RemoveUIListener(EventId.AllianceCountryChanged, self.SetCountry)
    self:RemoveUIListener(EventId.OnAllianceRecommendChange, self.SetRecommendSetting)
end

function UISettingAllianceView:OnApplyOnBtnClick()
    self:SetCurrentJoinSetting(1)
    self.ctrl:OnChangeClick(self.joinSetting)
end

function UISettingAllianceView:OnApplyOffBtnClick()
    self:SetCurrentJoinSetting(0)
    self.ctrl:OnChangeClick(self.joinSetting)
end


UISettingAllianceView.OnCreate= OnCreate
UISettingAllianceView.OnDestroy = OnDestroy
UISettingAllianceView.OnEnable = OnEnable
UISettingAllianceView.OnDisable = OnDisable
UISettingAllianceView.OnInitView = OnInitView
UISettingAllianceView.SetCurrentAbbr = SetCurrentAbbr
UISettingAllianceView.SetCurrentName = SetCurrentName
UISettingAllianceView.SetCurrentJoinSetting = SetCurrentJoinSetting
UISettingAllianceView.SetRecommendSetting = SetRecommendSetting
UISettingAllianceView.SetLanguage = SetLanguage
UISettingAllianceView.OnLanguageClick = OnLanguageClick
UISettingAllianceView.OnChangeAbbrClick = OnChangeAbbrClick
UISettingAllianceView.OnChangeNameClick = OnChangeNameClick
UISettingAllianceView.OnAddListener = OnAddListener
UISettingAllianceView.OnRemoveListener = OnRemoveListener
UISettingAllianceView.SetIntro = SetIntro
UISettingAllianceView.OnLevelClick =OnLevelClick
UISettingAllianceView.OnIntroClick = OnIntroClick
UISettingAllianceView.SetRestriction = SetRestriction
UISettingAllianceView.OnApplySetClick = OnApplySetClick
UISettingAllianceView.OnClickChangeAlFlagBtn = OnClickChangeAlFlagBtn
UISettingAllianceView.OnClickSetCoutryBtn = OnClickSetCoutryBtn
UISettingAllianceView.OnClickRecommendInfoBtn = OnClickRecommendInfoBtn
UISettingAllianceView.SetFlag = SetFlag
UISettingAllianceView.SetCountry = SetCountry
UISettingAllianceView.OnClickRecommendBtn = OnClickRecommendBtn
return UISettingAllianceView