---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by guqu.
--- DateTime: 2020/11/10 21:27
---
local UISettingAllianceCtrl = BaseClass("UISettingAllianceCtrl", UIBaseCtrl)

local function CloseSelf(self)
    UIManager:GetInstance():DestroyWindow(UIWindowNames.UISettingAlliance)
end

local function Close(self)
    UIManager:GetInstance():DestroyWindowByLayer(UILayer.Normal)
end

local function GetCurrentAllianceData(self)
    local oneData ={}
    oneData.abbr =""
    oneData.name = ""
    oneData.intro = ""
    oneData.recruitTotal = 0
    oneData.language = "390759"
    oneData.castleRestrictionN = 1
    oneData.powerRestrictionN = 0
    oneData.country = DefaultNation
    local data =  DataCenter.AllianceBaseDataManager:GetAllianceBaseData()
    if data~=nil then
        oneData.abbr = data.abbr
        oneData.icon = data.icon
        oneData.name = data.allianceName
        oneData.intro = data.intro
        oneData.country = data.country
        oneData.recruitTotal = data.recruitTotal
        oneData.recommendFunc = data.recommendFunc
        oneData.castleRestrictionN = data.castleRestrictionN
        oneData.powerRestrictionN = data.powerRestrictionN
        if data.language~=nil and data.language~=""then
            oneData.language = data.language
        end
    end
    return oneData
end

local function OnChangeAbbrClick(self,abbr)
    local param = {}
    param.curAbbr = abbr
    local alBaseInfo = DataCenter.AllianceBaseDataManager:GetAllianceBaseData()
    param.cost = 0
    if alBaseInfo and (alBaseInfo.createdByPlayer or alBaseInfo.abbrRename > 0) then
        local k2 = LuaEntry.DataConfig:TryGetStr("alliance_cost", "k2")
        param.cost = tonumber(k2)
    end
    param.callback = function(value)
        SFSNetwork.SendMessage(MsgDefines.AllianceChangeAttributes,"",value,-1,"","")
    end
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIAllianceChangeAbbr,{anim = true},param)
end
local function OnChangeNameClick(self,name)
    local param = {}
    param.curName = name
    local alBaseInfo = DataCenter.AllianceBaseDataManager:GetAllianceBaseData()
    param.cost = (alBaseInfo and not alBaseInfo.createdByPlayer and alBaseInfo.rename == 0) and 0 or CreateAllianceCostGold
    param.callback = function(value)
        SFSNetwork.SendMessage(MsgDefines.AllianceChangeAttributes,value,"",-1,"","")
    end
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIAllianceChangeName,{anim = true},param)
end

local function OnLanguageClick(self,language)
    local param = {}
    param.curLanguage = language
    param.callback = function(value)
        EventManager:GetInstance():Broadcast(EventId.AllianceLanguage,value)
        SFSNetwork.SendMessage(MsgDefines.AllianceChangeAttributes,"","",-1,"",value)
    end
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIAllianceChangeLanguage,{anim = true},param)
end

local function OnChangeClick(self,joinSetting)
    SFSNetwork.SendMessage(MsgDefines.AllianceChangeAttributes,"","",joinSetting)
    --self:CloseSelf()
end

local function OnRecommendClick(self, recommendState)
    SFSNetwork.SendMessage(MsgDefines.AllianceChangeAttributes,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil, recommendState)
end

local function OnIntroClick(self, intro)
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIAllianceChangeAnnounce,{anim = true, isBlur = true}, 1, intro)
end

local function OnLevelClick(self,levelRestriction,powerRestriction)
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIAllianceChangeRestriction,{anim = true},levelRestriction,powerRestriction)
end

UISettingAllianceCtrl.CloseSelf =CloseSelf
UISettingAllianceCtrl.Close =Close
UISettingAllianceCtrl.GetCurrentAllianceData =GetCurrentAllianceData
UISettingAllianceCtrl.OnChangeAbbrClick =OnChangeAbbrClick
UISettingAllianceCtrl.OnChangeNameClick =OnChangeNameClick
UISettingAllianceCtrl.OnLanguageClick = OnLanguageClick
UISettingAllianceCtrl.OnChangeClick = OnChangeClick
UISettingAllianceCtrl.OnIntroClick = OnIntroClick
UISettingAllianceCtrl.OnLevelClick = OnLevelClick
UISettingAllianceCtrl.OnRecommendClick = OnRecommendClick
return UISettingAllianceCtrl