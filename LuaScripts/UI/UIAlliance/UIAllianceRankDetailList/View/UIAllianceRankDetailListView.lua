---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by guqu.
--- DateTime: 2020/11/16 20:45
---
local AllianceRankListItem = require "UI.UIAlliance.UIAllianceRankDetailList.Component.AllianceRankListItem"
local UIAllianceRankDetailListView = BaseClass("UIAllianceRankDetailListView",UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization

local txt_title_path ="ImgBg/TxtTitle"
local close_btn_path = "ImgBg/BtnClose"
local return_btn_path = "Panel"
local name_des_path = "ImgBg/select/nameDes"
local donate_des_path = "ImgBg/select/donateDes"
local honor_des_path = "ImgBg/select/honorDes"
local time_txt_path = "ImgBg/TimeTxt"
local self_donate_des_path ="ImgBg/selfObj/donateDesTxt"
local self_donate_txt_path = "ImgBg/selfObj/donateTxt"
local num_txt_path = "ImgBg/selfObj/numTxt"
local self_honor_des_path ="ImgBg/selfObj/honorDesTxt"
local self_honor_txt_path = "ImgBg/selfObj/honorTxt"
local self_first_txt_path = "ImgBg/selfObj/firstTxt"

local scroll_path = "ImgBg/ScrollView"

local function OnCreate(self)
    base.OnCreate(self)
    self.type = self:GetUserData()
    self.isUpdate =false
    self.lastChangeTextDeltaTime = 0
    self.txt_title = self:AddComponent(UIText, txt_title_path)
    self.name_des = self:AddComponent(UIText, name_des_path)
    self.donate_des = self:AddComponent(UIText, donate_des_path)
    self.honor_des = self:AddComponent(UIText, honor_des_path)
    self.self_donate_txt = self:AddComponent(UIText, self_donate_txt_path)
    self.self_honor_des = self:AddComponent(UIText, self_honor_des_path)
    self.self_honor_txt = self:AddComponent(UIText, self_honor_txt_path)
    
    self.self_first_txt = self:AddComponent(UIText, self_first_txt_path)
    self.self_donate_des = self:AddComponent(UIText, self_donate_des_path)
    self.time_txt = self:AddComponent(UIText, time_txt_path)
    self.num_txt = self:AddComponent(UIText, num_txt_path)
    self.close_btn = self:AddComponent(UIButton, close_btn_path)
    self.close_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)
    self.return_btn = self:AddComponent(UIButton, return_btn_path)
    self.return_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)

    self.ScrollView = self:AddComponent(UIScrollView, scroll_path)
    self.ScrollView:SetOnItemMoveIn(function(itemObj, index)
        self:OnRankItemMoveIn(itemObj, index)
    end)
    self.ScrollView:SetOnItemMoveOut(function(itemObj, index)
        self:OnRankItemMoveOut(itemObj, index)
    end)
end

local function OnDestroy(self)
    self.type =nil
    self.txt_title = nil
    self.name_des = nil
    self.donate_des = nil
    self.honor_des =nil
    self.self_donate_txt = nil
    self.self_honor_des = nil
    self.self_honor_txt = nil
    self.num_txt =nil
    self.self_first_txt = nil
    self.self_donate_des = nil
    self.time_txt = nil
    self.close_btn = nil
    self.return_btn = nil
    self.ScrollView = nil
    self.rankList =nil
    base.OnDestroy(self)
end

local function Update(self)
    if self.isUpdate then
        self:UpdateTime()
    end
end

local function UpdateTime(self)
    local curTime = UITimeManager:GetInstance():GetServerTime()
    local deltaTime =0
    if self.refreshTime > curTime then
        self.isUpdate =true
        deltaTime = self.refreshTime - curTime
    else
        self.isUpdate =false

    end
    if self.isUpdate then
        if TimeBarUtil.CheckIsNeedChangeText(deltaTime,self.lastChangeTextDeltaTime) then
            self.lastChangeTextDeltaTime = deltaTime
            self.time_txt:SetLocalText(390268, UITimeManager:GetInstance():MilliSecondToFmtString(deltaTime)) 
        end
    else
        self.lastChangeResTextDeltaTime =0
        self.time_txt:SetText("")
    end
end

local function InitViewText(self,type)

    self.name_des:SetLocalText(390269) 
    self.donate_des:SetLocalText(360203) 
    self.honor_des:SetLocalText(390261) 
    self.self_honor_des:SetLocalText(390261) 
    self.self_donate_des:SetLocalText(360203) 
    
    if type == AllianceDonateRankType.RankDay then
        self.txt_title:SetLocalText(390263) 
        SFSNetwork.SendMessage(MsgDefines.AllianceDonateRankDay)
    elseif type == AllianceDonateRankType.RankWeek then
        self.txt_title:SetLocalText(390207) 
        SFSNetwork.SendMessage(MsgDefines.AllianceDonateRankWeek)
    elseif type == AllianceDonateRankType.RankHistory then
        self.txt_title:SetLocalText(390264) 
        SFSNetwork.SendMessage(MsgDefines.AllianceDonateRankAll)
    end
    
end
local function RefreshRankList(self)
    self:ClearScroll(self)
    local rankData = self.ctrl:GetRankList(self.type)
    self.refreshTime = rankData.refreshTime
    self.rankList = rankData.rankList
    if #self.rankList >0 then
        self.ScrollView:SetTotalCount(#self.rankList)
        self.ScrollView:RefillCells()
    end
    self:RefreshSelfContent()
    self:UpdateTime()
end
local function RefreshSelfContent(self)
    local currentData = self.ctrl:GetSelfData(self.type)
    self.num_txt:SetText(currentData.rank)
    self.self_first_txt:SetText(currentData.firstName)
    self.self_donate_txt:SetText(currentData.donation)
    self.self_honor_txt:SetText(currentData.alliance_honor)
end
local function OnEnable(self)
    base.OnEnable(self)
    self:InitViewText(self.type)
end
local function OnDisable(self)
    self:ClearScroll(self)
    base.OnDisable(self)

end
local function OnRankItemMoveIn(self,itemObj, index)
    itemObj.name = tostring(index)
    local cellItem = self.ScrollView:AddComponent(AllianceRankListItem, itemObj)
    cellItem:SetItemShow(self.rankList[index])
end
local function OnRankItemMoveOut(self, itemObj, index)
    self.ScrollView:RemoveComponent(itemObj.name, AllianceRankListItem)
end
local function ClearScroll(self)
    self.ScrollView:ClearCells()
    self.ScrollView:RemoveComponents(AllianceRankListItem)
end
local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.AllianceDonateRankDay, self.RefreshRankList)
    self:AddUIListener(EventId.AllianceDonateRankWeek, self.RefreshRankList)
    self:AddUIListener(EventId.AllianceDonateRankAll, self.RefreshRankList)
end
local function OnRemoveListener(self)
    base.OnRemoveListener(self)
    self:RemoveUIListener(EventId.AllianceDonateRankDay, self.RefreshRankList)
    self:RemoveUIListener(EventId.AllianceDonateRankWeek, self.RefreshRankList)
    self:RemoveUIListener(EventId.AllianceDonateRankAll, self.RefreshRankList)
end

UIAllianceRankDetailListView.OnCreate= OnCreate
UIAllianceRankDetailListView.OnDestroy = OnDestroy
UIAllianceRankDetailListView.InitViewText = InitViewText
UIAllianceRankDetailListView.RefreshRankList = RefreshRankList
UIAllianceRankDetailListView.RefreshSelfContent = RefreshSelfContent
UIAllianceRankDetailListView.OnEnable = OnEnable
UIAllianceRankDetailListView.OnDisable = OnDisable
UIAllianceRankDetailListView.OnRankItemMoveIn = OnRankItemMoveIn
UIAllianceRankDetailListView.OnRankItemMoveOut = OnRankItemMoveOut
UIAllianceRankDetailListView.ClearScroll = ClearScroll
UIAllianceRankDetailListView.OnAddListener = OnAddListener
UIAllianceRankDetailListView.OnRemoveListener = OnRemoveListener
UIAllianceRankDetailListView.Update =Update
UIAllianceRankDetailListView.UpdateTime =UpdateTime

return UIAllianceRankDetailListView