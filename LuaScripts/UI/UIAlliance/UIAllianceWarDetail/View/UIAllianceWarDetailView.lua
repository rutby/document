---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by guqu.
--- DateTime: 2020/8/10 18:04
---
---
local AllianceWarTeamItem = require "UI.UIAlliance.UIAllianceWarMainTable.Component.AllianceWarItem"
local AllianceWarJoinItem = require "UI.UIAlliance.UIAllianceWarDetail.Component.AllianceWarJoinItem"
local AllianceWarPlayerItem = require "UI.UIAlliance.UIAllianceWarDetail.Component.AllianceWarPlayerItem"
local UIAllianceWarDetailView = BaseClass("UIAllianceWarDetailView",UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization

local txt_title_path ="UICommonPopUpTitle/bg_mid/titleText"
local close_btn_path = "UICommonPopUpTitle/bg_mid/CloseBtn"
--local goBack_btn_path = "ImgBg/Btn_GoBack"
local content_path = "ImgBg/ScrollView/Viewport/Content"
local helpContent_path = "ImgBg/ScrollView/Viewport/Content/helpContent"
local attackContent_path = "ImgBg/ScrollView/Viewport/Content/attackContent"
local attackSign_path = "ImgBg/ScrollView/Viewport/Content/attackContent/attackSign"
local attackSing_txt_path = "ImgBg/ScrollView/Viewport/Content/attackContent/attackSign/attackSing_Txt"
local return_btn_path = "UICommonPopUpTitle/panel"
local war_item_obj_path = "ImgBg/AllianceWarItem"
local join_obj_path = "ImgBg/ScrollView/Viewport/Content/AllianceWarJoinItem"
local SoliderInfoBg = "ImgBg/SoliderInfoBg"
local desTxt_path = "ImgBg/desObj/desTxt"
local btn_info_path = "ImgBg/desObj/desTxt/Btn_Info"
local army_info_path = "ImgBg/desObj/desTxt/Btn_Info/Solider_Info"
local teamLimit_path = "ImgBg/ScrollView/Viewport/Content/TeamLimit"
local teamLimit_txt_path = "ImgBg/ScrollView/Viewport/Content/TeamLimit/limitTxt"
local teamLimit_btn_path = "ImgBg/ScrollView/Viewport/Content/TeamLimit/limitTxt/Btn_TeamRuleInfo"
local teamRule_path = "ImgBg/TeamRule"
local teamRule_txt_path = "ImgBg/TeamRule/desc"

local function OnCreate(self)
    base.OnCreate(self)
    self.ctrl:SetSelfUuid(self:GetUserData())
    self.isAlliance,self.helpOrAttack = self:GetUserData()
    self.title = self:AddComponent(UITextMeshProUGUIEx,txt_title_path)
    if self.helpOrAttack then
        self.title:SetLocalText(390164)
    else
        self.title:SetLocalText(141024)
    end
    self.close_btn = self:AddComponent(UIButton, close_btn_path)
    self.close_btn:SetOnClick(function()  
SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:ClickPanel()
    end)
    --self.goback_btn = self:AddComponent(UIButton,goBack_btn_path)
    --self.goback_btn:SetOnClick(function()
    --    SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
    --    self:ClickPanel()
    --end)
    self.return_btn = self:AddComponent(UIButton, return_btn_path)
    self.return_btn:SetOnClick(function()  
SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:ClickPanel()
    end)
    self.war_item_obj = self:AddComponent(AllianceWarTeamItem,war_item_obj_path)
    self.war_item_obj:SetUuid(self.ctrl:GetSelfUuid())
    self.join_obj = self:AddComponent(AllianceWarJoinItem,join_obj_path)
    self.content = self:AddComponent(UIBaseContainer,content_path)
    self.helpContent = self:AddComponent(UIBaseContainer,helpContent_path)
    self.attackContent = self:AddComponent(UIBaseContainer,attackContent_path)
    self.attackSign = self:AddComponent(UIBaseContainer,attackSign_path)
    self.attackSing_txt = self:AddComponent(UITextMeshProUGUIEx,attackSing_txt_path)
    
    self._army_rect = self:AddComponent(UIBaseContainer,army_info_path)
    self._arm_rectTab = {}
    for i=1,3 do
        local rectpath = "ImgBg/desObj/desTxt/Btn_Info/Solider_Info/Type"..i
        local txtpath =  "ImgBg/desObj/desTxt/Btn_Info/Solider_Info/Type"..i.."/Num"..i
        self._arm_rectTab[i] = {
            rect = self:AddComponent(UIBaseContainer,rectpath),
            txt = self:AddComponent(UITextMeshProUGUIEx,txtpath),
        }
    end
    
    self.SoliderInfoBg = self:AddComponent(UIButton,SoliderInfoBg)
    self.SoliderInfoBg:SetOnClick(function()  
SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:ClickBg()
    end)
    self.desTxt = self:AddComponent(UITextMeshProUGUIEx,desTxt_path)
    self._info_btn = self:AddComponent(UIButton,btn_info_path)
    self._info_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:ClickInfo()
    end)
    
    self.teamLimit = self:AddComponent(UIBaseContainer,teamLimit_path)
    self.teamLimit_txt = self:AddComponent(UITextMeshProUGUIEx,teamLimit_txt_path)
    self.teamLimit_btn = self:AddComponent(UIButton,teamLimit_btn_path)
    self.teamLimit_btn:SetOnClick(function()
        SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:ClickTeamRule()
    end)
    self.teamRule = self:AddComponent(UIBaseContainer,teamRule_path)
    self.teamRule_txt = self:AddComponent(UITextMeshProUGUIEx,teamRule_txt_path)
    self.teamRule_txt:SetLocalText(390858)
end

local function OnDestroy(self)
    self.isAlliance = nil
    self.helpOrAttack = nil
    self.title = nil
    self:SetAllCellDestroy()
    self.content = nil
    self.return_btn =nil
    self.close_btn = nil
    self.war_item_obj = nil
    self.join_obj = nil
    self.troops_warobj = nil
    self._arm_rectTab = nil
    self._army_rect = nil
    self.teamLimit = nil
    self.teamLimit_txt = nil
    self.teamLimit_btn = nil
    self.teamRule = nil
    self.teamRule_txt = nil
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
    self:OnRefresh()
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function OnRefresh(self)
    --self.contenttemp = self.helpOrAttack and self.attackContent or self.helpContent
    self.helpContent:SetActive(self.helpOrAttack)
    self.war_item_obj:RefreshData()
    local data = self.war_item_obj:GetSelfData()
    --是援助计算增援部队数量。不是援助计算敌方部队数量
    if self.helpOrAttack then
        local listHlep  = self.ctrl:GetAllSoldiersInfo(data)
        local numHelp = 0
        for i, v in pairs(listHlep) do
            numHelp = numHelp + v
        end
        self.desTxt:SetLocalText(310160,string.GetFormattedSeperatorNum(numHelp))
        local listAttack  = self.ctrl:GetAllSoldiersInfo()
        local numAttack = 0
        for i, v in pairs(listAttack) do
            numAttack = numAttack + v
        end
        self.attackSing_txt:SetText(Localization:GetString("141041")..numAttack)
    else
        local list  = self.ctrl:GetAllSoldiersInfo()
        local num = 0
        for i, v in pairs(list) do
            num = num + v
        end
        self.desTxt:SetLocalText(310160,string.GetFormattedSeperatorNum(num))
    end
 
    self:SetAllCellDestroy()
    if self.helpOrAttack then
        self.helpContent:RemoveComponents(AllianceWarPlayerItem)
        --获取增援部队
        local buildData = self.ctrl:GetBuildData(data)
        local list = self.ctrl:GetHelpIdList(data)
        if buildData.join then
            self.join_obj:SetActive(true)
            self.join_obj:SetState(true,data)
        else
            self.join_obj:SetActive(false)
        end
     --   self.num_txt:SetText(Localization:GetString(GameDialogDefine.ASSISTANCE_NUM)..table.length(list).."/"..buildData.maxNum)  SetUuid
        local isHaveMeMarch = false
        local selfMarch = DataCenter.WorldMarchDataManager:GetOwnerMarches(LuaEntry.Player.uid, LuaEntry.Player.allianceId)
        local marchss = {}
        if #selfMarch > 0 then
            for i = 1, #selfMarch do
                local march = selfMarch[i]
                table.insert(marchss,march.uuid)
            end
        end
        
        for i = 1, table.length(list) do
            self.marchTop[list[i]] = self:GameObjectInstantiateAsync(UIAssets.AllianceWarPlayerItem, function(request)
                if request.isError then
                    return
                end
                local go = request.gameObject;
                go.gameObject:SetActive(true)
                go.transform:SetParent(self.helpContent.transform)
                go.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
                local nameStr = tostring(NameCount)
                go.name = nameStr
                NameCount = NameCount + 1
                local cell = self.helpContent:AddComponent(AllianceWarPlayerItem,nameStr)
                cell:SetUuid(list[i])
                cell:RefreshData(data)
            end)
            for j = 1, #marchss do
                if list[i] == marchss[j] then
                    isHaveMeMarch = true
                end
            end
        end
        self.teamLimit_txt:SetLocalText(141070)
        self.teamLimit:SetActive(isHaveMeMarch)
    end
    

    
    self._army_rect:SetActive(false)
    self.teamRule:SetActive(false)
    
    local list = nil
    if self.helpOrAttack then
        --出征后才可查看敌方部队信息
        local curTime = UITimeManager:GetInstance():GetServerTime()
        if data.waitTime < curTime and data.marchTime < curTime then
            list = self.ctrl:GetPlayerIdList()
            self.attackSign:SetActive(self.helpOrAttack)
        end
    else
        local curTime = UITimeManager:GetInstance():GetServerTime()
        if data.inMarch then
            self.join_obj:SetActive(false)
        else
            self.join_obj:SetActive((data.cancel==false) and (data.isAttack == false) and (data.inTeam ==false) and (data.canJoinNum ~= data.assemblyMarchMax))
            if curTime > data.waitTime then
                self.join_obj:SetActive(false)
            end
        end
        if self.join_obj:GetActive() then
            self.join_obj:SetState(data.join)
        end
        self.attackSign:SetActive(false)
        self.teamLimit_txt:SetLocalText(390857) 
        self.teamLimit:SetActive(data.canJoinNum == data.assemblyMarchMax)
        list = self.ctrl:GetPlayerIdList()
    end
    if list~=nil then
        for i = 1, table.length(list) do
            --复制基础prefab，每次循环创建一次
            self.marchBottom[list[i]] = self:GameObjectInstantiateAsync(UIAssets.AllianceWarPlayerItem, function(request)
                if request.isError then
                    return
                end
                local go = request.gameObject;
                go.gameObject:SetActive(true)
                go.transform:SetParent(self.attackContent.transform)
                go.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
                local nameStr = tostring(NameCount)
                go.name = nameStr
                NameCount = NameCount + 1
                local cell = self.attackContent:AddComponent(AllianceWarPlayerItem,nameStr)
                cell:SetUuid(list[i])
                cell:RefreshData(false)
            end)
        end
    end
end

local function SetAllCellDestroy(self)
    self.attackContent:RemoveComponents(AllianceWarPlayerItem)
    if self.marchBottom and next(self.marchBottom) then
        for k,v in pairs(self.marchBottom) do
            if v ~= nil then
                self:GameObjectDestroy(v)
            end
        end
    end
    if self.marchTop and next(self.marchTop) then
        for k,v in pairs(self.marchTop) do
            if v ~= nil then
                self:GameObjectDestroy(v)
            end
        end
    end
    self.marchBottom ={}
    self.marchTop = {}
end

local function ClickInfo(self)
    for i = 1, 3 do
        self._arm_rectTab[i].rect:SetActive(false)
    end
    local list  = self.ctrl:GetAllSoldiersInfo()
    table.walk(list, function(k,v)
        self._arm_rectTab[k].rect:SetActive(true)
        self._arm_rectTab[k].txt:SetText(v)
    end)
    self._army_rect:SetActive(true)
    self.SoliderInfoBg:SetActive(true)
end

local function ClickBg(self)
    self._army_rect:SetActive(false)
    self.teamRule:SetActive(false)
    self.SoliderInfoBg:SetActive(false)
end

local function ClickPanel(self)
    self:ClickBg()
    self.ctrl:OnCloseClick()
end

local function CloseMainTable(self)
    self.ctrl:CloseMainTable()
end

local function ClickTeamRule(self)
    local pos = self.teamLimit_btn.transform.position
    pos.y = pos.y + 30
    self.teamRule:SetPosition(pos)
    self.teamRule:SetActive(true)
    self.SoliderInfoBg:SetActive(true)
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.AllianceWarUpdate, self.OnRefresh)
    self:AddUIListener(EventId.ALLIANCE_WAR_DELETE, self.OnDelete)
    self:AddUIListener(EventId.GetAssistanceData, self.OnRefresh)
    self:AddUIListener(EventId.AllianceQuitOK, self.AllianceQuit)
end
        
local function OnRemoveListener(self)
    base.OnRemoveListener(self)
    self:RemoveUIListener(EventId.AllianceWarUpdate,self.OnRefresh)
    self:RemoveUIListener(EventId.ALLIANCE_WAR_DELETE,self.OnDelete)
    self:RemoveUIListener(EventId.GetAssistanceData, self.OnRefresh)
    self:RemoveUIListener(EventId.AllianceQuitOK, self.AllianceQuit)
end

local function OnDelete(self,uuid)
    if self.ctrl:GetSelfUuid() == uuid then
        self.ctrl:OnCloseClick()
    end
end

local function AllianceQuit(self)
    self.ctrl:CloseSelf()
end

UIAllianceWarDetailView.OnCreate = OnCreate
UIAllianceWarDetailView.OnDestroy = OnDestroy
UIAllianceWarDetailView.OnRefresh = OnRefresh
UIAllianceWarDetailView.OnEnable = OnEnable
UIAllianceWarDetailView.OnDisable = OnDisable
UIAllianceWarDetailView.OnAddListener = OnAddListener
UIAllianceWarDetailView.OnRemoveListener = OnRemoveListener
UIAllianceWarDetailView.OnDelete = OnDelete
UIAllianceWarDetailView.SetAllCellDestroy = SetAllCellDestroy
UIAllianceWarDetailView.ClickBg = ClickBg
UIAllianceWarDetailView.ClickPanel = ClickPanel
UIAllianceWarDetailView.CloseMainTable = CloseMainTable
UIAllianceWarDetailView.ClickInfo = ClickInfo
UIAllianceWarDetailView.ClickTeamRule = ClickTeamRule
UIAllianceWarDetailView.AllianceQuit = AllianceQuit
return UIAllianceWarDetailView