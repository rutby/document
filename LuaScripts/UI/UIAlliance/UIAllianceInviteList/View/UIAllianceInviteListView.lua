---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2021/6/10 17:41
---
local AllianceInviteItem = require "UI.UIAlliance.UIAllianceInviteList.Component.AllianceInviteItem"
local UIAllianceInviteListView = BaseClass("UIAllianceInviteListView",UIBaseView)
local base = UIBaseView

local txt_title_path ="ImgBg/TxtTitle"
local close_btn_path = "ImgBg/BtnClose"
local return_btn_path = "Panel"
local scroll_path = "ImgBg/ScrollView"
local empty_txt_path = "ImgBg/TxtEmpty"
local player_name_txt_path = "ImgBg/select/playerName"
local power_txt_path ="ImgBg/select/power"
local kill_txt_path ="ImgBg/select/kill"
local check_txt_path ="ImgBg/select/check"
local power_sort_btn_path = "ImgBg/select/powerSortBtn"
local kill_sort_btn_path = "ImgBg/select/killSortBtn"
local input_path = "ImgBg/InputField"
local place_holder_txt_path = "ImgBg/InputField/Placeholder"
local search_btn_path = "ImgBg/BtnSearch"
local world_invite_btn_path ="ImgBg/worldInviteButton"
local world_invite_txt_path ="ImgBg/worldInviteButton/worldInviteText"
local invite_all_btn_path = "ImgBg/InviteAllButton"
local invite_all_txt_path = "ImgBg/InviteAllButton/InviteAllText"
local change_btn_path = "ImgBg/changeButton"
local change_txt_path = "ImgBg/changeButton/changeText"
local function OnCreate(self)
    base.OnCreate(self)
    self.ctrl:InitData()
    self.txt_title = self:AddComponent(UIText, txt_title_path)
    self.txt_title:SetLocalText(390157) 

    self.empty_txt = self:AddComponent(UIText, empty_txt_path)
    self.empty_txt:SetLocalText(390154) 

    self.player_name_txt = self:AddComponent(UIText, player_name_txt_path)
    self.player_name_txt:SetLocalText(100184) 
    self.power_txt = self:AddComponent(UIText, power_txt_path)
    self.power_txt:SetLocalText(100644) 
    self.level_txt = self:AddComponent(UIText, kill_txt_path)
    self.level_txt:SetLocalText(100082) 
    self.check_txt = self:AddComponent(UIText, check_txt_path)
    self.check_txt:SetLocalText(390297) 

    self.power_sort_btn = self:AddComponent(UIButton, power_sort_btn_path)
    self.power_sort_btn:SetOnClick(function()  
SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnPowerSelectClick()
    end)
    self.level_sort_btn = self:AddComponent(UIButton, kill_sort_btn_path)
    self.level_sort_btn:SetOnClick(function()  
SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnLevelSelectClick()
    end)

    self.search_btn = self:AddComponent(UIButton, search_btn_path)
    self.search_btn:SetOnClick(function()  
SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnClickSearch()
    end)
    
    self.world_invite_btn = self:AddComponent(UIButton, world_invite_btn_path)
    self.world_invite_btn:SetOnClick(function()  
SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnWorldInviteClick()
    end)
    self.world_invite_txt = self:AddComponent(UIText, world_invite_txt_path)
    self.world_invite_txt:SetLocalText(100171) 


    self.invite_all_btn = self:AddComponent(UIButton, invite_all_btn_path)
    self.invite_all_btn:SetOnClick(function()  
SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self:OnInviteAllClick()
    end)
    self.invite_all_txt = self:AddComponent(UIText, invite_all_txt_path)
    self.invite_all_txt:SetLocalText(390008) 

    self.change_btn = self:AddComponent(UIButton, change_btn_path)
    self.change_btn:SetOnClick(function()  
SoundUtil.PlayEffect(SoundAssets.Music_Effect_Button)
        self.ctrl:OnSendSearchMessage("",1)
    end)
    self.change_txt = self:AddComponent(UIText, change_txt_path)
    self.change_txt:SetLocalText(110028) 
    
    self.input = self:AddComponent(UIInput,input_path)
    self.input:SetOnEndEdit(function (value)
        self:IptOnValueChange(value)
    end)
    
    self.place_holder_txt = self:AddComponent(UIText, place_holder_txt_path)
    self.place_holder_txt:SetLocalText(120177) 
    
    self.close_btn = self:AddComponent(UIButton, close_btn_path)
    self.close_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)
    self.return_btn = self:AddComponent(UIButton, return_btn_path)
    self.return_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)

    self.ScrollView = self:AddComponent(UIScrollView, scroll_path)
    self.ScrollView:SetOnItemMoveIn(function(itemObj, index)
        self:OnItemMoveIn(itemObj, index)
    end)
    self.ScrollView:SetOnItemMoveOut(function(itemObj, index)
        self:OnItemMoveOut(itemObj, index)
    end)
    self.inputValue = ""
    self.invite_list ={}
end

local function OnDestroy(self)
    self.txt_title = nil
    self.empty_txt = nil
    self.power_txt = nil
    self.level_txt = nil
    self.check_txt = nil
    self.power_sort_btn = nil
    self.level_sort_btn = nil
    self.search_btn = nil
    self.world_invite_btn = nil
    self.world_invite_txt = nil
    self.invite_all_btn = nil
    self.invite_all_txt = nil
    self.change_btn = nil
    self.change_txt = nil
    self.input = nil
    self.close_btn = nil
    self.return_btn = nil
    self.ScrollView = nil
    self.inputValue = nil
    self.invite_list =nil
    base.OnDestroy(self)
end

local function RefreshInviteList(self,sortType)
    self:ClearScroll(self)
    self.invite_list = self.ctrl:GetAllianceInviteIdList(sortType)
    if #self.invite_list > 0 then
        self.ScrollView:SetTotalCount(#self.invite_list)
        self.ScrollView:RefillCells()
        self.empty_txt:SetActive(false)
    else
        self.empty_txt:SetActive(true)
    end
end

local function OnPowerSelectClick(self)
    self:RefreshInviteList(1)
end

local function OnLevelSelectClick(self)
    self:RefreshInviteList(2)
end


local function OnEnable(self)
    base.OnEnable(self)
    self:RefreshInviteList()
end

local function OnDisable(self)
    self:ClearScroll(self)
    base.OnDisable(self)

end

local function OnItemMoveIn(self,itemObj, index)
    itemObj.name = tostring(index)
    local cellItem = self.ScrollView:AddComponent(AllianceInviteItem, itemObj)
    cellItem:SetItemShow(self.invite_list[index])
end

local function OnItemMoveOut(self, itemObj, index)
    self.ScrollView:RemoveComponent(itemObj.name, AllianceInviteItem)
end

local function ClearScroll(self)
    self.ScrollView:ClearCells()
    self.ScrollView:RemoveComponents(AllianceInviteItem)
end

-- 联盟聊天邀请
local function OnWorldInviteClick(self)
	
	if not DataCenter.AllianceBaseDataManager:IsR4orR5() then
		UIUtil.ShowTipsId(390845) 
		return 
	end
	
	local allianceData = DataCenter.AllianceBaseDataManager:GetAllianceBaseData()
	if allianceData == nil then
		UIUtil.ShowTipsId(390845) 
		return
	end
	
	local t = {}
	local param = {}
	t.roomId = ChatInterface.getCountryRoomId()
	t.post = PostType.Text_AllianceInvite
	t.param = param
	
	param.aid = allianceData.uid
	param.abbr = allianceData.abbr
	param.name = allianceData.allianceName
	param.icon = allianceData.icon
	param.power = allianceData.fightPower
	param.c = allianceData.curMember
	param.mc = allianceData.maxMember

	EventManager:GetInstance():Broadcast(ChatEventEnum.CHAT_SHARE_COMMAND, t)
		
end

local function OnInviteAllClick(self)
    if not DataCenter.AllianceBaseDataManager:IsR4orR5() then
        UIUtil.ShowTipsId(390845) 
        return
    end
    
    if #self.invite_list >0 then
        table.walk(self.invite_list,function(k,v)
            DataCenter.AllianceTempListManager:SetInvitedStateForAllianceInviteListByUid(v)
        end)
        self:RefreshInviteList()
        SFSNetwork.SendMessage(MsgDefines.AllianceInvitePlayer,self.invite_list)
    end
end

local function OnInvitePlayerClick(self,playerId)
    local list ={}
    table.insert(list,playerId)
    DataCenter.AllianceTempListManager:SetInvitedStateForAllianceInviteListByUid(playerId)
    SFSNetwork.SendMessage(MsgDefines.AllianceInvitePlayer,list)
end
local function IptOnValueChange(self,value)
    self.inputValue = value
end

local function OnClickSearch(self)
    self.ctrl:OnSendSearchMessage(self.inputValue,0)
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.GET_INVITE_USERS_SUCCESS, self.RefreshInviteList)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
    self:RemoveUIListener(EventId.GET_INVITE_USERS_SUCCESS, self.RefreshInviteList)
end

UIAllianceInviteListView.OnCreate= OnCreate
UIAllianceInviteListView.OnDestroy = OnDestroy
UIAllianceInviteListView.RefreshInviteList = RefreshInviteList
UIAllianceInviteListView.OnEnable = OnEnable
UIAllianceInviteListView.OnDisable = OnDisable
UIAllianceInviteListView.OnItemMoveIn = OnItemMoveIn
UIAllianceInviteListView.OnItemMoveOut = OnItemMoveOut
UIAllianceInviteListView.ClearScroll = ClearScroll
UIAllianceInviteListView.OnPowerSelectClick =OnPowerSelectClick
UIAllianceInviteListView.OnLevelSelectClick  = OnLevelSelectClick
UIAllianceInviteListView.OnWorldInviteClick= OnWorldInviteClick
UIAllianceInviteListView.OnInviteAllClick = OnInviteAllClick
UIAllianceInviteListView.IptOnValueChange =IptOnValueChange
UIAllianceInviteListView.OnClickSearch = OnClickSearch
UIAllianceInviteListView.OnAddListener = OnAddListener
UIAllianceInviteListView.OnRemoveListener = OnRemoveListener
UIAllianceInviteListView.OnInvitePlayerClick = OnInvitePlayerClick
return UIAllianceInviteListView