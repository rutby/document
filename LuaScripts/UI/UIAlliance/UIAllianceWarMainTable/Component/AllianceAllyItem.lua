---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 
--- DateTime:

local AllianceAllyItem = BaseClass("AllianceAllyItem",UIBaseContainer)
local AllianceWarPlayerItem = require "UI.UIAlliance.UIAllianceWarDetail.Component.AllianceWarPlayerItem"
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization
local AllianceAlertPlayerItem = require "UI.UIAlliance.UIAllianceAlertDetail.Component.AllianceAlertPlayerItem"
local itembg_img_path = "mainContent/Common_supple"
-- local dir1_img_path = "mainContent/Common_supple/jiantou/Rect_MarchDir/Rect_MarchDir1"
-- local dir2_img_path = "mainContent/Common_supple/jiantou/Rect_MarchDir/Rect_MarchDir2"
local bg_btn_path = "mainContent/BgButton"
local left_pos_btn_path ="mainContent/left"
local left_pos_txt_path = "mainContent/left/leftPosTxt"
local left_name_path = "mainContent/left/leftNameTxt"
local distance_obj_path = "mainContent/left/Image"
local left_playerHead_path = "mainContent/left/LeftUIPlayerHead/LeftHeadIcon"
local left_CityHead_path = "mainContent/left/LeftUIPlayerHead/LeftCityHead"
local left_AllianceHeadCity_path = "mainContent/left/LeftUIPlayerHead/LeftAllianceCityHead"
local left_playerHeadFg_path = "mainContent/left/LeftUIPlayerHead/lForeground"
local distance_txt_path = "mainContent/left/Image/distanceTxt"
local slider_path = "mainContent/sliderBg/Slider"
local march_txt_path = "mainContent/sliderBg/Slider/progressTxt"
local time_txt_path = "mainContent/sliderBg/TimeTxt"
local layout_rect = "layout"
local allyShow_path = "mainContent/allyShow"
local allyShowTxt_path = "mainContent/allyShow/allyShowTxt"
local allyShowTips_txt = "mainContent/allyShow/allyShowTips"
--准备、等待/行军、攻击
local function OnCreate(self)
    base.OnCreate(self)
    self.isUpdate =false
    self.isJoin = false
    self.isShow = false
    self.isCreate = false
    self.itemBg_img = self:AddComponent(UIImage,itembg_img_path)
    -- self.dir1_img = self:AddComponent(UIImage,dir1_img_path)
    -- self.dir2_img = self:AddComponent(UIImage,dir2_img_path)
    self.march_txt = self:AddComponent(UITextMeshProUGUIEx,march_txt_path)
    
    self.bg_btn = self:AddComponent(UIButton, bg_btn_path)
    self.bg_btn:SetOnClick(function ()
        self:OnBgClick()
    end)
    self.left_pos_btn = self:AddComponent(UIButton,left_pos_btn_path)
    self.left_pos_btn:SetOnClick(function ()
        self:OnLeftPosClick()
    end)
    self.left_name = self:AddComponent(UITextMeshProUGUIEx,left_name_path)
    self.left_pos_txt = self:AddComponent(UITextMeshProUGUIEx,left_pos_txt_path)
    self.distance_obj = self:AddComponent(UIBaseContainer,distance_obj_path)
    self.distance_txt = self:AddComponent(UITextMeshProUGUIEx,distance_txt_path)
    self.slider = self:AddComponent(UISlider,slider_path)
    self.time_txt = self:AddComponent(UITextMeshProUGUIEx,time_txt_path)
    self.left_playerHead = self:AddComponent(UIPlayerHead, left_playerHead_path)
    self.left_CityHead = self:AddComponent(UIBaseContainer,left_CityHead_path)
    self.left_allianceHeadCity = self:AddComponent(UIBaseContainer,left_AllianceHeadCity_path)
    self.left_playerHeadBg = self:AddComponent(UIImage, left_playerHeadFg_path)
    self.left_playerHeadBg.transform:SetAsLastSibling()
    self.layout_rect = self:AddComponent(UIBaseContainer,layout_rect)
    self.allyShow = self:AddComponent(UIButton,allyShow_path)
    self.allyShowtxt = self:AddComponent(UITextMeshProUGUIEx,allyShowTxt_path)
    self.allyShowTips_txt = self:AddComponent(UITextMeshProUGUIEx,allyShowTips_txt)
    self.allyShowtxt:SetLocalText(110036)
    self.allyShow:SetOnClick(function ()
        self:OnShowAlly()
    end)
    
    self:SetActive(true)

    self._timer_alliance = nil
    self._timer_action = function(temp)
        self:UpdateSlider()
    end

    self.listGo = {}
    self.listCell = {}
end

local function OnDestroy(self)
    self:SetAllCellDestroy()
    self.itemBg_img = nil
    self.march_txt = nil
    self.bg_btn = nil
    self.left_pos_btn = nil
    self.left_name = nil
    self.left_pos_txt = nil
    self.distance_obj = nil
    self.distance_txt = nil
    self.slider = nil
    self.time_txt = nil
    self.isUpdate = nil
    self.left_playerHead = nil
    self.left_CityHead = nil
    self.goback_txt = nil
    self:DeleteTimer()
    self.listGo = nil
    self.listCell = nil
    base.OnDestroy(self)
end

--isAlert 是否盟友被单打标志
local function RefreshData(self,isAlert)
    --self.view.ctrl:SetSelfUuid(self:GetUserData())
    self.isAlert = isAlert
    self:DeleteTimer()
    if self.listCell then
        for i = 1 ,#self.listCell do
            self.listCell[i]:SetActive(false)
        end
    end
    if isAlert then
        self.alertInfo = DataCenter.AllianceAlertDataManager:GetAllianceAlertDataByKey(self.uuid)
        if not self.alertInfo then
            return
        end
        self.allyShowTips_txt:SetText(Localization:GetString("141098").." "..self.alertInfo.num)
        self.march_txt:SetLocalText(141100)
        self.time_txt:SetLocalText(141099)
        self.slider:SetValue(1)
        if self.alertInfo.type == AllianceAlertType.ALLIANCE_CITY then
            local nameKey = GetTableData(TableName.WorldCity, self.alertInfo.content, "name")
            self.left_name:SetLocalText(nameKey)
        elseif self.alertInfo.type == AllianceAlertType.ALLIANCE_BUILD then
            local nameKey = GetTableData(TableName.AllianceMine, self.alertInfo.content, "name")
            self.left_name:SetLocalText(nameKey)
        elseif self.alertInfo.type == AllianceAlertType.DRAGON_BUILDING then
            local nameKey = GetTableData(TableName.DragonBuilding, self.alertInfo.content, "name")
            self.left_name:SetLocalText(nameKey)
        else
            self.left_name:SetText("[".. self.alertInfo.alAbbr .."]"..self.alertInfo.name)
        end
        self.left_CityHead:SetActive(self.alertInfo.type == AllianceAlertType.ALLIANCE_CITY)
        self.left_playerHead:SetActive(self.alertInfo.type ~= AllianceAlertType.ALLIANCE_CITY and self.alertInfo.type ~=AllianceAlertType.ALLIANCE_BUILD)   --打城时关闭玩家头像
        
        self.left_allianceHeadCity:SetActive(self.alertInfo.type == AllianceAlertType.ALLIANCE_BUILD)   --打联盟建筑
        self.left_playerHead:SetData(self.alertInfo.targetUid,self.alertInfo.pic,self.alertInfo.picVer)
        if self.alertInfo.headFrame == 1 then
            self.left_playerHeadBg:SetActive(true)
        else
            self.left_playerHeadBg:SetActive(false)
        end
        local rightPos = SceneUtils.IndexToTilePos(self.alertInfo.point,ForceChangeScene.World)
        local distance = math.ceil(SceneUtils.TileDistance(rightPos, SceneUtils.IndexToTilePos(LuaEntry.Player:GetMainWorldPos(),ForceChangeScene.World)))
        self.left_pos_txt:SetLocalText(GameDialogDefine.SHOW_POS, rightPos.x, rightPos.y)
        if self.alertInfo.server ~= LuaEntry.Player:GetSelfServerId() then
            if DataCenter.AccountManager:GetServerTypeByServerId(self.alertInfo.server) == ServerType.DRAGON_BATTLE_FIGHT_SERVER then
                self.distance_txt:SetLocalText(376024)
            else
                self.distance_txt:SetLocalText(208236,self.alertInfo.server)
            end
            
        else
            self.distance_txt:SetText(distance..Localization:GetString(GameDialogDefine.KILOMETRE))
        end
        --self:CreateList()
        return
    end
    self.isUpdate =false
    self.allyShowTips_txt:SetText("")
    self.dataInfo = self.view.ctrl:GetWarItemData(self.uuid)
    if self.dataInfo.createTime == 0 then
        return
    end
    self.march_txt:SetLocalText(self.dataInfo.isAttack and 141034 or 141035)
    local leftPos = SceneUtils.IndexToTilePos(self.dataInfo.leftPointId,ForceChangeScene.World)
    local rightPos = SceneUtils.IndexToTilePos(self.dataInfo.rightPointId,ForceChangeScene.World)
    if self.dataInfo.isAttack then
        --被打
        self.left_CityHead:SetActive(self.dataInfo.type == AllianceTeamType.ATTACK_AL_CITY)
        self.left_name:SetText(self.dataInfo.rightName)
        self.left_playerHead:SetActive(self.dataInfo.type ~= AllianceTeamType.ATTACK_AL_CITY)   --打城时关闭玩家头像
        self.left_playerHead:SetData(self.dataInfo.targetUid,self.dataInfo.targetIcon,self.dataInfo.targetIconVer)
        if self.dataInfo.targetHeadBg then
            self.left_playerHeadBg:SetActive(true)
        else
            self.left_playerHeadBg:SetActive(false)
        end
        self.left_pos_txt:SetLocalText(GameDialogDefine.SHOW_POS, rightPos.x, rightPos.y)
    else
        self.left_name:SetText(self.dataInfo.leftName)
        self.left_playerHead:SetData(self.dataInfo.attackUid,self.dataInfo.attackIcon,self.dataInfo.ownerIconVer)
        if self.dataInfo.targetHeadBg then
            self.left_playerHeadBg:SetActive(true)
        else
            self.left_playerHeadBg:SetActive(false)
        end
        self.left_pos_txt:SetLocalText(GameDialogDefine.SHOW_POS, leftPos.x, leftPos.y)
    end
 

    self.distance_obj:SetActive(self.dataInfo.leftDistance>0)
    self.distance_txt:SetText(self.dataInfo.leftDistance..Localization:GetString(GameDialogDefine.KILOMETRE))
    
    self:UpdateSlider()
    self:AddAllianceTimer()
end

local function SetUuid(self,uuid)
    self.uuid = uuid
end

local function AddAllianceTimer(self)
    if self._timer_alliance == nil then
        self._timer_alliance = TimerManager:GetInstance():GetTimer(1, self._timer_action , self, false,false,false)
        self._timer_alliance:Start()
    end
end

local function UpdateSlider(self)
    local curTime = UITimeManager:GetInstance():GetServerTime()
    local deltaTime =0
    local maxTime =0
    local dialog = "141032"
    local march = 1
    if self.dataInfo.waitTime > curTime then
        self.isUpdate =true
        deltaTime = self.dataInfo.waitTime - curTime
        maxTime = self.dataInfo.waitTime - self.dataInfo.createTime
        dialog = "141032"
        march = 1
        self.isJoin = true
    elseif self.dataInfo.marchTime > curTime then
        self.isUpdate =true
        deltaTime = self.dataInfo.marchTime - curTime
        maxTime = self.dataInfo.marchTime - self.dataInfo.createTime
        dialog = "390789"
        march = 2
        self.isJoin = false
    else
        self.isUpdate =false
        self.isJoin = false
    end
    
    if not self.isUpdate then
        --当部队出发后，队长的结束时间为达到目的地时间
        if self.dataInfo.marchendTime > curTime then
            dialog = "141033"
            deltaTime = self.dataInfo.marchendTime - curTime
            march = 2
        else
            dialog = 141029
            march = 3
        end
    end
    
    if self.isUpdate then
        local tempValue = 1 - deltaTime / maxTime
        self.slider:SetValue(tempValue)
        self.time_txt:SetText(Localization:GetString(dialog)..UITimeManager:GetInstance():MilliSecondToFmtString(deltaTime))
    else
        self.slider:SetValue(1)
        if deltaTime > 0 then
            self.time_txt:SetText(Localization:GetString(dialog)..UITimeManager:GetInstance():MilliSecondToFmtString(deltaTime))
        else
            self.time_txt:SetLocalText(dialog)
        end
    end
end

local function DeleteTimer(self)
    if self._timer_alliance ~= nil then
        self._timer_alliance:Stop()
        self._timer_alliance = nil
    end
end

local function OnLeftPosClick(self)
    if self.isAlert then
        self.view.ctrl:OnClickPosBtn(self.alertInfo.point,nil,nil,self.alertInfo.server,self.alertInfo.worldId)
        --self.view.ctrl:OpenAlertInfo(self.alertInfo,1)
        return
    end
    if self.dataInfo.isAttack then
        self.view.ctrl:OnClickPosBtn(self.dataInfo.rightPointId)
    else
        self.view.ctrl:OnClickPosBtn(self.dataInfo.leftPointId)
    end
end


local function OnEnable(self)
    base.OnEnable(self)
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function OnBgClick(self)

    if self.isAlert then
        --self.view.ctrl:OpenAlertInfo(self.alertInfo,2)
        return
    end
    
    ----被攻击方是自己时不可查看
    --if self.dataInfo.targetUid == LuaEntry.Player.uid then
    --    return
    --end
    --
    --self.view.ctrl:OnOpenClick(self.uuid,true,self.dataInfo.isAttack)
end



local function GetSelfData(self)
    return self.dataInfo
end

--被单打时直接创建敌方人员
local function CreateList(self)
    if not self.isAlert then
        return
    end
    local alertData = DataCenter.AllianceAlertDataManager:GetAllianceAlertDataByKey(self.uuid)
    if alertData then
        self.marchInfo = alertData.marchInfo
    end
    local list = self.marchInfo
    if list~=nil then
        for i = 1, table.length(list) do
            if self.listGo[i] then
                if self.listCell[i] then
                    self.listCell[i]:RefreshData(list[i],self.isAlert)
                    self.listCell[i]:SetActive(true)
                end
            else
                --复制基础prefab，每次循环创建一次
                self.listGo[i] = self:GameObjectInstantiateAsync(UIAssets.AllianceAlertPlayerItem, function(request)
                    if request.isError then
                        return
                    end
                    local go = request.gameObject;
                    go.gameObject:SetActive(true)
                    go.transform:SetParent(self.transform)
                    go.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
                    local nameStr = tostring(NameCount)
                    go.name = nameStr
                    NameCount = NameCount + 1
                    local cell = self:AddComponent(AllianceAlertPlayerItem,nameStr)
                    cell:RefreshData(list[i],self.isAlert)
                    self.listCell[i] = cell
                end)
            end
        end
    end
end

local function OnShowAlly(self)
    if self.isAlert then
        local alertData = DataCenter.AllianceAlertDataManager:GetAllianceAlertDataByKey(self.uuid)
        if alertData then
            self.marchInfo = alertData.marchInfo
        end
        for i = 1, table.count(self.marchInfo) do
            if self.listCell[i] then
                if self.listCell[i]:GetActive() then
                    self.listCell[i]:SetActive(false)
                else
                    self.listCell[i]:SetActive(true)
                    self.listCell[i]:SetHeroAct()
                end
            end
        end
    else
        if self.isShow ==false then
            self.isShow = true
            self.layout_rect:SetActive(true)
            self:RefreshList()
        else
            self.isShow = false
            self.layout_rect:SetActive(false)
        end
    end
    
end

local function RefreshList(self,force)
    if self.isCreate ==false or force == true then
        self:SetAllCellDestroy()
        local list = self.view.ctrl:GetPlayerIdList(self.uuid)
        if list~=nil and #list>0 then
            for i = 1, #list do
                --复制基础prefab，每次循环创建一次
                self.model[list[i]] = self:GameObjectInstantiateAsync(UIAssets.AllianceWarPlayerItem, function(request)
                    if request.isError then
                        return
                    end
                    local go = request.gameObject;
                    go.gameObject:SetActive(true)
                    go.transform:SetParent(self.layout_rect.transform)
                    go.transform:Set_localScale(ResetScale.x, ResetScale.y, ResetScale.z)
                    local nameStr = tostring(NameCount)
                    go.name = nameStr
                    NameCount = NameCount + 1
                    local cell = self.layout_rect:AddComponent(AllianceWarPlayerItem,nameStr)
                    cell:SetUuid(list[i])
                    cell:RefreshData(self.uuid,false)
                end)
            end
        end
    end
end

local function SetAllCellDestroy(self)
    self.layout_rect:RemoveComponents(AllianceWarPlayerItem)
    if self.model~=nil and next(self.model) then
        for k,v in pairs(self.model) do
            if v ~= nil then
                self:GameObjectDestroy(v)
            end
        end
    end
    self.model ={}
end



AllianceAllyItem.OnCreate = OnCreate
AllianceAllyItem.OnDestroy = OnDestroy
AllianceAllyItem.OnEnable = OnEnable
AllianceAllyItem.OnDisable = OnDisable
AllianceAllyItem.RefreshData = RefreshData
AllianceAllyItem.DeleteTimer = DeleteTimer
AllianceAllyItem.OnLeftPosClick =OnLeftPosClick
AllianceAllyItem.SetUuid =SetUuid
AllianceAllyItem.UpdateSlider =UpdateSlider
AllianceAllyItem.AddAllianceTimer = AddAllianceTimer
AllianceAllyItem.OnBgClick =OnBgClick
AllianceAllyItem.GetSelfData =GetSelfData
AllianceAllyItem.CreateList = CreateList
AllianceAllyItem.OnShowAlly = OnShowAlly
AllianceAllyItem.RefreshList =RefreshList
AllianceAllyItem.SetAllCellDestroy =SetAllCellDestroy
return AllianceAllyItem