---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2023/12/27 21:01
---
local base = UIBaseContainer--Variable
local CreateAlliance = BaseClass("CreateAlliance", UIBaseContainer)--Variable
local Localization = CS.GameEntry.Localization
local AllianceFlagItem = require "UI.UIAlliance.UIAllianceFlag.Component.AllianceFlagItem"
local UIGray = CS.UIGray


local allianceFlag_path = "flagBg/icon/AllianceFlag"
local setAlFlagBtn_path  ="flagBg/changeFlagBtn"
local alNameTxt_path = "change/alNameObj/alNameTxt"
local alName_path = "change/alNameObj/alName"
local alNameBtn_path = "change/alNameObj/setAlNameBtn"
local alAbbrTxt_path = "change/alAbbrObj/alAbbrTxt"
local alAbbr_path = "change/alAbbrObj/alAbbr"
local alAbbrBtn_path = "change/alAbbrObj/setAlAbbrBtn"
local alLanguageTxt_path = "change/alLanguageObj/alLanguageTxt"
local alLanguage_path = "change/alLanguageObj/alLanguage"
local alLanguageBtn_path = "change/alLanguageObj/setAlLanguageBtn"
local countryFlagTxt_path = "change/countryObj/countryTxt"
local countryFlagImg_path = "change/countryObj/countryFlag"
local countryFlagBtn_path = "change/countryObj/setCountryBtn"
local alAnnounce_path = "change/alAnnounceObj/Scroll/Viewport/Content/alAnnounce"
local alAnnounceTxt_path = "change/alAnnounceObj/alAnnounceTxt"
local alAnnounceBtn_path = "change/alAnnounceObj/announceBtn"
local createBtn_path = "createBtn"
local createBtnTxt_path = "createBtn/costObj/costBtnName"
local createCost_path = "createBtn/costObj/itemCount"
local country_go_path = "change/countryObj"
local applyTxt_path = "change/applyObj/applyTxt"
local applyBtn_path = "change/applyObj/applyBtn"
local applyOn_path = "change/applyObj/applyBtn/OnRoot"
local applyOff_path = "change/applyObj/applyBtn/OffRoot"
local apply_on_bg_path = "change/applyObj/applyBtn/guide_rect_dont_destroy"

local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
end

local function OnDestroy(self)

    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    self.allianceFlagN = self:AddComponent(AllianceFlagItem, allianceFlag_path)
    self.setAlFlagBtnN = self:AddComponent(UIButton, setAlFlagBtn_path)
    self.setAlFlagBtnN:SetOnClick(function()
        self:OnClickSetAlFlag()
    end)
    self.alNameTxtN = self:AddComponent(UITextMeshProUGUIEx, alNameTxt_path)
    self.alNameTxtN:SetLocalText(390288)
    self.alNameN = self:AddComponent(UITextMeshProUGUIEx, alName_path)
    self.alNameBtnN = self:AddComponent(UIButton, alNameBtn_path)
    self.alNameBtnN:SetOnClick(function()
        self:OnClickSetAlNameBtn()
    end)
    self.alAbbrTxt = self:AddComponent(UITextMeshProUGUIEx, alAbbrTxt_path)
    self.alAbbrTxt:SetLocalText(100548)
    self.alAbbrN = self:AddComponent(UITextMeshProUGUIEx, alAbbr_path)
    self.alAbbrBtnN = self:AddComponent(UIButton, alAbbrBtn_path)
    self.alAbbrBtnN:SetOnClick(function()
        self:OnClickSetAlAbbrBtn()
    end)
    self.alLanguageTxtN = self:AddComponent(UITextMeshProUGUIEx, alLanguageTxt_path)
    self.alLanguageTxtN:SetLocalText(100101)
    self.alLanguageN = self:AddComponent(UITextMeshProUGUIEx, alLanguage_path)
    self.alLanguageBtnN = self:AddComponent(UIButton, alLanguageBtn_path)
    self.alLanguageBtnN:SetOnClick(function()
        self:OnClickLanguageBtn()
    end)
    self.countryFlagTxtN = self:AddComponent(UITextMeshProUGUIEx, countryFlagTxt_path)
    self.countryFlagTxtN:SetLocalText(143589)
    self.countryFlagN = self:AddComponent(UIImage, countryFlagImg_path)
    self.countryFlagBtnN = self:AddComponent(UIButton, countryFlagBtn_path)
    self.countryFlagBtnN:SetOnClick(function()
        self:OnClickCountryFlagBtn()
    end)
    self.alAnnounceN = self:AddComponent(UITextMeshProUGUIEx, alAnnounce_path)
    self.alAnnounceTxtN = self:AddComponent(UITextMeshProUGUIEx, alAnnounceTxt_path)
    self.alAnnounceTxtN:SetLocalText(390513)
    self.alAnnounceBtnN = self:AddComponent(UIButton, alAnnounceBtn_path)
    self.alAnnounceBtnN:SetOnClick(function()
        self:OnClickSetAnnounceBtn()
    end)
    self.createBtnN = self:AddComponent(UIButton, createBtn_path)
    self.createBtnN:SetOnClick(function()
        self:OnClickCreateBtn()
    end)
    self.createBtnTxtN = self:AddComponent(UITextMeshProUGUIEx, createBtnTxt_path)
    self.createBtnTxtN:SetLocalText(110006)
    self.createCostN = self:AddComponent(UITextMeshProUGUIEx, createCost_path)
    self.country_go = self:AddComponent(UIBaseContainer, country_go_path)
    self.applyTxt = self:AddComponent(UITextMeshProUGUIEx, applyTxt_path)
    self.applyTxt:SetLocalText(250383)
    self.applyBtn = self:AddComponent(UIButton, applyBtn_path)
    self.applyBtn:SetOnClick(function()
        self:OnClickApplyBtn()
    end)
    self.applyOn = self:AddComponent(UIBaseContainer, applyOn_path)
    self.applyOn:SetActive(false)
    self.applyOff = self:AddComponent(UIBaseContainer, applyOff_path)
    self.applyOff:SetActive(true)
    self.apply_on_bg = self:AddComponent(UIImage, apply_on_bg_path)
    self.apply_on_bg:LoadSprite(string.format(LoadPath.CommonPath, "bonfire_img_off"))
end

local function ComponentDestroy(self)
end

local function DataDefine(self)
    self.cacheAlName = ""
    self.cacheAlAbbr = ""
    self.cacheAlAnnounce = ""
    self.cacheAlLanguage = SuportedLanguagesLocalName[Language.English]
    self.cacheCountryFlag = LuaEntry.Player.countryFlag
    self.cacheAlFlag = "1;1;1;1"
    self.isChooseLeader = 0

    self.nameChanged = false
    self.abbrChanged = false
    self.announceChanged = false
    self.isApply = false
end

local function DataDestroy(self)

end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.UpdateGold, self.RefreshAll)
end

local function OnRemoveListener(self)
    self:RemoveUIListener(EventId.UpdateGold, self.RefreshAll)
    base.OnRemoveListener(self)
end

local function RefreshAll(self)
    self.alNameN:SetText(self.cacheAlName)
    self.alAbbrN:SetText(self.cacheAlAbbr)
    self.alAnnounceN:SetText(self.cacheAlAnnounce)
    self.alLanguageN:SetLocalText(self.cacheAlLanguage)
    self.allianceFlagN:SetData(self.cacheAlFlag)
    if not LuaEntry.Player:IsHideCountryFlag() then
        self.country_go:SetActive(true)
        local nationTemplate = DataCenter.NationTemplateManager:GetNationTemplate(self.cacheCountryFlag)
        self.countryFlagN:LoadSprite(nationTemplate:GetNationFlagPath())
    else
        self.country_go:SetActive(false)
    end

    local cost = 0
    cost = LuaEntry.DataConfig:TryGetNum("alliance_cost", "k5")
    self.isCostEnough = cost <= LuaEntry.Player.gold
    local strCost = self.isCostEnough and cost or string.format("<color=#ff0000>%s</color>", cost)
    self.createCostN:SetText(strCost)

    if not self.abbrChanged or not self.nameChanged or not self.announceChanged then
        UIGray.SetGray(self.createBtnN.transform, true, false)
    else
        UIGray.SetGray(self.createBtnN.transform, false, true)
    end
    --self.changeNameEffN:SetActive(not self.nameChanged)
    --self.changeAbbrEffN:SetActive(not self.abbrChanged)
    --self.changeAnnounceEffN:SetActive(not self.announceChanged)
end

local function OnClickSetAlFlag(self)
    local param = {}
    param.curFlag = "1;1;1;1"
    param.cost = 0
    param.callback = function(strNew)
        self.cacheAlFlag = strNew
        self:RefreshAll()
    end
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIAllianceFlag, {anim = true}, param)
end

local function OnClickSetAlNameBtn(self)
    local param = {}
    param.curName = ""
    param.cost = 0
    param.btnName = 110006
    param.callback = function(value)
        self.cacheAlName = value
        self.nameChanged = true
        self:RefreshAll()
    end
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIAllianceChangeName,{anim = true},param)
end

local function OnClickSetAlAbbrBtn(self)
    local param = {}
    param.curAbbr = ""
    param.cost = 0
    param.btnName = 110006
    param.callback = function(value)
        self.cacheAlAbbr = value
        self.abbrChanged = true
        self:RefreshAll()
    end
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIAllianceChangeAbbr,{anim = true},param)
end

local function OnClickLanguageBtn(self)
    local param = {}
    param.curLanguage = self.cacheAlLanguage-- SuportedLanguagesLocalName[Language.English]
    param.callback = function(value)
        self.cacheAlLanguage = value
        self:RefreshAll()
    end
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIAllianceChangeLanguage,{anim = true, isBlur = true},param)
end

local function OnClickCountryFlagBtn(self)
    local tempNation = self.cacheCountryFlag
    UIManager:GetInstance():OpenWindow(UIWindowNames.UISetPlayerNation, { anim = true, isBlur = true}, {nation = tempNation, callback = function(tempSelected)
        self.cacheCountryFlag = tempSelected
        self:RefreshAll()
    end})
end

local function OnClickSetAnnounceBtn(self)
    local callback = function(value)
        self.cacheAlAnnounce = value
        self.announceChanged = true
        self:RefreshAll()
    end
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIAllianceChangeAnnounce,{anim = true}, 4, "", callback)
end

local function OnClickCreateBtn(self)
    if self.isCostEnough then
        UIUtil.ShowMessage(Localization:GetString("390864"),2,nil,nil,function ()
            EventManager:GetInstance():Broadcast(EventId.SetMovingUI,UIMovingType.Open)
            SFSNetwork.SendMessage(MsgDefines.AlCreate,self.cacheAlName,self.cacheAlAnnounce,self.cacheAlFlag, self.cacheAlLanguage
            , self.cacheAlAbbr, self.cacheCountryFlag, self.isChooseLeader, self.isApply)
            self.view.ctrl:Close()
        end,nil,nil)
    else
        GoToUtil.GotoPayTips()
    end
end

local function OnClickApplyBtn(self)
    self.isApply = not self.isApply
    self.applyOn:SetActive(self.isApply)
    self.applyOff:SetActive(not self.isApply)
    if self.isApply then
        self.apply_on_bg:LoadSprite(string.format(LoadPath.CommonPath, "bonfire_img_on"))
    else
        self.apply_on_bg:LoadSprite(string.format(LoadPath.CommonPath, "bonfire_img_off"))
    end
end

local function OnEnable(self)
    base.OnEnable(self)
    self:RefreshAll()
end

local function OnDisable(self)
    base.OnDisable(self)
end


CreateAlliance.OnCreate = OnCreate
CreateAlliance.OnDestroy = OnDestroy
CreateAlliance.OnAddListener = OnAddListener
CreateAlliance.OnRemoveListener = OnRemoveListener
CreateAlliance.ComponentDefine = ComponentDefine
CreateAlliance.ComponentDestroy = ComponentDestroy
CreateAlliance.DataDefine = DataDefine
CreateAlliance.DataDestroy = DataDestroy

CreateAlliance.RefreshAll = RefreshAll
CreateAlliance.OnClickSetAlFlag = OnClickSetAlFlag
CreateAlliance.OnClickSetAlNameBtn = OnClickSetAlNameBtn
CreateAlliance.OnClickSetAlAbbrBtn = OnClickSetAlAbbrBtn
CreateAlliance.OnClickLanguageBtn = OnClickLanguageBtn
CreateAlliance.OnClickCountryFlagBtn = OnClickCountryFlagBtn
CreateAlliance.OnClickSetAnnounceBtn = OnClickSetAnnounceBtn
CreateAlliance.OnClickCreateBtn = OnClickCreateBtn
CreateAlliance.OnClickApplyBtn = OnClickApplyBtn
CreateAlliance.OnEnable = OnEnable
CreateAlliance.OnDisable = OnDisable
return CreateAlliance