---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1.
--- DateTime: 2021/9/15 16:38
---

local base = UIBaseView--Variable
local UIAllianceAutoJoinRallyView = BaseClass("UIAllianceAutoJoinRallyView", base)--Variable
local Localization = CS.GameEntry.Localization
local UICommonItem = require "UI.UICommonItem.UICommonItem_TextMeshPro"
local UIHeroTipView = require "UI.UIHero2.UIHeroTip.View.UIHeroTipView"

local closeBtn_path = "UICommonMidPopUpTitle/bg_mid/CloseBtn"
local title_path = "UICommonMidPopUpTitle/bg_mid/titleText"
local subTitle_path = "offset/Title"
local desc_path = "offset/desc"
local rewardTip_path = "offset/bg1/rewardTip1"
local rewardContent_path = "offset/bg1/rewards1"
local infoBtn_path = "UICommonMidPopUpTitle/bg_mid/infoBtn"
local rewardTimes_path = "offset/bg1/rewardTimes1"
local autoJoinBtn_path = "offset/autoBtn"
local autoJoinBtnTxt_path = "offset/autoBtn/autoTxt"
local autoInfo_path = "offset/autoInfo"
local leftTimeTip_path = "offset/autoInfo/remainTime/remainTimeTip"
local leftTime_path = "offset/autoInfo/remainTime"
local curPosTip_path = "offset/autoInfo/curPos/curPosTip"
local curPos_path = "offset/autoInfo/curPos"
local autoBtnRed_path = "offset/autoBtn/autoBtnRed"

local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
    self:InitData()
end

local function OnDestroy(self)
    EventManager:GetInstance():Broadcast(EventId.RefreshActivityRedDot)
    self:DataDestroy()
    self:ComponentDestroy()
    base.OnDestroy(self)
end

local function ComponentDefine(self)
    self.closeBtnN = self:AddComponent(UIButton, closeBtn_path)
    self.closeBtnN:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)
    self.titleN = self:AddComponent(UITextMeshProUGUIEx, title_path)
    self.titleN:SetLocalText(143565)
    self.subTitleN = self:AddComponent(UITextMeshProUGUIEx, subTitle_path)
    self.subTitleN:SetLocalText(143566)
    self.descN = self:AddComponent(UITextMeshProUGUIEx, desc_path)
    self.descN:SetLocalText(143567)
    self.rewardTipN = self:AddComponent(UITextMeshProUGUIEx, rewardTip_path)
    self.rewardTipN:SetLocalText(450032)
    self.rewardContentN = self:AddComponent(UIBaseContainer, rewardContent_path)
    self.infoBtnN = self:AddComponent(UIButton, infoBtn_path)
    self.infoBtnN:SetOnClick(function()
        self:OnClickInfoBtn()
    end)
    self.rewardTimesN = self:AddComponent(UITextMeshProUGUIEx, rewardTimes_path)
    self.autoJoinBtnN = self:AddComponent(UIButton, autoJoinBtn_path)
    self.autoJoinBtnN:SetOnClick(function()
        self:OnClickAutoJoinBtn()
    end)
    self.autoJoinBtnTxtN = self:AddComponent(UITextMeshProUGUIEx, autoJoinBtnTxt_path)
    self.autoInfoN = self:AddComponent(UIBaseContainer, autoInfo_path)
    -- self.leftTimeTipN = self:AddComponent(UITextMeshProUGUIEx, leftTimeTip_path)
    -- self.leftTimeTipN:SetLocalText(143572)
    self.leftTimeN = self:AddComponent(UITextMeshProUGUIEx, leftTime_path)
    -- self.curPosTipN = self:AddComponent(UITextMeshProUGUIEx, curPosTip_path)
    -- self.curPosTipN:SetLocalText(143570)
    self.curPosN = self:AddComponent(UITextMeshProUGUIEx, curPos_path)
    self.autoBtnRedN = self:AddComponent(UIBaseContainer, autoBtnRed_path)
end

local function ComponentDestroy(self)
    self.titleN = nil
    self.subTitleN = nil
    self.descN = nil
    self.rewardTipN = nil
    self.rewardContentN = nil
    self.infoBtnN = nil
    self.rewardTimesN = nil
    self.autoJoinBtnN = nil
    self.autoJoinBtnTxtN = nil
    self.leftTimeN = nil
    self.curPosN = nil
end

--  [[
local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(EventId.UpdateAllianceAutoRallyInfo, self.RefreshAll)
end

local function OnRemoveListener(self)
    self:RemoveUIListener(EventId.UpdateAllianceAutoRallyInfo, self.RefreshAll)
    base.OnRemoveListener(self)
end
--]]

local function DataDefine(self)
    self.endTime = 0
    self.models = {}
end

local function DataDestroy(self)
    self:DelTimer()
    self:SetAllCellDestroy()
    self.endTime = nil
    self.models = nil
end

local function InitData(self)
    self:RefreshAll()
    SFSNetwork.SendMessage(MsgDefines.GetAllianceAutoJoinRallyInfo)
end

local function RefreshAll(self)
    self:ShowRewardList()
    
    local killedNum = DataCenter.MonsterManager:GetKillBossNum()
    local maxNum = DataCenter.MonsterManager:GetMaxKillBossNum()
    killedNum = killedNum > maxNum and maxNum or killedNum
    self.rewardTimesN:SetText(Localization:GetString("143569", math.floor(killedNum) .. "/" .. math.floor(maxNum)))
    
    local serverTime = UITimeManager:GetInstance():GetServerTime()
    local autoInfo = DataCenter.AllianceBaseDataManager:GetAutoRallyInfo()
    if not autoInfo then
        self.autoInfoN:SetActive(false)
        return
    end
    self.endTime = autoInfo.endTime
    if self.endTime > serverTime then
        self.autoJoinBtnTxtN:SetLocalText(110106)

        self.autoInfoN:SetActive(true)
        self:AddTimer()
        self:RefreshRemainTime()
        self.curPosN:SetText(Localization:GetString("143570", autoInfo.curPos))
        self.autoBtnRedN:SetActive(false)
    else
        self.autoJoinBtnTxtN:SetLocalText(143571)
        
        self.autoInfoN:SetActive(false)
        self:DelTimer()
        self:RefreshRemainTime()

        self.curPosN:SetLocalText(143573)

        if killedNum < maxNum then
            self.autoBtnRedN:SetActive(true)
        else
            self.autoBtnRedN:SetActive(false)
        end
    end
end

local function ShowRewardList(self)
    self:SetAllCellDestroy()
    local rewardList = {}
    local configOpenState = LuaEntry.DataConfig:CheckSwitch("rally_temp_reward")
    local strRewards = LuaEntry.DataConfig:TryGetStr("world_auto_join_team", "k4")
    if configOpenState then
        strRewards = LuaEntry.DataConfig:TryGetStr("world_auto_join_team", "k7")
    end
    local arrRewards = string.split(strRewards, "|")
    for i, v in ipairs(arrRewards) do
        local idType = string.split(v, ";")
        if #idType == 2 then
            local reward = {}
            reward.rewardType = tonumber(idType[2])
            reward.itemId = idType[1]
            if #rewardList<2 then
                table.insert(rewardList, reward)
            end
            
        end
    end
    self.models = {}
    if rewardList ~= nil then
        for i = 1, table.length(rewardList) do
            --复制基础prefab，每次循环创建一次
            self.models[i] = self:GameObjectInstantiateAsync(UIAssets.UICommonItemAct, function(request)
                if request.isError then
                    return
                end
                local go = request.gameObject;
                --go.gameObject:SetActive(true)
                go.transform:SetParent(self.rewardContentN.transform)
                go.transform:Set_localScale(0.7, 0.7,0.7)
                go.transform:Set_localPosition(0, 0,0)
                go.name ="item" .. i
                local cell = self.rewardContentN:AddComponent(UICommonItem,go.name)
                local param = {}
                param.rewardType = rewardList[i].rewardType
                param.itemId = rewardList[i].itemId
                cell:ReInit(param)
            end)
        end
    end
end

local function SetAllCellDestroy(self)
    self.rewardContentN:RemoveComponents(UICommonItem)
    if self.models~=nil then
        for k,v in pairs(self.models) do
            if v ~= nil then
                self:GameObjectDestroy(v)
            end
        end
    end
    self.models = nil
end



local function AddTimer(self)
    self.TimerAction = function()
        self:RefreshRemainTime()
    end
    
    if self.timer == nil then
        self.timer = TimerManager:GetInstance():GetTimer(1, self.TimerAction , self, false,false,false)
    end
    self.timer:Start()
end

local function RefreshRemainTime(self)
    local curTime = UITimeManager:GetInstance():GetServerTime()
    local remainTime = self.endTime - curTime
    if remainTime > 0 then
        self.leftTimeN:SetText(Localization:GetString("143572", UITimeManager:GetInstance():MilliSecondToFmtString(remainTime)))
    else
        self.leftTimeN:SetLocalText(143573)
        self:DelTimer()
    end
end

local function DelTimer(self)
    if self.timer ~= nil then
        self.timer:Stop()
        self.timer = nil
    end
end


local function OnClickInfoBtn(self)
    local scaleFactor = UIManager:GetInstance():GetScaleFactor()
    local position = self.infoBtnN.transform.position + Vector3.New(0, 10, 0) * scaleFactor

    local param = UIHeroTipView.Param.New()
    param.title = Localization:GetString("361018")
    param.content = Localization:GetString("143567")
    param.dir = UIHeroTipView.Direction.RIGHT
    param.defWidth = 300
    param.pivot = 0.5
    param.position = position
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIHeroTip, { anim = false }, param)
end

local function OnClickAutoJoinBtn(self)
    local serverTime = UITimeManager:GetInstance():GetServerTime()
    if self.endTime and self.endTime > serverTime then
        SFSNetwork.SendMessage(MsgDefines.StopAllianceAutoRally)
    else
        SFSNetwork.SendMessage(MsgDefines.StartAllianceAutoRally)
    end
end


UIAllianceAutoJoinRallyView.OnCreate = OnCreate 
UIAllianceAutoJoinRallyView.OnDestroy = OnDestroy
UIAllianceAutoJoinRallyView.OnAddListener = OnAddListener
UIAllianceAutoJoinRallyView.OnRemoveListener = OnRemoveListener
UIAllianceAutoJoinRallyView.ComponentDefine = ComponentDefine
UIAllianceAutoJoinRallyView.ComponentDestroy = ComponentDestroy
UIAllianceAutoJoinRallyView.DataDefine = DataDefine
UIAllianceAutoJoinRallyView.DataDestroy = DataDestroy

UIAllianceAutoJoinRallyView.InitData = InitData
UIAllianceAutoJoinRallyView.RefreshAll = RefreshAll
UIAllianceAutoJoinRallyView.ShowRewardList = ShowRewardList
UIAllianceAutoJoinRallyView.AddTimer = AddTimer
UIAllianceAutoJoinRallyView.RefreshRemainTime = RefreshRemainTime
UIAllianceAutoJoinRallyView.DelTimer = DelTimer
UIAllianceAutoJoinRallyView.OnClickInfoBtn = OnClickInfoBtn
UIAllianceAutoJoinRallyView.OnClickAutoJoinBtn = OnClickAutoJoinBtn
UIAllianceAutoJoinRallyView.SetAllCellDestroy = SetAllCellDestroy

return UIAllianceAutoJoinRallyView