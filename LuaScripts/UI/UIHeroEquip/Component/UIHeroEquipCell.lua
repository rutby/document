---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhangjiabin.
--- DateTime: 2024/3/24 12:44 PM
---

local UIHeroEquipCell = BaseClass("UIHeroEquipCell", UIBaseContainer)
local base = UIBaseContainer

local UIHeroCellSmall = require "UI.UIHero2.Common.UIHeroCellSmall"
local UIHeroEquipGem = require "UI.UIHeroEquip.Component.UIHeroEquipGem"

local hero_path = "UIHeroCellSmall"
local star_path = "UIHeroEquipGem"
local quality_path = "quality"
local icon_path = "icon"
local lv_path = "level"
local btn_path = "btn"
local arrow_path = "arrow"
local gem_bg_path = "gemBg"

function UIHeroEquipCell:OnCreate()
    base.OnCreate(self)
    self:DataDefine()
    self:ComponentDefine()
end

function UIHeroEquipCell:OnDestroy()
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

function UIHeroEquipCell:ComponentDefine()
    self.hero = self:AddComponent(UIHeroCellSmall, hero_path)
    self.star = self:AddComponent(UIHeroEquipGem, star_path)
    self.hero:SetActive(false)
    self.arrow = self:AddComponent(UIImage, arrow_path)
    self.arrow:SetActive(false)
    self.quality = self:AddComponent(UIImage, quality_path)
    self.gemBg = self:AddComponent(UIImage, gem_bg_path)
    self.icon = self:AddComponent(UIImage, icon_path)
    self.lv = self:AddComponent(UITextMeshProUGUIEx, lv_path)
    self.btn = self:AddComponent(UIButton, btn_path)
    self.btn:SetOnClick(function()
        self:OnClick()
    end)
end

function UIHeroEquipCell:ComponentDestroy()

end

function UIHeroEquipCell:DataDefine()

end

function UIHeroEquipCell:DataDestroy()
    self.equip = {}
    self.callBack = nil
end

function UIHeroEquipCell:OnAddListener()
    base.OnAddListener(self)

    self:AddUIListener(EventId.HeroEquipUpgrade, self.OnRefreshEquip)
    self:AddUIListener(EventId.HeroEquipPromotion, self.OnRefreshEquip)
end

function UIHeroEquipCell:OnRemoveListener()
    base.OnRemoveListener(self)

    self:RemoveUIListener(EventId.HeroEquipUpgrade, self.OnRefreshEquip)
    self:RemoveUIListener(EventId.HeroEquipPromotion, self.OnRefreshEquip)
end

function UIHeroEquipCell:OnRefreshEquip()
    self:RefreshEquip()
end

function UIHeroEquipCell:SetData(equip, callBack, showHero)
    if equip ~= nil then
        if showHero ~= nil and equip.heroId ~= 0 then
            self.hero:SetActive(true)
            self.hero:InitWithConfigId(equip.heroId, nil, nil, true)
            self.hero:SetStarActive(false)
            self.hero:SetCampActive(false)
        end

        self.equip = equip
        self.callBack = callBack

        self:RefreshEquip()
    end
end

function UIHeroEquipCell:RefreshEquip()
    if self.equip ~= nil then
        self.icon:LoadSprite(HeroEquipUtil:GetEquipmentIcon(self.equip.equipId))
        self.quality:LoadSprite(HeroEquipUtil:GetEquipmentQualityBG(self.equip.equipId))
        self.gemBg:LoadSprite(HeroEquipUtil:GetEquipmentStarQualityBG(self.equip.equipId))
        self.lv:SetText(self.equip:GetLvText())
        local template = DataCenter.HeroEquipTemplateManager:GetTemplate(self.equip.equipId)
        if template ~= nil and template.canPromote and self.equip:IsMaxLevel() then
            self.star:SetActive(true)
            self.gemBg:SetActive(true)
            self.star:SetData(self.equip:GetPromoteLevel())
        else
            self.star:SetActive(false)
            self.gemBg:SetActive(false)
        end
    end
end

function UIHeroEquipCell:CheckArrow()
    if self.equip ~= nil then
        local canUpgrade = DataCenter.HeroEquipManager:IsEquipCanUpgrade(self.equip.equipId)
        local canPromote = DataCenter.HeroEquipManager:IsEquipCanPromote(self.equip.equipId)
        self.arrow:SetActive(canUpgrade and canPromote) 
    end
end

function UIHeroEquipCell:SetConfigData(equipId, callBack)
    if equipId ~= nil then
        self.callBack = callBack

        self.icon:LoadSprite(HeroEquipUtil:GetEquipmentIcon(equipId))
        self.quality:LoadSprite(HeroEquipUtil:GetEquipmentQualityBG(equipId))
        self.star:SetActive(false)
        self.gemBg:SetActive(false)
    end
end

function UIHeroEquipCell:OnClick()
    if self.callBack ~= nil then
        self.callBack()
    end
end

return UIHeroEquipCell