---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by admin.
--- DateTime: 2024/3/27 9:37
---
local UIHeroEquipMaterialSelectCell = BaseClass("UIHeroEquipMaterialSelectCell",UIBaseContainer)
local base = UIBaseContainer
local Localization = CS.GameEntry.Localization

local UICommonItem = require "UI.UICommonItem.UICommonItem"

local item_path = "UICommonItemSize"
local select_obj_path = "selectObj"
local lock_obj_path = "lockObj"
local btn_path = "btn"

function UIHeroEquipMaterialSelectCell:OnCreate()
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
end

function UIHeroEquipMaterialSelectCell:OnDestroy()
    self:ComponentDestroy()
    self:DataDestroy()
    base.OnDestroy(self)
end

function UIHeroEquipMaterialSelectCell:ComponentDefine()
    self.item = self:AddComponent(UICommonItem, item_path)
    self.select_obj = self:AddComponent(UIBaseContainer,select_obj_path)
    self.lock_obj = self:AddComponent(UIBaseContainer,lock_obj_path)
    self.btn = self:AddComponent(UIButton, btn_path)
    self.btn:SetOnClick(function()
        self:OnClick()
    end)
end

function UIHeroEquipMaterialSelectCell:ComponentDestroy()

end

function UIHeroEquipMaterialSelectCell:DataDefine()
    self.param = {}
    self.index = 0
    self.viewTag = ''
end

function UIHeroEquipMaterialSelectCell:DataDestroy()
    self.param = {}
    self.index = 0
    self.viewTag = ''
end

function UIHeroEquipMaterialSelectCell:SetData(param, index, viewTag)
    self.param = param
    self.index = index
    self.viewTag = viewTag
    self.item:ReInit(param)
    self.select_obj:SetActive(false)
end

function UIHeroEquipMaterialSelectCell:OnClick()
    if self.viewTag == "UIHeroEquipMaterialCompose" then
        if self:CheckCanCompose() == false then
            return
        end
        EventManager:GetInstance():Broadcast(EventId.OnSelectEquipMaterialCompose, self.index)
    elseif self.viewTag == "UIHeroEquipMaterialDecompose" then
        EventManager:GetInstance():Broadcast(EventId.OnSelectEquipMaterialDecompose, self.index)
    end
end

function UIHeroEquipMaterialSelectCell:OnAddListener()
    base.OnAddListener(self)
    self:AddUIListener(EventId.OnSelectEquipMaterialCompose, self.RefreshSelectState)
    self:AddUIListener(EventId.OnSelectEquipMaterialDecompose, self.RefreshSelectState)
end

function UIHeroEquipMaterialSelectCell:OnRemoveListener()
    base.OnRemoveListener(self)
    self:RemoveUIListener(EventId.OnSelectEquipMaterialCompose, self.RefreshSelectState)
    self:RemoveUIListener(EventId.OnSelectEquipMaterialDecompose, self.RefreshSelectState)
end

function UIHeroEquipMaterialSelectCell:CheckCanCompose()
    local costItem = DataCenter.ItemData:GetItemById(self.param.itemId)
    local costItemTemplate = DataCenter.HeroEquipMaterialConfigManager:GetTemplate(self.param.itemId)
    if costItem ~= nil and costItemTemplate ~= nil then
        if costItem.count < costItemTemplate.combineNum then
            UIUtil.ShowTipsId(GameDialogDefine.NO_ITEM)
            return false
        end
    end
    return true
end

function UIHeroEquipMaterialSelectCell:RefreshSelectState(index)
    self.select_obj:SetActive(index == self.index)
end

return UIHeroEquipMaterialSelectCell