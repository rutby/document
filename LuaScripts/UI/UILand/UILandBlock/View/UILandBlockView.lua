---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Beef.
--- DateTime: 2024/1/9 19:01
---

local UILandBlock = BaseClass("UILandBlock", UIBaseView)
local base = UIBaseView
local Localization = CS.GameEntry.Localization
local UICommonItemChange = require "UI.UICommonItem.UICommonItemChange"

local panel_path = "Panel"
local bg_path = "Bg"
local icon_path = "Bg/Icon"
local name_path = "Bg/Name"
local desc_path = "Bg/Desc"
local scroll_view_path = "Bg/layout/ScrollView"
local layout_path = "Bg/layout"

local function OnCreate(self)
    base.OnCreate(self)
    self:ComponentDefine()
    self:DataDefine()
end

local function OnDestroy(self)
    self:DataDestroy()
    self:ComponentDestroy()
    base.OnDestroy(self)
end

local function OnEnable(self)
    base.OnEnable(self)
    self:ReInit()
end

local function OnDisable(self)
    base.OnDisable(self)
end

local function ComponentDefine(self)
    self.panel_btn = self:AddComponent(UIButton, panel_path)
    self.panel_btn:SetOnClick(function()
        self.ctrl:CloseSelf()
    end)
    self.bg_image = self:AddComponent(UIImage, bg_path)
    self.icon_image = self:AddComponent(UIImage, icon_path)
    self.name_text = self:AddComponent(UITextMeshProUGUIEx, name_path)
    self.desc_text = self:AddComponent(UITextMeshProUGUIEx, desc_path)
    self.scroll_view = self:AddComponent(UIScrollView, scroll_view_path)
    self.layoutN = self:AddComponent(UIBaseContainer, layout_path)
    self.scroll_view:SetOnItemMoveIn(function(itemObj, index)
        self:OnCellMoveIn(itemObj, index)
    end)
    self.scroll_view:SetOnItemMoveOut(function(itemObj, index)
        self:OnCellMoveOut(itemObj, index)
    end)
end

local function ComponentDestroy(self)

end

local function DataDefine(self)
    self.rewardList = {}
end

local function DataDestroy(self)
    
end

local function OnAddListener(self)
    base.OnAddListener(self)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
end

local function OnCellMoveIn(self, itemObj, index)
    itemObj.name = tostring(index)
    local item = self.scroll_view:AddComponent(UICommonItemChange, itemObj)
    item:ReInit(self.rewardList[index])
end

local function OnCellMoveOut(self, itemObj, index)
    self.scroll_view:RemoveComponent(itemObj.name, UICommonItemChange)
end

local function ShowScroll(self)
    local count = #self.rewardList
    if count > 0 then
        self.layoutN:SetActive(true)
        self.scroll_view:SetTotalCount(count)
        self.scroll_view:RefillCells()
    else
        self.layoutN:SetActive(false)
    end
end

local function ReInit(self)
    local id, pos = self:GetUserData()
    self.id = id
    local state = DataCenter.LandManager:GetState(LandObjectType.Block, self.id)
    local config = DataCenter.LandManager:GetConfig(LandObjectType.Block, self.id)
    self.bg_image.transform.position = CS.SceneManager.World:WorldToScreenPoint(pos)
    self.icon_image:LoadSprite(string.format(LoadPath.UIPve, config.icon), nil, function()
        self.icon_image:SetNativeSize()
    end)
    if config~=nil and config.fire~=nil and config.fire~="" then
        self.desc_text:SetText(Localization:GetString(config.desc))
    else
        self.desc_text:SetText(Localization:GetString(config.desc) .. "\n<color=red>" .. DataCenter.LandManager:GetNeedStr(LandObjectType.Block, self.id) .. "</color>")
    end
    
    self.name_text:SetLocalText(config.name, config.order)
    
    self.rewardList = self:GetRewardList()
    self:ShowScroll()
end

local function GetRewardList(self)
    local rewardList = {}
    local config = DataCenter.LandManager:GetConfig(LandObjectType.Block, self.id)
    for _, v in ipairs(config.show_reward) do
        if #v == 3 then
            local reward = {}
            reward.rewardType = v[1]
            reward.itemId = v[2]
            reward.count = v[3]
            table.insert(rewardList, reward)
        end
    end
    return rewardList
end

UILandBlock.OnCreate = OnCreate
UILandBlock.OnDestroy = OnDestroy
UILandBlock.OnEnable = OnEnable
UILandBlock.OnDisable = OnDisable
UILandBlock.ComponentDefine = ComponentDefine
UILandBlock.ComponentDestroy = ComponentDestroy
UILandBlock.DataDefine = DataDefine
UILandBlock.DataDestroy = DataDestroy
UILandBlock.OnAddListener = OnAddListener
UILandBlock.OnRemoveListener = OnRemoveListener

UILandBlock.OnCellMoveIn = OnCellMoveIn
UILandBlock.OnCellMoveOut = OnCellMoveOut
UILandBlock.ShowScroll = ShowScroll

UILandBlock.ReInit = ReInit
UILandBlock.GetNeedStr = GetNeedStr
UILandBlock.GetRewardList = GetRewardList

return UILandBlock