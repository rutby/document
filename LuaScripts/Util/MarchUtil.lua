---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Imaginaerum.
--- DateTime: 2021/8/19 10:35
---
local MarchUtil = {}
local Setting = CS.GameEntry.Setting
local Localization = CS.GameEntry.Localization
--点击开启出征界面统一接口
local function OnClickStartMarch(targetType, pointIndex, uuid, index,backHome,rallyType,targetServerId,chooseWormUuid)
    if not MarchUtil.CheckFormationUnlock(1)
            and  not MarchUtil.CheckFormationUnlock(2)
            and  not MarchUtil.CheckFormationUnlock(3)
            and  not MarchUtil.CheckFormationUnlock(4) then
        UIUtil.ShowTipsId(129042)
        return
    end
    
    local serverId = LuaEntry.Player:GetCurServerId()
    if targetServerId~=nil then
        serverId = targetServerId
    end

    if serverId ~= LuaEntry.Player:GetSelfServerId() then
        local crossBuildData = DataCenter.BuildManager:GetFunbuildByItemID(BuildingTypes.WORM_HOLE_CROSS)
        if crossBuildData ==nil or crossBuildData.server ~= serverId then
            UIUtil.ShowTipsId(104273)
            return
        end
    end
    
    if targetType == MarchTargetType.ATTACK_CITY or targetType == MarchTargetType.DIRECT_ATTACK_CITY or targetType == MarchTargetType.ATTACK_BUILDING or targetType == MarchTargetType.ATTACK_ALLIANCE_BUILDING
            or targetType == MarchTargetType.ATTACK_ARMY  or targetType ==  MarchTargetType.ATTACK_ARMY_COLLECT or targetType == MarchTargetType.ATTACK_ALLIANCE_CITY or targetType == MarchTargetType.ATTACK_ACT_ALLIANCE_MINE or targetType == MarchTargetType.RALLY_FOR_ACT_ALLIANCE_MINE
            or targetType == MarchTargetType.RALLY_FOR_CITY or targetType ==MarchTargetType.RALLY_FOR_BUILDING or targetType == MarchTargetType.RALLY_FOR_ALLIANCE_CITY
            or targetType == MarchTargetType.ATTACK_DESERT
            or targetType == MarchTargetType.RALLY_ALLIANCE_BUILDING
            or (targetType==MarchTargetType.JOIN_RALLY and rallyType~=nil and (rallyType == MarchTargetType.RALLY_FOR_BUILDING or rallyType == MarchTargetType.RALLY_FOR_CITY or rallyType == MarchTargetType.RALLY_FOR_ALLIANCE_CITY or rallyType == MarchTargetType.RALLY_ALLIANCE_BUILDING or rallyType == MarchTargetType.RALLY_THRONE or rallyType == MarchTargetType.RALLY_FOR_ACT_ALLIANCE_MINE)) then
        -- 判断是否弹框
        local showDesert = false
        if targetType == MarchTargetType.ATTACK_DESERT then
            local worldTileInfo = CS.SceneManager.World:GetWorldTileInfo(pointIndex)
            if worldTileInfo~=nil then
                local desertInfo = worldTileInfo:GetWorldDesertInfo()
                if desertInfo~=nil then
                    local playerType = desertInfo:GetPlayerType()
                    if playerType ~= CS.PlayerType.PlayerNone then
                        showDesert = true
                    end
                end
            end
        else
            showDesert = true
        end
        local showAllianceCity = false
        if targetType == MarchTargetType.RALLY_FOR_ALLIANCE_CITY or targetType == MarchTargetType.ATTACK_ALLIANCE_CITY or (targetType==MarchTargetType.JOIN_RALLY and rallyType~=nil and rallyType == MarchTargetType.RALLY_FOR_ALLIANCE_CITY) then
            local info = DataCenter.WorldPointManager:GetPointInfo(pointIndex)
            if info ~= nil then
                if info.PointType == WorldPointType.WORLD_ALLIANCE_CITY then
                    local allianceCityPointInfo = PBController.ParsePbFromBytes(info.extraInfo, "protobuf.AllianceCityPointInfo")
                    if allianceCityPointInfo~=nil then
                        local allianceId =allianceCityPointInfo["allianceId"]
                        if allianceId~=nil and allianceId~="" then
                            showAllianceCity = true
                        end
                    end
                end
            end
        else
            showAllianceCity = true
        end
        local needConfirm,status, title , content,needBreakProtect = DataCenter.StatusManager:ShowTipForWarFever()
        if needConfirm and (showDesert and showAllianceCity) then
            if status ~= nil and title ~= nil  then
                UIUtil.ShowSecondMessage(title,content,2,"","", function()
                    UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationSelectListNew,{ anim = true, UIMainAnim = UIMainAnimType.AllHide }, 1, targetType, pointIndex, uuid, index,backHome,rallyType,serverId,chooseWormUuid)
                end, function(needSellConfirm)
                    DataCenter.StatusManager:SetWarFeverConfirmFlag(needSellConfirm)
                end)
                return
            end
        elseif needBreakProtect ==  true and (showDesert and showAllianceCity) then
            UIUtil.ShowMessage(Localization:GetString("120016"), 1, GameDialogDefine.CONFIRM, GameDialogDefine.CANCEL,function()
                UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationSelectListNew,{ anim = true, UIMainAnim = UIMainAnimType.AllHide }, 1, targetType, pointIndex, uuid, index,backHome,rallyType,serverId,chooseWormUuid)
            end, function()
            end)
            return
        end
    end
    --if targetType>-1 and targetType ~= MarchTargetType.CROSS_SERVER_WORM and targetType ~= MarchTargetType.BACK_HOME then
    --    GoToUtil.GotoWorldPos(SceneUtils.TileIndexToWorld(pointIndex,ForceChangeScene.World), CS.SceneManager.World.InitZoom, LookAtFocusTime,function()
    --        UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationSelectListNew,{ anim = true, UIMainAnim = UIMainAnimType.AllHide }, 1, targetType, pointIndex, uuid, index,backHome,rallyType,serverId)
    --    end,serverId)
    --else
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationSelectListNew,{ anim = true, UIMainAnim = UIMainAnimType.AllHide }, 1, targetType, pointIndex, uuid, index,backHome,rallyType,serverId,chooseWormUuid)
    --end
end
local function OnDragSingleMarch(marchUuid,targetMarchUuid,realPointId)
    --if LuaEntry.Effect:GetGameEffect(EffectDefine.ALLOW_DRAG_MARCH)<=0 then
    --    UIUtil.ShowTipsId(300041)
    --    return
    --end
    --判断己方行军是否可操作
    local info = DataCenter.WorldMarchDataManager:GetMarch(marchUuid)
    if info==nil or info.ownerUid~=LuaEntry.Player.uid or info:GetMarchType() == NewMarchType.ASSEMBLY_MARCH then
        return
    end

    if info:GetMarchType() == NewMarchType.EXPLORE then
        if info:GetIsBroken() == true then
            UIUtil.ShowTipsId(120003)
        else
            UIUtil.ShowTipsId(120004)
        end
        return
    end
    if info:GetIsBroken() == true then
        UIUtil.ShowTipsId(120003)
        return
    end
    if info:GetMarchType() == NewMarchType.SCOUT then
        UIUtil.ShowTipsId(129037)
        return
    end
    if info:GetMarchType() == NewMarchType.RESOURCE_HELP then
        UIUtil.ShowTipsId(390839)
        return
    end
    if info:GetMarchType() == NewMarchType.GOLLOES_EXPLORE then
        UIUtil.ShowTipsId(320260)
        return
    end
    if info:GetMarchType() == NewMarchType.GOLLOES_TRADE then
        UIUtil.ShowTipsId(320261)
        return
    end
    if info:GetMarchType() == NewMarchType.DIRECT_MOVE_MARCH then
        if info:GetMarchStatus() == MarchStatus.TRANSPORT_BACK_HOME then
            UIUtil.ShowTipsId(302240)
        else
            UIUtil.ShowTipsId(302239)
        end
        return
    end
    local startPos = SceneUtils.WorldToTileIndex(info:GetMarchCurPos(),ForceChangeScene.World)
    if SceneUtils.IsTargetPosWalkable(realPointId,startPos)==false then
        UIUtil.ShowTipsId(111079)
        return
    end
    --耐久
    local curStamina = DataCenter.ArmyFormationDataManager:GetCurStaminaByUuid(info.ownerFormationUuid)
    --目标类型和不可操作原因
    local targetMarchType,canNotGoStr,pointId = MarchUtil.GetTargetMarchType(targetMarchUuid,realPointId)
    if targetMarchUuid~=0 then
        local targetMarchInfo = DataCenter.WorldMarchDataManager:GetMarch(targetMarchUuid)
        if targetMarchInfo~=nil then
            if canNotGoStr~= "" then
                UIUtil.ShowTipsId(canNotGoStr)
            elseif targetMarchType~= -1 then
                if targetMarchType == MarchTargetType.ATTACK_MONSTER then
                    MarchUtil.OnAttackMonster(marchUuid,targetMarchInfo,curStamina)
                elseif targetMarchType == MarchTargetType.ATTACK_ARMY then
                    local needConfirm,status, title , content,needBreakProtect = DataCenter.StatusManager:ShowTipForWarFever()
                    if needConfirm then
                        if status ~= nil and title ~= nil  then
                            UIUtil.ShowSecondMessage(title,content,2,"","", function()
                                MarchUtil.OnAttackArmy(marchUuid, targetMarchInfo, curStamina)
                            end, function(needSellConfirm)
                                DataCenter.StatusManager:SetWarFeverConfirmFlag(needSellConfirm)
                            end)
                            return
                        end
                    elseif needBreakProtect ==  true then
                        UIUtil.ShowMessage(Localization:GetString("120016"), 1, GameDialogDefine.CONFIRM, GameDialogDefine.CANCEL,function()
                            MarchUtil.OnAttackArmy(marchUuid, targetMarchInfo, curStamina)
                        end, function()
                        end)
                        return
                    end
                    MarchUtil.OnAttackArmy(marchUuid, targetMarchInfo, curStamina)
                elseif targetMarchType == MarchTargetType.DIRECT_ATTACK_ACT_BOSS then
                    WorldMarchTileUIManager:GetInstance():RemoveTroop()
                    if UIManager:GetInstance():IsWindowOpen(UIWindowNames.UIWorldPoint) then
                        local str = targetMarchUuid..";"..targetMarchInfo.targetPos..";"..""..";"..WorldPointUIType.ActBoss..";".."0"..";".."0"
                        EventManager:GetInstance():Broadcast(EventId.RefreshUIWorldPointView,str)
                    else
                        UIManager:GetInstance():OpenWindow(UIWindowNames.UIWorldPoint,{anim = true,playEffect = false,UIMainAnim = UIMainAnimType.LeftRightBottomHide},targetMarchUuid,targetMarchInfo.targetPos,"",WorldPointUIType.ActBoss,0,0)
                    end
                elseif targetMarchType == MarchTargetType.PUZZLE_BOSS then
                    WorldMarchTileUIManager:GetInstance():RemoveTroop()
                    if targetMarchInfo ~= nil then
                        local flag = false
                        if string.IsNullOrEmpty(targetMarchInfo.allianceUid) or string.IsNullOrEmpty(LuaEntry.Player.allianceId) then
                            if targetMarchInfo.bossOwnerUid == nil then
                                flag = true
                            elseif targetMarchInfo.bossOwnerUid == LuaEntry.Player.uid then
                                flag = true
                            end
                        else
                            if targetMarchInfo.allianceUid == LuaEntry.Player.allianceId then
                                flag = true
                            end
                        end
                        if flag == true then
                            MarchUtil.OnAttackMonster(marchUuid,targetMarchInfo,curStamina)
                            --MarchUtil.OnClickStartMarch(MarchTargetType.ATTACK_MONSTER, realPointId, targetMarchInfo,-1,1)
                        else
                            UIUtil.ShowTipsId(372272)
                        end
                    end

                elseif targetMarchType == MarchTargetType.ATTACK_ALLIANCE_BOSS then
                    WorldMarchTileUIManager:GetInstance():RemoveTroop()
                    if targetMarchInfo ~= nil then
                        local flag = false
                        if string.IsNullOrEmpty(targetMarchInfo.allianceUid) or string.IsNullOrEmpty(LuaEntry.Player.allianceId) then
                            if targetMarchInfo.bossOwnerUid == nil then
                                flag = true
                            elseif targetMarchInfo.bossOwnerUid == LuaEntry.Player.uid then
                                flag = true
                            end
                        else
                            if targetMarchInfo.allianceUid == LuaEntry.Player.allianceId then
                                flag = true
                            end
                        end
                        if flag == true then
                            MarchUtil.OnAttackMonster(marchUuid,targetMarchInfo,curStamina)
                            --MarchUtil.OnClickStartMarch(MarchTargetType.ATTACK_MONSTER, realPointId, targetMarchInfo,-1,1)
                        else
                            UIUtil.ShowTipsId(373025)
                        end
                    end
                elseif targetMarchType == MarchTargetType.STATE then
                    MarchUtil.OnStation(marchUuid,pointId)
                end
            end
        end
    elseif pointId>0 then
        if canNotGoStr~="" then
            UIUtil.ShowTipsId(canNotGoStr)
        elseif targetMarchType~=-1 then
            local pointInfo = DataCenter.WorldPointManager:GetPointInfo(pointId)
            if pointInfo~=nil then
                if targetMarchType == MarchTargetType.BACK_HOME then
                    MarchUtil.OnBackHome(marchUuid)
                elseif targetMarchType == MarchTargetType.COLLECT then
                    local selfMarch = DataCenter.WorldMarchDataManager:GetOwnerMarches(LuaEntry.Player.uid, LuaEntry.Player.allianceId)
                    local count = #selfMarch
                    local isHaveOwnerMarche = false
                    if count > 0 then
                        for i = 1, count do
                            if selfMarch[i]:GetMarchTargetType() == MarchTargetType.COLLECT then
                                local marchCollectInfo = DataCenter.WorldPointManager:GetResourcePointInfoByIndex(selfMarch[i].targetPos)
                                if marchCollectInfo~=nil and marchCollectInfo.id == pointId then
                                    isHaveOwnerMarche = true
                                end
                            end
                        end
                    end
                    if isHaveOwnerMarche then
                        UIUtil.ShowTipsId(129004)
                    else
                        local resInfo = DataCenter.WorldPointManager:GetResourcePointInfoByIndex(pointId)
                        if resInfo~=nil and resInfo.id ~= nil then
                            local resType = LocalController:instance():getStrValue(TableName.GatherResource,resInfo.id, "resource_type")
                            resType = tonumber(resType)
                            if resInfo.gatherMarchUuid == 0 then
                                MarchUtil.OnGotoCollect(marchUuid,resInfo,resInfo.mainIndex,false)
                            end
                        end
                    end

                    --if UIManager:GetInstance():IsWindowOpen(UIWindowNames.UIWorldPoint) then
                    --    local str = "0"..";"..pointInfo.mainIndex..";"..""..";"..WorldPointUIType.CollectPoint..";".."0"..";".."0"
                    --    EventManager:GetInstance():Broadcast(EventId.RefreshUIWorldPointView,str)
                    --else
                    --    UIManager:GetInstance():OpenWindow(UIWindowNames.UIWorldPoint,{anim = true,playEffect = false,UIMainAnim = UIMainAnimType.LeftRightBottomHide},0,pointInfo.mainIndex,"",WorldPointUIType.CollectPoint,0)
                    --ends

                elseif targetMarchType == MarchTargetType.SAMPLE then
                    pointInfo = DataCenter.WorldPointManager:GetSamplePointInfoByIndex(pointId)
                    if pointInfo ~= nil then
                        MarchUtil.OnCollectSimple(marchUuid, pointInfo, curStamina)
                    end
                elseif targetMarchType == MarchTargetType.PICK_GARBAGE then
                    pointInfo = DataCenter.WorldPointManager:GetGarbagePointInfoByIndex(pointId)
                    if pointInfo ~= nil then
                        MarchUtil.OnCollectGarbage(marchUuid, pointInfo, curStamina)
                    end
                elseif targetMarchType == MarchTargetType.BUILD_ALLIANCE_BUILDING then

                    WorldMarchTileUIManager:GetInstance():RemoveTroop()
                    if UIManager:GetInstance():IsWindowOpen(UIWindowNames.UIWorldPoint) then
                        local str = pointInfo.uuid..";"..pointInfo.mainIndex..";"..""..";"..WorldPointUIType.AllianceMine
                        EventManager:GetInstance():Broadcast(EventId.RefreshUIWorldPointView,str)
                    else
                        UIManager:GetInstance():OpenWindow(UIWindowNames.UIWorldPoint,{anim = true,playEffect = false,UIMainAnim = UIMainAnimType.LeftRightBottomHide},pointInfo.uuid,pointInfo.mainIndex,"",WorldPointUIType.AllianceMine)
                    end
                elseif targetMarchType == MarchTargetType.COLLECT_ALLIANCE_BUILD_RESOURCE then
                    --MK_
                    --MarchUtil.OnTargetAllianceMine(marchUuid, pointInfo, targetMarchType)
                    WorldMarchTileUIManager:GetInstance():RemoveTroop()
                    if UIManager:GetInstance():IsWindowOpen(UIWindowNames.UIWorldPoint) then
                        local str = pointInfo.uuid..";"..pointInfo.mainIndex..";"..""..";"..WorldPointUIType.AllianceMine
                        EventManager:GetInstance():Broadcast(EventId.RefreshUIWorldPointView,str)
                    else
                        UIManager:GetInstance():OpenWindow(UIWindowNames.UIWorldPoint,{anim = true,playEffect = false,UIMainAnim = UIMainAnimType.LeftRightBottomHide},pointInfo.uuid,pointInfo.mainIndex,"",WorldPointUIType.AllianceMine)
                    end
                elseif targetMarchType == MarchTargetType.ATTACK_ACT_ALLIANCE_MINE or targetMarchType == MarchTargetType.ASSISTANCE_COLLECT_ACT_ALLIANCE_MINE then
                    WorldMarchTileUIManager:GetInstance():RemoveTroop()
                    if UIManager:GetInstance():IsWindowOpen(UIWindowNames.UIWorldPoint) then
                        local str = pointInfo.uuid..";"..pointInfo.mainIndex..";"..""..";"..WorldPointUIType.AllianceActMine
                        EventManager:GetInstance():Broadcast(EventId.RefreshUIWorldPointView,str)
                    else
                        UIManager:GetInstance():OpenWindow(UIWindowNames.UIWorldPoint,{anim = true,playEffect = false,UIMainAnim = UIMainAnimType.LeftRightBottomHide},pointInfo.uuid,pointInfo.mainIndex,"",WorldPointUIType.AllianceActMine)
                    end
                
                elseif targetMarchType== MarchTargetType.ATTACK_ARMY_COLLECT then
                    pointInfo = DataCenter.WorldPointManager:GetResourcePointInfoByIndex(pointId)
                    if pointInfo ~= nil then
                        local needConfirm,status, title , content,needBreakProtect = DataCenter.StatusManager:ShowTipForWarFever()
                        if needConfirm then
                            if status ~= nil and title ~= nil  then
                                UIUtil.ShowSecondMessage(title,content,2,"","", function()
                                    MarchUtil.OnAttackCollectBuild(marchUuid, pointInfo, curStamina)
                                end, function(needSellConfirm)
                                    DataCenter.StatusManager:SetWarFeverConfirmFlag(needSellConfirm)
                                end)
                                return
                            end
                        elseif needBreakProtect ==  true then
                            UIUtil.ShowMessage(Localization:GetString("120016"), 1, GameDialogDefine.CONFIRM, GameDialogDefine.CANCEL,function()
                                MarchUtil.OnAttackCollectBuild(marchUuid, pointInfo, curStamina)
                            end, function()
                            end)
                            return
                        end
                        MarchUtil.OnAttackCollectBuild(marchUuid, pointInfo, curStamina)
                    end
                elseif targetMarchType == MarchTargetType.ATTACK_BUILDING then
                    pointInfo = DataCenter.WorldPointManager:GetBuildDataByPointIndex(pointId)
                    if pointInfo~=nil then
                        local needConfirm,status, title , content,needBreakProtect = DataCenter.StatusManager:ShowTipForWarFever()
                        if needConfirm then
                            if status ~= nil and title ~= nil  then
                                UIUtil.ShowSecondMessage(title,content,2,"","", function()
                                    MarchUtil.OnAttackOtherBuild(marchUuid, pointInfo, curStamina)
                                end, function(needSellConfirm)
                                    DataCenter.StatusManager:SetWarFeverConfirmFlag(needSellConfirm)
                                end)
                                return
                            end
                        elseif needBreakProtect ==  true then
                            UIUtil.ShowMessage(Localization:GetString("120016"), 1, GameDialogDefine.CONFIRM, GameDialogDefine.CANCEL,function()
                                MarchUtil.OnAttackOtherBuild(marchUuid, pointInfo, curStamina)
                            end, function()
                            end)
                            return
                        end
                        MarchUtil.OnAttackOtherBuild(marchUuid, pointInfo, curStamina)
                    end
                elseif targetMarchType == MarchTargetType.ATTACK_ALLIANCE_BUILDING then
                    if pointInfo~=nil then
                        local needConfirm,status, title , content,needBreakProtect = DataCenter.StatusManager:ShowTipForWarFever()
                        if needConfirm then
                            if status ~= nil and title ~= nil  then
                                UIUtil.ShowSecondMessage(title,content,2,"","", function()
                                    MarchUtil.OnAttackAllianceBuild(marchUuid, pointInfo, curStamina)
                                end, function(needSellConfirm)
                                    DataCenter.StatusManager:SetWarFeverConfirmFlag(needSellConfirm)
                                end)
                                return
                            end
                        elseif needBreakProtect ==  true then
                            UIUtil.ShowMessage(Localization:GetString("120016"), 1, GameDialogDefine.CONFIRM, GameDialogDefine.CANCEL,function()
                                MarchUtil.OnAttackAllianceBuild(marchUuid, pointInfo, curStamina)
                            end, function()
                            end)
                            return
                        end
                        MarchUtil.OnAttackAllianceBuild(marchUuid, pointInfo, curStamina)
                    end
                elseif targetMarchType == MarchTargetType.ATTACK_DRAGON_BUILDING then
                    if pointInfo~=nil then
                        local dragonBuildingPointInfo = PBController.ParsePbFromBytes(pointInfo.extraInfo, "protobuf.DragonBuildingPointInfo")
                        if dragonBuildingPointInfo then
                            local id = dragonBuildingPointInfo["buildId"]
                            if id == DragonBuildingTypes.DragonCenterBuild or id == DragonBuildingTypes.DragonAllianceFlagOther or id == DragonBuildingTypes.DragonAllianceFlagSelf then
                                WorldMarchTileUIManager:GetInstance():RemoveTroop()
                                if UIManager:GetInstance():IsWindowOpen(UIWindowNames.UIWorldPoint) then
                                    local str = pointInfo.uuid..";"..pointInfo.mainIndex..";"..""..";"..WorldPointUIType.DragonBuild
                                    EventManager:GetInstance():Broadcast(EventId.RefreshUIWorldPointView,str)
                                else
                                    UIManager:GetInstance():OpenWindow(UIWindowNames.UIWorldPoint,{anim = true,playEffect = false,UIMainAnim = UIMainAnimType.LeftRightBottomHide},pointInfo.uuid,pointInfo.mainIndex,"",WorldPointUIType.DragonBuild)
                                end
                            else
                                MarchUtil.OnTriggerDragonBuild(marchUuid, pointInfo, curStamina)
                            end
                        end
                    end
                elseif targetMarchType == MarchTargetType.TRIGGER_DRAGON_BUILDING then
                    if pointInfo~=nil then
                        local dragonBuildingPointInfo = PBController.ParsePbFromBytes(pointInfo.extraInfo, "protobuf.DragonBuildingPointInfo")
                        if dragonBuildingPointInfo then
                            local id = dragonBuildingPointInfo["buildId"]
                            if id == DragonBuildingTypes.DragonCenterBuild or id == DragonBuildingTypes.DragonAllianceFlagOther or id == DragonBuildingTypes.DragonAllianceFlagSelf then
                                WorldMarchTileUIManager:GetInstance():RemoveTroop()
                                if UIManager:GetInstance():IsWindowOpen(UIWindowNames.UIWorldPoint) then
                                    local str = pointInfo.uuid..";"..pointInfo.mainIndex..";"..""..";"..WorldPointUIType.DragonBuild
                                    EventManager:GetInstance():Broadcast(EventId.RefreshUIWorldPointView,str)
                                else
                                    UIManager:GetInstance():OpenWindow(UIWindowNames.UIWorldPoint,{anim = true,playEffect = false,UIMainAnim = UIMainAnimType.LeftRightBottomHide},pointInfo.uuid,pointInfo.mainIndex,"",WorldPointUIType.DragonBuild)
                                end
                            else
                                MarchUtil.OnTriggerDragonBuild(marchUuid, pointInfo, curStamina)
                            end
                        end

                    end
                elseif targetMarchType == MarchTargetType.PICK_SECRET_KEY then
                    if pointInfo~=nil then
                        WorldMarchTileUIManager:GetInstance():RemoveTroop()
                        if UIManager:GetInstance():IsWindowOpen(UIWindowNames.UIWorldPoint) then
                            local str = pointInfo.uuid..";"..pointInfo.mainIndex..";"..""..";"..WorldPointUIType.DragonSecretKey
                            EventManager:GetInstance():Broadcast(EventId.RefreshUIWorldPointView,str)
                        else
                            UIManager:GetInstance():OpenWindow(UIWindowNames.UIWorldPoint,{anim = true,playEffect = false,UIMainAnim = UIMainAnimType.LeftRightBottomHide},pointInfo.uuid,pointInfo.mainIndex,"",WorldPointUIType.DragonSecretKey)
                        end
                    end
                elseif targetMarchType == MarchTargetType.ATTACK_CITY or targetMarchType == MarchTargetType.DIRECT_ATTACK_CITY then
                    pointInfo = DataCenter.WorldPointManager:GetBuildDataByPointIndex(pointId)
                    if pointInfo~=nil then
                        local needConfirm,status, title , content,needBreakProtect = DataCenter.StatusManager:ShowTipForWarFever()
                        if needConfirm then
                            if status ~= nil and title ~= nil  then
                                UIUtil.ShowSecondMessage(title,content,2,"","", function()
                                    MarchUtil.OnAttackOtherCity(marchUuid,pointInfo,curStamina,targetMarchType)
                                end, function(needSellConfirm)
                                    DataCenter.StatusManager:SetWarFeverConfirmFlag(needSellConfirm)
                                end)
                                return
                            end
                        elseif needBreakProtect ==  true then
                            UIUtil.ShowMessage(Localization:GetString("120016"), 1, GameDialogDefine.CONFIRM, GameDialogDefine.CANCEL,function()
                                MarchUtil.OnAttackOtherCity(marchUuid,pointInfo,curStamina,targetMarchType)
                            end, function()
                            end)
                            return
                        end
                        MarchUtil.OnAttackOtherCity(marchUuid,pointInfo,curStamina,targetMarchType)
                    end
                elseif targetMarchType == MarchTargetType.ASSISTANCE_CITY then
                    pointInfo = DataCenter.WorldPointManager:GetBuildDataByPointIndex(pointId)
                    if pointInfo~=nil then
                        UIUtil.ShowMessage(Localization:GetString("121001"), 2, GameDialogDefine.CONFIRM, GameDialogDefine.CANCEL,function()
                            MarchUtil.OnAssistanceOtherCity(marchUuid,pointInfo)
                        end, function()
                        end)

                    end
                elseif targetMarchType == MarchTargetType.ATTACK_ALLIANCE_CITY then
                    if pointInfo~=nil then
                        local showAllianceCity = false
                        if pointInfo.PointType == WorldPointType.WORLD_ALLIANCE_CITY then
                            local allianceCityPointInfo = PBController.ParsePbFromBytes(pointInfo.extraInfo, "protobuf.AllianceCityPointInfo")
                            if allianceCityPointInfo~=nil then
                                local allianceId =allianceCityPointInfo["allianceId"]
                                if allianceId~=nil and allianceId~="" then
                                    showAllianceCity = true
                                end
                            end
                        end
                        local needConfirm,status, title , content,needBreakProtect = DataCenter.StatusManager:ShowTipForWarFever()
                        if needConfirm and showAllianceCity then
                            if status ~= nil and title ~= nil  then
                                UIUtil.ShowSecondMessage(title,content,2,"","", function()
                                    MarchUtil.OnAttackAllianceCity(marchUuid,pointInfo,curStamina)
                                end, function(needSellConfirm)
                                    DataCenter.StatusManager:SetWarFeverConfirmFlag(needSellConfirm)
                                end)
                                return
                            end
                        elseif needBreakProtect ==  true and showAllianceCity then
                            UIUtil.ShowMessage(Localization:GetString("120016"), 1, GameDialogDefine.CONFIRM, GameDialogDefine.CANCEL,function()
                                MarchUtil.OnAttackAllianceCity(marchUuid,pointInfo,curStamina)
                            end, function()
                            end)
                            return
                        end
                        local allianceCityPointInfo = PBController.ParsePbFromBytes(pointInfo.extraInfo, "protobuf.AllianceCityPointInfo")
                        --检查有无宣战
                        local data = DataCenter.AllianceDeclareWarManager:GetSelfDeclareWarData()
                        if data then
                            --检查是否自己联盟所宣战的
                            if allianceCityPointInfo and allianceCityPointInfo.cityId ~= tonumber(data.content) then
                                return  UIUtil.ShowTipsId(302325)
                            end
                        else
                            return  UIUtil.ShowTipsId(302312)
                        end
                        UIManager:GetInstance():OpenWindow(UIWindowNames.UISetAttackTimes,{anim = true, UIMainAnim = UIMainAnimType.AllHide}, marchUuid,pointInfo,curStamina)

                        --MarchUtil.OnAttackAllianceCity(marchUuid,pointInfo,curStamina)
                    end
                elseif targetMarchType == MarchTargetType.ASSISTANCE_ALLIANCE_CITY then
                    if pointInfo~=nil then
                        UIUtil.ShowMessage(Localization:GetString("121001"), 2, GameDialogDefine.CONFIRM, GameDialogDefine.CANCEL,function()
                            MarchUtil.OnAssistanceAllianceCity(marchUuid,pointInfo)
                        end, function()
                        end)

                    end
                elseif targetMarchType == MarchTargetType.ASSISTANCE_ALLIANCE_BUILDING then
                    if pointInfo~=nil then
                        UIUtil.ShowMessage(Localization:GetString("121001"), 2, GameDialogDefine.CONFIRM, GameDialogDefine.CANCEL,function()
                            MarchUtil.OnAssistanceAllianceBuild(marchUuid,pointInfo)
                        end, function()
                        end)

                    end
                elseif targetMarchType == MarchTargetType.ASSISTANCE_DRAGON_BUILDING then
                    if pointInfo~=nil then
                        WorldMarchTileUIManager:GetInstance():RemoveTroop()
                        if UIManager:GetInstance():IsWindowOpen(UIWindowNames.UIWorldPoint) then
                            local str = pointInfo.uuid..";"..pointInfo.mainIndex..";"..""..";"..WorldPointUIType.DragonBuild
                            EventManager:GetInstance():Broadcast(EventId.RefreshUIWorldPointView,str)
                        else
                            UIManager:GetInstance():OpenWindow(UIWindowNames.UIWorldPoint,{anim = true,playEffect = false,UIMainAnim = UIMainAnimType.LeftRightBottomHide},pointInfo.uuid,pointInfo.mainIndex,"",WorldPointUIType.DragonBuild)
                        end
                    end
                    
                elseif targetMarchType == MarchTargetType.ASSISTANCE_BUILD then
                    pointInfo = DataCenter.WorldPointManager:GetBuildDataByPointIndex(pointId)
                    if pointInfo~=nil then
                        if pointInfo.itemId == BuildingTypes.APS_BUILD_WORMHOLE_SUB or BuildingUtils.IsInEdenSubwayGroup(pointInfo.itemId)== true then
                            if pointInfo.level == 0 then
                                MarchUtil.OnClickStartMarch(MarchTargetType.BUILD_WORM_HOLE, pointInfo.mainIndex, pointInfo.uuid)
                            else
                                local buildId = pointInfo.itemId
                                UIUtil.ShowMessage(Localization:GetString("143582"), 2, "143583","143584",function()
                                    MarchUtil.OnAssistanceBuild(marchUuid,pointInfo)
                                end, function()
                                    --如果没有修建好
                                    local buildList = DataCenter.BuildManager:GetAllBuildingByItemIdWithoutPickUp(buildId)
                                    if #buildList > 0 then
                                        if buildList[1].level == 0 then
                                            UIUtil.ShowTipsId(140259)
                                        else
                                            local marchInfo = DataCenter.WorldMarchDataManager:GetMarch(marchUuid)
                                            if marchInfo~=nil then
                                                MarchUtil.OnBackHome(marchUuid)
                                            end
                                        end
                                    else
                                        UIUtil.ShowTipsId(140259)
                                    end
                                end)
                            end
                        else
                            UIUtil.ShowMessage(Localization:GetString("121001"), 2, GameDialogDefine.CONFIRM, GameDialogDefine.CANCEL,function()
                                MarchUtil.OnAssistanceBuild(marchUuid,pointInfo)
                            end, function()

                            end)
                        end
                    end
                elseif targetMarchType == MarchTargetType.STATE then
                    MarchUtil.OnStation(marchUuid,pointId)
                end
            else
                if targetMarchType == MarchTargetType.STATE then
                    MarchUtil.OnStation(marchUuid,pointId)
                end
            end
        end
    end

end
--拖动行军处理公共接口
local function OnChangeSingleMarch(marchUuid,targetMarchUuid,realPointId)
    --if LuaEntry.Effect:GetGameEffect(EffectDefine.ALLOW_DRAG_MARCH)<=0 then
    --    UIUtil.ShowTipsId(300041)
    --    return
    --end
    --判断己方行军是否可操作
    local info = DataCenter.WorldMarchDataManager:GetMarch(marchUuid)
    if info==nil or info.ownerUid~=LuaEntry.Player.uid or info:GetMarchType() == NewMarchType.ASSEMBLY_MARCH then
        return
    end
    if LuaEntry.Player.serverType == ServerType.DRAGON_BATTLE_FIGHT_SERVER then
        local dragonInfo = DataCenter.ActDragonManager:GetDragonInfo()
        local curTime = UITimeManager:GetInstance():GetServerTime()
        local canShow = false
        if dragonInfo~=nil and dragonInfo.timeInfo~=nil then
            if dragonInfo.matchResult == 1 then    --匹配到对手
                if dragonInfo.timeInfo.battleOpenTime~=nil and dragonInfo.timeInfo.battleOpenTime<curTime and dragonInfo.timeInfo.endTime~=nil and curTime < dragonInfo.timeInfo.endTime then
                    canShow = true
                end
            end
        end
        if canShow ==false then
            UIUtil.ShowTipsId(376128)
            return
        end
    end
    
    if info:GetMarchType() == NewMarchType.EXPLORE then
        if info:GetIsBroken() == true then
            UIUtil.ShowTipsId(120003)
        else
            UIUtil.ShowTipsId(120004)
        end
        return
    end
    if info:GetIsBroken() == true then
        UIUtil.ShowTipsId(120003)
        return
    end
    if info:GetMarchType() == NewMarchType.SCOUT then
        UIUtil.ShowTipsId(129037)
        return
    end
    if info:GetMarchType() == NewMarchType.RESOURCE_HELP then
        UIUtil.ShowTipsId(390839)
        return
    end
    if info:GetMarchType() == NewMarchType.GOLLOES_EXPLORE then
        UIUtil.ShowTipsId(320260)
        return
    end
    if info:GetMarchType() == NewMarchType.GOLLOES_TRADE then
        UIUtil.ShowTipsId(320261)
        return
    end
    if info:GetMarchType() == NewMarchType.DIRECT_MOVE_MARCH then
        if info:GetMarchStatus() == MarchStatus.TRANSPORT_BACK_HOME then
            UIUtil.ShowTipsId(302240)
        else
            UIUtil.ShowTipsId(302239)
        end
        return
    end
    if info:GetMarchTargetType() == MarchTargetType.ATTACK_ALLIANCE_BOSS then
        UIUtil.ShowMessage(Localization:GetString("373123"),2, GameDialogDefine.CONFIRM, GameDialogDefine.CANCEL, function()
            MarchUtil.OnDragSingleMarch(marchUuid,targetMarchUuid,realPointId)
        end)
        return
    end
    local oriSpeed = info.oriSpeed
    local newSpeed = info.speed
    local showWarning = false
    local showChangeDecSpeed = false

    if oriSpeed~=nil and newSpeed~=nil and oriSpeed>0 and newSpeed>0 and oriSpeed~= newSpeed then
        if info:GetMarchStatus() == MarchStatus.CHASING or info:GetMarchStatus() == MarchStatus.MOVING or info:GetMarchStatus() == MarchStatus.BACK_HOME then
            showWarning = true
        end
    else
        if info:GetMarchTargetType() == MarchTargetType.ASSISTANCE_BUILD or info:GetMarchTargetType() == MarchTargetType.ASSISTANCE_CITY
                or info:GetMarchTargetType() == MarchTargetType.ASSISTANCE_ALLIANCE_CITY  or info:GetMarchTargetType() == MarchTargetType.ASSISTANCE_DESERT or info:GetMarchTargetType() == MarchTargetType.ASSISTANCE_ALLIANCE_BUILDING then
            local targetPoint = info.targetPos
            local isAlTerritory = DataCenter.WorldAllianceCityDataManager:CheckIfIsAlTerritory(targetPoint)
            if isAlTerritory then
                if info:GetMarchStatus() == MarchStatus.CHASING or info:GetMarchStatus() == MarchStatus.MOVING or info:GetMarchStatus() == MarchStatus.BACK_HOME then
                    showChangeDecSpeed = true
                end
                
            end

        end
    end
    if showWarning ==true then
        UIUtil.ShowMessage(Localization:GetString("320823"),2, GameDialogDefine.CONFIRM, GameDialogDefine.CANCEL, function()
            MarchUtil.OnDragSingleMarch(marchUuid,targetMarchUuid,realPointId)
        end)
    elseif showChangeDecSpeed == true then
        UIUtil.ShowMessage(Localization:GetString("143663"),2, GameDialogDefine.CONFIRM, GameDialogDefine.CANCEL, function()
            MarchUtil.OnDragSingleMarch(marchUuid,targetMarchUuid,realPointId)
        end)
    else
        MarchUtil.OnDragSingleMarch(marchUuid,targetMarchUuid,realPointId)
    end
end

local function OnChangeSingleFormation(formationUuid,targetMarchUuid,realPointId)
    --if LuaEntry.Effect:GetGameEffect(EffectDefine.ALLOW_DRAG_MARCH)<=0 then
    --    UIUtil.ShowTipsId(300041)
    --    return
    --end
    if CrossServerUtil:GetIsCrossServer() then
        local crossBuildData = DataCenter.BuildManager:GetFunbuildByItemID(BuildingTypes.WORM_HOLE_CROSS)
        local curServerId = LuaEntry.Player:GetCurServerId()
        if crossBuildData ==nil or crossBuildData.server ~= curServerId then
            UIUtil.ShowTipsId(104273)
            return
        end
    end
    if LuaEntry.Player.serverType == ServerType.DRAGON_BATTLE_FIGHT_SERVER then
        local dragonInfo = DataCenter.ActDragonManager:GetDragonInfo()
        local curTime = UITimeManager:GetInstance():GetServerTime()
        local canShow = false
        if dragonInfo~=nil and dragonInfo.timeInfo~=nil then
            if dragonInfo.matchResult == 1 then    --匹配到对手
                if dragonInfo.timeInfo.battleOpenTime~=nil and dragonInfo.timeInfo.battleOpenTime<curTime and dragonInfo.timeInfo.endTime~=nil and curTime < dragonInfo.timeInfo.endTime then
                    canShow = true
                end
            end
        end
        if canShow ==false then
            UIUtil.ShowTipsId(376128)
            return
        end
    end
    local startPos = MarchUtil.GetFormationStartPos()
    if SceneUtils.IsTargetPosWalkable(realPointId,startPos)==false then
        UIUtil.ShowTipsId(111079)
        return
    end
    local curStamina = DataCenter.ArmyFormationDataManager:GetCurStaminaByUuid(formationUuid)
    --目标类型和不可操作原因
    local targetMarchType,canNotGoStr,pointId = MarchUtil.GetTargetMarchType(targetMarchUuid,realPointId)
    if targetMarchUuid~=0 then
        local targetMarchInfo = DataCenter.WorldMarchDataManager:GetMarch(targetMarchUuid)
        if targetMarchInfo~=nil then
            if canNotGoStr~= "" then
                UIUtil.ShowTipsId(canNotGoStr)
            elseif targetMarchType~= -1 then
                if targetMarchType == MarchTargetType.ATTACK_MONSTER then
                    MarchUtil.OnAttackMonster(formationUuid,targetMarchInfo,curStamina,true)
                elseif targetMarchType == MarchTargetType.ATTACK_ARMY then
                    local needConfirm,status, title , content,needBreakProtect = DataCenter.StatusManager:ShowTipForWarFever()
                    if needConfirm then
                        if status ~= nil and title ~= nil  then
                            UIUtil.ShowSecondMessage(title,content,2,"","", function()
                                MarchUtil.OnAttackArmy(formationUuid, targetMarchInfo, curStamina,true)
                            end, function(needSellConfirm)
                                DataCenter.StatusManager:SetWarFeverConfirmFlag(needSellConfirm)
                            end)
                            return
                        end
                    elseif needBreakProtect ==  true then
                        UIUtil.ShowMessage(Localization:GetString("120016"), 1, GameDialogDefine.CONFIRM, GameDialogDefine.CANCEL,function()
                            MarchUtil.OnAttackArmy(formationUuid, targetMarchInfo, curStamina,true)
                        end, function()
                        end)
                        return
                    end
                    MarchUtil.OnAttackArmy(formationUuid, targetMarchInfo, curStamina,true)
                elseif targetMarchType == MarchTargetType.DIRECT_ATTACK_ACT_BOSS then
                    WorldMarchTileUIManager:GetInstance():RemoveTroop()
                    if UIManager:GetInstance():IsWindowOpen(UIWindowNames.UIWorldPoint) then
                        local str = targetMarchUuid..";"..targetMarchInfo.targetPos..";"..""..";"..WorldPointUIType.ActBoss..";".."0"..";".."0"
                        EventManager:GetInstance():Broadcast(EventId.RefreshUIWorldPointView,str)
                    else
                        UIManager:GetInstance():OpenWindow(UIWindowNames.UIWorldPoint,{anim = true,playEffect = false,UIMainAnim = UIMainAnimType.LeftRightBottomHide},targetMarchUuid,targetMarchInfo.targetPos,"",WorldPointUIType.ActBoss,0,0)
                    end
                elseif targetMarchType == MarchTargetType.PUZZLE_BOSS then
                    WorldMarchTileUIManager:GetInstance():RemoveTroop()
                    if targetMarchInfo ~= nil then
                        local flag = false
                        if string.IsNullOrEmpty(targetMarchInfo.allianceUid) or string.IsNullOrEmpty(LuaEntry.Player.allianceId) then
                            if targetMarchInfo.bossOwnerUid == nil then
                                flag = true
                            elseif targetMarchInfo.bossOwnerUid == LuaEntry.Player.uid then
                                flag = true
                            end
                        else
                            if targetMarchInfo.allianceUid == LuaEntry.Player.allianceId then
                                flag = true
                            end
                        end
                        if flag == true then
                            MarchUtil.OnAttackMonster(formationUuid,targetMarchInfo,curStamina,true)
                            --MarchUtil.OnClickStartMarch(MarchTargetType.ATTACK_MONSTER, realPointId, targetMarchInfo,-1,1)
                        else
                            UIUtil.ShowTipsId(372272)
                        end
                    end
                elseif targetMarchType == MarchTargetType.ATTACK_ALLIANCE_BOSS then
                    WorldMarchTileUIManager:GetInstance():RemoveTroop()
                    if targetMarchInfo ~= nil then
                        local flag = false
                        if string.IsNullOrEmpty(targetMarchInfo.allianceUid) or string.IsNullOrEmpty(LuaEntry.Player.allianceId) then
                            if targetMarchInfo.bossOwnerUid == nil then
                                flag = true
                            elseif targetMarchInfo.bossOwnerUid == LuaEntry.Player.uid then
                                flag = true
                            end
                        else
                            if targetMarchInfo.allianceUid == LuaEntry.Player.allianceId then
                                flag = true
                            end
                        end
                        if flag == true then
                            MarchUtil.OnAttackMonster(formationUuid,targetMarchInfo,curStamina,true)
                            --MarchUtil.OnClickStartMarch(MarchTargetType.ATTACK_MONSTER, realPointId, targetMarchInfo,-1,1)
                        else
                            UIUtil.ShowTipsId(373025)
                        end
                    end
                elseif targetMarchType == MarchTargetType.STATE then
                    MarchUtil.OnStation(formationUuid,pointId,true)
                end
            end
        end
    elseif pointId>0 then
        if canNotGoStr~="" then
            UIUtil.ShowTipsId(canNotGoStr)
        elseif targetMarchType~=-1 then
            local pointInfo = DataCenter.WorldPointManager:GetPointInfo(pointId)
            if pointInfo~=nil then
                if targetMarchType == MarchTargetType.BACK_HOME then
                    return
                elseif targetMarchType == MarchTargetType.COLLECT then
                    local selfMarch = DataCenter.WorldMarchDataManager:GetOwnerMarches(LuaEntry.Player.uid, LuaEntry.Player.allianceId)
                    local count = #selfMarch
                    local isHaveOwnerMarche = false
                    if count > 0 then
                        for i = 1, count do
                            if selfMarch[i]:GetMarchTargetType() == MarchTargetType.COLLECT then
                                local marchCollectInfo = DataCenter.WorldPointManager:GetResourcePointInfoByIndex(selfMarch[i].targetPos)
                                if marchCollectInfo~=nil and marchCollectInfo.id == pointId then
                                    isHaveOwnerMarche = true
                                end
                            end
                        end
                    end
                    if isHaveOwnerMarche then
                        UIUtil.ShowTipsId(129004)
                    else
                        local resInfo = DataCenter.WorldPointManager:GetResourcePointInfoByIndex(pointId)
                        if resInfo~=nil and resInfo.id ~= nil then
                            local resType = LocalController:instance():getStrValue(TableName.GatherResource,resInfo.id, "resource_type")
                            resType = tonumber(resType)
                            if resInfo.gatherMarchUuid == 0 then
                                MarchUtil.OnGotoCollect(formationUuid,resInfo,pointInfo.mainIndex,true)
                            end
                        end

                    end
                    --if UIManager:GetInstance():IsWindowOpen(UIWindowNames.UIWorldPoint) then
                    --    local str = "0"..";"..pointInfo.mainIndex..";"..""..";"..WorldPointUIType.CollectPoint..";".."0"..";".."0"
                    --    EventManager:GetInstance():Broadcast(EventId.RefreshUIWorldPointView,str)
                    --else
                    --    UIManager:GetInstance():OpenWindow(UIWindowNames.UIWorldPoint,{anim = true,playEffect = false,UIMainAnim = UIMainAnimType.LeftRightBottomHide},0,pointInfo.mainIndex,"",WorldPointUIType.CollectPoint,0)
                    --end
                elseif targetMarchType == MarchTargetType.SAMPLE then
                    pointInfo = DataCenter.WorldPointManager:GetSamplePointInfoByIndex(pointId)
                    if pointInfo ~= nil then
                        MarchUtil.OnCollectSimple(formationUuid, pointInfo, curStamina,true)
                    end
                elseif targetMarchType == MarchTargetType.PICK_GARBAGE then
                    pointInfo = DataCenter.WorldPointManager:GetGarbagePointInfoByIndex(pointId)
                    if pointInfo ~= nil then
                        MarchUtil.OnCollectGarbage(formationUuid, pointInfo, curStamina,true)
                    end
                elseif targetMarchType == MarchTargetType.BUILD_ALLIANCE_BUILDING then
                    --MK_
                    WorldMarchTileUIManager:GetInstance():RemoveTroop()
                    if UIManager:GetInstance():IsWindowOpen(UIWindowNames.UIWorldPoint) then
                        local str = pointInfo.uuid..";"..pointInfo.mainIndex..";"..""..";"..WorldPointUIType.AllianceMine
                        EventManager:GetInstance():Broadcast(EventId.RefreshUIWorldPointView,str)
                    else
                        UIManager:GetInstance():OpenWindow(UIWindowNames.UIWorldPoint,{anim = true,playEffect = false,UIMainAnim = UIMainAnimType.LeftRightBottomHide},pointInfo.uuid,pointInfo.mainIndex,"",WorldPointUIType.AllianceMine)
                    end
                    --MarchUtil.OnTargetAllianceMine(formationUuid, pointInfo, targetMarchType,true)
                elseif targetMarchType == MarchTargetType.COLLECT_ALLIANCE_BUILD_RESOURCE then
                    --MK_
                    WorldMarchTileUIManager:GetInstance():RemoveTroop()
                    if UIManager:GetInstance():IsWindowOpen(UIWindowNames.UIWorldPoint) then
                        local str = pointInfo.uuid..";"..pointInfo.mainIndex..";"..""..";"..WorldPointUIType.AllianceMine
                        EventManager:GetInstance():Broadcast(EventId.RefreshUIWorldPointView,str)
                    else
                        UIManager:GetInstance():OpenWindow(UIWindowNames.UIWorldPoint,{anim = true,playEffect = false,UIMainAnim = UIMainAnimType.LeftRightBottomHide},pointInfo.uuid,pointInfo.mainIndex,"",WorldPointUIType.AllianceMine)
                    end
                    --MarchUtil.OnTargetAllianceMine(formationUuid, pointInfo, targetMarchType,true)
                elseif targetMarchType == MarchTargetType.ATTACK_ACT_ALLIANCE_MINE or targetMarchType == MarchTargetType.ASSISTANCE_COLLECT_ACT_ALLIANCE_MINE then
                    WorldMarchTileUIManager:GetInstance():RemoveTroop()
                    if UIManager:GetInstance():IsWindowOpen(UIWindowNames.UIWorldPoint) then
                        local str = pointInfo.uuid..";"..pointInfo.mainIndex..";"..""..";"..WorldPointUIType.AllianceActMine
                        EventManager:GetInstance():Broadcast(EventId.RefreshUIWorldPointView,str)
                    else
                        UIManager:GetInstance():OpenWindow(UIWindowNames.UIWorldPoint,{anim = true,playEffect = false,UIMainAnim = UIMainAnimType.LeftRightBottomHide},pointInfo.uuid,pointInfo.mainIndex,"",WorldPointUIType.AllianceActMine)
                    end
                elseif targetMarchType== MarchTargetType.ATTACK_ARMY_COLLECT then
                    pointInfo = DataCenter.WorldPointManager:GetResourcePointInfoByIndex(pointId)
                    if pointInfo ~= nil then
                        local needConfirm,status, title , content,needBreakProtect = DataCenter.StatusManager:ShowTipForWarFever()
                        if needConfirm then
                            if status ~= nil and title ~= nil  then
                                UIUtil.ShowSecondMessage(title,content,2,"","", function()
                                    MarchUtil.OnAttackCollectBuild(formationUuid, pointInfo, curStamina,true)
                                end, function(needSellConfirm)
                                    DataCenter.StatusManager:SetWarFeverConfirmFlag(needSellConfirm)
                                end)
                                return
                            end
                        elseif needBreakProtect ==  true then
                            UIUtil.ShowMessage(Localization:GetString("120016"), 1, GameDialogDefine.CONFIRM, GameDialogDefine.CANCEL,function()
                                MarchUtil.OnAttackCollectBuild(formationUuid, pointInfo, curStamina,true)
                            end, function()
                            end)
                            return
                        end
                        MarchUtil.OnAttackCollectBuild(formationUuid, pointInfo, curStamina,true)
                    end
                elseif targetMarchType == MarchTargetType.ATTACK_BUILDING then
                    pointInfo = DataCenter.WorldPointManager:GetBuildDataByPointIndex(pointId)
                    if pointInfo~=nil then
                        local needConfirm,status, title , content,needBreakProtect = DataCenter.StatusManager:ShowTipForWarFever()
                        if needConfirm then
                            if status ~= nil and title ~= nil  then
                                UIUtil.ShowSecondMessage(title,content,2,"","", function()
                                    MarchUtil.OnAttackOtherBuild(formationUuid, pointInfo, curStamina,true)
                                end, function(needSellConfirm)
                                    DataCenter.StatusManager:SetWarFeverConfirmFlag(needSellConfirm)
                                end)
                                return
                            end
                        elseif needBreakProtect ==  true then
                            UIUtil.ShowMessage(Localization:GetString("120016"), 1, GameDialogDefine.CONFIRM, GameDialogDefine.CANCEL,function()
                                MarchUtil.OnAttackOtherBuild(formationUuid, pointInfo, curStamina,true)
                            end, function()
                            end)
                            return
                        end
                        MarchUtil.OnAttackOtherBuild(formationUuid, pointInfo, curStamina,true)
                    end
                elseif targetMarchType == MarchTargetType.ATTACK_DRAGON_BUILDING then
                    if pointInfo~=nil then
                        local dragonBuildingPointInfo = PBController.ParsePbFromBytes(pointInfo.extraInfo, "protobuf.DragonBuildingPointInfo")
                        if dragonBuildingPointInfo then
                            local id = dragonBuildingPointInfo["buildId"]
                            if id == DragonBuildingTypes.DragonCenterBuild or id == DragonBuildingTypes.DragonAllianceFlagOther or id == DragonBuildingTypes.DragonAllianceFlagSelf then
                                WorldMarchTileUIManager:GetInstance():RemoveTroop()
                                if UIManager:GetInstance():IsWindowOpen(UIWindowNames.UIWorldPoint) then
                                    local str = pointInfo.uuid..";"..pointInfo.mainIndex..";"..""..";"..WorldPointUIType.DragonBuild
                                    EventManager:GetInstance():Broadcast(EventId.RefreshUIWorldPointView,str)
                                else
                                    UIManager:GetInstance():OpenWindow(UIWindowNames.UIWorldPoint,{anim = true,playEffect = false,UIMainAnim = UIMainAnimType.LeftRightBottomHide},pointInfo.uuid,pointInfo.mainIndex,"",WorldPointUIType.DragonBuild)
                                end
                            else
                                MarchUtil.OnTriggerDragonBuild(formationUuid, pointInfo, curStamina,true)
                            end
                        end
                    end
                elseif targetMarchType == MarchTargetType.TRIGGER_DRAGON_BUILDING then
                    if pointInfo~=nil then
                        local dragonBuildingPointInfo = PBController.ParsePbFromBytes(pointInfo.extraInfo, "protobuf.DragonBuildingPointInfo")
                        if dragonBuildingPointInfo then
                            local id = dragonBuildingPointInfo["buildId"]
                            if id == DragonBuildingTypes.DragonCenterBuild or id == DragonBuildingTypes.DragonAllianceFlagOther or id == DragonBuildingTypes.DragonAllianceFlagSelf then
                                WorldMarchTileUIManager:GetInstance():RemoveTroop()
                                if UIManager:GetInstance():IsWindowOpen(UIWindowNames.UIWorldPoint) then
                                    local str = pointInfo.uuid..";"..pointInfo.mainIndex..";"..""..";"..WorldPointUIType.DragonBuild
                                    EventManager:GetInstance():Broadcast(EventId.RefreshUIWorldPointView,str)
                                else
                                    UIManager:GetInstance():OpenWindow(UIWindowNames.UIWorldPoint,{anim = true,playEffect = false,UIMainAnim = UIMainAnimType.LeftRightBottomHide},pointInfo.uuid,pointInfo.mainIndex,"",WorldPointUIType.DragonBuild)
                                end
                            else
                                MarchUtil.OnTriggerDragonBuild(formationUuid, pointInfo, curStamina,true)
                            end
                        end

                    end
                elseif targetMarchType == MarchTargetType.PICK_SECRET_KEY then
                    if pointInfo~=nil then
                        WorldMarchTileUIManager:GetInstance():RemoveTroop()
                        if UIManager:GetInstance():IsWindowOpen(UIWindowNames.UIWorldPoint) then
                            local str = pointInfo.uuid..";"..pointInfo.mainIndex..";"..""..";"..WorldPointUIType.DragonSecretKey
                            EventManager:GetInstance():Broadcast(EventId.RefreshUIWorldPointView,str)
                        else
                            UIManager:GetInstance():OpenWindow(UIWindowNames.UIWorldPoint,{anim = true,playEffect = false,UIMainAnim = UIMainAnimType.LeftRightBottomHide},pointInfo.uuid,pointInfo.mainIndex,"",WorldPointUIType.DragonSecretKey)
                        end
                    end
                elseif targetMarchType == MarchTargetType.ATTACK_ALLIANCE_BUILDING then
                    if pointInfo~=nil then
                        local needConfirm,status, title , content,needBreakProtect = DataCenter.StatusManager:ShowTipForWarFever()
                        if needConfirm then
                            if status ~= nil and title ~= nil  then
                                UIUtil.ShowSecondMessage(title,content,2,"","", function()
                                    MarchUtil.OnAttackAllianceBuild(formationUuid, pointInfo, curStamina,true)
                                end, function(needSellConfirm)
                                    DataCenter.StatusManager:SetWarFeverConfirmFlag(needSellConfirm)
                                end)
                                return
                            end
                        elseif needBreakProtect ==  true then
                            UIUtil.ShowMessage(Localization:GetString("120016"), 1, GameDialogDefine.CONFIRM, GameDialogDefine.CANCEL,function()
                                MarchUtil.OnAttackAllianceBuild(formationUuid, pointInfo, curStamina,true)
                            end, function()
                            end)
                            return
                        end
                        MarchUtil.OnAttackAllianceBuild(formationUuid, pointInfo, curStamina,true)
                    end
                elseif targetMarchType == MarchTargetType.ATTACK_CITY or targetMarchType == MarchTargetType.DIRECT_ATTACK_CITY then
                    pointInfo = DataCenter.WorldPointManager:GetBuildDataByPointIndex(pointId)
                    if pointInfo~=nil then
                        local needConfirm,status, title , content,needBreakProtect = DataCenter.StatusManager:ShowTipForWarFever()
                        if needConfirm then
                            if status ~= nil and title ~= nil  then
                                UIUtil.ShowSecondMessage(title,content,2,"","", function()
                                    MarchUtil.OnAttackOtherCity(formationUuid,pointInfo,curStamina,targetMarchType,true)
                                end, function(needSellConfirm)
                                    DataCenter.StatusManager:SetWarFeverConfirmFlag(needSellConfirm)
                                end)
                                return
                            end
                        elseif needBreakProtect ==  true then
                            UIUtil.ShowMessage(Localization:GetString("120016"), 1, GameDialogDefine.CONFIRM, GameDialogDefine.CANCEL,function()
                                MarchUtil.OnAttackOtherCity(formationUuid,pointInfo,curStamina,targetMarchType,true)
                            end, function()
                            end)
                            return
                        end
                        MarchUtil.OnAttackOtherCity(formationUuid,pointInfo,curStamina,targetMarchType,true)
                    end
                elseif targetMarchType == MarchTargetType.ASSISTANCE_CITY then
                    pointInfo = DataCenter.WorldPointManager:GetBuildDataByPointIndex(pointId)
                    if pointInfo~=nil then
                        UIUtil.ShowMessage(Localization:GetString("121001"), 2, GameDialogDefine.CONFIRM, GameDialogDefine.CANCEL,function()
                            MarchUtil.OnAssistanceOtherCity(formationUuid,pointInfo,true)
                        end, function()
                        end)

                    end
                elseif targetMarchType == MarchTargetType.ATTACK_ALLIANCE_CITY then
                    if pointInfo~=nil then
                        local showAllianceCity = false
                        if pointInfo.PointType == WorldPointType.WORLD_ALLIANCE_CITY then
                            local allianceCityPointInfo = PBController.ParsePbFromBytes(pointInfo.extraInfo, "protobuf.AllianceCityPointInfo")
                            if allianceCityPointInfo~=nil then
                                local allianceId =allianceCityPointInfo["allianceId"]
                                if allianceId~=nil and allianceId~="" then
                                    showAllianceCity = true
                                end
                            end
                        end

                        local needConfirm,status, title , content,needBreakProtect = DataCenter.StatusManager:ShowTipForWarFever()
                        if needConfirm and showAllianceCity then
                            if status ~= nil and title ~= nil  then
                                UIUtil.ShowSecondMessage(title,content,2,"","", function()
                                    MarchUtil.OnAttackAllianceCity(formationUuid,pointInfo,curStamina,true)
                                end, function(needSellConfirm)
                                    DataCenter.StatusManager:SetWarFeverConfirmFlag(needSellConfirm)
                                end)
                                return
                            end
                        elseif needBreakProtect ==  true and showAllianceCity then
                            UIUtil.ShowMessage(Localization:GetString("120016"), 1, GameDialogDefine.CONFIRM, GameDialogDefine.CANCEL,function()
                                MarchUtil.OnAttackAllianceCity(formationUuid,pointInfo,curStamina,true)
                            end, function()
                            end)
                            return
                        end
                        MarchUtil.OnAttackAllianceCity(formationUuid,pointInfo,curStamina,true)
                    end
                elseif targetMarchType == MarchTargetType.ASSISTANCE_ALLIANCE_CITY then
                    if pointInfo~=nil then
                        UIUtil.ShowMessage(Localization:GetString("121001"), 2, GameDialogDefine.CONFIRM, GameDialogDefine.CANCEL,function()
                            MarchUtil.OnAssistanceAllianceCity(formationUuid,pointInfo,true)
                        end, function()
                        end)
                    end
                elseif targetMarchType == MarchTargetType.ASSISTANCE_ALLIANCE_BUILDING then
                    if pointInfo~=nil then
                        UIUtil.ShowMessage(Localization:GetString("121001"), 2, GameDialogDefine.CONFIRM, GameDialogDefine.CANCEL,function()
                            MarchUtil.OnAssistanceAllianceBuild(formationUuid,pointInfo,true)
                        end, function()
                        end)

                    end
                elseif targetMarchType == MarchTargetType.ASSISTANCE_DRAGON_BUILDING then
                    if pointInfo~=nil then
                        WorldMarchTileUIManager:GetInstance():RemoveTroop()
                        if UIManager:GetInstance():IsWindowOpen(UIWindowNames.UIWorldPoint) then
                            local str = pointInfo.uuid..";"..pointInfo.mainIndex..";"..""..";"..WorldPointUIType.DragonBuild
                            EventManager:GetInstance():Broadcast(EventId.RefreshUIWorldPointView,str)
                        else
                            UIManager:GetInstance():OpenWindow(UIWindowNames.UIWorldPoint,{anim = true,playEffect = false,UIMainAnim = UIMainAnimType.LeftRightBottomHide},pointInfo.uuid,pointInfo.mainIndex,"",WorldPointUIType.DragonBuild)
                        end
                    end
                elseif targetMarchType == MarchTargetType.ASSISTANCE_BUILD then
                    pointInfo = DataCenter.WorldPointManager:GetBuildDataByPointIndex(pointId)
                    if pointInfo~=nil then
                        UIUtil.ShowMessage(Localization:GetString("121001"), 2, GameDialogDefine.CONFIRM, GameDialogDefine.CANCEL,function()
                            MarchUtil.OnAssistanceBuild(formationUuid,pointInfo,true)
                        end, function()
                        end)

                    end

                elseif targetMarchType == MarchTargetType.STATE then
                    MarchUtil.OnStation(formationUuid,pointId,true)
                end
            else
                if targetMarchType == MarchTargetType.STATE then
                    MarchUtil.OnStation(formationUuid,pointId,true)
                end
            end
        end
    end
end

local function GetTargetMarchType(targetMarchUuid,pointId)
    local canNotGoStr = ""
    local targetMarchType = -1
    local targetPointId = pointId
    if targetMarchUuid~=0 then
        local targetMarchInfo = DataCenter.WorldMarchDataManager:GetMarch(targetMarchUuid)
        if targetMarchInfo~=nil and targetMarchInfo.ownerUid ~= LuaEntry.Player.uid then
            if targetMarchInfo:GetMarchType() == NewMarchType.MONSTER then
                targetMarchType = MarchTargetType.ATTACK_MONSTER
            elseif targetMarchInfo:GetMarchType() == NewMarchType.BOSS then
                targetMarchType = MarchTargetType.RALLY_FOR_BOSS
                canNotGoStr = "110170"
            elseif targetMarchInfo:GetMarchType() == NewMarchType.EXPLORE or targetMarchInfo:GetMarchType() == NewMarchType.SCOUT
                    or targetMarchInfo:GetMarchType() == NewMarchType.RESOURCE_HELP then
                canNotGoStr = "120004"
            elseif targetMarchInfo:GetMarchType() == NewMarchType.GOLLOES_EXPLORE then
                targetMarchType = MarchTargetType.GOLLOES_EXPLORE
            elseif targetMarchInfo:GetMarchType() == NewMarchType.GOLLOES_TRADE then
                targetMarchType = MarchTargetType.GOLLOES_TRADE
            elseif targetMarchInfo:GetMarchType() == NewMarchType.PUZZLE_BOSS then
                targetMarchType = MarchTargetType.PUZZLE_BOSS
            elseif targetMarchInfo:GetMarchType() == NewMarchType.ALLIANCE_BOSS then
                targetMarchType = MarchTargetType.ATTACK_ALLIANCE_BOSS
            elseif targetMarchInfo:GetMarchType() == NewMarchType.ACT_BOSS then
                local curTime = UITimeManager:GetInstance():GetServerTime()
                local dataList = DataCenter.ActivityListDataManager:GetActivityDataByType(ActivityEnum.ActivityType.WorldBoss)
                if #dataList>0 then
                    local data = dataList[1]
                    if data.startTime<=curTime and data.endTime>=curTime then
                        if targetMarchInfo.actStartTime<=curTime and targetMarchInfo.actEndTime>=curTime then
                            targetMarchType = MarchTargetType.DIRECT_ATTACK_ACT_BOSS
                        else
                            canNotGoStr = "302183"
                        end
                    else
                        canNotGoStr = "302190"
                    end
                else
                    canNotGoStr = "302190"
                end
            elseif targetMarchInfo:GetMarchType() == NewMarchType.ALLIANCE_BOSS then
                targetMarchType = MarchTargetType.ALLIANCE_BOSS
            elseif targetMarchInfo:GetMarchType() == NewMarchType.CHALLENGE_BOSS then
                targetMarchType = MarchTargetType.ATTACK_MONSTER
            elseif targetMarchInfo:GetIsBroken() == true then
                canNotGoStr = "120004"
            else
                local allianceUid =""
                local data =  DataCenter.AllianceBaseDataManager:GetAllianceBaseData()
                if data~=nil then
                    allianceUid = data.uid
                end
                if allianceUid~=nil and allianceUid~="" and targetMarchInfo.allianceUid == allianceUid then
                else
                    targetMarchType = MarchTargetType.ATTACK_ARMY
                end
            end
        else
            targetMarchType = MarchTargetType.STATE
        end
    elseif pointId>0 then
        if CS.SceneManager.World:IsInMapByIndex(pointId) ==false then
            return false
        else
            local pointInfo = DataCenter.WorldPointManager:GetPointInfo(pointId)
            if pointInfo~=nil and pointInfo.PointType ~= WorldPointType.Other then
                if pointInfo.PointType == WorldPointType.EXPLORE_POINT then
                    targetMarchType = MarchTargetType.EXPLORE
                    canNotGoStr = "120004"
                elseif pointInfo.PointType == WorldPointType.SAMPLE_POINT or pointInfo.PointType == WorldPointType.SAMPLE_POINT_NEW then
                    canNotGoStr = "121285"
                elseif pointInfo.PointType == WorldPointType.GARBAGE then
                    canNotGoStr = "121285"
                elseif pointInfo.PointType == WorldPointType.WorldResource then
                    pointInfo = DataCenter.WorldPointManager:GetResourcePointInfoByIndex(pointId)
                    if pointInfo~=nil then
                        if pointInfo.gatherMarchUuid ~=0 then
                            local allianceUid =""
                            local data =  DataCenter.AllianceBaseDataManager:GetAllianceBaseData()
                            if data~=nil then
                                allianceUid = data.uid
                            end
                            local targetMarchInfo = DataCenter.WorldMarchDataManager:GetMarch(pointInfo.gatherMarchUuid)
                            if targetMarchInfo~=nil then
                                if targetMarchInfo.ownerUid~= LuaEntry.Player.uid then
                                    if allianceUid~=nil and allianceUid~="" and targetMarchInfo.allianceUid == allianceUid then
                                    else
                                        targetMarchType = MarchTargetType.ATTACK_ARMY_COLLECT
                                    end
                                end
                            end
                        else
                            targetMarchType = MarchTargetType.COLLECT
                        end
                    end
                elseif pointInfo.PointType == WorldPointType.PlayerBuilding then
                    pointInfo = DataCenter.WorldPointManager:GetBuildDataByPointIndex(pointId)
                    if pointInfo~=nil then
                        if pointInfo.destroyStartTime~=nil and pointInfo.destroyStartTime>0 then
                            canNotGoStr = "121062"
                        else
                            if pointInfo.ownerUid == LuaEntry.Player.uid then
                                if pointInfo.itemId == BuildingTypes.FUN_BUILD_MAIN then
                                    targetMarchType = MarchTargetType.BACK_HOME
                                else
                                    targetMarchType = MarchTargetType.ASSISTANCE_BUILD
                                end
                            else
                                local allianceUid =""
                                local data =  DataCenter.AllianceBaseDataManager:GetAllianceBaseData()
                                if data~=nil then
                                    allianceUid = data.uid
                                end
                                if allianceUid~=nil and allianceUid~="" and pointInfo.allianceId == allianceUid then
                                    if pointInfo.itemId == BuildingTypes.FUN_BUILD_MAIN then
                                        targetMarchType = MarchTargetType.ASSISTANCE_CITY
                                    else
                                        targetMarchType = MarchTargetType.ASSISTANCE_BUILD
                                    end

                                else
                                    if pointInfo.itemId == BuildingTypes.FUN_BUILD_MAIN then
                                        targetMarchType = MarchTargetType.ATTACK_CITY
                                    else
                                        local inProtect,alreadyExitOccupy = SeasonUtil.CanAttackBuild(pointInfo.mainIndex)
                                        if inProtect == true then
                                            canNotGoStr ="110242"
                                        elseif alreadyExitOccupy == false then
                                            canNotGoStr ="110241"
                                        else
                                            targetMarchType = MarchTargetType.ATTACK_BUILDING
                                        end

                                    end
                                end
                            end
                        end

                    end
                elseif pointInfo.PointType == WorldPointType.WORLD_ALLIANCE_CITY then
                    if CrossServerUtil:GetIsCrossServer() then
                        canNotGoStr = "104266"
                    else
                        if pointInfo~=nil then
                            local allianceCityPointInfo = PBController.ParsePbFromBytes(pointInfo.extraInfo, "protobuf.AllianceCityPointInfo")
                            if allianceCityPointInfo~=nil then
                                local cityAllianceId = allianceCityPointInfo["allianceId"]
                                local allianceUid =""
                                local data =  DataCenter.AllianceBaseDataManager:GetAllianceBaseData()
                                if data~=nil then
                                    allianceUid = data.uid
                                end
                                if allianceUid~=nil and allianceUid~="" then
                                    if cityAllianceId == allianceUid then
                                        targetMarchType = MarchTargetType.ASSISTANCE_ALLIANCE_CITY
                                    else
                                        targetMarchType = MarchTargetType.ATTACK_ALLIANCE_CITY
                                    end
                                else
                                    canNotGoStr = "390172"
                                end
                            end
                        end
                    end
                elseif pointInfo.PointType == WorldPointType.WORLD_ALLIANCE_BUILD then
                    if pointInfo~=nil then
                        local allianceBuildingPointInfo = PBController.ParsePbFromBytes(pointInfo.extraInfo, "protobuf.AllianceBuildingPointInfo")
                        if allianceBuildingPointInfo~=nil then
                            local buildId = allianceBuildingPointInfo["buildId"]
                            local cityAllianceId = allianceBuildingPointInfo["allianceId"]
                            local allianceId = LuaEntry.Player.allianceId
                            if buildId == BuildingTypes.ALLIANCE_FLAG_BUILD or WorldAllianceBuildUtil.IsAllianceFrontGroup(buildId) or WorldAllianceBuildUtil.IsAllianceCenterGroup(buildId) then
                                if allianceId~=nil and allianceId~="" then
                                    if cityAllianceId == allianceId then
                                        targetMarchType = MarchTargetType.ASSISTANCE_ALLIANCE_BUILDING
                                    else
                                        targetMarchType = MarchTargetType.ATTACK_ALLIANCE_BUILDING
                                    end
                                else
                                    canNotGoStr = "390172"
                                end
                            elseif WorldAllianceBuildUtil.IsAllianceMineGroup(buildId) then
                                if not string.IsNullOrEmpty(allianceId) then
                                    if cityAllianceId == allianceId then
                                        if allianceBuildingPointInfo.state == AllianceMineStatus.Normal then
                                            targetMarchType = MarchTargetType.COLLECT_ALLIANCE_BUILD_RESOURCE
                                        else
                                            targetMarchType = MarchTargetType.BUILD_ALLIANCE_BUILDING
                                        end
                                    else
                                        canNotGoStr = "NO"
                                    end
                                else
                                    canNotGoStr = "NO"
                                end
                            elseif WorldAllianceBuildUtil.IsAllianceActMineGroup(buildId) then
                                if not string.IsNullOrEmpty(allianceId) then
                                    if cityAllianceId == allianceId then
                                        targetMarchType = MarchTargetType.COLLECT_ALLIANCE_BUILD_RESOURCE
                                    else
                                        targetMarchType = MarchTargetType.ATTACK_ACT_ALLIANCE_MINE
                                    end
                                else
                                    targetMarchType = MarchTargetType.ATTACK_ACT_ALLIANCE_MINE
                                end
                            end

                        end
                    end
                elseif pointInfo.PointType == WorldPointType.DRAGON_BUILDING then
                    if pointInfo~=nil then
                        local allianceBuildingPointInfo = PBController.ParsePbFromBytes(pointInfo.extraInfo, "protobuf.DragonBuildingPointInfo")
                        if allianceBuildingPointInfo~=nil then
                            local buildId = allianceBuildingPointInfo["buildId"]
                            local cityAllianceId = allianceBuildingPointInfo["allianceId"]
                            local allianceId = LuaEntry.Player.allianceId
                            if not string.IsNullOrEmpty(allianceId) then
                                if cityAllianceId == allianceId then
                                    targetMarchType = MarchTargetType.ASSISTANCE_DRAGON_BUILDING
                                else
                                    targetMarchType = MarchTargetType.ATTACK_DRAGON_BUILDING
                                end
                            else
                                targetMarchType = MarchTargetType.ATTACK_DRAGON_BUILDING
                            end
                        end
                    end
                elseif pointInfo.PointType == WorldPointType.SECRET_KEY then
                    if pointInfo~=nil then
                        targetMarchType = MarchTargetType.PICK_SECRET_KEY
                    end
                elseif pointInfo.PointType == WorldPointType.WorldRuinPoint then
                    targetMarchType = MarchTargetType.STATE
                end
            else
                local city = DataCenter.WorldPointManager:GetBuildDataByPointIndex(pointId)
                if city~=nil then
                    if city~=nil and city.itemId == BuildingTypes.FUN_BUILD_MAIN then
                        targetPointId = city.mainIndex
                        if city.ownerUid == LuaEntry.Player.uid then
                            targetMarchType = MarchTargetType.BACK_HOME
                        else
                            local allianceUid =""
                            local data =  DataCenter.AllianceBaseDataManager:GetAllianceBaseData()
                            if data~=nil then
                                allianceUid = data.uid
                            end
                            if allianceUid~=nil and allianceUid~="" and city.allianceId == allianceUid then
                                targetMarchType = MarchTargetType.ASSISTANCE_CITY
                            else
                                targetMarchType = MarchTargetType.ATTACK_CITY
                            end
                        end
                    else
                        targetMarchType = MarchTargetType.STATE
                    end
                else
                    targetMarchType = MarchTargetType.STATE
                end
            end
        end
    end
    if canNotGoStr == "" then
        if  SeasonUtil.IsInSeasonDesertMode() and CrossServerUtil:GetIsCrossServer() then
            local state,dialog = CrossServerUtil.CheckCanUseInDeclareWarTarget(targetMarchType)
            if state ==false then
                canNotGoStr = dialog
            end
        end
    end
    return targetMarchType,canNotGoStr,targetPointId
end

--攻击野怪
local function OnAttackMonster(selfMarchUuid,targetMonsterInfo,curStamina,isFormation,autoBackHome,isDirectionMarch)
    local targetMarchUuid = targetMonsterInfo.uuid
    local targetType = MarchTargetType.ATTACK_MONSTER
    local monsterMarchInfo = PBController.ParsePbFromBytes(targetMonsterInfo.extraInfo, "protobuf.WorldPointMonster")
    if monsterMarchInfo~=nil then
        if monsterMarchInfo.type == NewMarchType.ALLIANCE_BOSS then
            targetType = MarchTargetType.ATTACK_ALLIANCE_BOSS
        end
    else
        return
    end
    if LuaEntry.Effect:GetGameEffect(EffectDefine.ALLOW_ATTACK_SAME_MONSTER)<=0 then
        local selfMarch = DataCenter.WorldMarchDataManager:GetOwnerMarches(LuaEntry.Player.uid, LuaEntry.Player.allianceId)
        local count = #selfMarch
        if count > 0 then
            for i = 1, count do
                local march = selfMarch[i]
                if march~=nil and march:GetMarchTargetType() == MarchTargetType.ATTACK_MONSTER  and march.targetUuid == targetMarchUuid then
                    UIUtil.ShowTipsId(131013)
                    return
                end
            end

        end
    end
    local monster = DataCenter.MonsterTemplateManager:GetMonsterTemplate(monsterMarchInfo.monsterId)
    if monster~=nil then
        local targetLevel = tonumber(monster:getValue("level"))
        local showGuide = isDirectionMarch or false
        --if targetLevel>=5 then
        --    if not DataCenter.BuildManager:HasBuildByIdAndLevel(BuildingTypes.FUN_BUILD_HOSPITAL,1) then
        --        UIUtil.ShowMessage(Localization:GetString("129106"), 1, GameDialogDefine.GOTO,nil,function()
        --            GoToUtil.GotoCityByBuildId(BuildingTypes.FUN_BUILD_HOSPITAL)
        --        end,nil,nil,nil)
        --        return
        --    end
        --end
        local hasAttackMaxLevel = LuaEntry.Player.pveLevel
        if monsterMarchInfo.type ~= NewMarchType.CHALLENGE_BOSS and monsterMarchInfo.type ~= NewMarchType.PUZZLE_BOSS and monsterMarchInfo.type ~= NewMarchType.ALLIANCE_BOSS then
            local normalInfo = PBController.ParsePbFromBytes(monsterMarchInfo.monsterExtraInfo, "protobuf.NormalMonsterInfo")
            if normalInfo~=nil and normalInfo.eventId~=nil and normalInfo.eventId~="" then
                
            else
                if targetLevel>DataCenter.MonsterManager:GetCurCanAttackMaxLevel() then
                    if UIManager:GetInstance():IsWindowOpen(UIWindowNames.UIWorldPoint) then
                        local str = targetMarchUuid..";"..targetMonsterInfo.pointIndex..";"..""..";"..WorldPointUIType.Monster..";".."0"..";".."0"
                        EventManager:GetInstance():Broadcast(EventId.RefreshUIWorldPointView,str)
                    else
                        UIManager:GetInstance():OpenWindow(UIWindowNames.UIWorldPoint,{anim = true,playEffect = false,UIMainAnim = UIMainAnimType.LeftRightBottomHide},targetMarchUuid,targetMonsterInfo.pointIndex,"",WorldPointUIType.Monster,0)
                    end
                    if showGuide == true then
                        EventManager:GetInstance():Broadcast(EventId.StartAttackMonsterWithoutMsgTip,0)
                    end
                    --UIManager:GetInstance():OpenWindow(UIWindowNames.WorldDesUI,targetMarchUuid)
                    return
                end
            end
            
        end
        local formationUuid = 0
        if isFormation ==nil or isFormation == false then
            local marchInfo = DataCenter.WorldMarchDataManager:GetMarch(selfMarchUuid)
            if marchInfo~=nil then
                formationUuid = marchInfo.ownerFormationUuid
            end
        else
            formationUuid = selfMarchUuid
        end
        local staminaCost = MarchUtil.GetCostStaminaByTargetType(MarchTargetType.ATTACK_MONSTER,nil,formationUuid)

        if curStamina <staminaCost then
            --UIUtil.ShowTipsId(GameDialogDefine.STAMINA_IS_NOT_ENOUGH)
            GoToResLack.GotoAddStamina(staminaCost)
            if showGuide == true then
                EventManager:GetInstance():Broadcast(EventId.StartAttackMonsterWithoutMsgTip,0)
            end
            return
        end
        local troop = targetMonsterInfo
        if troop~=nil then
            local endPos = targetMonsterInfo.pointIndex
            local backHome = nil
            if autoBackHome == MarchAutoBackType.NoBack then
                backHome = autoBackHome
            else
                backHome = MarchUtil.GetAutoBackHomeState(MarchTargetType.ATTACK_MONSTER)
            end
            if isFormation~=nil and isFormation == true then
                local formation = DataCenter.ArmyFormationDataManager:GetOneArmyInfoByUuid(selfMarchUuid)
                if formation~=nil then
                    local canAddNum = MarchUtil.GetCanAddHeroNum(formation:GetCurHeroes(),formation.index)
                    if canAddNum>0 then
                        local show  = Setting:GetPrivateInt("SHOW_ADD_HERO",1)
                        if show<=0 then
                            UIUtil.ShowSecondMessage(Localization:GetString("121006"),Localization:GetString("121007"),1,121008,"", function()
                                local startPos = MarchUtil.GetFormationStartPos()
                                UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.ATTACK_MONSTER,endPos,targetMarchUuid,-1,backHome,startPos,nil,false)
                            end, function(needSellConfirm)
                                if needSellConfirm== false then
                                    Setting:SetPrivateInt("SHOW_ADD_HERO",1)
                                else
                                    Setting:SetPrivateInt("SHOW_ADD_HERO",0)
                                end
                            end)
                            if showGuide == true then
                                EventManager:GetInstance():Broadcast(EventId.StartAttackMonsterWithoutMsgTip,0)
                            end
                            return
                        end
                    end
                    local k5 = LuaEntry.DataConfig:TryGetNum("res_lack", "k5")
                    local heroUuid,targetHeroUuid = DataCenter.ArmyFormationDataManager:GetFormationHeroCanChangeHigherUuid(selfMarchUuid)
                    if DataCenter.BuildManager.MainLv<=k5 and heroUuid~=nil and heroUuid~=0 and targetHeroUuid~=nil and targetHeroUuid~=0 then
                        UIUtil.ShowMessage(Localization:GetString("104245"), 1, 121008,"", function()
                            local startPos = MarchUtil.GetFormationStartPos()
                            UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.ATTACK_MONSTER,endPos,targetMarchUuid,-1,backHome,startPos,nil,false)
                        end)
                        if showGuide == true then
                            EventManager:GetInstance():Broadcast(EventId.StartAttackMonsterWithoutMsgTip, 0)
                        end
                        return
                    end
                    local needShow  = Setting:GetPrivateInt("SHOW_ADD_SOLDIER",0)
                    if needShow<=0 then
                        local totalPower = MarchUtil.GetFormationPower(formation:GetCurHeroes(),formation.soldiers,formation.index,MarchUtil.GetCampAddParam(formation:GetCurHeroes()))
                        local targetPower = DataCenter.MonsterTemplateManager:GetRecommendPower(targetMarchInfo.monsterId)
                        local power_tip = DataCenter.MonsterTemplateManager:GetTableValue(targetMarchInfo.monsterId,"power_tip")
                        if power_tip ==1 then
                            targetPower = 0
                        end
                        local percent = (totalPower-targetPower)/math.max(1,targetPower)
                        local k2 = LuaEntry.DataConfig:TryGetNum("res_lack", "k2")
                        if monsterMarchInfo.type ~= NewMarchType.CHALLENGE_BOSS and monsterMarchInfo.type ~= NewMarchType.PUZZLE_BOSS and monsterMarchInfo.type ~= NewMarchType.ALLIANCE_BOSS then
                            if percent<0 then
                                local configOpenState = LuaEntry.DataConfig:CheckSwitch("detect_monster")
                                if configOpenState then
                                    UIUtil.ShowMessage(Localization:GetString("121010"),1,nil,nil,nil, nil,function(needSellConfirm)
                                        if needSellConfirm== false then
                                            Setting:SetPrivateInt("SHOW_ADD_SOLDIER",1)
                                        else
                                            Setting:SetPrivateInt("SHOW_ADD_SOLDIER",0)
                                        end
                                    end,121009)
                                elseif hasAttackMaxLevel<=k2 then
                                    --UIUtil.ShowTipsId(121010)
                                    UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationLackPower,{anim= true,isBlur = true},targetLevel,selfMarchUuid,totalPower,targetPower)
                                else
                                    UIUtil.ShowSecondMessage(Localization:GetString("121009"),Localization:GetString("121010"),1,150122,"", function()
                                        MarchUtil.SendCreateMarchMessage(selfMarchUuid,targetType,endPos,targetMarchUuid,-1,backHome,true)
                                    end, function(needSellConfirm)
                                        if needSellConfirm== false then
                                            Setting:SetPrivateInt("SHOW_ADD_SOLDIER",1)
                                        else
                                            Setting:SetPrivateInt("SHOW_ADD_SOLDIER",0)
                                        end
                                    end)
                                end
                                if showGuide == true then
                                    EventManager:GetInstance():Broadcast(EventId.StartAttackMonsterWithoutMsgTip,0)
                                end
                                return
                            end
                        end
                    end
                    if showGuide == true then
                        EventManager:GetInstance():Broadcast(EventId.StartAttackMonsterWithoutMsgTip,1)
                    end
                    MarchUtil.SendCreateMarchMessage(selfMarchUuid,targetType,endPos,targetMarchUuid,-1,backHome,true)
                end

            else
                local heroUuid = 0
                local heroName = ""
                local heroNameList = {}
                local isReachBreakLimit = false
                local isReachLevelLimit = false
                local marchInfo = DataCenter.WorldMarchDataManager:GetMarch(selfMarchUuid)
                if marchInfo~=nil then
                    local formation = DataCenter.ArmyFormationDataManager:GetOneArmyInfoByUuid(marchInfo.ownerFormationUuid)
                    if formation ~=nil and formation:GetCurHeroes()~=nil then
                        local needShow  = Setting:GetPrivateInt("SHOW_ADD_SOLDIER",0)
                        if needShow<=0 then
                            local totalPower = MarchUtil.GetFormationPower(formation:GetCurHeroes(),formation.soldiers,formation.index,MarchUtil.GetCampAddParam(formation:GetCurHeroes()))
                            local targetPower = DataCenter.MonsterTemplateManager:GetRecommendPower(monsterMarchInfo.monsterId)
                            local power_tip = DataCenter.MonsterTemplateManager:GetTableValue(monsterMarchInfo.monsterId,"power_tip")
                            if power_tip ==1 then
                                targetPower = 0
                            end
                            local percent = (totalPower-targetPower)/math.max(1,targetPower)
                            local k2 = LuaEntry.DataConfig:TryGetNum("res_lack", "k2")
                            if monsterMarchInfo.type ~= NewMarchType.CHALLENGE_BOSS and monsterMarchInfo.type ~= NewMarchType.PUZZLE_BOSS and monsterMarchInfo.type ~= NewMarchType.ALLIANCE_BOSS then
                                if percent<0 then
                                    if hasAttackMaxLevel<=k2 then
                                        local freeSoldiers = DataCenter.ArmyFormationDataManager:GetArmyUnFormationList()
                                        local length = table.count(freeSoldiers)
                                        if length>0 then
                                            UIUtil.ShowMessage(Localization:GetString("121057"), 1, 121058, GameDialogDefine.CANCEL, function()
                                                MarchUtil.OnBackHome(selfMarchUuid)
                                                CS.SceneManager.World.marchUuid = selfMarchUuid
                                                DataCenter.WorldMarchDataManager:TrackMarch(selfMarchUuid)
                                                WorldMarchTileUIManager:GetInstance():ShowTroop(selfMarchUuid)
                                            end)
                                        else
                                            local configOpenState = LuaEntry.DataConfig:CheckSwitch("detect_monster")
                                            if configOpenState then
                                                UIUtil.ShowMessage(Localization:GetString("121010"),1,nil,nil,nil, nil,function(needSellConfirm)
                                                    if needSellConfirm== false then
                                                        Setting:SetPrivateInt("SHOW_ADD_SOLDIER",1)
                                                    else
                                                        Setting:SetPrivateInt("SHOW_ADD_SOLDIER",0)
                                                    end
                                                end,121009)
                                            else
                                                --UIUtil.ShowTipsId(121010)
                                                UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationLackPower,{anim= true,isBlur = true},targetLevel,formation.uuid,totalPower,targetPower)
                                            end
                                        end
                                    else
                                        UIUtil.ShowSecondMessage(Localization:GetString("121009"),Localization:GetString("121010"),1,150122,"", function()
                                            MarchUtil.StartMarch(targetType, endPos, targetMarchUuid, -1, selfMarchUuid,0, backHome)
                                        end, function(needSellConfirm)
                                            if needSellConfirm== false then
                                                Setting:SetPrivateInt("SHOW_ADD_SOLDIER",1)
                                            else
                                                Setting:SetPrivateInt("SHOW_ADD_SOLDIER",0)
                                            end
                                        end)
                                    end
                                    if showGuide == true then
                                        EventManager:GetInstance():Broadcast(EventId.StartAttackMonsterWithoutMsgTip,0)
                                    end
                                    return
                                end
                            end
                        end
                        local show =  Setting:GetPrivateInt("UIShowHeroWarning",0)
                        --if show<=0 then
                        --    table.walk(formation:GetCurHeroes(),function(k,v)
                        --        local heroData = DataCenter.HeroDataManager:GetHeroByUuid(k)
                        --        if heroData~=nil then
                        --            if heroUuid==0 and isReachBreakLimit == false and isReachLevelLimit == false  then
                        --                if heroData:IsReachBreakLimit() == true then
                        --                    isReachBreakLimit = true
                        --                    heroUuid = k
                        --                elseif heroData:IsReachLevelLimit() == true then
                        --                    isReachLevelLimit = true
                        --                    heroUuid = k
                        --                end
                        --            end
                        --            if heroData:IsReachBreakLimit() == true or heroData:IsReachLevelLimit() == true then
                        --                table.insert(heroNameList,heroData:GetName())
                        --            end
                        --        end
                        --    end)
                        --end
                        if heroUuid~=0 and (isReachBreakLimit == true or isReachLevelLimit == true) then
                            local total = #heroNameList
                            local num = 0
                            table.walk(heroNameList,function(k,v)
                                num = num+1
                                if num<total then
                                    heroName = heroName.."<color=#ff0000>"..v.."</color>"..","
                                else
                                    heroName = heroName.."<color=#ff0000>"..v.."</color>"
                                end
                            end)
                            local content = Localization:GetString("161022",heroName)
                            UIUtil.ShowSecondMessage(Localization:GetString("100378"),content, 2, "161030", "161023",function()
                                MarchUtil.StartMarch(targetType, endPos, targetMarchUuid, -1, selfMarchUuid,0, backHome)
                            end,function(needSellConfirm)
                                if needSellConfirm== false then
                                    Setting:SetPrivateInt("UIShowHeroWarning",1)
                                else
                                    Setting:SetPrivateInt("UIShowHeroWarning",0)
                                end
                            end, function()
                                if isReachBreakLimit == true then
                                    local heroList = {}
                                    table.insert(heroList,heroUuid)
                                    UIManager:GetInstance():OpenWindow(UIWindowNames.UIHeroInfo, 1, heroUuid, heroList)
                                elseif isReachLevelLimit == true then
                                    UIManager:GetInstance():OpenWindow(UIWindowNames.UIHeroAdvance)
                                end
                            end)
                            if showGuide == true then
                                EventManager:GetInstance():Broadcast(EventId.StartAttackMonsterWithoutMsgTip,0)
                            end
                        else
                            if showGuide == true then
                                EventManager:GetInstance():Broadcast(EventId.StartAttackMonsterWithoutMsgTip,1)

                            end
                            MarchUtil.StartMarch(targetType, endPos, targetMarchUuid, -1, selfMarchUuid,0, backHome)
                        end
                    end

                end


            end

        end

    end
end
--攻击编队
local function OnAttackArmy(selfMarchUuid,targetMarchInfo,curStamina,isFormation)
    local targetMarchUuid = targetMarchInfo.uuid
    local staminaCost = MarchUtil.GetCostStaminaByTargetType(MarchTargetType.ATTACK_ARMY)
    if curStamina <staminaCost then
        --UIUtil.ShowTipsId(GameDialogDefine.STAMINA_IS_NOT_ENOUGH) 
        GoToResLack.GotoAddStamina(staminaCost)
        return
    end
    local troop = WorldTroopManager:GetInstance():GetTroop(targetMarchUuid)
    if troop~=nil then
        local endPos = SceneUtils.WorldToTileIndex(troop:GetPosition(),ForceChangeScene.World)
        local backHome = MarchUtil.GetAutoBackHomeState(MarchTargetType.ATTACK_ARMY)
        if isFormation~=nil and isFormation == true then
            local formation = DataCenter.ArmyFormationDataManager:GetOneArmyInfoByUuid(selfMarchUuid)
            if formation~=nil then
                local canAddNum = MarchUtil.GetCanAddHeroNum(formation:GetCurHeroes(),formation.index)
                if canAddNum>0 then
                    local show  = Setting:GetPrivateInt("SHOW_ADD_HERO",1)
                    if show<=0 then
                        UIUtil.ShowSecondMessage(Localization:GetString("121006"),Localization:GetString("121007"),1,121008,"", function()
                            local startPos = MarchUtil.GetFormationStartPos()
                            UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.ATTACK_ARMY,endPos,targetMarchUuid,-1,backHome,startPos,nil,false)
                        end, function(needSellConfirm)
                            if needSellConfirm== false then
                                Setting:SetPrivateInt("SHOW_ADD_HERO",1)
                            else
                                Setting:SetPrivateInt("SHOW_ADD_HERO",0)
                            end
                        end)
                        return
                    end
                end
                local k5 = LuaEntry.DataConfig:TryGetNum("res_lack", "k5")
                local heroUuid,targetHeroUuid = DataCenter.ArmyFormationDataManager:GetFormationHeroCanChangeHigherUuid(selfMarchUuid)
                if DataCenter.BuildManager.MainLv<=k5 and heroUuid~=nil and heroUuid~=0 and targetHeroUuid~=nil and targetHeroUuid~=0 then
                    UIUtil.ShowMessage(Localization:GetString("104245"), 1, 121008,"", function()
                        local startPos = MarchUtil.GetFormationStartPos()
                        UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.ATTACK_ARMY,endPos,targetMarchUuid,-1,backHome,startPos,nil,false)
                    end)
                    return
                end
            end
            MarchUtil.SendCreateMarchMessage(selfMarchUuid,MarchTargetType.ATTACK_ARMY,endPos,targetMarchUuid,-1,backHome,true)
        else
            MarchUtil.StartMarch(MarchTargetType.ATTACK_ARMY, endPos, targetMarchUuid, -1, selfMarchUuid,0, backHome)
        end

    end
end
local function OnCollectSimple(selfMarchUuid,pointInfo,curStamina,isFormation)
    local k3 = LuaEntry.DataConfig:TryGetNum("Reconnaissance_power_consumption", "k3")
    local own = LuaEntry.Resource:GetCntByResType(ResourceType.Steel)
    if own < k3 then
        UIUtil.ShowTipsId(129023)
        --UIManager:GetInstance():OpenWindow(UIWindowNames.UIResourceLack,{anim = false},{[ResourceType.Electricity] = k3})
        local lackTab = {}
        local param = {}
        param.type = ResLackType.Res
        param.id = ResourceType.Steel
        param.targetNum = k3
        table.insert(lackTab,param)
        GoToResLack.GoToItemResLackList(lackTab)
        return
    end
    local targetUuid = pointInfo.uuid
    local backHome = MarchUtil.GetAutoBackHomeState(MarchTargetType.SAMPLE)
    if isFormation~=nil and isFormation == true then
        local formation = DataCenter.ArmyFormationDataManager:GetOneArmyInfoByUuid(selfMarchUuid)
        if formation~=nil then
            local canAddNum = MarchUtil.GetCanAddHeroNum(formation:GetCurHeroes(),formation.index)
            if canAddNum>0 then
                local show  = Setting:GetPrivateInt("SHOW_ADD_HERO",1)
                if show<=0 then
                    UIUtil.ShowSecondMessage(Localization:GetString("121006"),Localization:GetString("121007"),1,121008,"", function()
                        local startPos = MarchUtil.GetFormationStartPos()
                        UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.SAMPLE,pointInfo.mainIndex,targetUuid,-1,backHome,startPos,nil,false)
                    end, function(needSellConfirm)
                        if needSellConfirm== false then
                            Setting:SetPrivateInt("SHOW_ADD_HERO",1)
                        else
                            Setting:SetPrivateInt("SHOW_ADD_HERO",0)
                        end

                    end)
                    return
                end
            end

            local k5 = LuaEntry.DataConfig:TryGetNum("res_lack", "k5")
            local heroUuid,targetHeroUuid = DataCenter.ArmyFormationDataManager:GetFormationHeroCanChangeHigherUuid(selfMarchUuid)
            if DataCenter.BuildManager.MainLv<=k5 and heroUuid~=nil and heroUuid~=0 and targetHeroUuid~=nil and targetHeroUuid~=0 then
                UIUtil.ShowMessage(Localization:GetString("104245"), 1, 121008,"", function()
                    local startPos = MarchUtil.GetFormationStartPos()
                    UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.SAMPLE,pointInfo.mainIndex,targetUuid,-1,backHome,startPos,nil,false)
                end)
                return
            end
        end
        MarchUtil.SendCreateMarchMessage(selfMarchUuid,MarchTargetType.SAMPLE,pointInfo.mainIndex,targetUuid,-1,backHome,true)
    else
        MarchUtil.StartMarch(MarchTargetType.SAMPLE, pointInfo.mainIndex,targetUuid, -1, selfMarchUuid,0, backHome)
    end

end

local function OnTargetAllianceMine(selfMarchUuid, pointInfo, marchTargetType,isFormation)
    --MK_取消拖拽建造操作，因为拿不到建造数据
    local backHome =MarchUtil.GetAutoBackHomeState(marchTargetType)
    local hasMarch, marchInfo = DataCenter.AllianceMineManager:CheckIfHasMarch(pointInfo.mainIndex)
    if hasMarch == true and marchInfo~=nil then
        UIUtil.ShowTipsId(300758)
        return
    end
    if isFormation~=nil and isFormation == true then
        local formation = DataCenter.ArmyFormationDataManager:GetOneArmyInfoByUuid(selfMarchUuid)
        if formation~=nil then
            MarchUtil.SendCreateMarchMessage(selfMarchUuid,marchTargetType,pointInfo.mainIndex,pointInfo.uuid,-1,backHome,true)
        end
    else
        MarchUtil.StartMarch(marchTargetType, pointInfo.mainIndex,pointInfo.uuid, -1, selfMarchUuid,0, backHome)
    end

end

local function OnCollectGarbage(selfMarchUuid,pointInfo,curStamina,isFormation)
    local k2 = LuaEntry.DataConfig:TryGetNum("Reconnaissance_power_consumption", "k3")
    local own = LuaEntry.Resource:GetCntByResType(ResourceType.Steel)
    if own < k2 then
        UIUtil.ShowTipsId(129023)
        --UIManager:GetInstance():OpenWindow(UIWindowNames.UIResourceLack,{anim = false},{[ResourceType.Electricity] = k2})
        local lackTab = {}
        local param = {}
        param.type = ResLackType.Res
        param.id = ResourceType.Steel
        param.targetNum = k2
        table.insert(lackTab,param)
        GoToResLack.GoToItemResLackList(lackTab)
        return
    end
    local targetUuid = pointInfo.uuid
    local backHome = MarchUtil.GetAutoBackHomeState(MarchTargetType.PICK_GARBAGE)
    if isFormation~=nil and isFormation == true then
        local formation = DataCenter.ArmyFormationDataManager:GetOneArmyInfoByUuid(selfMarchUuid)
        if formation~=nil then
            local canAddNum = MarchUtil.GetCanAddHeroNum(formation:GetCurHeroes(),formation.index)
            if canAddNum>0 then
                local show  = Setting:GetPrivateInt("SHOW_ADD_HERO",1)
                if show<=0 then
                    UIUtil.ShowSecondMessage(Localization:GetString("121006"),Localization:GetString("121007"),1,121008,"", function()
                        local startPos = MarchUtil.GetFormationStartPos()
                        UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.PICK_GARBAGE,pointInfo.mainIndex,targetUuid,-1,backHome,startPos,nil,false)
                    end, function(needSellConfirm)
                        if needSellConfirm== false then
                            Setting:SetPrivateInt("SHOW_ADD_HERO",1)
                        else
                            Setting:SetPrivateInt("SHOW_ADD_HERO",0)
                        end
                    end)
                    return
                end
            end
            local k5 = LuaEntry.DataConfig:TryGetNum("res_lack", "k5")
            local heroUuid,targetHeroUuid = DataCenter.ArmyFormationDataManager:GetFormationHeroCanChangeHigherUuid(selfMarchUuid)
            if DataCenter.BuildManager.MainLv<=k5 and heroUuid~=nil and heroUuid~=0 and targetHeroUuid~=nil and targetHeroUuid~=0 then
                UIUtil.ShowMessage(Localization:GetString("104245"), 1, 121008,"", function()
                    local startPos = MarchUtil.GetFormationStartPos()
                    UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.PICK_GARBAGE,pointInfo.mainIndex,targetUuid,-1,backHome,startPos,nil,false)
                end)
                return
            end
        end

        MarchUtil.SendCreateMarchMessage(selfMarchUuid,MarchTargetType.PICK_GARBAGE,pointInfo.mainIndex,targetUuid,-1,backHome,true)
    else
        MarchUtil.StartMarch(MarchTargetType.PICK_GARBAGE, pointInfo.mainIndex,targetUuid, -1, selfMarchUuid,0, backHome)
    end

end
local function OnExplore(selfMarchUuid,pointInfo,curStamina,isFormation)
    local staminaCost = MarchUtil.GetCostStaminaByTargetType(MarchTargetType.EXPLORE)
    if curStamina <staminaCost then
        --UIUtil.ShowTipsId(GameDialogDefine.STAMINA_IS_NOT_ENOUGH) 
        GoToResLack.GotoAddStamina(staminaCost)
        return
    end
    local targetUuid = pointInfo.uuid
    local backHome = MarchUtil.GetAutoBackHomeState(MarchTargetType.EXPLORE)
    if isFormation~=nil and isFormation == true then
        local formation = DataCenter.ArmyFormationDataManager:GetOneArmyInfoByUuid(selfMarchUuid)
        if formation~=nil then
            local canAddNum = MarchUtil.GetCanAddHeroNum(formation:GetCurHeroes(),formation.index)
            if canAddNum>0 then
                local show  = Setting:GetPrivateInt("SHOW_ADD_HERO",1)
                if show<=0 then
                    UIUtil.ShowSecondMessage(Localization:GetString("121006"),Localization:GetString("121007"),1,121008,"", function()
                        local startPos = MarchUtil.GetFormationStartPos()
                        UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.EXPLORE,pointInfo.mainIndex,targetUuid,-1,backHome,startPos,nil,false)
                    end, function(needSellConfirm)
                        if needSellConfirm== false then
                            Setting:SetPrivateInt("SHOW_ADD_HERO",1)
                        else
                            Setting:SetPrivateInt("SHOW_ADD_HERO",0)
                        end
                    end)
                    return
                end
            end
            local k5 = LuaEntry.DataConfig:TryGetNum("res_lack", "k5")
            local heroUuid,targetHeroUuid = DataCenter.ArmyFormationDataManager:GetFormationHeroCanChangeHigherUuid(selfMarchUuid)
            if DataCenter.BuildManager.MainLv<=k5 and heroUuid~=nil and heroUuid~=0 and targetHeroUuid~=nil and targetHeroUuid~=0 then
                UIUtil.ShowMessage(Localization:GetString("104245"), 1, 121008,"", function()
                    local startPos = MarchUtil.GetFormationStartPos()
                    UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.EXPLORE,pointInfo.mainIndex,targetUuid,-1,backHome,startPos,nil,false)
                end)
                return
            end
        end
        MarchUtil.SendCreateMarchMessage(selfMarchUuid,MarchTargetType.EXPLORE,pointInfo.mainIndex,targetUuid,-1,backHome,false)
    else
        MarchUtil.StartMarch(MarchTargetType.EXPLORE, pointInfo.mainIndex,targetUuid, -1, selfMarchUuid,0, backHome)
    end

end
--攻击采集点
local function OnAttackCollectBuild(selfMarchUuid,pointInfo,curStamina,isFormation)
    local staminaCost = MarchUtil.GetCostStaminaByTargetType(MarchTargetType.ATTACK_ARMY_COLLECT)
    if curStamina <staminaCost then
        --UIUtil.ShowTipsId(GameDialogDefine.STAMINA_IS_NOT_ENOUGH)
        GoToResLack.GotoAddStamina(staminaCost)
        return
    end
    if pointInfo.gatherMarchUuid~=0 then
        local march = DataCenter.WorldMarchDataManager:GetMarch(pointInfo.gatherMarchUuid)
        if march~=nil then
            local allianceUid =""
            local data =  DataCenter.AllianceBaseDataManager:GetAllianceBaseData()
            if data~=nil then
                allianceUid = data.uid
            end
            if allianceUid~=nil and allianceUid~="" and march.allianceUid == allianceUid then
            else
                local backHome = MarchUtil.GetAutoBackHomeState(MarchTargetType.ATTACK_ARMY_COLLECT)
                if isFormation~=nil and isFormation == true then
                    local formation = DataCenter.ArmyFormationDataManager:GetOneArmyInfoByUuid(selfMarchUuid)
                    if formation~=nil then
                        local canAddNum = MarchUtil.GetCanAddHeroNum(formation:GetCurHeroes(),formation.index)
                        if canAddNum>0 then
                            local show  = Setting:GetPrivateInt("SHOW_ADD_HERO",1)
                            if show<=0 then
                                UIUtil.ShowSecondMessage(Localization:GetString("121006"),Localization:GetString("121007"),1,121008,"", function()
                                    local startPos = MarchUtil.GetFormationStartPos()
                                    UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.ATTACK_ARMY_COLLECT,pointInfo.mainIndex,pointInfo.gatherMarchUuid,-1,backHome,startPos,nil,false)
                                end, function(needSellConfirm)
                                    if needSellConfirm== false then
                                        Setting:SetPrivateInt("SHOW_ADD_HERO",1)
                                    else
                                        Setting:SetPrivateInt("SHOW_ADD_HERO",0)
                                    end
                                end)
                                return
                            end
                        end
                        local k5 = LuaEntry.DataConfig:TryGetNum("res_lack", "k5")
                        local heroUuid,targetHeroUuid = DataCenter.ArmyFormationDataManager:GetFormationHeroCanChangeHigherUuid(selfMarchUuid)
                        if DataCenter.BuildManager.MainLv<=k5 and heroUuid~=nil and heroUuid~=0 and targetHeroUuid~=nil and targetHeroUuid~=0 then
                            UIUtil.ShowMessage(Localization:GetString("104245"), 1, 121008,"", function()
                                local startPos = MarchUtil.GetFormationStartPos()
                                UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.ATTACK_ARMY_COLLECT,pointInfo.mainIndex,pointInfo.gatherMarchUuid,-1,backHome,startPos,nil,false)
                            end)
                            return
                        end
                    end
                    MarchUtil.SendCreateMarchMessage(selfMarchUuid,MarchTargetType.ATTACK_ARMY_COLLECT,pointInfo.mainIndex,pointInfo.gatherMarchUuid,-1,backHome,true)
                else
                    MarchUtil.StartMarch(MarchTargetType.ATTACK_ARMY_COLLECT, pointInfo.mainIndex,pointInfo.gatherMarchUuid, -1, selfMarchUuid,0, backHome)
                end

            end
        end
    end
end
--回家
local function OnBackHome(selfMarchUuid)
    local marchInfo = DataCenter.WorldMarchDataManager:GetMarch(selfMarchUuid)
    local pointId = nil
    if marchInfo~=nil then
        local marchServerId = marchInfo.serverId
        local selfServerId = LuaEntry.Player:GetSelfServerId()
        if marchServerId>0 and selfServerId~= marchServerId then
            local crossBuildData = DataCenter.BuildManager:GetFunbuildByItemID(BuildingTypes.WORM_HOLE_CROSS)
            if crossBuildData~=nil then
                if crossBuildData.server == marchServerId then
                    pointId = crossBuildData.pointId
                    MarchUtil.StartMarch(MarchTargetType.BACK_HOME, pointId,0, -1, selfMarchUuid)
                end
            end
            return
        end
        pointId = MarchUtil.GetFormationStartPos()
        local isScoutFormation = DataCenter.ArmyFormationDataManager:CheckIfIsScountFormation(selfMarchUuid)
        if isScoutFormation == false then
            local startPos = marchInfo:GetMarchCurPos()
            local useWormHold,dirDistance,distanceWormHole,distance1,chooseUuid,wormHolePointId = MarchUtil.ChoosePathInWormHoleOrDirect(SceneUtils.WorldToTileIndex(startPos,ForceChangeScene.World),pointId)
            if useWormHold then
                MarchUtil.OnGotoWormHole(selfMarchUuid,wormHolePointId,chooseUuid)
                return
            end
        end
    end
    MarchUtil.StartMarch(MarchTargetType.BACK_HOME, pointId,0, -1, selfMarchUuid)
end

local function OnSendSecretKeyToCamp(selfMarchUuid)
    local marchInfo = DataCenter.WorldMarchDataManager:GetMarch(selfMarchUuid)
    local pointId = nil
    if marchInfo~=nil then
        local buildId = DragonBuildingTypes.DragonAllianceFlagSelf
        local side = DataCenter.ActDragonManager:GetSelfSide()
        if side ==1 then
            buildId = DragonBuildingTypes.DragonAllianceFlagOther
        end
        local template = DataCenter.DragonBuildTemplateManager:GetTemplate(buildId)
        if template~=nil then
            local location = string.split(template.coordinate, ";")
            if #location>1 then
                local v2 = {}
                v2.x = toInt(location[1])
                v2.y = toInt(location[2])
                pointId = SceneUtils.TilePosToIndex(v2,ForceChangeScene.World)
                local pointInfo = DataCenter.WorldPointManager:GetPointInfo(pointId)
                if pointInfo~=nil then
                    MarchUtil.StartMarch(MarchTargetType.TRANSPORT_SECRET_KEY,pointInfo.mainIndex,pointInfo.uuid, -1, selfMarchUuid)
                end
            end
        end
        
        
    end
end


local function ChoosePathInWormHoleOrDirect(startPos,endPos)
    local useWormHold = false --优先直接走
    local dirDistance = -1
    local distanceWormHole = -1
    local distance1 = -1
    local chooseUuid = -1
    local wormHolePointId = -1
    local dirPath = SceneUtils.GetPathFormAToB(startPos,endPos)
    if dirPath ~= nil and dirPath ~= "" then
        dirDistance = SceneUtils.CalculateDistanceV3(dirPath)
    end
    local minDistance = IntMaxValue
    if dirDistance>=0 then
        minDistance = dirDistance
    end
    local checkList = {BuildingTypes.APS_BUILD_WORMHOLE_SUB}
    if LuaEntry.Player.serverType == ServerType.EDEN_SERVER then
        checkList = {BuildingTypes.EDEN_WORM_HOLE_1,BuildingTypes.EDEN_WORM_HOLE_2,BuildingTypes.EDEN_WORM_HOLE_3}
    end
    for k,v in pairs(checkList) do
        local wormHoleB = DataCenter.BuildManager:GetFunbuildByItemID(v)
        if wormHoleB~=nil and wormHoleB.level > 0 then
            local WormHoleInPos = wormHoleB.pointId
            local worldHolePath = SceneUtils.GetPathFormAToB(startPos,WormHoleInPos)
            if worldHolePath~=nil and worldHolePath ~= "" then
                local k3 = 1
                if LuaEntry.Player.serverType == ServerType.EDEN_SERVER then
                    k3 = LuaEntry.DataConfig:TryGetNum("worm_b", "k3")
                end
                local wormHoleSpeedAdd = 1+(LuaEntry.Effect:GetGameEffect(EffectDefine.APS_WORM_SPEED_ADD_PERCENT)*k3)/100
                local tempDistance1 =  SceneUtils.CalculateDistanceV3(worldHolePath)
                local tempDistanceWormHole = Vector3.Distance(SceneUtils.TileIndexToWorld(WormHoleInPos,ForceChangeScene.World),SceneUtils.TileIndexToWorld(endPos,ForceChangeScene.World))
                if tempDistance1+(tempDistanceWormHole/wormHoleSpeedAdd) < minDistance then
                    useWormHold = true --优先走虫洞
                    distance1 = tempDistance1
                    distanceWormHole = tempDistanceWormHole
                    chooseUuid = wormHoleB.uuid
                    wormHolePointId = WormHoleInPos
                    minDistance = tempDistance1+(tempDistanceWormHole/wormHoleSpeedAdd)
                end
            end
        end
    end
    
    return useWormHold,dirDistance,distanceWormHole,distance1,chooseUuid,wormHolePointId
end

local function GetNeedGotoWormHolePointId(targetType,startPointId,endPointId)
    if targetType == MarchTargetType.STATE
            or targetType == MarchTargetType.ATTACK_MONSTER
            or targetType == MarchTargetType.COLLECT
            or targetType == MarchTargetType.ATTACK_BUILDING
            or targetType == MarchTargetType.ATTACK_ALLIANCE_BUILDING
            or targetType == MarchTargetType.ATTACK_ARMY
            or targetType == MarchTargetType.ATTACK_ARMY_COLLECT
            or targetType == MarchTargetType.ATTACK_CITY
           
            or targetType == MarchTargetType.DIRECT_ATTACK_CITY
            or targetType == MarchTargetType.ASSISTANCE_CITY
            or targetType == MarchTargetType.ASSISTANCE_BUILD
            or targetType == MarchTargetType.ASSISTANCE_ALLIANCE_CITY
            or targetType == MarchTargetType.ASSISTANCE_DESERT
            or targetType == MarchTargetType.ATTACK_ALLIANCE_CITY
            or targetType == MarchTargetType.ATTACK_DESERT
            or targetType == MarchTargetType.TRAIN_DESERT
            or targetType == MarchTargetType.BUILD_ALLIANCE_BUILDING
            or targetType == MarchTargetType.ASSISTANCE_COLLECT_ACT_ALLIANCE_MINE
            or targetType == MarchTargetType.ATTACK_ACT_ALLIANCE_MINE
            or targetType == MarchTargetType.COLLECT_ALLIANCE_BUILD_RESOURCE
    then
        local useWormHold,dirDistance,distanceWormHole,distance1,chooseUuid,wormHolePointId = MarchUtil.ChoosePathInWormHoleOrDirect(endPointId,startPointId)
        if useWormHold then
            return wormHolePointId,chooseUuid
        end
    end
    return startPointId,-1
end
--援助建筑
local function OnAssistanceBuild(selfMarchUuid,pointInfo,isFormation)
    if not DataCenter.BuildManager:HasBuilding(BuildingTypes.FUND_BUILD_ALLIANCE_CENTER) then
        UIUtil.ShowTipsId(390805)
        return
    end
    if isFormation~=nil and isFormation == true then
        local formation = DataCenter.ArmyFormationDataManager:GetOneArmyInfoByUuid(selfMarchUuid)
        if formation~=nil then
            local canAddNum = MarchUtil.GetCanAddHeroNum(formation:GetCurHeroes(),formation.index)
            if canAddNum>0 then
                local show  = Setting:GetPrivateInt("SHOW_ADD_HERO",1)
                if show<=0 then
                    UIUtil.ShowSecondMessage(Localization:GetString("121006"),Localization:GetString("121007"),1,121008,"", function()
                        local startPos = MarchUtil.GetFormationStartPos()
                        UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.ASSISTANCE_BUILD,pointInfo.mainIndex,pointInfo.uuid,-1,0,startPos,nil,false)
                    end, function(needSellConfirm)
                        if needSellConfirm== false then
                            Setting:SetPrivateInt("SHOW_ADD_HERO",1)
                        else
                            Setting:SetPrivateInt("SHOW_ADD_HERO",0)
                        end
                    end)
                    return
                end
            end
            local k5 = LuaEntry.DataConfig:TryGetNum("res_lack", "k5")
            local heroUuid,targetHeroUuid = DataCenter.ArmyFormationDataManager:GetFormationHeroCanChangeHigherUuid(selfMarchUuid)
            if DataCenter.BuildManager.MainLv<=k5 and heroUuid~=nil and heroUuid~=0 and targetHeroUuid~=nil and targetHeroUuid~=0 then
                UIUtil.ShowMessage(Localization:GetString("104245"), 1, 121008,"", function()
                    local startPos = MarchUtil.GetFormationStartPos()
                    UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.ASSISTANCE_BUILD,pointInfo.mainIndex,pointInfo.uuid,-1,0,startPos,nil,false)
                end)
                return
            end
        end
        MarchUtil.SendCreateMarchMessage(selfMarchUuid,MarchTargetType.ASSISTANCE_BUILD,pointInfo.mainIndex,pointInfo.uuid,-1,0,true)
    else
        MarchUtil.StartMarch(MarchTargetType.ASSISTANCE_BUILD, pointInfo.mainIndex,pointInfo.uuid, -1, selfMarchUuid)
    end

end
--援助他人城市
local function OnAssistanceOtherCity(selfMarchUuid,pointInfo,isFormation)
    if not DataCenter.BuildManager:HasBuilding(BuildingTypes.FUND_BUILD_ALLIANCE_CENTER) then
        UIUtil.ShowTipsId(390805)
        return
    end
    if isFormation~=nil and isFormation == true then
        local formation = DataCenter.ArmyFormationDataManager:GetOneArmyInfoByUuid(selfMarchUuid)
        if formation~=nil then
            local canAddNum = MarchUtil.GetCanAddHeroNum(formation:GetCurHeroes(),formation.index)
            if canAddNum>0 then
                local show  = Setting:GetPrivateInt("SHOW_ADD_HERO",1)
                if show<=0 then
                    UIUtil.ShowSecondMessage(Localization:GetString("121006"),Localization:GetString("121007"),1,121008,"", function()
                        local startPos = MarchUtil.GetFormationStartPos()
                        UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.ASSISTANCE_CITY,pointInfo.mainIndex,pointInfo.uuid,-1,0,startPos,nil,false)
                    end, function(needSellConfirm)
                        if needSellConfirm== false then
                            Setting:SetPrivateInt("SHOW_ADD_HERO",1)
                        else
                            Setting:SetPrivateInt("SHOW_ADD_HERO",0)
                        end
                    end)
                    return
                end
            end
            local k5 = LuaEntry.DataConfig:TryGetNum("res_lack", "k5")
            local heroUuid,targetHeroUuid = DataCenter.ArmyFormationDataManager:GetFormationHeroCanChangeHigherUuid(selfMarchUuid)
            if DataCenter.BuildManager.MainLv<=k5 and heroUuid~=nil and heroUuid~=0 and targetHeroUuid~=nil and targetHeroUuid~=0 then
                UIUtil.ShowMessage(Localization:GetString("104245"), 1, 121008,"", function()
                    local startPos = MarchUtil.GetFormationStartPos()
                    UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.ASSISTANCE_CITY,pointInfo.mainIndex,pointInfo.uuid,-1,0,startPos,nil,false)
                end)
                return
            end
        end
        MarchUtil.SendCreateMarchMessage(selfMarchUuid,MarchTargetType.ASSISTANCE_CITY,pointInfo.mainIndex,pointInfo.uuid,-1,0,true)
    else
        MarchUtil.StartMarch(MarchTargetType.ASSISTANCE_CITY, pointInfo.mainIndex,pointInfo.uuid, -1, selfMarchUuid)
    end

end

local function OnAssistanceAllianceCity(selfMarchUuid,pointInfo,isFormation)
    if not DataCenter.BuildManager:HasBuilding(BuildingTypes.FUND_BUILD_ALLIANCE_CENTER) then
        UIUtil.ShowTipsId(390805)
        return
    end
    if isFormation~=nil and isFormation == true then
        local formation = DataCenter.ArmyFormationDataManager:GetOneArmyInfoByUuid(selfMarchUuid)
        if formation~=nil then
            local canAddNum = MarchUtil.GetCanAddHeroNum(formation:GetCurHeroes(),formation.index)
            if canAddNum>0 then
                local show  = Setting:GetPrivateInt("SHOW_ADD_HERO",1)
                if show<=0 then
                    UIUtil.ShowSecondMessage(Localization:GetString("121006"),Localization:GetString("121007"),1,121008,"", function()
                        local startPos = MarchUtil.GetFormationStartPos()
                        UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.ASSISTANCE_ALLIANCE_CITY,pointInfo.mainIndex,pointInfo.uuid,-1,0,startPos,nil,false)
                    end, function(needSellConfirm)
                        if needSellConfirm== false then
                            Setting:SetPrivateInt("SHOW_ADD_HERO",1)
                        else
                            Setting:SetPrivateInt("SHOW_ADD_HERO",0)
                        end
                    end)
                    return
                end
            end
            local k5 = LuaEntry.DataConfig:TryGetNum("res_lack", "k5")
            local heroUuid,targetHeroUuid = DataCenter.ArmyFormationDataManager:GetFormationHeroCanChangeHigherUuid(selfMarchUuid)
            if DataCenter.BuildManager.MainLv<=k5 and heroUuid~=nil and heroUuid~=0 and targetHeroUuid~=nil and targetHeroUuid~=0 then
                UIUtil.ShowMessage(Localization:GetString("104245"), 1, 121008,"", function()
                    local startPos = MarchUtil.GetFormationStartPos()
                    UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.ASSISTANCE_ALLIANCE_CITY,pointInfo.mainIndex,pointInfo.uuid,-1,0,startPos,nil,false)
                end)
                return
            end
        end
        MarchUtil.SendCreateMarchMessage(selfMarchUuid,MarchTargetType.ASSISTANCE_ALLIANCE_CITY,pointInfo.mainIndex,pointInfo.uuid,-1,0,true)
    else
        MarchUtil.StartMarch(MarchTargetType.ASSISTANCE_ALLIANCE_CITY, pointInfo.mainIndex,pointInfo.uuid, -1, selfMarchUuid)
    end
end

local function OnAssistanceAllianceBuild(selfMarchUuid,pointInfo,isFormation)
    if not DataCenter.BuildManager:HasBuilding(BuildingTypes.FUND_BUILD_ALLIANCE_CENTER) then
        UIUtil.ShowTipsId(390805)
        return
    end
    if isFormation~=nil and isFormation == true then
        local formation = DataCenter.ArmyFormationDataManager:GetOneArmyInfoByUuid(selfMarchUuid)
        if formation~=nil then
            local canAddNum = MarchUtil.GetCanAddHeroNum(formation:GetCurHeroes(),formation.index)
            if canAddNum>0 then
                local show  = Setting:GetPrivateInt("SHOW_ADD_HERO",1)
                if show<=0 then
                    UIUtil.ShowSecondMessage(Localization:GetString("121006"),Localization:GetString("121007"),1,121008,"", function()
                        local startPos = MarchUtil.GetFormationStartPos()
                        UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.ASSISTANCE_ALLIANCE_BUILDING,pointInfo.mainIndex,pointInfo.uuid,-1,0,startPos,nil,false)
                    end, function(needSellConfirm)
                        if needSellConfirm== false then
                            Setting:SetPrivateInt("SHOW_ADD_HERO",1)
                        else
                            Setting:SetPrivateInt("SHOW_ADD_HERO",0)
                        end
                    end)
                    return
                end
            end
            local k5 = LuaEntry.DataConfig:TryGetNum("res_lack", "k5")
            local heroUuid,targetHeroUuid = DataCenter.ArmyFormationDataManager:GetFormationHeroCanChangeHigherUuid(selfMarchUuid)
            if DataCenter.BuildManager.MainLv<=k5 and heroUuid~=nil and heroUuid~=0 and targetHeroUuid~=nil and targetHeroUuid~=0 then
                UIUtil.ShowMessage(Localization:GetString("104245"), 1, 121008,"", function()
                    local startPos = MarchUtil.GetFormationStartPos()
                    UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.ASSISTANCE_ALLIANCE_BUILDING,pointInfo.mainIndex,pointInfo.uuid,-1,0,startPos,nil,false)
                end)
                return
            end
        end
        MarchUtil.SendCreateMarchMessage(selfMarchUuid,MarchTargetType.ASSISTANCE_ALLIANCE_BUILDING,pointInfo.mainIndex,pointInfo.uuid,-1,0,true)
    else
        MarchUtil.StartMarch(MarchTargetType.ASSISTANCE_ALLIANCE_BUILDING, pointInfo.mainIndex,pointInfo.uuid, -1, selfMarchUuid)
    end
end

local function OnCollectActAllianceBuild(selfMarchUuid, pointInfo, marchTargetType,isFormation)
    local backHome =MarchUtil.GetAutoBackHomeState(marchTargetType)
    local hasMarch, marchInfo = DataCenter.AllianceMineManager:CheckIfHasMarch(pointInfo.mainIndex)
    if hasMarch == true and marchInfo~=nil then
        UIUtil.ShowTipsId(300758)
        return
    end
    if isFormation~=nil and isFormation == true then
        local formation = DataCenter.ArmyFormationDataManager:GetOneArmyInfoByUuid(selfMarchUuid)
        if formation~=nil then
            MarchUtil.SendCreateMarchMessage(selfMarchUuid,marchTargetType,pointInfo.mainIndex,pointInfo.uuid,-1,backHome,true)
        end
    else
        MarchUtil.StartMarch(marchTargetType, pointInfo.mainIndex,pointInfo.uuid, -1, selfMarchUuid,0, backHome)
    end

end

local function OnAssistanceDesert(selfMarchUuid,pointId,targetUuid,isFormation)
    if not DataCenter.BuildManager:HasBuilding(BuildingTypes.FUND_BUILD_ALLIANCE_CENTER) then
        UIUtil.ShowTipsId(390805)
        return
    end
    if isFormation~=nil and isFormation == true then
        local formation = DataCenter.ArmyFormationDataManager:GetOneArmyInfoByUuid(selfMarchUuid)
        if formation~=nil then
            local canAddNum = MarchUtil.GetCanAddHeroNum(formation:GetCurHeroes(),formation.index)
            if canAddNum>0 then
                local show  = Setting:GetPrivateInt("SHOW_ADD_HERO",1)
                if show<=0 then
                    UIUtil.ShowSecondMessage(Localization:GetString("121006"),Localization:GetString("121007"),1,121008,"", function()
                        local startPos = MarchUtil.GetFormationStartPos()
                        UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.ASSISTANCE_DESERT,pointId,targetUuid,-1,0,startPos,nil,false)
                    end, function(needSellConfirm)
                        if needSellConfirm== false then
                            Setting:SetPrivateInt("SHOW_ADD_HERO",1)
                        else
                            Setting:SetPrivateInt("SHOW_ADD_HERO",0)
                        end
                    end)
                    return
                end
            end
            local k5 = LuaEntry.DataConfig:TryGetNum("res_lack", "k5")
            local heroUuid,targetHeroUuid = DataCenter.ArmyFormationDataManager:GetFormationHeroCanChangeHigherUuid(selfMarchUuid)
            if DataCenter.BuildManager.MainLv<=k5 and heroUuid~=nil and heroUuid~=0 and targetHeroUuid~=nil and targetHeroUuid~=0 then
                UIUtil.ShowMessage(Localization:GetString("104245"), 1, 121008,"", function()
                    local startPos = MarchUtil.GetFormationStartPos()
                    UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.ASSISTANCE_DESERT,pointId,targetUuid,-1,0,startPos,nil,false)
                end)
                return
            end
        end
        MarchUtil.SendCreateMarchMessage(selfMarchUuid,MarchTargetType.ASSISTANCE_DESERT,pointId,targetUuid,-1,0,true)
    else
        MarchUtil.StartMarch(MarchTargetType.ASSISTANCE_DESERT,pointId,targetUuid, -1, selfMarchUuid)
    end
end

--攻击他人城市
local function OnAttackOtherCity(selfMarchUuid,pointInfo,curStamina,targetType,isFormation)
    local protectTime = 0
    local curTime = UITimeManager:GetInstance():GetServerSeconds()
    local info = DataCenter.WorldPointManager:GetBuildDataByPointIndex(pointInfo.mainIndex)
    if info~=nil then
        if info.itemId == BuildingTypes.FUN_BUILD_MAIN then
            protectTime = info.protectEndTime
        end
    end
    if protectTime> curTime then
        UIUtil.ShowTipsId(120190)
        return
    end
    local staminaCost = MarchUtil.GetCostStaminaByTargetType(targetType)
    if curStamina <staminaCost then
        --UIUtil.ShowTipsId(GameDialogDefine.STAMINA_IS_NOT_ENOUGH)
        GoToResLack.GotoAddStamina(staminaCost)
        return
    end
    local targetUuid = pointInfo.uuid
    local backHome = MarchUtil.GetAutoBackHomeState(targetType)
    if isFormation~=nil and isFormation == true then
        local formation = DataCenter.ArmyFormationDataManager:GetOneArmyInfoByUuid(selfMarchUuid)
        if formation~=nil then
            local canAddNum = MarchUtil.GetCanAddHeroNum(formation:GetCurHeroes(),formation.index)
            if canAddNum>0 then
                local show  = Setting:GetPrivateInt("SHOW_ADD_HERO",1)
                if show<=0 then
                    UIUtil.ShowSecondMessage(Localization:GetString("121006"),Localization:GetString("121007"),1,121008,"", function()
                        local startPos = MarchUtil.GetFormationStartPos()
                        UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,targetType,pointInfo.mainIndex,targetUuid,-1,backHome,startPos,nil,false)
                    end, function(needSellConfirm)
                        if needSellConfirm== false then
                            Setting:SetPrivateInt("SHOW_ADD_HERO",1)
                        else
                            Setting:SetPrivateInt("SHOW_ADD_HERO",0)
                        end
                    end)
                    return
                end
            end
            local k5 = LuaEntry.DataConfig:TryGetNum("res_lack", "k5")
            local heroUuid,targetHeroUuid = DataCenter.ArmyFormationDataManager:GetFormationHeroCanChangeHigherUuid(selfMarchUuid)
            if DataCenter.BuildManager.MainLv<=k5 and heroUuid~=nil and heroUuid~=0 and targetHeroUuid~=nil and targetHeroUuid~=0 then
                UIUtil.ShowMessage(Localization:GetString("104245"), 1, 121008,"", function()
                    local startPos =MarchUtil.GetFormationStartPos()
                    UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,targetType,pointInfo.mainIndex,targetUuid,-1,backHome,startPos,nil,false)
                end)
                return
            end
        end
        MarchUtil.SendCreateMarchMessage(selfMarchUuid,targetType,pointInfo.mainIndex,targetUuid,-1,backHome,true)
    else
        MarchUtil.StartMarch(targetType, pointInfo.mainIndex,targetUuid, -1, selfMarchUuid,0, backHome)
    end
end
local function OnAttackAllianceCity(selfMarchUuid,pointInfo,curStamina,isFormation, destroyTimeIndex)
    local protectTime = 0
    local openTime = 0
    local curTime = UITimeManager:GetInstance():GetServerSeconds()
    local info = DataCenter.WorldPointManager:GetPointInfo(pointInfo.mainIndex)
    if info~=nil then
        if info~=nil then
            local allianceCityPointInfo = PBController.ParsePbFromBytes(info.extraInfo, "protobuf.AllianceCityPointInfo")
            if allianceCityPointInfo~=nil then
                openTime = allianceCityPointInfo["openTime"]
                if openTime> curTime or openTime == -1 then
                    UIUtil.ShowTipsId(300708)
                    return
                end
                protectTime = allianceCityPointInfo["protectTime"]
                if protectTime> curTime then
                    UIUtil.ShowTipsId(300709)
                    return
                end
                local cityId = allianceCityPointInfo["cityId"]
                local level = GetTableData(TableName.WorldCity,cityId, "level")
                if DataCenter.WorldAllianceCityDataManager:GetAllianceAlreadyHaveCity(LuaEntry.Player.allianceId)==true then
                    if DataCenter.WorldAllianceCityDataManager:GetCityIsNearBySelfAlliance(LuaEntry.Player.allianceId,cityId) ==false then
                        UIUtil.ShowTipsId(300711)
                        return
                    end
                    if DataCenter.WorldAllianceCityDataManager:GetCityIsNearByAllianceDesert(LuaEntry.Player.allianceId,cityId) ==false then
                        UIUtil.ShowTipsId(110250)
                        return
                    end
                else
                    if level>1 then
                        UIUtil.ShowTipsId(300710)
                        return
                    end
                end
                local staminaCost = MarchUtil.GetCostStaminaByTargetType(MarchTargetType.ATTACK_ALLIANCE_CITY)
                if curStamina <staminaCost then
                    --UIUtil.ShowTipsId(GameDialogDefine.STAMINA_IS_NOT_ENOUGH)
                    GoToResLack.GotoAddStamina(staminaCost)
                    return
                end
                local targetUuid = pointInfo.uuid
                local backHome = MarchUtil.GetAutoBackHomeState(MarchTargetType.ATTACK_ALLIANCE_CITY)
                if isFormation~=nil and isFormation == true then
                    local formation = DataCenter.ArmyFormationDataManager:GetOneArmyInfoByUuid(selfMarchUuid)
                    if formation~=nil then
                        local canAddNum = MarchUtil.GetCanAddHeroNum(formation:GetCurHeroes(),formation.index)
                        if canAddNum>0 then
                            local show  = Setting:GetPrivateInt("SHOW_ADD_HERO",1)
                            if show<=0 then
                                UIUtil.ShowSecondMessage(Localization:GetString("121006"),Localization:GetString("121007"),1,121008,"", function()
                                    local startPos = MarchUtil.GetFormationStartPos()
                                    UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.ATTACK_ALLIANCE_CITY,pointInfo.mainIndex,targetUuid,-1,backHome,startPos,nil,false)
                                end, function(needSellConfirm)
                                    if needSellConfirm== false then
                                        Setting:SetPrivateInt("SHOW_ADD_HERO",1)
                                    else
                                        Setting:SetPrivateInt("SHOW_ADD_HERO",0)
                                    end
                                end)
                                return
                            end
                        end
                        local k5 = LuaEntry.DataConfig:TryGetNum("res_lack", "k5")
                        local heroUuid,targetHeroUuid = DataCenter.ArmyFormationDataManager:GetFormationHeroCanChangeHigherUuid(selfMarchUuid)
                        if DataCenter.BuildManager.MainLv<=k5 and heroUuid~=nil and heroUuid~=0 and targetHeroUuid~=nil and targetHeroUuid~=0 then
                            UIUtil.ShowMessage(Localization:GetString("104245"), 1, 121008,"", function()
                                local startPos = MarchUtil.GetFormationStartPos()
                                UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.ATTACK_ALLIANCE_CITY,pointInfo.mainIndex,targetUuid,-1,backHome,startPos,nil,false)
                            end)
                            return
                        end
                    end
                    MarchUtil.SendCreateMarchMessage(selfMarchUuid,MarchTargetType.ATTACK_ALLIANCE_CITY,pointInfo.mainIndex,targetUuid,-1,backHome,true)
                else
                    MarchUtil.StartMarch(MarchTargetType.ATTACK_ALLIANCE_CITY, pointInfo.mainIndex,targetUuid, -1, selfMarchUuid,0, backHome, nil, nil, nil, destroyTimeIndex)
                end
            end
        end
    end


end
--攻击他人建筑
local function OnAttackOtherBuild(selfMarchUuid,pointInfo,curStamina,isFormation)
    if LuaEntry.Player.serverType == ServerType.DRAGON_BATTLE_FIGHT_SERVER then
        local dragonInfo = DataCenter.ActDragonManager:GetDragonInfo()
        local curTime = UITimeManager:GetInstance():GetServerTime()
        local canShow = false
        if dragonInfo~=nil and dragonInfo.timeInfo~=nil then
            if dragonInfo.matchResult == 1 then    --匹配到对手
                if dragonInfo.timeInfo.battleOpenTime~=nil and dragonInfo.timeInfo.battleOpenTime<curTime and dragonInfo.timeInfo.endTime~=nil and curTime < dragonInfo.timeInfo.endTime then
                    canShow = true
                end
            end
        end
        if canShow ==false then
            UIUtil.ShowTipsId(376128)
            return
        end
    end
    local inProtect,alreadyExitOccupy = SeasonUtil.CanAttackBuild(pointInfo.mainIndex)
    if inProtect == true then
        UIUtil.ShowTipsId(110242)
        return
    elseif alreadyExitOccupy == false then
        UIUtil.ShowTipsId(110241)
        return
    end
    local staminaCost = MarchUtil.GetCostStaminaByTargetType(MarchTargetType.ATTACK_BUILDING)
    if curStamina <staminaCost then
        --UIUtil.ShowTipsId(GameDialogDefine.STAMINA_IS_NOT_ENOUGH)
        GoToResLack.GotoAddStamina(staminaCost)
        return
    end
    local targetUuid = pointInfo.uuid
    local backHome = MarchUtil.GetAutoBackHomeState(MarchTargetType.ATTACK_BUILDING)
    if isFormation~=nil and isFormation == true then
        local formation = DataCenter.ArmyFormationDataManager:GetOneArmyInfoByUuid(selfMarchUuid)
        if formation~=nil then
            local canAddNum = MarchUtil.GetCanAddHeroNum(formation:GetCurHeroes(),formation.index)
            if canAddNum>0 then
                local show  = Setting:GetPrivateInt("SHOW_ADD_HERO",1)
                if show<=0 then
                    UIUtil.ShowSecondMessage(Localization:GetString("121006"),Localization:GetString("121007"),1,121008,"", function()
                        local startPos = MarchUtil.GetFormationStartPos()
                        UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.ATTACK_BUILDING, pointInfo.mainIndex,targetUuid,-1,backHome,startPos,nil,false)
                    end, function(needSellConfirm)
                        if needSellConfirm== false then
                            Setting:SetPrivateInt("SHOW_ADD_HERO",1)
                        else
                            Setting:SetPrivateInt("SHOW_ADD_HERO",0)
                        end
                    end)
                    return
                end
            end
            local k5 = LuaEntry.DataConfig:TryGetNum("res_lack", "k5")
            local heroUuid,targetHeroUuid = DataCenter.ArmyFormationDataManager:GetFormationHeroCanChangeHigherUuid(selfMarchUuid)
            if DataCenter.BuildManager.MainLv<=k5 and heroUuid~=nil and heroUuid~=0 and targetHeroUuid~=nil and targetHeroUuid~=0 then
                UIUtil.ShowMessage(Localization:GetString("104245"), 1, 121008,"", function()
                    local startPos = MarchUtil.GetFormationStartPos()
                    UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.ATTACK_BUILDING, pointInfo.mainIndex,targetUuid,-1,backHome,startPos,nil,false)
                end)
                return
            end
        end
        MarchUtil.SendCreateMarchMessage(selfMarchUuid,MarchTargetType.ATTACK_BUILDING, pointInfo.mainIndex,targetUuid,-1,backHome,true)
    else
        MarchUtil.StartMarch(MarchTargetType.ATTACK_BUILDING, pointInfo.mainIndex,targetUuid, -1, selfMarchUuid,0, backHome)
    end

end

local function OnAttackAllianceBuild(selfMarchUuid,pointInfo,curStamina,isFormation)
    local inProtect, alreadyExitOccupy = SeasonUtil.CanAttackAllianceBuild(pointInfo.mainIndex)
    if inProtect == true then
        UIUtil.ShowTipsId(110242)
        return
    elseif alreadyExitOccupy == false then
        UIUtil.ShowTipsId(110241)
        WorldDesertSelectEffectManager:GetInstance():ShowAlBuildWarnPos(pointInfo.mainIndex)
        return
    end
    local staminaCost = MarchUtil.GetCostStaminaByTargetType(MarchTargetType.ATTACK_ALLIANCE_BUILDING)
    if curStamina <staminaCost then
        --UIUtil.ShowTipsId(GameDialogDefine.STAMINA_IS_NOT_ENOUGH)
        GoToResLack.GotoAddStamina(staminaCost)
        return
    end
    local targetUuid = pointInfo.uuid
    local backHome = MarchUtil.GetAutoBackHomeState(MarchTargetType.ATTACK_ALLIANCE_BUILDING)
    if isFormation~=nil and isFormation == true then
        local formation = DataCenter.ArmyFormationDataManager:GetOneArmyInfoByUuid(selfMarchUuid)
        if formation~=nil then
            local canAddNum = MarchUtil.GetCanAddHeroNum(formation:GetCurHeroes(),formation.index)
            if canAddNum>0 then
                local show  = Setting:GetPrivateInt("SHOW_ADD_HERO",1)
                if show<=0 then
                    UIUtil.ShowSecondMessage(Localization:GetString("121006"),Localization:GetString("121007"),1,121008,"", function()
                        local startPos = MarchUtil.GetFormationStartPos()
                        UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.ATTACK_ALLIANCE_BUILDING, pointInfo.mainIndex,targetUuid,-1,backHome,startPos,nil,false)
                    end, function(needSellConfirm)
                        if needSellConfirm== false then
                            Setting:SetPrivateInt("SHOW_ADD_HERO",1)
                        else
                            Setting:SetPrivateInt("SHOW_ADD_HERO",0)
                        end
                    end)
                    return
                end
            end
            local k5 = LuaEntry.DataConfig:TryGetNum("res_lack", "k5")
            local heroUuid,targetHeroUuid = DataCenter.ArmyFormationDataManager:GetFormationHeroCanChangeHigherUuid(selfMarchUuid)
            if DataCenter.BuildManager.MainLv<=k5 and heroUuid~=nil and heroUuid~=0 and targetHeroUuid~=nil and targetHeroUuid~=0 then
                UIUtil.ShowMessage(Localization:GetString("104245"), 1, 121008,"", function()
                    local startPos = MarchUtil.GetFormationStartPos()
                    UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.ATTACK_ALLIANCE_BUILDING, pointInfo.mainIndex,targetUuid,-1,backHome,startPos,nil,false)
                end)
                return
            end
        end
        MarchUtil.SendCreateMarchMessage(selfMarchUuid,MarchTargetType.ATTACK_ALLIANCE_BUILDING, pointInfo.mainIndex,targetUuid,-1,backHome,true)
    else
        MarchUtil.StartMarch(MarchTargetType.ATTACK_ALLIANCE_BUILDING, pointInfo.mainIndex,targetUuid, -1, selfMarchUuid,0, backHome)
    end

end

local function OnAttackActAllianceBuild(selfMarchUuid,pointInfo,curStamina,isFormation)
    local staminaCost = MarchUtil.GetCostStaminaByTargetType(MarchTargetType.ATTACK_ACT_ALLIANCE_MINE)
    if curStamina <staminaCost then
        --UIUtil.ShowTipsId(GameDialogDefine.STAMINA_IS_NOT_ENOUGH)
        GoToResLack.GotoAddStamina(staminaCost)
        return
    end
    local targetUuid = pointInfo.uuid
    local backHome = MarchUtil.GetAutoBackHomeState(MarchTargetType.ATTACK_ACT_ALLIANCE_MINE)
    if isFormation~=nil and isFormation == true then
        local formation = DataCenter.ArmyFormationDataManager:GetOneArmyInfoByUuid(selfMarchUuid)
        if formation~=nil then
            local canAddNum = MarchUtil.GetCanAddHeroNum(formation:GetCurHeroes(),formation.index)
            if canAddNum>0 then
                local show  = Setting:GetPrivateInt("SHOW_ADD_HERO",1)
                if show<=0 then
                    UIUtil.ShowSecondMessage(Localization:GetString("121006"),Localization:GetString("121007"),1,121008,"", function()
                        local startPos = MarchUtil.GetFormationStartPos()
                        UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.ATTACK_ACT_ALLIANCE_MINE, pointInfo.mainIndex,targetUuid,-1,backHome,startPos,nil,false)
                    end, function(needSellConfirm)
                        if needSellConfirm== false then
                            Setting:SetPrivateInt("SHOW_ADD_HERO",1)
                        else
                            Setting:SetPrivateInt("SHOW_ADD_HERO",0)
                        end
                    end)
                    return
                end
            end
            local k5 = LuaEntry.DataConfig:TryGetNum("res_lack", "k5")
            local heroUuid,targetHeroUuid = DataCenter.ArmyFormationDataManager:GetFormationHeroCanChangeHigherUuid(selfMarchUuid)
            if DataCenter.BuildManager.MainLv<=k5 and heroUuid~=nil and heroUuid~=0 and targetHeroUuid~=nil and targetHeroUuid~=0 then
                UIUtil.ShowMessage(Localization:GetString("104245"), 1, 121008,"", function()
                    local startPos = MarchUtil.GetFormationStartPos()
                    UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.ATTACK_ACT_ALLIANCE_MINE, pointInfo.mainIndex,targetUuid,-1,backHome,startPos,nil,false)
                end)
                return
            end
        end
        MarchUtil.SendCreateMarchMessage(selfMarchUuid,MarchTargetType.ATTACK_ACT_ALLIANCE_MINE, pointInfo.mainIndex,targetUuid,-1,backHome,true)
    else
        MarchUtil.StartMarch(MarchTargetType.ATTACK_ACT_ALLIANCE_MINE, pointInfo.mainIndex,targetUuid, -1, selfMarchUuid,0, backHome)
    end

end

local function OnAttackDragonBuild(selfMarchUuid,pointInfo,curStamina,isFormation)
    if LuaEntry.Player.serverType == ServerType.DRAGON_BATTLE_FIGHT_SERVER then
        local dragonInfo = DataCenter.ActDragonManager:GetDragonInfo()
        local curTime = UITimeManager:GetInstance():GetServerTime()
        local canShow = false
        if dragonInfo~=nil and dragonInfo.timeInfo~=nil then
            if dragonInfo.matchResult == 1 then    --匹配到对手
                if dragonInfo.timeInfo.battleOpenTime~=nil and dragonInfo.timeInfo.battleOpenTime<curTime and dragonInfo.timeInfo.endTime~=nil and curTime < dragonInfo.timeInfo.endTime then
                    canShow = true
                end
            end
        end
        if canShow ==false then
            UIUtil.ShowTipsId(376128)
            return
        end
    end

    local staminaCost = MarchUtil.GetCostStaminaByTargetType(MarchTargetType.ATTACK_DRAGON_BUILDING)
    if curStamina <staminaCost then
        --UIUtil.ShowTipsId(GameDialogDefine.STAMINA_IS_NOT_ENOUGH)
        GoToResLack.GotoAddStamina(staminaCost)
        return
    end
    local targetUuid = pointInfo.uuid
    local backHome = MarchUtil.GetAutoBackHomeState(MarchTargetType.ATTACK_DRAGON_BUILDING)
    if isFormation~=nil and isFormation == true then
        local formation = DataCenter.ArmyFormationDataManager:GetOneArmyInfoByUuid(selfMarchUuid)
        if formation~=nil then
            local canAddNum = MarchUtil.GetCanAddHeroNum(formation:GetCurHeroes(),formation.index)
            if canAddNum>0 then
                local show  = Setting:GetPrivateInt("SHOW_ADD_HERO",1)
                if show<=0 then
                    UIUtil.ShowSecondMessage(Localization:GetString("121006"),Localization:GetString("121007"),1,121008,"", function()
                        local startPos = MarchUtil.GetFormationStartPos()
                        UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.ATTACK_DRAGON_BUILDING, pointInfo.mainIndex,targetUuid,-1,backHome,startPos,nil,false)
                    end, function(needSellConfirm)
                        if needSellConfirm== false then
                            Setting:SetPrivateInt("SHOW_ADD_HERO",1)
                        else
                            Setting:SetPrivateInt("SHOW_ADD_HERO",0)
                        end
                    end)
                    return
                end
            end
            local k5 = LuaEntry.DataConfig:TryGetNum("res_lack", "k5")
            local heroUuid,targetHeroUuid = DataCenter.ArmyFormationDataManager:GetFormationHeroCanChangeHigherUuid(selfMarchUuid)
            if DataCenter.BuildManager.MainLv<=k5 and heroUuid~=nil and heroUuid~=0 and targetHeroUuid~=nil and targetHeroUuid~=0 then
                UIUtil.ShowMessage(Localization:GetString("104245"), 1, 121008,"", function()
                    local startPos = MarchUtil.GetFormationStartPos()
                    UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.ATTACK_DRAGON_BUILDING, pointInfo.mainIndex,targetUuid,-1,backHome,startPos,nil,false)
                end)
                return
            end
        end
        MarchUtil.SendCreateMarchMessage(selfMarchUuid,MarchTargetType.ATTACK_DRAGON_BUILDING, pointInfo.mainIndex,targetUuid,-1,backHome,true)
    else
        MarchUtil.StartMarch(MarchTargetType.ATTACK_DRAGON_BUILDING, pointInfo.mainIndex,targetUuid, -1, selfMarchUuid,0, backHome)
    end

end

local function OnTriggerDragonBuild(selfMarchUuid,pointInfo,curStamina,isFormation)
    if LuaEntry.Player.serverType == ServerType.DRAGON_BATTLE_FIGHT_SERVER then
        local dragonInfo = DataCenter.ActDragonManager:GetDragonInfo()
        local curTime = UITimeManager:GetInstance():GetServerTime()
        local canShow = false
        if dragonInfo~=nil and dragonInfo.timeInfo~=nil then
            if dragonInfo.matchResult == 1 then    --匹配到对手
                if dragonInfo.timeInfo.battleOpenTime~=nil and dragonInfo.timeInfo.battleOpenTime<curTime and dragonInfo.timeInfo.endTime~=nil and curTime < dragonInfo.timeInfo.endTime then
                    canShow = true
                end
            end
        end
        if canShow ==false then
            UIUtil.ShowTipsId(376128)
            return
        end
    end

    local staminaCost = MarchUtil.GetCostStaminaByTargetType(MarchTargetType.TRIGGER_DRAGON_BUILDING)
    if curStamina <staminaCost then
        --UIUtil.ShowTipsId(GameDialogDefine.STAMINA_IS_NOT_ENOUGH)
        GoToResLack.GotoAddStamina(staminaCost)
        return
    end
    local targetUuid = pointInfo.uuid
    local backHome = MarchUtil.GetAutoBackHomeState(MarchTargetType.TRIGGER_DRAGON_BUILDING)
    if isFormation~=nil and isFormation == true then
        local formation = DataCenter.ArmyFormationDataManager:GetOneArmyInfoByUuid(selfMarchUuid)
        if formation~=nil then
            local canAddNum = MarchUtil.GetCanAddHeroNum(formation:GetCurHeroes(),formation.index)
            if canAddNum>0 then
                local show  = Setting:GetPrivateInt("SHOW_ADD_HERO",1)
                if show<=0 then
                    UIUtil.ShowSecondMessage(Localization:GetString("121006"),Localization:GetString("121007"),1,121008,"", function()
                        local startPos = MarchUtil.GetFormationStartPos()
                        UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.TRIGGER_DRAGON_BUILDING, pointInfo.mainIndex,targetUuid,-1,backHome,startPos,nil,false)
                    end, function(needSellConfirm)
                        if needSellConfirm== false then
                            Setting:SetPrivateInt("SHOW_ADD_HERO",1)
                        else
                            Setting:SetPrivateInt("SHOW_ADD_HERO",0)
                        end
                    end)
                    return
                end
            end
            local k5 = LuaEntry.DataConfig:TryGetNum("res_lack", "k5")
            local heroUuid,targetHeroUuid = DataCenter.ArmyFormationDataManager:GetFormationHeroCanChangeHigherUuid(selfMarchUuid)
            if DataCenter.BuildManager.MainLv<=k5 and heroUuid~=nil and heroUuid~=0 and targetHeroUuid~=nil and targetHeroUuid~=0 then
                UIUtil.ShowMessage(Localization:GetString("104245"), 1, 121008,"", function()
                    local startPos = MarchUtil.GetFormationStartPos()
                    UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.TRIGGER_DRAGON_BUILDING, pointInfo.mainIndex,targetUuid,-1,backHome,startPos,nil,false)
                end)
                return
            end
        end
        MarchUtil.SendCreateMarchMessage(selfMarchUuid,MarchTargetType.TRIGGER_DRAGON_BUILDING, pointInfo.mainIndex,targetUuid,-1,backHome,true)
    else
        MarchUtil.StartMarch(MarchTargetType.TRIGGER_DRAGON_BUILDING, pointInfo.mainIndex,targetUuid, -1, selfMarchUuid,0, backHome)
    end

end

local function OnAssistanceDragonBuild(selfMarchUuid,pointInfo,isFormation)
    if not DataCenter.BuildManager:HasBuilding(BuildingTypes.FUND_BUILD_ALLIANCE_CENTER) then
        UIUtil.ShowTipsId(390805)
        return
    end
    if isFormation~=nil and isFormation == true then
        local formation = DataCenter.ArmyFormationDataManager:GetOneArmyInfoByUuid(selfMarchUuid)
        if formation~=nil then
            local canAddNum = MarchUtil.GetCanAddHeroNum(formation:GetCurHeroes(),formation.index)
            if canAddNum>0 then
                local show  = Setting:GetPrivateInt("SHOW_ADD_HERO",1)
                if show<=0 then
                    UIUtil.ShowSecondMessage(Localization:GetString("121006"),Localization:GetString("121007"),1,121008,"", function()
                        local startPos = MarchUtil.GetFormationStartPos()
                        UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.ASSISTANCE_DRAGON_BUILDING,pointInfo.mainIndex,pointInfo.uuid,-1,0,startPos,nil,false)
                    end, function(needSellConfirm)
                        if needSellConfirm== false then
                            Setting:SetPrivateInt("SHOW_ADD_HERO",1)
                        else
                            Setting:SetPrivateInt("SHOW_ADD_HERO",0)
                        end
                    end)
                    return
                end
            end
            local k5 = LuaEntry.DataConfig:TryGetNum("res_lack", "k5")
            local heroUuid,targetHeroUuid = DataCenter.ArmyFormationDataManager:GetFormationHeroCanChangeHigherUuid(selfMarchUuid)
            if DataCenter.BuildManager.MainLv<=k5 and heroUuid~=nil and heroUuid~=0 and targetHeroUuid~=nil and targetHeroUuid~=0 then
                UIUtil.ShowMessage(Localization:GetString("104245"), 1, 121008,"", function()
                    local startPos = MarchUtil.GetFormationStartPos()
                    UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.ASSISTANCE_DRAGON_BUILDING,pointInfo.mainIndex,pointInfo.uuid,-1,0,startPos,nil,false)
                end)
                return
            end
        end
        MarchUtil.SendCreateMarchMessage(selfMarchUuid,MarchTargetType.ASSISTANCE_DRAGON_BUILDING,pointInfo.mainIndex,pointInfo.uuid,-1,0,true)
    else
        MarchUtil.StartMarch(MarchTargetType.ASSISTANCE_DRAGON_BUILDING, pointInfo.mainIndex,pointInfo.uuid, -1, selfMarchUuid)
    end
end
local function OnTakeSecretKey(selfMarchUuid,pointInfo,isFormation)
    if not DataCenter.BuildManager:HasBuilding(BuildingTypes.FUND_BUILD_ALLIANCE_CENTER) then
        UIUtil.ShowTipsId(390805)
        return
    end
    if isFormation~=nil and isFormation == true then
        local formation = DataCenter.ArmyFormationDataManager:GetOneArmyInfoByUuid(selfMarchUuid)
        if formation~=nil then
            local canAddNum = MarchUtil.GetCanAddHeroNum(formation:GetCurHeroes(),formation.index)
            if canAddNum>0 then
                local show  = Setting:GetPrivateInt("SHOW_ADD_HERO",1)
                if show<=0 then
                    UIUtil.ShowSecondMessage(Localization:GetString("121006"),Localization:GetString("121007"),1,121008,"", function()
                        local startPos = MarchUtil.GetFormationStartPos()
                        UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.TAKE_SECRET_KEY,pointInfo.mainIndex,pointInfo.uuid,-1,0,startPos,nil,false)
                    end, function(needSellConfirm)
                        if needSellConfirm== false then
                            Setting:SetPrivateInt("SHOW_ADD_HERO",1)
                        else
                            Setting:SetPrivateInt("SHOW_ADD_HERO",0)
                        end
                    end)
                    return
                end
            end
            local k5 = LuaEntry.DataConfig:TryGetNum("res_lack", "k5")
            local heroUuid,targetHeroUuid = DataCenter.ArmyFormationDataManager:GetFormationHeroCanChangeHigherUuid(selfMarchUuid)
            if DataCenter.BuildManager.MainLv<=k5 and heroUuid~=nil and heroUuid~=0 and targetHeroUuid~=nil and targetHeroUuid~=0 then
                UIUtil.ShowMessage(Localization:GetString("104245"), 1, 121008,"", function()
                    local startPos = MarchUtil.GetFormationStartPos()
                    UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.TAKE_SECRET_KEY,pointInfo.mainIndex,pointInfo.uuid,-1,0,startPos,nil,false)
                end)
                return
            end
        end
        MarchUtil.SendCreateMarchMessage(selfMarchUuid,MarchTargetType.TAKE_SECRET_KEY,pointInfo.mainIndex,pointInfo.uuid,-1,0,true)
    else
        MarchUtil.StartMarch(MarchTargetType.TAKE_SECRET_KEY, pointInfo.mainIndex,pointInfo.uuid, -1, selfMarchUuid)
    end
end

local function OnPickSecretKey(selfMarchUuid,pointInfo,isFormation)
    if not DataCenter.BuildManager:HasBuilding(BuildingTypes.FUND_BUILD_ALLIANCE_CENTER) then
        UIUtil.ShowTipsId(390805)
        return
    end
    if isFormation~=nil and isFormation == true then
        local formation = DataCenter.ArmyFormationDataManager:GetOneArmyInfoByUuid(selfMarchUuid)
        if formation~=nil then
            local canAddNum = MarchUtil.GetCanAddHeroNum(formation:GetCurHeroes(),formation.index)
            if canAddNum>0 then
                local show  = Setting:GetPrivateInt("SHOW_ADD_HERO",1)
                if show<=0 then
                    UIUtil.ShowSecondMessage(Localization:GetString("121006"),Localization:GetString("121007"),1,121008,"", function()
                        local startPos = MarchUtil.GetFormationStartPos()
                        UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.PICK_SECRET_KEY,pointInfo.mainIndex,pointInfo.uuid,-1,0,startPos,nil,false)
                    end, function(needSellConfirm)
                        if needSellConfirm== false then
                            Setting:SetPrivateInt("SHOW_ADD_HERO",1)
                        else
                            Setting:SetPrivateInt("SHOW_ADD_HERO",0)
                        end
                    end)
                    return
                end
            end
            local k5 = LuaEntry.DataConfig:TryGetNum("res_lack", "k5")
            local heroUuid,targetHeroUuid = DataCenter.ArmyFormationDataManager:GetFormationHeroCanChangeHigherUuid(selfMarchUuid)
            if DataCenter.BuildManager.MainLv<=k5 and heroUuid~=nil and heroUuid~=0 and targetHeroUuid~=nil and targetHeroUuid~=0 then
                UIUtil.ShowMessage(Localization:GetString("104245"), 1, 121008,"", function()
                    local startPos = MarchUtil.GetFormationStartPos()
                    UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.PICK_SECRET_KEY,pointInfo.mainIndex,pointInfo.uuid,-1,0,startPos,nil,false)
                end)
                return
            end
        end
        MarchUtil.SendCreateMarchMessage(selfMarchUuid,MarchTargetType.PICK_SECRET_KEY,pointInfo.mainIndex,pointInfo.uuid,-1,0,true)
    else
        MarchUtil.StartMarch(MarchTargetType.PICK_SECRET_KEY, pointInfo.mainIndex,pointInfo.uuid, -1, selfMarchUuid)
    end
end

local function OnAttackDesert(selfMarchUuid,pointId,curStamina,isFormation)
    local formationUuid = 0
    if isFormation ==nil or isFormation == false then
        local marchInfo = DataCenter.WorldMarchDataManager:GetMarch(selfMarchUuid)
        if marchInfo~=nil then
            formationUuid = marchInfo.ownerFormationUuid
        end
    else
        formationUuid = selfMarchUuid
    end
    local isEmptyDesert = true
    local worldTileInfo = CS.SceneManager.World:GetWorldTileInfo(pointId)
    if worldTileInfo ~= nil then
        local pointData = worldTileInfo:GetPointInfo()
        if pointData == nil then
            local desertInfo = worldTileInfo:GetWorldDesertInfo()
            if desertInfo~=nil then
                local level = GetTableData(TableName.Desert, desertInfo.desertId, "desert_level")
                if level>0 then
                    isEmptyDesert = false
                end
            end
        end
    end
    local staminaCost = MarchUtil.GetCostStaminaByTargetType(MarchTargetType.ATTACK_DESERT,nil,formationUuid,nil,isEmptyDesert)
    if curStamina <staminaCost then
        --UIUtil.ShowTipsId(GameDialogDefine.STAMINA_IS_NOT_ENOUGH)
        GoToResLack.GotoAddStamina(staminaCost)
        return
    end
    local targetUuid = pointId
    local backHome = MarchUtil.GetAutoBackHomeState(MarchTargetType.ATTACK_DESERT)
    if isFormation~=nil and isFormation == true then
        local formation = DataCenter.ArmyFormationDataManager:GetOneArmyInfoByUuid(selfMarchUuid)
        if formation~=nil then
            local canAddNum = MarchUtil.GetCanAddHeroNum(formation:GetCurHeroes(),formation.index)
            if canAddNum>0 then
                local show  = Setting:GetPrivateInt("SHOW_ADD_HERO",1)
                if show<=0 then
                    UIUtil.ShowSecondMessage(Localization:GetString("121006"),Localization:GetString("121007"),1,121008,"", function()
                        local startPos = MarchUtil.GetFormationStartPos()
                        UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.ATTACK_DESERT,pointId,pointId,-1,backHome,startPos,nil,false)
                    end, function(needSellConfirm)
                        if needSellConfirm== false then
                            Setting:SetPrivateInt("SHOW_ADD_HERO",1)
                        else
                            Setting:SetPrivateInt("SHOW_ADD_HERO",0)
                        end
                    end)
                    return
                end
            end
            local k5 = LuaEntry.DataConfig:TryGetNum("res_lack", "k5")
            local heroUuid,targetHeroUuid = DataCenter.ArmyFormationDataManager:GetFormationHeroCanChangeHigherUuid(selfMarchUuid)
            if DataCenter.BuildManager.MainLv<=k5 and heroUuid~=nil and heroUuid~=0 and targetHeroUuid~=nil and targetHeroUuid~=0 then
                UIUtil.ShowMessage(Localization:GetString("104245"), 1, 121008,"", function()
                    local startPos = MarchUtil.GetFormationStartPos()
                    UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.ATTACK_DESERT,pointId,pointId,-1,backHome,startPos,nil,false)
                end)
                return
            end
        end
        MarchUtil.SendCreateMarchMessage(selfMarchUuid,MarchTargetType.ATTACK_DESERT,pointId,pointId,-1,backHome,true)
    else


        MarchUtil.StartMarch(MarchTargetType.ATTACK_DESERT,pointId,pointId, -1, selfMarchUuid,0, backHome)
    end

end
--进入虫洞
local function OnGotoWormHole(selfMarchUuid,pointIndex,buildUuid,isFormation)
    local mainNum = DataCenter.BuildManager:GetHaveBuildNumWithOutFoldUpByBuildId(BuildingTypes.APS_BUILD_WORMHOLE_MAIN)
    if mainNum>0 then
        if isFormation~=nil and isFormation == true then
            local formation = DataCenter.ArmyFormationDataManager:GetOneArmyInfoByUuid(selfMarchUuid)
            if formation~=nil then
                local canAddNum = MarchUtil.GetCanAddHeroNum(formation:GetCurHeroes(),formation.index)
                if canAddNum>0 then
                    local show  = Setting:GetPrivateInt("SHOW_ADD_HERO",1)
                    if show<=0 then
                        UIUtil.ShowSecondMessage(Localization:GetString("121006"),Localization:GetString("121007"),1,121008,"", function()
                            local startPos = MarchUtil.GetFormationStartPos()
                            UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.GO_WORM_HOLE, pointIndex,buildUuid,-1,0,startPos,nil,false)
                        end, function(needSellConfirm)
                            if needSellConfirm== false then
                                Setting:SetPrivateInt("SHOW_ADD_HERO",1)
                            else
                                Setting:SetPrivateInt("SHOW_ADD_HERO",0)
                            end
                        end)
                        return
                    end
                end
                local k5 = LuaEntry.DataConfig:TryGetNum("res_lack", "k5")
                local heroUuid,targetHeroUuid = DataCenter.ArmyFormationDataManager:GetFormationHeroCanChangeHigherUuid(selfMarchUuid)
                if DataCenter.BuildManager.MainLv<=k5 and heroUuid~=nil and heroUuid~=0 and targetHeroUuid~=nil and targetHeroUuid~=0 then
                    UIUtil.ShowMessage(Localization:GetString("104245"), 1, 121008,"", function()
                        local startPos = MarchUtil.GetFormationStartPos()
                        UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.GO_WORM_HOLE, pointIndex,buildUuid,-1,0,startPos,nil,false)
                    end)
                    return
                end
            end
            MarchUtil.SendCreateMarchMessage(selfMarchUuid,MarchTargetType.GO_WORM_HOLE,pointIndex,buildUuid,-1,0,true)
        else
            --对比已有前往虫洞的部队
            --local selfMarch = CS.SceneManager.World:GetOwnerMarches(LuaEntry.Player.uid, LuaEntry.Player.allianceId)
            --local goHoleNum = 0
            --if selfMarch.Count > 0 then
            --    for i = 0, selfMarch.Count - 1 do
            --        local march = selfMarch[i]
            --        if march:GetMarchTargetType() == MarchTargetType.GO_WORM_HOLE or march:GetMarchTargetType() == MarchTargetType.CROSS_SERVER_WORM then
            --            goHoleNum = goHoleNum + 1
            --        end
            --    end
            --end
            --local list = DataCenter.BuildManager:GetAllBuildingByItemIdWithoutPickUp(BuildingTypes.APS_BUILD_WORMHOLE_MAIN)
            --if #list > 0 then
            --    if goHoleNum >= list[1].level then
            --        return UIUtil.ShowTipsId(129015)
            --    end
            --end
            MarchUtil.StartMarch(MarchTargetType.GO_WORM_HOLE,pointIndex,buildUuid, -1, selfMarchUuid)
        end
    else
        --if subNum == 0  then
        --    UIUtil.ShowTipsId(140259)
        --else
        UIUtil.ShowTipsId(140258)
        --end
    end
end
--建设虫洞
local function OnBuildWormHole(selfMarchUuid,pointInfo,isFormation)
    --local subNum = DataCenter.BuildManager:GetHaveBuildNumWithOutFoldUpByBuildId(BuildingTypes.APS_BUILD_WORMHOLE_SUB)
    --local mainNum = DataCenter.BuildManager:GetHaveBuildNumWithOutFoldUpByBuildId(BuildingTypes.APS_BUILD_WORMHOLE_MAIN)
    --if subNum>0 and mainNum>0 then
    if isFormation~=nil and isFormation == true then
        MarchUtil.SendCreateMarchMessage(selfMarchUuid,MarchTargetType.BUILD_WORM_HOLE, pointInfo.mainIndex,pointInfo.uuid,-1,0,true)
    else
        MarchUtil.StartMarch(MarchTargetType.BUILD_WORM_HOLE, pointInfo.mainIndex,pointInfo.uuid, -1, selfMarchUuid)
    end

    --else
    --    UIUtil.ShowTipsId(129015)
    --end
end
--采集
local function OnGotoCollect(selfMarchUuid,pointInfo,targetPointId,isFormation)
    local resType = LocalController:instance():getStrValue(TableName.GatherResource,pointInfo.id, "resource_type")
    resType = tonumber(resType)
    local itemId = GetTableData(TableName.GatherResource, pointInfo.id,"param")
    local state = MarchUtil.GetResourcePointUnlockStateByType(tonumber(resType), itemId)
    if state == 0 then
        local scienceId = GetTableData(TableName.GatherResource,pointInfo.id,"unlock_science")
        if scienceId ~= "" and not DataCenter.ScienceManager:HasScienceByIdAndLevel(tonumber(scienceId),1) then
            local template = DataCenter.ScienceTemplateManager:GetScienceTemplate(scienceId,1)
            UIUtil.ShowTips(Localization:GetString("129055",Localization:GetString(template.name),Localization:GetString(GetTableData(TableName.GatherResource,pointInfo.id,"name"))))
        end
        return
    end
    local own = LuaEntry.Resource:GetCntByResType(ResourceType.Steel)
    local k1 = GetTableData(TableName.GatherResource,pointInfo.id,"collect_power") --pointInfo:GetResourceType()
    if own < k1 then
        UIUtil.ShowTipsId(129023)
        local lackTab = {}
        local param = {}
        param.type = ResLackType.Res
        param.id = ResourceType.Steel
        param.targetNum = k1
        table.insert(lackTab,param)
        GoToResLack.GoToItemResLackList(lackTab)
    else
        local backHome = MarchUtil.GetAutoBackHomeState(MarchTargetType.COLLECT)
        if isFormation~=nil and isFormation == true then
            MarchUtil.SendCreateMarchMessage(selfMarchUuid,MarchTargetType.COLLECT,targetPointId,pointInfo.mainIndex,-1,backHome,true)
        else
            MarchUtil.StartMarch(MarchTargetType.COLLECT,targetPointId,pointInfo.mainIndex, -1, selfMarchUuid,0, backHome)
        end

    end
end
--加入集结
local function OnJoinRally(selfMarchUuid,rallyType,targetUuid,targetPointId,curStamina)
    local staminaCost =MarchUtil.GetCostStaminaByTargetType(MarchTargetType.JOIN_RALLY,rallyType)
    if curStamina <staminaCost then
        --UIUtil.ShowTipsId(GameDialogDefine.STAMINA_IS_NOT_ENOUGH)
        GoToResLack.GotoAddStamina(staminaCost)
        return
    end
    MarchUtil.StartMarch(MarchTargetType.JOIN_RALLY,targetPointId,targetUuid, -1, selfMarchUuid)

end
--驻扎
local function OnStation(selfMarchUuid,pointId,isFormation)
    if isFormation~=nil and isFormation == true then
        MarchUtil.SendCreateMarchMessage(selfMarchUuid,MarchTargetType.STATE, pointId,0,-1,0,true)
    else
        MarchUtil.StartMarch(MarchTargetType.STATE, pointId,0, -1, selfMarchUuid)
    end

end

local function OnGotoCrossServerWormHole(selfMarchUuid,isFormation,targetServerId)
    local crossBuildData = DataCenter.BuildManager:GetFunbuildByItemID(BuildingTypes.WORM_HOLE_CROSS)
    local mainBuildData = DataCenter.BuildManager:GetFunbuildByItemID(BuildingTypes.APS_BUILD_WORMHOLE_MAIN)
    if crossBuildData~=nil and mainBuildData~=nil then
        if isFormation~=nil and isFormation == true then
            local formation = DataCenter.ArmyFormationDataManager:GetOneArmyInfoByUuid(selfMarchUuid)
            if formation~=nil then
                local canAddNum = MarchUtil.GetCanAddHeroNum(formation:GetCurHeroes(),formation.index)
                if canAddNum>0 then
                    local show  = Setting:GetPrivateInt("SHOW_ADD_HERO",1)
                    if show<=0 then
                        UIUtil.ShowSecondMessage(Localization:GetString("121006"),Localization:GetString("121007"),1,121008,"", function()
                            local startPos = MarchUtil.GetFormationStartPos()
                            UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.CROSS_SERVER_WORM, mainBuildData.pointId,crossBuildData.uuid,-1,0,startPos,nil,false,nil,nil,0,false,targetServerId)
                        end, function(needSellConfirm)
                            if needSellConfirm== false then
                                Setting:SetPrivateInt("SHOW_ADD_HERO",1)
                            else
                                Setting:SetPrivateInt("SHOW_ADD_HERO",0)
                            end
                        end)
                        return
                    end
                end
                local k5 = LuaEntry.DataConfig:TryGetNum("res_lack", "k5")
                local heroUuid,targetHeroUuid = DataCenter.ArmyFormationDataManager:GetFormationHeroCanChangeHigherUuid(selfMarchUuid)
                if DataCenter.BuildManager.MainLv<=k5 and heroUuid~=nil and heroUuid~=0 and targetHeroUuid~=nil and targetHeroUuid~=0 then
                    UIUtil.ShowMessage(Localization:GetString("104245"), 1, 121008,"", function()
                        local startPos = MarchUtil.GetFormationStartPos()
                        UIManager:GetInstance():OpenWindow(UIWindowNames.UIFormationTableNew,selfMarchUuid,MarchTargetType.CROSS_SERVER_WORM, mainBuildData.pointId,crossBuildData.uuid,-1,0,startPos,nil,false,nil,nil,0,false,targetServerId)
                    end)
                    return
                end
            end
            MarchUtil.SendCreateMarchMessage(selfMarchUuid,MarchTargetType.CROSS_SERVER_WORM, mainBuildData.pointId,crossBuildData.uuid,-1,0,true,targetServerId)
        else
            --对比已有前往虫洞的部队
            --local selfMarch = CS.SceneManager.World:GetOwnerMarches(LuaEntry.Player.uid, LuaEntry.Player.allianceId)
            --local goHoleNum = 0
            --if selfMarch.Count > 0 then
            --    for i = 0, selfMarch.Count - 1 do
            --        local march = selfMarch[i]
            --        if march:GetMarchTargetType() == MarchTargetType.GO_WORM_HOLE or march:GetMarchTargetType() == MarchTargetType.CROSS_SERVER_WORM then
            --            goHoleNum = goHoleNum + 1
            --        end
            --    end
            --end
            --local list = DataCenter.BuildManager:GetAllBuildingByItemIdWithoutPickUp(BuildingTypes.APS_BUILD_WORMHOLE_MAIN)
            --if #list > 0 then
            --    if goHoleNum >= list[1].level then
            --        UIUtil.ShowTipsId(129015)
            --        return
            --    end
            --end
            MarchUtil.StartMarch(MarchTargetType.CROSS_SERVER_WORM,mainBuildData.pointId,crossBuildData.uuid, -1, selfMarchUuid,0,1,nil,0,targetServerId)
        end
    else
        if crossBuildData == nil then
            UIUtil.ShowTipsId(140259)
        else
            UIUtil.ShowTipsId(140258)
        end
    end
end


--设置自动返回标志
--1自动返回，0为留在原地
local function SetAutoBackHomeState(type,value)
    if type == MarchTargetType.ATTACK_CITY or type == MarchTargetType.DIRECT_ATTACK_CITY then
        Setting:SetPrivateInt("ATTACK_CITY",value)
    elseif type == MarchTargetType.ATTACK_MONSTER then
        Setting:SetPrivateInt("ATTACK_MONSTER",value)
    elseif type == MarchTargetType.ATTACK_BUILDING then
        Setting:SetPrivateInt("ATTACK_BUILDING",value)
    elseif type == MarchTargetType.ATTACK_ALLIANCE_BUILDING then
        Setting:SetPrivateInt("ATTACK_ALLIANCE_BUILDING",value)
    elseif type == MarchTargetType.ATTACK_ACT_ALLIANCE_MINE then
        Setting:SetPrivateInt("ATTACK_ACT_ALLIANCE_MINE",value)
    elseif type == MarchTargetType.ATTACK_DESERT then
        Setting:SetPrivateInt("ATTACK_DESERT",value)
    elseif type == MarchTargetType.TRAIN_DESERT then
        Setting:SetPrivateInt("TRAIN_DESERT",value)
    elseif type == MarchTargetType.ATTACK_ARMY then
        Setting:SetPrivateInt("ATTACK_ARMY",value)
    elseif type == MarchTargetType.ATTACK_DRAGON_BUILDING then
        Setting:SetPrivateInt("ATTACK_DRAGON_BUILDING",value)
    end
end

local function GetAutoBackHomeState(type)
    local state = 1
    if type == MarchTargetType.ATTACK_CITY or type == MarchTargetType.DIRECT_ATTACK_CITY then
        state = Setting:GetPrivateInt("ATTACK_CITY",0)
    elseif type == MarchTargetType.ATTACK_MONSTER then
        state = Setting:GetPrivateInt("ATTACK_MONSTER",1)
    elseif type == MarchTargetType.ATTACK_BUILDING then
        state = Setting:GetPrivateInt("ATTACK_BUILDING",0)
    elseif type == MarchTargetType.ATTACK_ALLIANCE_BUILDING then
        state = Setting:GetPrivateInt("ATTACK_ALLIANCE_BUILDING",0)
    elseif type == MarchTargetType.ATTACK_ALLIANCE_CITY then
        state = 0
    elseif type == MarchTargetType.PICK_GARBAGE then
        state = 0
    elseif type == MarchTargetType.TRIGGER_DRAGON_BUILDING then
        state = 0
    elseif type == MarchTargetType.ATTACK_DESERT then
        state = Setting:GetPrivateInt("ATTACK_DESERT",1)
    elseif type == MarchTargetType.TRAIN_DESERT then
        state = Setting:GetPrivateInt("TRAIN_DESERT",0)
    elseif type == MarchTargetType.ATTACK_ARMY then
        state = Setting:GetPrivateInt("ATTACK_ARMY",1)
    elseif type == MarchTargetType.ATTACK_ACT_ALLIANCE_MINE then
        state = Setting:GetPrivateInt("ATTACK_ACT_ALLIANCE_MINE",0)
    elseif type == MarchTargetType.ATTACK_DRAGON_BUILDING then
        state = Setting:GetPrivateInt("ATTACK_DRAGON_BUILDING",0)
    end
    return state
end

local function GetMaxHeroValueByFormationIndex(index)
    if index ==1 then
        return LuaEntry.Effect:GetGameEffect(EffectDefine.APS_FORMATION_FIRST_HERO_COUNT)
    elseif index ==2 then
        return LuaEntry.Effect:GetGameEffect(EffectDefine.APS_FORMATION_SECOND_HERO_COUNT)
    elseif index ==3 then
        return LuaEntry.Effect:GetGameEffect(EffectDefine.APS_FORMATION_THIRD_HERO_COUNT)
    elseif index ==4 then
        return LuaEntry.Effect:GetGameEffect(EffectDefine.APS_FORMATION_FIRST_HERO_COUNT)
    end
    return 0
end

--防守编队每一编队的最大值
local function GetMaxHeroValueByDefendFormationIndex(index)
    if index ==1 then
        return LuaEntry.Effect:GetGameEffect(EffectDefine.APS_DEFENCE_FORMATION_FIRST_HERO_COUNT)
    elseif index ==2 then
        return LuaEntry.Effect:GetGameEffect(EffectDefine.APS_DEFENCE_FORMATION_SECOND_HERO_COUNT)
    elseif index ==3 then
        return LuaEntry.Effect:GetGameEffect(EffectDefine.APS_DEFENCE_FORMATION_THIRD_HERO_COUNT)
    end
    return 0
end
local function GetFormationAtkAddEffectEnumByIndex(index)
    if index ==1 then
        return EffectDefine.APS_NORMAL_FORMATION_1_ATK
    elseif index ==2 then
        return EffectDefine.APS_NORMAL_FORMATION_2_ATK
    elseif index ==3 then
        return EffectDefine.APS_NORMAL_FORMATION_3_ATK
    elseif index ==4 then
        return EffectDefine.APS_NORMAL_FORMATION_1_ATK
    end
    return 0
end
local function GetFormationDefAddEffectEnumByIndex(index)
    if index ==1 then
        return EffectDefine.APS_NORMAL_FORMATION_1_DEF
    elseif index ==2 then
        return EffectDefine.APS_NORMAL_FORMATION_2_DEF
    elseif index ==3 then
        return EffectDefine.APS_NORMAL_FORMATION_3_DEF
    elseif index ==4 then
        return EffectDefine.APS_NORMAL_FORMATION_1_DEF
    end
    return 0
end
local function GetFormationAtkAddNumByFormationIndex(index)
    if index ==1 then
        return LuaEntry.Effect:GetGameEffect(EffectDefine.APS_NORMAL_FORMATION_1_ATK)
    elseif index ==2 then
        return LuaEntry.Effect:GetGameEffect(EffectDefine.APS_NORMAL_FORMATION_2_ATK)
    elseif index ==3 then
        return LuaEntry.Effect:GetGameEffect(EffectDefine.APS_NORMAL_FORMATION_3_ATK)
    elseif index ==4 then
        return LuaEntry.Effect:GetGameEffect(EffectDefine.APS_NORMAL_FORMATION_1_ATK)
    end
    return 0
end

local function GetFormationDefAddNumByFormationIndex(index)
    if index ==1 then
        return LuaEntry.Effect:GetGameEffect(EffectDefine.APS_NORMAL_FORMATION_1_DEF)
    elseif index ==2 then
        return LuaEntry.Effect:GetGameEffect(EffectDefine.APS_NORMAL_FORMATION_2_DEF)
    elseif index ==3 then
        return LuaEntry.Effect:GetGameEffect(EffectDefine.APS_NORMAL_FORMATION_3_DEF)
    elseif index ==4 then
        return LuaEntry.Effect:GetGameEffect(EffectDefine.APS_NORMAL_FORMATION_1_DEF)
    end
    return 0
end

local function GetFormationAddWeightPercentByFormationIndex(index)
    if index ==1 then
        return LuaEntry.Effect:GetGameEffect(EffectDefine.APS_NORMAL_FORMATION_1_CARRY_WEIGHT_ADD_PERCENT)
    elseif index ==2 then
        return LuaEntry.Effect:GetGameEffect(EffectDefine.APS_NORMAL_FORMATION_2_CARRY_WEIGHT_ADD_PERCENT)
    elseif index ==3 then
        return LuaEntry.Effect:GetGameEffect(EffectDefine.APS_NORMAL_FORMATION_3_CARRY_WEIGHT_ADD_PERCENT)
    elseif index ==4 then
        return LuaEntry.Effect:GetGameEffect(EffectDefine.APS_NORMAL_FORMATION_1_CARRY_WEIGHT_ADD_PERCENT)
    end
    return 0
end
local function GetFormationAddWeightNumByFormationIndex(index)
    if index ==1 then
        return LuaEntry.Effect:GetGameEffect(EffectDefine.APS_NORMAL_FORMATION_1_CARRY_WEIGHT_ADD_NUM)
    elseif index ==2 then
        return LuaEntry.Effect:GetGameEffect(EffectDefine.APS_NORMAL_FORMATION_2_CARRY_WEIGHT_ADD_NUM)
    elseif index ==3 then
        return LuaEntry.Effect:GetGameEffect(EffectDefine.APS_NORMAL_FORMATION_3_CARRY_WEIGHT_ADD_NUM)
    elseif index ==4 then
        return LuaEntry.Effect:GetGameEffect(EffectDefine.APS_NORMAL_FORMATION_1_CARRY_WEIGHT_ADD_NUM)
    end
    return 0
end
local function GetFormationMaxNumByFormationIndex(index)
    if index ==1 then
        return LuaEntry.Effect:GetGameEffect(EffectDefine.APS_NORMAL_FORMATION_1_FORMATION_COUNT)
    elseif index ==2 then
        return LuaEntry.Effect:GetGameEffect(EffectDefine.APS_NORMAL_FORMATION_2_FORMATION_COUNT)
    elseif index ==3 then
        return LuaEntry.Effect:GetGameEffect(EffectDefine.APS_NORMAL_FORMATION_3_FORMATION_COUNT)
    elseif index ==4 then
        return LuaEntry.Effect:GetGameEffect(EffectDefine.APS_NORMAL_FORMATION_1_FORMATION_COUNT)
    end
    return 0
end

local function GetFormationBuildNameByIndex(index)
    if index ==1 then
        return BuildingTypes.FUN_BUILD_TRAINFIELD_1
    elseif index ==2 then
        return BuildingTypes.FUN_BUILD_TRAINFIELD_2
    elseif index ==3 then
        return BuildingTypes.FUN_BUILD_TRAINFIELD_3
    elseif index ==4 then
        return BuildingTypes.FUN_BUILD_TRAINFIELD_4
    end
    return 0
end

local function GetResourcePointUnlockStateByType(resourceType, itemId)
    if resourceType == ResourceType.Water then
        return LuaEntry.Effect:GetGameEffect(EffectDefine.UNLOCK_WATER_GET)
    elseif resourceType == ResourceType.Oil then
        return LuaEntry.Effect:GetGameEffect(EffectDefine.UNLOCK_GAS_GET)
    elseif resourceType == ResourceType.Metal then
        return LuaEntry.Effect:GetGameEffect(EffectDefine.UNLOCK_METAL_GET)
    end
    return 1
end

local function GetFormationSpeedAddByIndex(index)
    if index ==1 then
        return LuaEntry.Effect:GetGameEffect(EffectDefine.APS_NORMAL_FORMATION_1_MARCH_SPEED_ADD_PERCENT)
    elseif index ==2 then
        return LuaEntry.Effect:GetGameEffect(EffectDefine.APS_NORMAL_FORMATION_2_MARCH_SPEED_ADD_PERCENT)
    elseif index ==3 then
        return LuaEntry.Effect:GetGameEffect(EffectDefine.APS_NORMAL_FORMATION_3_MARCH_SPEED_ADD_PERCENT)
    elseif index ==4 then
        return LuaEntry.Effect:GetGameEffect(EffectDefine.APS_NORMAL_FORMATION_1_MARCH_SPEED_ADD_PERCENT)
    end
    return 0
end
local function GetMaxCanAddSoldierNum(heroes,curIndex)
    local asPlayerMaxSoldiers = LuaEntry.DataConfig:TryGetNum("building_base", "k5")
    local baseSize = LuaEntry.Effect:GetGameEffect(EffectDefine.APS_FORMATION_SIZE)
    local sizeEnhance = LuaEntry.Effect:GetGameEffect(EffectDefine.APS_FORMATION_SIZE_ENHANCE)
    asPlayerMaxSoldiers = asPlayerMaxSoldiers + math.floor(baseSize+0.5)
    local campAdd= 0
    if heroes~=nil then
        table.walk(heroes,function(k,v)
            local heroData = DataCenter.HeroDataManager:GetHeroByUuid(k)
            if heroData~=nil then
                local config = heroData:GetConfig()
                local rankId = heroData:GetCurMilitaryRankId()
                local armyAdd = HeroUtils.GetArmyLimit(heroData.level, rankId, config['rarity'], config['id'],heroData.quality)
                asPlayerMaxSoldiers = asPlayerMaxSoldiers+armyAdd
                local heroBaseSize = heroData:GetEffectNum(EffectDefine.APS_FORMATION_SIZE)
                local heroSizeEnhance = heroData:GetEffectNum(EffectDefine.APS_FORMATION_SIZE_ENHANCE)
                local campAddEffect = LuaEntry.Effect:GetGameEffect(HeroUtils.GetExtraTroopByCamp(heroData:GetCamp()))
                campAdd = campAddEffect+campAdd
                asPlayerMaxSoldiers = asPlayerMaxSoldiers + heroBaseSize
                sizeEnhance = sizeEnhance + heroSizeEnhance
            end
        end)
    end
    local finalAddNumByIndex = MarchUtil.GetFormationMaxNumByFormationIndex(curIndex)
    asPlayerMaxSoldiers = asPlayerMaxSoldiers + finalAddNumByIndex+ campAdd
    asPlayerMaxSoldiers = asPlayerMaxSoldiers*(1+(sizeEnhance/100))
    local campFinalAdd = MarchUtil.GetHeroCampAddArmyCount(HeroUtils.GetPveHeroDataListByUuids(table.keys(heroes)))
    asPlayerMaxSoldiers = asPlayerMaxSoldiers + campFinalAdd

    return asPlayerMaxSoldiers
end

local function GetMaxCanAddSoldierNumLog(formationUuid)
    local curSoldiers ={}

    local curHeroes = {}
    local sfsObj = SFSObject.New()
    sfsObj:PutLong("uuid", formationUuid)
    local formation = DataCenter.ArmyFormationDataManager:GetOneArmyInfoByUuid(formationUuid)
    if formation~=nil then
        curSoldiers = formation.soldiers
        curHeroes =  formation:GetCurHeroes()
        local formationArray = SFSArray.New()
        table.walk(curSoldiers,function (k,v)
            local obj = SFSObject.New()
            obj:PutUtfString("armyId",k)
            obj:PutInt("count", v)
            formationArray:AddSFSObject(obj)
        end)

        sfsObj:PutSFSArray("formations", formationArray)

        local heroArray = SFSArray.New()
        table.walk(curHeroes,function (k,v)
            local obj = SFSObject.New()
            obj:PutLong("heroUuid",k)
            obj:PutInt("index", v)
            heroArray:AddSFSObject(obj)
        end)
        sfsObj:PutSFSArray("heroInfos", heroArray)

        local logSfsObj = SFSObject.New()
        local asPlayerMaxSoldiers = LuaEntry.DataConfig:TryGetNum("building_base", "k5")
        logSfsObj:PutFloat("buildingBaseK5",asPlayerMaxSoldiers)
        local baseSize = LuaEntry.Effect:GetGameEffect(EffectDefine.APS_FORMATION_SIZE)
        logSfsObj:PutFloat("userEffect40001",baseSize)
        local sizeEnhance = LuaEntry.Effect:GetGameEffect(EffectDefine.APS_FORMATION_SIZE_ENHANCE)
        logSfsObj:PutFloat("userEffect40002",sizeEnhance)
        local finalAddNumByIndex = MarchUtil.GetFormationMaxNumByFormationIndex(formation.index)
        logSfsObj:PutFloat("formationArmyAddCountByIndex",finalAddNumByIndex)
        local heroLogArray = SFSArray.New()
        table.walk(curHeroes,function (k,v)
            local heroData = DataCenter.HeroDataManager:GetHeroByUuid(k)
            if heroData~=nil then
                local config = heroData:GetConfig()
                local rankId = heroData:GetCurMilitaryRankId()
                local rarity = config['rarity']
                local heroId = config['id']
                local heroLevel = heroData.level
                local quality = heroData.quality

                local num = 0
                local template = DataCenter.HeroLevelUpTemplateManager:GetTemplate(level)
                if template ~= nil then
                    num = template:GetArmyNum(rarity)
                end
   
                local rankTroop = GetTableData(TableName.HeroMilitaryRank, rankId, 'troop')[rarity]
                rankTroop = tonumber(rankTroop)
                if rankTroop == nil then
                    rankTroop = 0
                end
                local starAddTroop = config['hero_star_troops'][math.min(#config['hero_star_troops'], quality)]
                if starAddTroop == nil then
                    starAddTroop = 0
                end
                local heroBaseSize = heroData:GetEffectNum(EffectDefine.APS_FORMATION_SIZE)
                local heroSizeEnhance = heroData:GetEffectNum(EffectDefine.APS_FORMATION_SIZE_ENHANCE)
                local campAddEffect = LuaEntry.Effect:GetGameEffect(HeroUtils.GetExtraTroopByCamp(heroData:GetCamp()))
                local obj = SFSObject.New()
                obj:PutLong("heroUuid",k)
                obj:PutInt("heroId", heroId)
                obj:PutInt("heroRank", rankId)
                obj:PutInt("heroStar", quality)
                obj:PutInt("heroLevel", heroLevel)
                obj:PutFloat("heroLevelAdd",num)
                obj:PutFloat("heroRankAdd",rankTroop)
                obj:PutFloat("heroStarAdd",starAddTroop)
                obj:PutFloat("heroEffect40001",heroBaseSize)
                obj:PutFloat("heroEffect40002",heroSizeEnhance)
                obj:PutFloat("heroCampAdd",campAddEffect)
                heroLogArray:AddSFSObject(obj)
            end

        end)
        logSfsObj:PutSFSArray("heroArr", heroLogArray)

        local maxNum = MarchUtil.GetMaxCanAddSoldierNum(curHeroes, formation.index)
        logSfsObj:PutInt("maxSoldiers", maxNum)
        sfsObj:PutSFSObject("formationLog",logSfsObj)
        local campFinalAdd = MarchUtil.GetHeroCampAddArmyCount(HeroUtils.GetPveHeroDataListByUuids(table.keys(curHeroes)))
        logSfsObj:PutInt("campFinalAdd", campFinalAdd)
    end
    return sfsObj
end


local function GetDefenceFormationMaxCanAddSoldierNum(heroes)
    return LongMaxValue
    --local asPlayerMaxSoldiers = LuaEntry.DataConfig:TryGetNum("building_base", "k5")
    --local baseSize = LuaEntry.Effect:GetGameEffect(EffectDefine.APS_FORMATION_SIZE)
    --local sizeEnhance = LuaEntry.Effect:GetGameEffect(EffectDefine.APS_FORMATION_SIZE_ENHANCE)
    --asPlayerMaxSoldiers = asPlayerMaxSoldiers + math.floor(baseSize+0.5)
    --if heroes~=nil then
    --    table.walk(heroes,function(k,v)
    --        local heroData = DataCenter.HeroDataManager:GetHeroByUuid(k)
    --        if heroData~=nil then
    --            local atkAdd, defAdd, armyAdd, powerAdd = heroData:GetLvUpChangedAttr()
    --            asPlayerMaxSoldiers = asPlayerMaxSoldiers+armyAdd
    --            local heroBaseSize = heroData:GetEffectNum(EffectDefine.APS_FORMATION_SIZE)
    --            local heroSizeEnhance = heroData:GetEffectNum(EffectDefine.APS_FORMATION_SIZE_ENHANCE)
    --            asPlayerMaxSoldiers = asPlayerMaxSoldiers + heroBaseSize
    --            sizeEnhance = sizeEnhance + heroSizeEnhance
    --        end
    --    end)
    --end
    --asPlayerMaxSoldiers = asPlayerMaxSoldiers*(1+(sizeEnhance/100))
    --return asPlayerMaxSoldiers
end

local function GetExploreFormationPower(heroes, exploreEventId, index, campAddParam)
    --英雄总攻击
    local heroAtk = 0
    --英雄总防御
    local heroDef = 0
    --阵营加成
    local campAtkAdd =  0
    if campAddParam~=nil then
        for k,v in pairs(campAddParam) do
            campAtkAdd = v.addEffectNum
        end
    end
    if heroes~=nil then
        for k,v in pairs(heroes) do
            local heroData = DataCenter.HeroDataManager:GetHeroByUuid(k)
            heroAtk  = heroAtk + heroData.atk
            heroDef = heroDef + heroData.def

        end
    end
    local k3 = LuaEntry.DataConfig:TryGetNum("new_battle_config", "k3")
    local k16 = LuaEntry.DataConfig:TryGetNum("new_battle_config", "k16")
    local k17 = LuaEntry.DataConfig:TryGetNum("new_battle_config", "k17")
    local totalBaseAdd = MarchUtil.GetEffectNumInFormation(heroes,EffectDefine.ATTACK_ADD_BASE_ALL_ARMY)
    local totalFormationAtkAdd = MarchUtil.GetEffectNumInFormation(heroes,EffectDefine.ATTACK_MONSTER)
    local totalFormationDefAdd = MarchUtil.GetEffectNumInFormation(heroes,EffectDefine.DEFENCE_MONSTER)
    local totalBaseDefenceAdd = MarchUtil.GetEffectNumInFormation(heroes,EffectDefine.DEFENCE_ADD_BASE_ALL_ARMY)
    local totalFormationHealthAdd = MarchUtil.GetEffectNumInFormation(heroes,EffectDefine.HEALTH_ADD_BASE_ALL_ARMY)
    local formationAtkAddNum = MarchUtil.GetFormationAtkAddNumByFormationIndex(index)
    local formationDefAddNum = MarchUtil.GetFormationDefAddNumByFormationIndex(index)
    Logger.Log("heroAtk:"..heroAtk.."heroDef:"..heroDef.."k3:"..k3.."campAtkAdd:"..campAtkAdd.."k16:"..k16.."k17:"..k17)
    Logger.Log("英雄ATk："..Mathf.Pow((heroAtk),k3))
    Logger.Log("英雄Def："..Mathf.Pow((heroDef),k3))
    Logger.Log("阵营："..(1+(campAtkAdd/100)))
    Logger.Log("35000："..totalBaseAdd)
    Logger.Log("35004："..totalBaseDefenceAdd)
    Logger.Log("35056："..totalFormationAtkAdd)
    Logger.Log("35060："..totalFormationDefAdd)
    Logger.Log("35012："..totalFormationHealthAdd)
    Logger.Log("英雄增益："..(1+((heroAtk+heroDef)/math.max(1,k16))))
    local totalPower = Mathf.Pow((heroAtk),k3)*Mathf.Pow((heroDef),k3)*(1+(math.min(campAtkAdd,35)/100))*(1+((heroAtk+heroDef)/math.max(1,k16)))*k17*(1+((formationAtkAddNum+totalBaseAdd+totalFormationAtkAdd)/100))*(1+((formationDefAddNum+totalBaseDefenceAdd+totalFormationDefAdd)/100))*(1+(totalFormationHealthAdd/100))
    return totalPower
end

-- buffEffectDict: Dict<effectId, val>
local function GetFormationPower(heroes, soldiers, index, campAddParam, buffEffectDict)
    if LuaEntry.DataConfig:CheckSwitch("new_army_power") then
        return MarchUtil.GetFormationPowerNew(heroes, soldiers, index, campAddParam, buffEffectDict)
    end
    --士兵攻击力
    local soldierBasicAtk = 0
    --士兵防御力
    local soldierBasicDef= 0
    --士兵血量
    local soldierBasicHealth = 0
    --英雄总攻击
    local heroAtk = 0
    --英雄总防御
    local heroDef = 0
    --兵数
    local soldierTotalNum =0
    --阵营加成
    local campAtkAdd =  0
    --所有英雄第一个技能伤害值总和
    local sumSkillDamage = 0
    if campAddParam~=nil then
        campAtkAdd = campAddParam
    end
    if soldiers~=nil then

        local totalFormationAtkAdd = MarchUtil.GetEffectNumInFormation(heroes,EffectDefine.APS_BATTLE_TROOP_TOTAL_ATK_INCR_PERCENT, buffEffectDict)
        local totalFormationDefAdd = MarchUtil.GetEffectNumInFormation(heroes,EffectDefine.APS_BATTLE_TROOP_TOTAL_DEF_INCR_PERCENT, buffEffectDict)
        local formationAtkAddNum = MarchUtil.GetFormationAtkAddNumByFormationIndex(index)
        local formationDefAddNum = MarchUtil.GetFormationDefAddNumByFormationIndex(index)
        local baseAtkEffectNum = MarchUtil.GetEffectNumInFormation(heroes,GetTableData("effect",EffectCoupleType.BASE_ATTACK,"arm_all"), buffEffectDict)
        local baseDefEffectNum = MarchUtil.GetEffectNumInFormation(heroes,GetTableData("effect",EffectCoupleType.BASE_DEFEND,"arm_all"), buffEffectDict)
        local baseHealthEffectNum = MarchUtil.GetEffectNumInFormation(heroes,GetTableData("effect",EffectCoupleType.BASE_HEALTH_PERCENT,"arm_all"), buffEffectDict)
        for k,v in pairs(soldiers) do
            local template = DataCenter.ArmyTemplateManager:GetArmyTemplate(k)
            if template ~= nil then
                local atk = template.attack
                local def = template.defence
                local health = template.health
                local typeStr = template:GetAddValueEffectName()
                local typeAtkEffectNum = MarchUtil.GetEffectNumInFormation(heroes,GetTableData("effect",EffectCoupleType.BASE_ATTACK,typeStr), buffEffectDict)
                local typeDefEffectNum = MarchUtil.GetEffectNumInFormation(heroes,GetTableData("effect",EffectCoupleType.BASE_DEFEND,typeStr), buffEffectDict)
                local typeHealthEffectNum = MarchUtil.GetEffectNumInFormation(heroes,GetTableData("effect",EffectCoupleType.BASE_HEALTH_PERCENT,typeStr), buffEffectDict)
                soldierBasicAtk = soldierBasicAtk + (atk*(1+((totalFormationAtkAdd+formationAtkAddNum+baseAtkEffectNum+typeAtkEffectNum)/100))*v)
                soldierBasicDef = soldierBasicDef + (def*(1+((totalFormationDefAdd+formationDefAddNum+baseDefEffectNum+typeDefEffectNum)/100))*v)
                soldierBasicHealth = soldierBasicHealth + (health*(1+((baseHealthEffectNum+typeHealthEffectNum)/100))*v)
                soldierTotalNum = soldierTotalNum +v
            end
        end
    end
    if soldierTotalNum<=0 then
        return 0, 0
    end

    if heroes~=nil then
        for k,v in pairs(heroes) do
            local heroData = DataCenter.HeroDataManager:GetHeroByUuid(k) or DataCenter.HeroDataManager:GetHeroByUuid(k)
            heroAtk  = heroAtk + heroData.atk
            heroDef = heroDef + heroData.def
            local firstSkillId  = HeroUtils.GetHeroFirstSkillId(heroData.heroId, heroData:GetCurMilitaryRankId())
            local skillLv = heroData:GetSkillLevel(firstSkillId)
            local damage = HeroUtils.GetHeroSkillDamage(firstSkillId,skillLv)
            sumSkillDamage = sumSkillDamage+damage
        end
    end
    local k1 = LuaEntry.DataConfig:TryGetNum("new_battle_config", "k1")
    local k2 = LuaEntry.DataConfig:TryGetNum("new_battle_config", "k2")
    local k3 = LuaEntry.DataConfig:TryGetNum("new_battle_config", "k3")
    local k15 = LuaEntry.DataConfig:TryGetNum("new_battle_config", "k15")
    local k16 = LuaEntry.DataConfig:TryGetNum("new_battle_config", "k16")
    local k18 = LuaEntry.DataConfig:TryGetNum("new_battle_config", "k18")
    --Logger.Log("soldierTotalNum:"..soldierTotalNum.."k1:"..k1.."k2:"..k2.."soldierBasicAtk:"..soldierBasicAtk.."soldierBasicDef:"..soldierBasicDef.."soldierBasicHealth:"..soldierBasicHealth.."heroAtk:"..heroAtk.."heroDef:"..heroDef.."k3:"..k3.."campAtkAdd:"..campAtkAdd.."k15:"..k15.."k16:"..k16.."k18:"..k18)
    --Logger.Log("基础伤害："..Mathf.Pow((soldierTotalNum*k1),k2))
    --Logger.Log("兵攻击："..(soldierBasicAtk/soldierTotalNum))
    --Logger.Log("兵防守："..(soldierBasicDef/soldierTotalNum))
    --Logger.Log("兵血量："..(soldierBasicHealth/soldierTotalNum))
    --Logger.Log("英雄ATk："..Mathf.Pow((heroAtk),k3))
    --Logger.Log("英雄Def："..Mathf.Pow((heroDef),k3))
    --Logger.Log("阵营："..(1+(campAtkAdd/100)))
    --Logger.Log("总技能伤害"..(1+(sumSkillDamage/10)))
    local totalPower = (Mathf.Pow((soldierTotalNum*k1),k2)*(soldierBasicAtk/soldierTotalNum)*(soldierBasicDef/soldierTotalNum)*(soldierBasicHealth/soldierTotalNum)*Mathf.Pow((heroAtk),k3)*Mathf.Pow((heroDef),k3)*(1+(math.min(campAtkAdd,35)/100)))*(1+(sumSkillDamage/10))*soldierTotalNum/math.max(1,k15)
    local finalPower = Mathf.Pow(totalPower,k18)
    return finalPower, soldierBasicHealth
end

local function GetFormationPowerNew(heroes, soldiers, index, campAddParam, buffEffectDict)
    --士兵攻击力
    local soldierBasicAtk = 0
    --士兵防御力
    local soldierBasicDef= 0
    --士兵血量
    local soldierBasicHealth = 0
    --英雄总攻击
    local heroAtk = 0
    --英雄总防御
    local heroDef = 0
    --兵数
    local soldierTotalNum =0
    --阵营加成
    local campAtkAdd =  0
    --所有英雄第一个技能伤害值总和
    local sumSkillDamage = 0
    if campAddParam~=nil then
        campAtkAdd = campAddParam
    end
    local str = LuaEntry.DataConfig:TryGetStr("battle_config", "k28") or ""
    local spls = string.split(str, ";")
    if heroes~=nil then
        for k,v in pairs(heroes) do
            local heroData = DataCenter.HeroDataManager:GetHeroByUuid(k) or DataCenter.HeroDataManager:GetHeroByUuid(k)
            heroAtk  = heroAtk + heroData.atk
            heroDef = heroDef + heroData.def
            local rarity = heroData.rarity
            if #spls>= rarity then
                local showSkillId = tonumber(spls[rarity])
                if showSkillId~=nil then
                    local firstSkillId = HeroUtils.GetHeroFirstSkillId(heroData.heroId, heroData:GetCurMilitaryRankId())
                    local skillLv = heroData:GetSkillLevel(firstSkillId)
                    local damage = HeroUtils.GetHeroSkillDamage(showSkillId,skillLv)
                    --Logger.Log("heroId: " .. heroData.heroId .. ", firstSkillId: " .. firstSkillId .. ", damage: " .. damage)
                    sumSkillDamage = sumSkillDamage+damage
                end
            end
            
        end
    end
    
    local heroAtkValue = heroAtk/100
    local heroDefValue = heroDef/100
    if soldiers~=nil then
        local totalFormationAtkAdd = MarchUtil.GetEffectNumInFormation(heroes,EffectDefine.APS_BATTLE_TROOP_TOTAL_ATK_INCR_PERCENT, buffEffectDict)
        local totalFormationDefAdd = MarchUtil.GetEffectNumInFormation(heroes,EffectDefine.APS_BATTLE_TROOP_TOTAL_DEF_INCR_PERCENT, buffEffectDict)
        local formationAtkAddNum = MarchUtil.GetFormationAtkAddNumByFormationIndex(index)
        local formationDefAddNum = MarchUtil.GetFormationDefAddNumByFormationIndex(index)
        local baseAtkEffectNum = MarchUtil.GetEffectNumInFormation(heroes,GetTableData("effect",EffectCoupleType.BASE_ATTACK,"arm_all"), buffEffectDict)
        local baseDefEffectNum = MarchUtil.GetEffectNumInFormation(heroes,GetTableData("effect",EffectCoupleType.BASE_DEFEND,"arm_all"), buffEffectDict)
        local baseHealthEffectNum = MarchUtil.GetEffectNumInFormation(heroes,GetTableData("effect",EffectCoupleType.BASE_HEALTH_PERCENT,"arm_all"), buffEffectDict)
        for k,v in pairs(soldiers) do
            local template = DataCenter.ArmyTemplateManager:GetArmyTemplate(k)
            if template ~= nil then
                local atk = template.attack
                local def = template.defence
                local health = template.health
                local typeStr = template:GetAddValueEffectName()
                local typeAtkEffectNum = MarchUtil.GetEffectNumInFormation(heroes,GetTableData("effect",EffectCoupleType.BASE_ATTACK,typeStr), buffEffectDict)
                local typeDefEffectNum = MarchUtil.GetEffectNumInFormation(heroes,GetTableData("effect",EffectCoupleType.BASE_DEFEND,typeStr), buffEffectDict)
                local typeHealthEffectNum = MarchUtil.GetEffectNumInFormation(heroes,GetTableData("effect",EffectCoupleType.BASE_HEALTH_PERCENT,typeStr), buffEffectDict)
                soldierBasicAtk = soldierBasicAtk + (atk*(0+((heroAtkValue+campAtkAdd+totalFormationAtkAdd+formationAtkAddNum+baseAtkEffectNum+typeAtkEffectNum)/100))*v)
                soldierBasicDef = soldierBasicDef + (def*(0+((heroDefValue+totalFormationDefAdd+formationDefAddNum+baseDefEffectNum+typeDefEffectNum)/100))*v)
                soldierBasicHealth = soldierBasicHealth + (health*(1+((baseHealthEffectNum+typeHealthEffectNum)/100))*v)
                soldierTotalNum = soldierTotalNum +v
            end
        end
        --Logger.Log("35073:--------"..totalFormationAtkAdd)
        --Logger.Log("40036:--------"..formationAtkAddNum)
        --Logger.Log("35000:--------"..baseAtkEffectNum)
        --Logger.Log("35012:--------"..baseHealthEffectNum)
    end
    if soldierTotalNum<=0 then
        return 0, 0
    end
    local k10 = LuaEntry.DataConfig:TryGetNum("battle_config", "k10")
    local k25 = LuaEntry.DataConfig:TryGetNum("battle_config", "k25")
    local k26 = LuaEntry.DataConfig:TryGetNum("battle_config", "k26")
    local k27 = LuaEntry.DataConfig:TryGetNum("battle_config", "k27")
    local normalAttackDamage = tonumber(GetTableData(TableName.SkillTab, 100000, "damage")) -- 普攻伤害
    local skillDamageResult = k10 + normalAttackDamage / 100 + (sumSkillDamage / 10)
    --Logger.Log("normalAttackDamage:"..soldierTotalNum)
    --Logger.Log("sumSkillDamage:"..sumSkillDamage)
    --Logger.Log("soldierTotalNum:"..soldierTotalNum)
    --Logger.Log("基础伤害："..Mathf.Pow(soldierTotalNum,k25))
    --Logger.Log("兵攻击："..(soldierBasicAtk/soldierTotalNum))
    --Logger.Log("兵防守："..(soldierBasicDef/soldierTotalNum))
    --Logger.Log("兵血量："..(soldierBasicHealth/soldierTotalNum))
    --Logger.Log("英雄ATk："..heroAtk)
    --Logger.Log("英雄Def："..heroDef)
    --Logger.Log("阵营："..(1+(campAtkAdd/100)))
    --Logger.Log("总技能伤害:"..skillDamageResult)
    --Logger.Log("k25:"..k25)
    --Logger.Log("k26:"..k26)
    --Logger.Log("k27:"..k27)
    --Logger.Log("k28:"..str)
    local totalPower = (Mathf.Pow(soldierTotalNum,k25))*(soldierBasicAtk/soldierTotalNum)*(soldierBasicDef/soldierTotalNum)*(soldierBasicHealth/soldierTotalNum)*skillDamageResult*soldierTotalNum
    --Logger.Log("totalPower",totalPower)
    local finalPower = Mathf.Pow(totalPower,k26)*k27
    return finalPower, soldierBasicHealth
end

local function GetEffectNumInFormation(heroes,effectId,buffEffectDict)
    if effectId~=nil then
        local baseEffectNum = 0
        baseEffectNum = baseEffectNum + LuaEntry.Effect:GetGameEffect(effectId)
        if heroes~=nil then
            table.walk(heroes,function(k,v)
                local heroData = DataCenter.HeroDataManager:GetHeroByUuid(k)
                if heroData~=nil then
                    local heroBaseNum = heroData:GetEffectNum(effectId)
                    baseEffectNum = baseEffectNum + heroBaseNum
                end
            end)
        end
        if buffEffectDict ~= nil and buffEffectDict[effectId] ~= nil then
            baseEffectNum = baseEffectNum + buffEffectDict[effectId]
        end
        return baseEffectNum
    else
        return 0
    end
end

local function GetMarchStateIconByType(marchInfo)
    local strImg = "Assets/Main/Sprites/UI/Common/New/Common_icon_march_station"
    if marchInfo ~= nil then
        if marchInfo:GetMarchType() == NewMarchType.SCOUT then
            if marchInfo:GetMarchTargetType() == MarchTargetType.SCOUT_CITY or marchInfo:GetMarchTargetType() == MarchTargetType.SCOUT_BUILDING or marchInfo:GetMarchTargetType() == MarchTargetType.SCOUT_ALLIANCE_BUILDING
                    or marchInfo:GetMarchTargetType() == MarchTargetType.SCOUT_ARMY_COLLECT or marchInfo:GetMarchTargetType() == MarchTargetType.Scout_TROOP
                    or marchInfo:GetMarchTargetType() == MarchTargetType.RESOURCE_HELP then
                strImg = "Assets/Main/Sprites/UI/Common/New/Common_icon_march_scout"
            else
                strImg = "Assets/Main/Sprites/UI/Common/New/Common_icon_march_return"
            end
        else
            local currentStatus = marchInfo:GetMarchStatus()
            if marchInfo.inBattle==true then
                strImg ="Assets/Main/Sprites/UI/Common/New/Common_icon_march_battle"
            elseif marchInfo:GetIsBroken() == true then
                strImg = "Assets/Main/Sprites/UI/Common/New/Common_icon_march_fail"
            elseif marchInfo:GetMarchTargetType() == MarchTargetType.BACK_HOME then
                strImg = "Assets/Main/Sprites/UI/Common/New/Common_icon_march_return"
            elseif currentStatus == MarchStatus.DESTROY_WAIT then
                strImg ="Assets/Main/Sprites/UI/Common/New/Common_icon_march_battle"
            elseif currentStatus == MarchStatus.CHASING then
                strImg ="Assets/Main/Sprites/UI/Common/New/Common_icon_march_move"
            elseif currentStatus == MarchStatus.MOVING then
                strImg ="Assets/Main/Sprites/UI/Common/New/Common_icon_march_move"
            elseif currentStatus == MarchStatus.CROSS_SERVER or currentStatus == MarchStatus.IN_WORM_HOLE then
                strImg ="Assets/Main/Sprites/UI/Common/New/Common_icon_march_move"
            elseif currentStatus == MarchStatus.WAIT_RALLY then
                strImg ="Assets/Main/Sprites/UI/Common/New/Common_icon_march_assistance"
            elseif currentStatus ==MarchStatus.COLLECTING or currentStatus == MarchStatus.COLLECTING_ASSISTANCE then
                strImg ="Assets/Main/Sprites/UI/Common/New/Common_icon_march_collect"
            elseif currentStatus == MarchStatus.BACK_HOME  then
                strImg ="Assets/Main/Sprites/UI/Common/New/Common_icon_march_return"
            elseif currentStatus == MarchStatus.ASSISTANCE then
                strImg ="Assets/Main/Sprites/UI/Common/New/Common_icon_march_assistance"
            elseif currentStatus == MarchStatus.CROSS_SERVER then
                strImg ="Assets/Main/Sprites/UI/Common/New/Common_icon_march_transfer"
            elseif currentStatus == MarchStatus.SAMPLING or currentStatus == MarchStatus.PICKING then
                strImg ="Assets/Main/Sprites/UI/Common/New/Common_icon_march_dig"
            elseif currentStatus == MarchStatus.BUILD_ALLIANCE_BUILDING then
                strImg ="Assets/Main/Sprites/UI/Common/New/Common_icon_march_dig"
            elseif currentStatus == MarchStatus.BUILD_WORM_HOLE then
                strImg = "Assets/Main/Sprites/UI/Common/New/Common_icon_march_build"
            else
                strImg ="Assets/Main/Sprites/UI/Common/New/Common_icon_march_station"
            end
        end
    end
    return strImg
end

local function SendCreateMarchMessage(formationUuid,targetType,targetPoint,targetUuid,timeIndex,autoBackHome,needSoldier,targetServerId, destroyTimeIndex,chooseWormUuid)
    local hasHero = false
    local hasSolider = false
    local curSoldiers ={}
    local curHeroes = {}
    local pos = MarchUtil.GetFormationStartPos()
    local targetServer = LuaEntry.Player:GetCurServerId()
    if targetServerId~=nil then
        targetServer = targetServerId
    end
    local formation = DataCenter.ArmyFormationDataManager:GetOneArmyInfoByUuid(formationUuid)
    if formation~=nil then
        curSoldiers = formation.soldiers
        curHeroes =  formation:GetCurHeroes()
        if needSoldier ~=nil and needSoldier == false then
            curSoldiers = {}
        end
        local tempFormationTable = ArmyFormationInfo.New()
        tempFormationTable.uuid = formation.uuid
        tempFormationTable.index = formation.index
        tempFormationTable.soldiers = curSoldiers
        tempFormationTable.ownerUid = LuaEntry.Player.uid
        tempFormationTable.heroes = curHeroes

        table.walk(curSoldiers,function(k,v)
            if v>0 then
                hasSolider = true
            end
        end)
        table.walk(curHeroes,function(k,v)
            if k~=0 then
                hasHero = true
            end
        end)
        if hasHero and (hasSolider or (needSoldier ~=nil and needSoldier == false)) then
            if targetType ~= MarchTargetType.COLLECT and targetType~= MarchTargetType.BUILD_ALLIANCE_BUILDING and targetType~= MarchTargetType.COLLECT_ALLIANCE_BUILD_RESOURCE and targetType~= MarchTargetType.ASSISTANCE_COLLECT_ACT_ALLIANCE_MINE then
                DataCenter.ArmyFormationDataManager:RefreshFormationModelToJson(tempFormationTable)
            end
            local sfsObj = SFSObject.New()
            sfsObj:PutLong("uuid", formationUuid)
            local formationArray = SFSArray.New()
            table.walk(curSoldiers,function (k,v)
                local obj = SFSObject.New()
                obj:PutUtfString("armyId",k)
                obj:PutInt("count", v)
                formationArray:AddSFSObject(obj)
            end)

            sfsObj:PutSFSArray("formations", formationArray)

            local heroArray = SFSArray.New()
            table.walk(curHeroes,function (k,v)
                local obj = SFSObject.New()
                obj:PutLong("heroUuid",k)
                obj:PutInt("index", v)
                heroArray:AddSFSObject(obj)
            end)
            sfsObj:PutSFSArray("heroInfos", heroArray)
            --local dataObj = sfsObj:ToBinary()
            if targetType == MarchTargetType.ATTACK_MONSTER then
                local heroUuid = 0
                local heroName = ""
                local heroNameList = {}
                local isReachBreakLimit = false
                local isReachLevelLimit = false
                local show =  Setting:GetPrivateInt("UIShowHeroWarning",0)
                --if show<=0 then
                --    if formation ~=nil and formation:GetCurHeroes()~=nil then
                --        table.walk(formation:GetCurHeroes(),function(k,v)
                --            local heroData = DataCenter.HeroDataManager:GetHeroByUuid(k)
                --            if heroData~=nil then
                --                if heroUuid==0 and isReachBreakLimit == false and isReachLevelLimit == false  then
                --                    if heroData:IsReachBreakLimit() == true then
                --                        isReachBreakLimit = true
                --                        heroUuid = k
                --                    elseif heroData:IsReachLevelLimit() == true then
                --                        isReachLevelLimit = true
                --                        heroUuid = k
                --                    end
                --                end
                --                if heroData:IsReachBreakLimit() == true or heroData:IsReachLevelLimit() == true then
                --                    table.insert(heroNameList,heroData:GetName())
                --                end
                --            end
                --
                --        end)
                --    end
                --end

                if heroUuid~=0 and (isReachBreakLimit == true or isReachLevelLimit == true) then
                    local total = #heroNameList
                    local num = 0
                    table.walk(heroNameList,function(k,v)
                        num = num+1
                        if num<total then
                            heroName = heroName.."<color=#ff0000>"..v.."</color>"..","
                        else
                            heroName = heroName.."<color=#ff0000>"..v.."</color>"
                        end
                    end)
                    local content = Localization:GetString("161022",heroName)
                    UIUtil.ShowSecondMessage(Localization:GetString("100378"),content, 2, "161030", "161023",function()
                        MarchUtil.StartMarch(targetType, targetPoint, targetUuid, timeIndex, 0, formationUuid, autoBackHome,sfsObj,pos,targetServer, destroyTimeIndex,chooseWormUuid)
                    end,function(needSellConfirm)
                        if needSellConfirm== false then
                            Setting:SetPrivateInt("UIShowHeroWarning",1)
                        else
                            Setting:SetPrivateInt("UIShowHeroWarning",0)
                        end
                    end, function()
                        if isReachBreakLimit == true then
                            local heroList = {}
                            table.insert(heroList,heroUuid)
                            UIManager:GetInstance():OpenWindow(UIWindowNames.UIHeroInfo, 1, heroUuid, heroList)
                        elseif isReachLevelLimit == true then
                            UIManager:GetInstance():OpenWindow(UIWindowNames.UIHeroAdvance)
                        end
                    end)
                else
                    MarchUtil.StartMarch(targetType, targetPoint, targetUuid, timeIndex, 0, formationUuid, autoBackHome,sfsObj,pos,targetServer, destroyTimeIndex,chooseWormUuid)
                end
            else
                MarchUtil.StartMarch(targetType, targetPoint, targetUuid, timeIndex, 0, formationUuid, autoBackHome,sfsObj,pos,targetServer, destroyTimeIndex,chooseWormUuid)
            end

        else
            UIUtil.ShowTipsId(GameDialogDefine.ADD_SOLDIER)
        end
    end
end

local function StartMarch(targetType, targetPoint, targetUuid, timeIndex,mUuid,fUuid,autoBackHome,dataObj,pos,targetServer,desTimeIndex,chooseWormUuid)

    local formationUuid = fUuid or 0
    local marchUuid = mUuid or 0
    local backHome = autoBackHome or 1
    local startPos = pos or 0
    local targetServerId = targetServer or LuaEntry.Player:GetCurServerId()
    local destroyTimeIndex = desTimeIndex or -1
    local wormUuid = chooseWormUuid or -1
    if targetType == MarchTargetType.COLLECT then
        EventManager:GetInstance():Broadcast(EventId.UIMAIN_VISIBLE, true)
        GoToUtil.GotoWorldPos(CS.SceneManager.World.CurTarget, CS.SceneManager.World.InitZoom, LookAtFocusTime,nil,LuaEntry.Player:GetCurServerId(),LuaEntry.Player:GetCurWorldId())
    end
    if formationUuid~=0 then
        if targetType == MarchTargetType.ATTACK_CITY or targetType == MarchTargetType.DIRECT_ATTACK_CITY then
            targetType = MarchUtil.GetAttackCityTargetType(formationUuid, targetType)
        end
        local march = DataCenter.WorldMarchDataManager:GetOwnerFormationMarch(LuaEntry.Player.uid, formationUuid, LuaEntry.Player.allianceId)
        if march~=nil then
            MarchUtil.SendChangeMarchToServer(march.uuid,targetType,targetPoint,targetUuid,(backHome ==1),targetServerId,destroyTimeIndex)
        else
            MarchUtil.SendCreateMarchToServer(formationUuid, targetType, targetPoint, targetUuid, timeIndex,dataObj,startPos,(backHome==1),targetServerId,destroyTimeIndex,wormUuid)
        end
    elseif marchUuid~=0 then
        local march = DataCenter.WorldMarchDataManager:GetMarch(marchUuid)
        if targetType == MarchTargetType.ATTACK_CITY or targetType == MarchTargetType.DIRECT_ATTACK_CITY then
            targetType = MarchUtil.GetAttackCityTargetType(march.ownerFormationUuid, targetType)
        end
        MarchUtil.SendChangeMarchToServer(marchUuid, targetType, targetPoint, targetUuid,(backHome==1),targetServerId,destroyTimeIndex)
    end
end

local function SendCreateMarchToServer(formationUuid,targetType,targetPoint,targetUuid,timeIndex,formationData,startPos,backHome,targetServerId,destroyTimeIndex,wormUuid)
    local posStart = startPos
    if startPos<=0 then
        posStart = MarchUtil.GetFormationStartPos()
    end
    local useWormHole = false
    local wormHoleUuid = -1
    if wormUuid~=nil and wormUuid ~=-1 then
        useWormHole = true
        wormHoleUuid = wormUuid
    else
        if (targetServerId == nil or targetServerId == -1 or targetServerId == LuaEntry.Player:GetSelfServerId()) then
            local realStartPointId,buildUuid = MarchUtil.GetNeedGotoWormHolePointId(targetType,posStart,targetPoint)
            if realStartPointId>0 and buildUuid>0 then
                useWormHole = true
                wormHoleUuid = buildUuid
                posStart = realStartPointId
            end
        end
    end
    
    

    local posStartV2 = SceneUtils.IndexToTilePos(posStart, ForceChangeScene.World)
    local endPos = SceneUtils.IndexToTilePos(targetPoint, ForceChangeScene.World)
    if targetType == MarchTargetType.ATTACK_ARMY or targetType == MarchTargetType.ATTACK_MONSTER or targetType == MarchTargetType.ATTACK_BUILDING or targetType == MarchTargetType.ATTACK_ALLIANCE_BUILDING
            or targetType == MarchTargetType.EXPLORE or targetType == MarchTargetType.SAMPLE or targetType == MarchTargetType.PICK_GARBAGE then
        endPos = MarchUtil.GetAttackPos(posStartV2, endPos, 3)
    elseif targetType == MarchTargetType.RALLY_FOR_BOSS then
        endPos = MarchUtil.GetAttackPos(posStartV2, endPos, 3)
    elseif targetType == MarchTargetType.ASSISTANCE_CITY or targetType == MarchTargetType.ASSISTANCE_COLLECT_ACT_ALLIANCE_MINE then
        local tempEnd = {}
        tempEnd.x = endPos.x-1
        tempEnd.y = endPos.y-1
        endPos = tempEnd
    elseif targetType == MarchTargetType.TAKE_SECRET_KEY then
        local tempEnd = {}
        tempEnd.x = endPos.x-2
        tempEnd.y = endPos.y-2
        endPos = tempEnd
    end
    local startPointId = SceneUtils.TilePosToIndex(posStartV2, ForceChangeScene.World)
    local endPointId = SceneUtils.TilePosToIndex(endPos, ForceChangeScene.World)
    if endPointId == nil or endPointId ~= endPointId  then
        local errorStr = "startPos:"..startPointId.."endPos:"..targetPoint.."targetType:"..targetType.."formationUuid:"..formationUuid.."WorldTileCount:"..WorldTileCount
        local now = UITimeManager:GetInstance():GetServerSeconds()
        local errorMsgStr = "MarchChange Path Error:"..errorStr
        CommonUtil.SendErrorMessageToServer(now, now, errorMsgStr)
        return
    end
    local path = startPointId..";"..endPointId

    SFSNetwork.SendMessage(MsgDefines.WorldMarchFormationNew,formationUuid,targetType,targetUuid,path,LuaEntry.Player:GetCurWorldId(),timeIndex,backHome,formationData,targetServerId,destroyTimeIndex,useWormHole,wormHoleUuid)
end

local function SendChangeMarchToServer(marchUuid,targetType,targetPoint,targetUuid,backHome,targetServerId,destroyTimeIndex)
    local marchInfo = DataCenter.WorldMarchDataManager:GetMarch(marchUuid)
    if marchInfo==nil then
        return
    end
    if marchInfo.secretKey~=nil and marchInfo.secretKey>0 then
        if targetType == MarchTargetType.PICK_SECRET_KEY or targetType == MarchTargetType.TAKE_SECRET_KEY then
            UIUtil.ShowTipsId(376168)
            return
        end
    end
    local posStart = 0
    local status = marchInfo:GetMarchStatus()
    if status == MarchStatus.COLLECTING or status == MarchStatus.ASSISTANCE then
        posStart = marchInfo.targetPos
        if status == MarchStatus.COLLECTING then
        end
    else
        posStart = SceneUtils.WorldToTileIndex(marchInfo:GetMarchCurPos(),ForceChangeScene.World)
    end
    local startPos = SceneUtils.IndexToTilePos(posStart,ForceChangeScene.World)
    local endPos = SceneUtils.IndexToTilePos(targetPoint,ForceChangeScene.World)
    if targetType == MarchTargetType.ATTACK_ARMY or targetType == MarchTargetType.ATTACK_MONSTER or targetType == MarchTargetType.ATTACK_BUILDING or targetType == MarchTargetType.ATTACK_ALLIANCE_BUILDING
            or targetType == MarchTargetType.EXPLORE or targetType == MarchTargetType.SAMPLE or targetType == MarchTargetType.PICK_GARBAGE then
        endPos = MarchUtil.GetAttackPos(startPos, endPos, 3)
    elseif targetType == MarchTargetType.RALLY_FOR_BOSS then
        endPos = MarchUtil.GetAttackPos(startPos, endPos, 3)
    elseif targetType == MarchTargetType.ATTACK_ALLIANCE_CITY or targetType == MarchTargetType.RALLY_FOR_ALLIANCE_CITY or targetType == MarchTargetType.RALLY_THRONE or targetType == MarchTargetType.RALLY_ASSISTANCE_THRONE then
        local tempEnd = {}
        tempEnd.x = endPos.x-3
        tempEnd.y = endPos.y-3
        endPos = MarchUtil.GetAttackPos(startPos, tempEnd, 5)
    elseif targetType == MarchTargetType.ASSISTANCE_CITY or targetType == MarchTargetType.ASSISTANCE_COLLECT_ACT_ALLIANCE_MINE then
        local tempEnd = {}
        tempEnd.x = endPos.x-1
        tempEnd.y = endPos.y-1
        endPos = tempEnd
    elseif targetType == MarchTargetType.TAKE_SECRET_KEY then
        local tempEnd = {}
        tempEnd.x = endPos.x-2
        tempEnd.y = endPos.y-2
        endPos = tempEnd
    end
    local startPointId = SceneUtils.TilePosToIndex(startPos,ForceChangeScene.World)
    local endPointId = SceneUtils.TilePosToIndex(endPos,ForceChangeScene.World)
    if endPointId == nil or endPointId ~= endPointId  then
        local errorStr = "startPos:"..startPointId.."endPos:"..targetPoint.."targetType:"..targetType.."marchUuid:"..marchUuid.."WorldTileCount:"..WorldTileCount
        local now = UITimeManager:GetInstance():GetServerSeconds()
        local errorMsgStr = "MarchChange Path Error:"..errorStr
        CommonUtil.SendErrorMessageToServer(now, now, errorMsgStr)
        return
    end
    local path = startPointId..";"..endPointId
    SFSNetwork.SendMessage(MsgDefines.WorldMarchChange,marchUuid,targetType,targetUuid,path,LuaEntry.Player:GetCurWorldId(),backHome,targetServerId,destroyTimeIndex)
end


local function GetAttackPos(startPos,endPos,attackOffsetRange)
    local v2 = {}
    v2.x = endPos.x
    v2.y = endPos.y
    local dist = SceneUtils.TileDistance(startPos,endPos)
    if dist>0 then
        local percent = 1-(attackOffsetRange/dist);
        if percent>0 then
            v2.x = math.floor((endPos.x - startPos.x) * percent + startPos.x+0.5)
            v2.y = math.floor((endPos.y - startPos.y) * percent + startPos.y+0.5)
        end
    end

    return v2
end

local function GetCostStaminaByTargetType(type,rallyType,formationUuid, destroyTimes,isEmptyDesert)
    local cost = 0
    local add = LuaEntry.Effect:GetGameEffect(EffectDefine.STAMINA_COST_ADD)
    if type == MarchTargetType.RALLY_FOR_CITY or type == MarchTargetType.ATTACK_CITY or type == MarchTargetType.DIRECT_ATTACK_CITY then
        cost = LuaEntry.DataConfig:TryGetNum("car_action_stamina", "k1")
        local b1 = LuaEntry.Effect:GetGameEffect(EffectDefine.GAME_EFFECT_30275)
        local b2 = LuaEntry.Effect:GetGameEffect(EffectDefine.GAME_EFFECT_30273)
        local b3 = LuaEntry.Effect:GetGameEffect(EffectDefine.GAME_EFFECT_30274)
        cost = math.floor(cost*(1+(b1/100))-b2+b3+0.5)
    elseif type == MarchTargetType.RALLY_FOR_BUILDING or type == MarchTargetType.ATTACK_BUILDING then
        cost = LuaEntry.DataConfig:TryGetNum("car_action_stamina", "k2")
    elseif type == MarchTargetType.ATTACK_ALLIANCE_BUILDING or type == MarchTargetType.RALLY_ALLIANCE_BUILDING or type == MarchTargetType.RALLY_FOR_ACT_ALLIANCE_MINE or type == MarchTargetType.ATTACK_ACT_ALLIANCE_MINE then
        cost = LuaEntry.DataConfig:TryGetNum("car_action_stamina", "k14")
    elseif type == MarchTargetType.RALLY_FOR_ALLIANCE_CITY or type == MarchTargetType.RALLY_THRONE then
        cost = LuaEntry.DataConfig:TryGetNum("car_action_stamina", "k6")
    elseif type == MarchTargetType.ATTACK_MONSTER or type == MarchTargetType.DIRECT_ATTACK_ACT_BOSS then
        local effect = LuaEntry.Effect:GetGameEffect(EffectDefine.STAMINA_COST_DEC)
        local base = LuaEntry.DataConfig:TryGetNum("car_action_stamina", "k4")
        if type == MarchTargetType.ATTACK_MONSTER then
            base = math.floor(base*(1+(add/100))+0.5)
        end
        local effect2 = 0
        if formationUuid~=nil and formationUuid~=0 and type == MarchTargetType.ATTACK_MONSTER then
            local march = DataCenter.WorldMarchDataManager:GetOwnerFormationMarch(LuaEntry.Player.uid, formationUuid, LuaEntry.Player.allianceId)
            if march~=nil then
                if march.HasFightMonster~=nil then
                    local hasBuff = march:HasFightMonster()
                    if hasBuff then
                        effect2 = LuaEntry.Effect:GetGameEffect(EffectDefine.GAME_EFFECT_30224)
                    end
                end
            end
        end
        local realNum = math.floor(base*(1-(effect+effect2/100))+0.5)
        cost = realNum
    elseif type ==MarchTargetType.RALLY_FOR_BOSS then
        cost = math.floor(LuaEntry.DataConfig:TryGetNum("car_action_stamina", "k5")*(1+(add/100))+0.5)
    elseif type == MarchTargetType.TRAIN_DESERT then
        local perCost = math.floor(LuaEntry.DataConfig:TryGetNum("car_action_stamina", "k12")*(1+(add/100))+0.5)
        if isEmptyDesert then
            perCost = math.floor(LuaEntry.DataConfig:TryGetNum("car_action_stamina", "k15")*(1+(add/100))+0.5)
        end
        if destroyTimes then
            if destroyTimes <= 1000 then
                cost = perCost * destroyTimes
            else
                cost = -1
            end
        else
            cost = perCost
        end
    elseif type== MarchTargetType.EXPLORE then
        cost = LuaEntry.DataConfig:TryGetNum("car_action_stamina", "k7")
    elseif type== MarchTargetType.ATTACK_DESERT then
        if isEmptyDesert then
            cost = math.floor(LuaEntry.DataConfig:TryGetNum("car_action_stamina", "k13")*(1+(add/100))+0.5)
        else
            cost = math.floor(LuaEntry.DataConfig:TryGetNum("car_action_stamina", "k11")*(1+(add/100))+0.5)
        end
        
    elseif type== MarchTargetType.ATTACK_ALLIANCE_CITY then
        local perCost = LuaEntry.DataConfig:TryGetNum("car_action_stamina", "k6")
        if destroyTimes then
            if destroyTimes <= 1000 then
                cost = perCost * destroyTimes
            else
                cost = -1
            end
        else
            cost = perCost
        end
    elseif rallyType~=nil  and type == MarchTargetType.JOIN_RALLY and (rallyType == MarchTargetType.RALLY_FOR_CITY) then
        cost = LuaEntry.DataConfig:TryGetNum("car_action_stamina", "k1")
        local b1 = LuaEntry.Effect:GetGameEffect(EffectDefine.GAME_EFFECT_30275)
        local b2 = LuaEntry.Effect:GetGameEffect(EffectDefine.GAME_EFFECT_30273)
        local b3 = LuaEntry.Effect:GetGameEffect(EffectDefine.GAME_EFFECT_30274)
        cost = math.floor(cost*(1+(b1/100))-b2+b3+0.5)
    elseif rallyType~=nil  and type == MarchTargetType.JOIN_RALLY and ( rallyType == MarchTargetType.RALLY_FOR_BUILDING )then
        cost = LuaEntry.DataConfig:TryGetNum("car_action_stamina", "k2")
    elseif rallyType ~= nil and type == MarchTargetType.JOIN_RALLY and (rallyType == MarchTargetType.RALLY_ALLIANCE_BUILDING or rallyType == MarchTargetType.RALLY_FOR_ACT_ALLIANCE_MINE) then
        cost = LuaEntry.DataConfig:TryGetNum("car_action_stamina", "k14")
    elseif rallyType~=nil  and type == MarchTargetType.JOIN_RALLY and  (rallyType == MarchTargetType.RALLY_FOR_ALLIANCE_CITY or rallyType == MarchTargetType.RALLY_THRONE)  then
        cost = LuaEntry.DataConfig:TryGetNum("car_action_stamina", "k6")

    elseif type== MarchTargetType.ATTACK_ALLIANCE_BOSS then
        cost = LuaEntry.DataConfig:TryGetNum("car_action_stamina", "k2")
    end
    if type == MarchTargetType.ATTACK_MONSTER or
            type == MarchTargetType.RALLY_FOR_BOSS or
            type == MarchTargetType.ATTACK_DESERT or
            type == MarchTargetType.TRAIN_DESERT
    then
        local formation = DataCenter.ArmyFormationDataManager:GetOneArmyInfoByUuid(formationUuid)
        if formation then
            local totalSub = 0
            local sub = toInt(MarchUtil.GetEffectNumInFormation(formation:GetCurHeroes(), EffectDefine.DECREASE_ENERGY_COST))
            totalSub = sub
            if destroyTimes then
                if destroyTimes <= 1000 then
                    totalSub = sub * destroyTimes
                end
            end
            cost = cost - totalSub
        end
    end

    -- 每周BUFF
    if (type == MarchTargetType.ATTACK_DESERT or type == MarchTargetType.TRAIN_DESERT) and isEmptyDesert ==false then
        local totalSub = 0
        local sub = toInt(LuaEntry.Effect:GetGameEffect(EffectDefine.ATTACK_DESERT_STAMINA_DECREASE))
        totalSub = sub
        if destroyTimes then
            if destroyTimes <= 1000 then
                totalSub = sub*destroyTimes
            end
        end
        cost = cost - totalSub
    end

    -- 宣战准备期消耗双倍体力
    if LuaEntry.Player:IsInAlliance()
            and CrossServerUtil:GetIsCrossServer()
            and (type == MarchTargetType.ASSISTANCE_ALLIANCE_BUILDING or type == MarchTargetType.RALLY_ALLIANCE_BUILDING or type == MarchTargetType.ATTACK_BUILDING or type == MarchTargetType.RALLY_FOR_BUILDING)
            and not CrossServerUtil.GetIsInCrossServerFight()
    then
        local period = DataCenter.GloryManager:GetPeriod()
        if period == GloryPeriod.Prepare then
            local rate = LuaEntry.DataConfig:TryGetNum("crossServerFight", "k6")
            cost = cost * rate
        end
    end
    if type ==MarchTargetType.RALLY_FOR_BOSS then
        local value = LuaEntry.Effect:GetGameEffect(EffectDefine.RALLY_FOR_BOSS_ADD)
        cost = cost * (1 + math.floor(value))
    end
    return math.max(cost, 0)
end

local function GetCanAddHeroNum(curHeroList,formationIndex)
    local canAddNum = 0
    local maxNum = MarchUtil.GetMaxHeroValueByFormationIndex(formationIndex)
    local curHeroNum = table.count(curHeroList)
    if curHeroNum<maxNum then
        local allHeroes = DataCenter.HeroDataManager:GetAllHeroBySort()
        for k,v in pairs(allHeroes) do
            if curHeroList[v.uuid]==nil and v.state == ArmyFormationState.Free then
                canAddNum = canAddNum+1
                return canAddNum
            end
        end
    end
    return canAddNum
end

local function GetFormationCollectSpeedAdd(heroList,resourceType, formationIndex)
    local value = 0
    local value2 = 0
    if resourceType == ResourceType.Oil then
        value = LuaEntry.Effect:GetGameEffect(EffectDefine.GAS_COLLECT_SPEED_PERCENT)
        table.walk(heroList,function(k,v)
            local heroData = DataCenter.HeroDataManager:GetHeroByUuid(k)
            if heroData~=nil then
                value = value + heroData:GetEffectNum(EffectDefine.GAS_COLLECT_SPEED_PERCENT)
            end
        end)
        value = value + DataCenter.EquipmentDataManager:GetEffectValue(formationIndex, EffectDefine.GAS_COLLECT_SPEED_PERCENT)
    elseif resourceType == ResourceType.Water then
        value = LuaEntry.Effect:GetGameEffect(EffectDefine.WATER_COLLECT_SPEED_PERCENT)
        table.walk(heroList,function(k,v)
            local heroData = DataCenter.HeroDataManager:GetHeroByUuid(k)
            if heroData~=nil then
                value = value + heroData:GetEffectNum(EffectDefine.WATER_COLLECT_SPEED_PERCENT)
            end
        end)
        value = value + DataCenter.EquipmentDataManager:GetEffectValue(formationIndex, EffectDefine.WATER_COLLECT_SPEED_PERCENT)
    elseif resourceType == ResourceType.Metal then
        value = LuaEntry.Effect:GetGameEffect(EffectDefine.CRYSTAL_COLLECT_SPEED_PERCENT)
        table.walk(heroList,function(k,v)
            local heroData = DataCenter.HeroDataManager:GetHeroByUuid(k)
            if heroData~=nil then
                value = value + heroData:GetEffectNum(EffectDefine.CRYSTAL_COLLECT_SPEED_PERCENT)
            end
        end)
        value = value + DataCenter.EquipmentDataManager:GetEffectValue(formationIndex, EffectDefine.CRYSTAL_COLLECT_SPEED_PERCENT)
    elseif resourceType == ResourceType.Money then
        value = LuaEntry.Effect:GetGameEffect(EffectDefine.MONEY_COLLECT_SPEED_PERCENT)
        table.walk(heroList,function(k,v)
            local heroData = DataCenter.HeroDataManager:GetHeroByUuid(k)
            if heroData~=nil then
                value = value + heroData:GetEffectNum(EffectDefine.MONEY_COLLECT_SPEED_PERCENT)
            end
        end)
        value = value + DataCenter.EquipmentDataManager:GetEffectValue(formationIndex, EffectDefine.MONEY_COLLECT_SPEED_PERCENT)
    elseif resourceType == ResourceType.Electricity then
        value = LuaEntry.Effect:GetGameEffect(EffectDefine.ELECTRICITY_COLLECT_SPEED_PERCENT)
        value2 = LuaEntry.Effect:GetGameEffect(EffectDefine.ELECTRICITY_COLLECT_SPEED_PERCENT_2)
        table.walk(heroList,function(k,v)
            local heroData = DataCenter.HeroDataManager:GetHeroByUuid(k)
            if heroData~=nil then
                value = value + heroData:GetEffectNum(EffectDefine.ELECTRICITY_COLLECT_SPEED_PERCENT)
                value2 = value2 + heroData:GetEffectNum(EffectDefine.ELECTRICITY_COLLECT_SPEED_PERCENT_2)
            end
        end)
        value = value + DataCenter.EquipmentDataManager:GetEffectValue(formationIndex, EffectDefine.ELECTRICITY_COLLECT_SPEED_PERCENT)
        value2 = value2 + DataCenter.EquipmentDataManager:GetEffectValue(formationIndex, EffectDefine.ELECTRICITY_COLLECT_SPEED_PERCENT_2)
    elseif resourceType == ResourceType.Gold then
        value = LuaEntry.Effect:GetGameEffect(EffectDefine.PURPLE_CRYSTAL_COLLECT_SPEED_PERCENT)
        table.walk(heroList,function(k,v)
            local heroData = DataCenter.HeroDataManager:GetHeroByUuid(k)
            if heroData~=nil then
                value = value + heroData:GetEffectNum(EffectDefine.PURPLE_CRYSTAL_COLLECT_SPEED_PERCENT)
            end
        end)
        value = value + DataCenter.EquipmentDataManager:GetEffectValue(formationIndex, EffectDefine.PURPLE_CRYSTAL_COLLECT_SPEED_PERCENT)
    end

    local extraAdd = LuaEntry.Effect:GetGameEffect(EffectDefine.THRONE_EFFECT_35127)
    value = value+extraAdd
    return value,value2
end

local function GetFormationStartPos(self)
    local startPos = LuaEntry.Player:GetMainWorldPos()
    local curServerId = LuaEntry.Player:GetCurServerId()
    if CrossServerUtil:GetIsCrossServer() then
        local crossBuildData = DataCenter.BuildManager:GetFunbuildByItemID(BuildingTypes.WORM_HOLE_CROSS)
        if crossBuildData~=nil then
            if crossBuildData.server == curServerId then
                startPos = crossBuildData.pointId
            end
        end
    end
    return startPos
end

-- 根据编队判断攻击大本是否是奇袭，返回新的 MarchTargetType
local function GetAttackCityTargetType(formationUuid, targetType)
    local newTargetType = targetType
    if formationUuid ~= nil and formationUuid ~= 0 then
        local canDirect = DataCenter.FormStatusManager:CanDirectAttackCity(formationUuid)
        if (targetType == MarchTargetType.ATTACK_CITY or targetType == MarchTargetType.ATTACK_CITY) and canDirect then
            newTargetType = MarchTargetType.DIRECT_ATTACK_CITY
            Logger.Log(string.format("GetAttackCityTargetType formationUuid = %s, targetType = %s", formationUuid, newTargetType))
        elseif targetType == MarchTargetType.DIRECT_ATTACK_CITY and not canDirect then
            newTargetType = MarchTargetType.ATTACK_CITY
            Logger.Log(string.format("GetAttackCityTargetType formationUuid = %s, targetType = %s", formationUuid, newTargetType))
        end
    end
    return newTargetType
end

local function GetCurArmyWeight(plunderRes)
    local plunderRe = 0
    if plunderRes~=nil then
        local num =0
        local stringNum = string.split(plunderRes,";")
        if #stringNum>0 then
            for i =1 ,#stringNum do
                local item = stringNum[i]
                local arr = string.split(item,",")
                if #arr>0 then
                    local addNum = tonumber(arr[#arr])
                    if addNum~=nil then
                        local partNum = 0.001
                        local typeArr = string.split(arr[1],"|")
                        if #typeArr>0 then
                            local resourceType = tonumber(typeArr[1])
                            if resourceType~=nil then
                                if resourceType == ResourceType.AllianceDragonPoint then
                                    local basePartNum = LuaEntry.DataConfig:TryGetNum("dragon_war","k2")
                                    local minPartNum = LuaEntry.DataConfig:TryGetNum("dragon_war","k3")
                                    partNum = math.max(minPartNum,basePartNum)
                                else
                                    local strK = "k"..(resourceType+1)
                                    local basePartNum = LuaEntry.DataConfig:TryGetNum("res_weight",strK)
                                    local minPartNum = LuaEntry.DataConfig:TryGetNum("res_weight_min",strK)
                                    local percent = 0
                                    if resourceType == ResourceType.Money then
                                        percent = LuaEntry.Effect:GetGameEffect(EffectDefine.APS_MONEY_WEIGHT_PERCENT)
                                    elseif resourceType == ResourceType.Electricity then
                                        percent = LuaEntry.Effect:GetGameEffect(EffectDefine.APS_ELECTRICITY_WEIGHT_PERCENT)
                                    end
                                    local realNum = basePartNum*(1-(percent/100))
                                    partNum = math.max(minPartNum,realNum)
                                end
                            end
                        end

                        if partNum ==nil or partNum<=0 then
                            Logger.LogError("can not get weight")
                            partNum = 1
                        end
                        local realNum = addNum*partNum
                        num = num +realNum
                    end
                end
            end
        end
        plunderRe = num
    end
    return plunderRe
end


--自己的阵营加成
local function GetCampAddParam(heroes,effectList)
    local heroDataList = {}
    table.walk(heroes,function(k,v)
        local tempHeroData = DataCenter.HeroDataManager:GetHeroByUuid(k)
        if tempHeroData~=nil then
            table.insert(heroDataList,tempHeroData)
        end
    end)
    local value = MarchUtil.GetCampBonusExtraVal(heroDataList,effectList)
    return value
end



-- 其他玩家阵营加成用这个
-- effectList: List<{ effectId, value }>
local function GetCampBonusExtraVal(heroDataList, effectList)
    local val = 0

    local function GetBestEffectVal(camp, num)
        local base = 0
        local baseEffect = EffectDefine.CAMP_BONUS_ADD
        if effectList == nil then
            base = LuaEntry.Effect:GetGameEffect(baseEffect)
        else
            for _, v in pairs(effectList) do
                if v.effectId == baseEffect and v.value > 0 then
                    base = v.value
                end
            end
        end
        for x = num, 2, -1 do
            local effectId = MarchUtil.GetCampBonusEffectId(camp, x)
            if effectId then
                if effectList == nil then
                    local value = LuaEntry.Effect:GetGameEffect(effectId)
                    if value>0 then
                        return (value+base)
                    end
                else
                    for _, v in pairs(effectList) do
                        if v.effectId == effectId and v.value > 0 then
                            return (v.value+base)
                        end
                    end
                end

            end
        end
        return base
    end
    local info = DataCenter.CampEffectManager:GetCampEffectInfoByHeroData(heroDataList)
    local camp = info.camps[1]
    if info.template and info.template.effect then
        val = val + (info.template.effect[2] or 0)
        local camps = info.camps
        local eList = MarchUtil.GetCampBonusBaseEffectList(camps,info.template.id)
        local baseAddValue = 0
        for a,b in pairs(eList) do
            if effectList == nil then
                baseAddValue = baseAddValue + LuaEntry.Effect:GetGameEffect(b)
            else
                for _, v in pairs(effectList) do
                    if v.effectId == b and v.value > 0 then
                        baseAddValue = baseAddValue + v.value
                    end
                end
            end
        end
        val = val+baseAddValue
    end
    if info.type == CampEffectType.Fetter_3 or info.type == CampEffectType.Fetter_3_2 then
        local add = GetBestEffectVal(camp, 3)
        val = val*(1+add/100)
        --elseif info.type == CampEffectType.Fetter_3_2 then
        --    val = val + GetBestEffectVal(info.camps[1], 3)
        --    val = val + GetBestEffectVal(info.camps[2], 2)
    elseif info.type == CampEffectType.Fetter_4 then
        local add = GetBestEffectVal(camp, 4)
        val = val*(1+add/100)
    elseif info.type == CampEffectType.Fetter_5 then
        local add = GetBestEffectVal(camp, 5)
        val = val*(1+add/100)
    end
    return toInt(val),camp
end

local function GetCampBonusEffectId(camp, num)
    if camp == HeroCamp.NEW_HUMAN then
        return EffectDefine.CAMP_BONUS_ADD_35309
    elseif camp == HeroCamp.MAFIA then
        return EffectDefine.CAMP_BONUS_ADD_35306
    elseif camp == HeroCamp.ZELOT then
        return EffectDefine.CAMP_BONUS_ADD_35308
    elseif camp == HeroCamp.UNION then
        return EffectDefine.CAMP_BONUS_ADD_35307
    end

    return nil
end

local function GetCampBonusBaseEffectList(campList,type)
    local effectList = {}
    local camp = 0
    local camp2 = 0
    if campList~=nil and #campList>0 then
        camp = campList[1]
        if #campList>1 then
            camp2 = campList[2]
        else
            camp2 = camp
        end
    end
    if type == CampEffectType.Fetter_3 then
        if camp == HeroCamp.NEW_HUMAN then
            table.insert(effectList,EffectDefine.ADD_FORMATION_ATTACK_BY_CAMP_35320)
        elseif camp == HeroCamp.MAFIA then
            table.insert(effectList,EffectDefine.ADD_FORMATION_ATTACK_BY_CAMP_35320)
            table.insert(effectList,EffectDefine.ADD_FORMATION_ATTACK_BY_CAMP_35161)
        elseif camp == HeroCamp.ZELOT then
            table.insert(effectList,EffectDefine.ADD_FORMATION_ATTACK_BY_CAMP_35320)
            table.insert(effectList,EffectDefine.ADD_FORMATION_ATTACK_BY_CAMP_35169)
        elseif camp == HeroCamp.UNION then
            table.insert(effectList,EffectDefine.ADD_FORMATION_ATTACK_BY_CAMP_35320)
            table.insert(effectList,EffectDefine.ADD_FORMATION_ATTACK_BY_CAMP_35165)
        end
    elseif type == CampEffectType.Fetter_3_2 then
        if camp == HeroCamp.NEW_HUMAN then
            table.insert(effectList,EffectDefine.ADD_FORMATION_ATTACK_BY_CAMP_35320)
        elseif camp == HeroCamp.MAFIA then
            table.insert(effectList,EffectDefine.ADD_FORMATION_ATTACK_BY_CAMP_35320)
            table.insert(effectList,EffectDefine.ADD_FORMATION_ATTACK_BY_CAMP_35161)
        elseif camp == HeroCamp.ZELOT then
            table.insert(effectList,EffectDefine.ADD_FORMATION_ATTACK_BY_CAMP_35320)
            table.insert(effectList,EffectDefine.ADD_FORMATION_ATTACK_BY_CAMP_35169)
        elseif camp == HeroCamp.UNION then
            table.insert(effectList,EffectDefine.ADD_FORMATION_ATTACK_BY_CAMP_35320)
            table.insert(effectList,EffectDefine.ADD_FORMATION_ATTACK_BY_CAMP_35165)
        end
        if camp2 == HeroCamp.NEW_HUMAN then
        elseif camp2 == HeroCamp.MAFIA then
            table.insert(effectList,EffectDefine.ADD_FORMATION_ATTACK_BY_CAMP_35160)
        elseif camp2 == HeroCamp.ZELOT then
            table.insert(effectList,EffectDefine.ADD_FORMATION_ATTACK_BY_CAMP_35168)
        elseif camp2 == HeroCamp.UNION then
            table.insert(effectList,EffectDefine.ADD_FORMATION_ATTACK_BY_CAMP_35164)
        end
    elseif type == CampEffectType.Fetter_4 then
        if camp == HeroCamp.NEW_HUMAN then
            table.insert(effectList,EffectDefine.ADD_FORMATION_ATTACK_BY_CAMP_35320)
        elseif camp == HeroCamp.MAFIA then
            table.insert(effectList,EffectDefine.ADD_FORMATION_ATTACK_BY_CAMP_35320)
            table.insert(effectList,EffectDefine.ADD_FORMATION_ATTACK_BY_CAMP_35162)
        elseif camp == HeroCamp.ZELOT then
            table.insert(effectList,EffectDefine.ADD_FORMATION_ATTACK_BY_CAMP_35320)
            table.insert(effectList,EffectDefine.ADD_FORMATION_ATTACK_BY_CAMP_35170)
        elseif camp == HeroCamp.UNION then
            table.insert(effectList,EffectDefine.ADD_FORMATION_ATTACK_BY_CAMP_35320)
            table.insert(effectList,EffectDefine.ADD_FORMATION_ATTACK_BY_CAMP_35166)
        end
    elseif type == CampEffectType.Fetter_5 then
        if camp == HeroCamp.NEW_HUMAN then
            table.insert(effectList,EffectDefine.ADD_FORMATION_ATTACK_BY_CAMP_35320)
        elseif camp == HeroCamp.MAFIA then
            table.insert(effectList,EffectDefine.ADD_FORMATION_ATTACK_BY_CAMP_35320)
            table.insert(effectList,EffectDefine.ADD_FORMATION_ATTACK_BY_CAMP_35163)
        elseif camp == HeroCamp.ZELOT then
            table.insert(effectList,EffectDefine.ADD_FORMATION_ATTACK_BY_CAMP_35320)
            table.insert(effectList,EffectDefine.ADD_FORMATION_ATTACK_BY_CAMP_35171)
        elseif camp == HeroCamp.UNION then
            table.insert(effectList,EffectDefine.ADD_FORMATION_ATTACK_BY_CAMP_35320)
            table.insert(effectList,EffectDefine.ADD_FORMATION_ATTACK_BY_CAMP_35167)
        end
    end

    return effectList
end


local function GetBaseHeroRestraintValue(leftHeroDataList, rightHeroDataList,leftEffectList,rightEffectList,isAttack)

    local leftCampRestraintData = MarchUtil.GetRestraintInfo(leftHeroDataList,leftEffectList,isAttack)
    local rightCampRestraintData= MarchUtil.GetRestraintInfo(rightHeroDataList,rightEffectList,isAttack)
    if leftCampRestraintData~=nil and rightCampRestraintData~=nil then
        local leftRestraintCamp = HeroUtils.GetHeroRestraintType(leftCampRestraintData.camp)
        local rightRestraintCamp = HeroUtils.GetHeroRestraintType(rightCampRestraintData.camp)
        if leftRestraintCamp == rightCampRestraintData.camp and leftRestraintCamp~=-1 then
            local oneData = {}
            oneData.isLeft = true
            oneData.leftCampRestraintData = leftCampRestraintData
            oneData.rightCampRestraintData  = rightCampRestraintData
            oneData.value = leftCampRestraintData.totalVal
            return oneData
        elseif rightRestraintCamp == leftCampRestraintData.camp and rightRestraintCamp~=-1 then
            local oneData = {}
            oneData.isLeft = false
            oneData.leftCampRestraintData = leftCampRestraintData
            oneData.rightCampRestraintData  = rightCampRestraintData
            oneData.value = rightCampRestraintData.totalVal
            return oneData
        end
    end
end

local function GetRestraintInfo(heroDataList, effectList,isAttack)
    local restraintInfo = {}
    restraintInfo.camp = -1
    restraintInfo.num = 0
    restraintInfo.totalVal = 0
    restraintInfo.baseVal = 0
    restraintInfo.baseExtra = 0
    restraintInfo.extraVal = 0
    restraintInfo.details = {}
    local bonusInfo = DataCenter.CampEffectManager:GetCampEffectInfoByHeroData(heroDataList)
    if bonusInfo.type ~= CampEffectType.None then
        if bonusInfo.type == CampEffectType.Fetter_5 then
            restraintInfo.num = 5
            restraintInfo.camp = bonusInfo.camps[1]
        elseif bonusInfo.type == CampEffectType.Fetter_4 then
            restraintInfo.num = 4
            restraintInfo.camp = bonusInfo.camps[1]
        elseif bonusInfo.type == CampEffectType.Fetter_3_2 or bonusInfo.type == CampEffectType.Fetter_3 then
            restraintInfo.num = 3
            restraintInfo.camp = bonusInfo.camps[1]
        end
        restraintInfo.details = {}
        if isAttack then
            local str = LuaEntry.DataConfig:TryGetStr("battle_config", "k30") or ""
            local spls = string.split(str, ";")
            local baseVal = tonumber(spls[restraintInfo.num - 2]) or 0
            restraintInfo.baseVal = restraintInfo.baseVal+ baseVal
            restraintInfo.extraVal = 0

            --if effectList == nil then
            --    -- 使用我自己的
            --    local function GetMyEffect(effectId)
            --        return { effectId = effectId, value = LuaEntry.Effect:GetGameEffect(effectId) }
            --    end
            --
            --    effectList = {}
            --    table.insert(effectList, GetMyEffect(EffectDefine.CAMP_RESTRAINT_ADD_BASE))
            --    table.insert(effectList, GetMyEffect(EffectDefine.CAMP_RESTRAINT_ADD))
            --    table.insert(effectList, GetMyEffect(HeroUtils.GetHeroRestraintEffectType(restraintInfo.camp)))
            --end
            --
            --for _, v in pairs(effectList) do
            --    if v.effectId == HeroUtils.GetHeroRestraintEffectType(restraintInfo.camp) then
            --        if v.value > 0 then
            --            restraintInfo.extraVal = restraintInfo.extraVal + v.value
            --        end
            --    elseif v.effectId == EffectDefine.CAMP_RESTRAINT_ADD then
            --        if v.value > 0 then
            --            restraintInfo.extraVal = restraintInfo.extraVal + v.value
            --        end
            --    elseif v.effectId == EffectDefine.CAMP_RESTRAINT_ADD_BASE then
            --        if v.value > 0 then
            --            restraintInfo.baseExtra = restraintInfo.baseExtra + v.value
            --        end
            --    end
            --end
            --if restraintInfo.baseVal > 0 then
            --    -- 基础值
            --    local detail = {}
            --    detail.desc = "100275"
            --    detail.val = restraintInfo.baseVal
            --    table.insert(restraintInfo.details, detail)
            --end
            --if restraintInfo.baseExtra>0 then
            --    local detail = {}
            --    detail.desc = "133000"
            --    detail.val = restraintInfo.baseExtra
            --    table.insert(restraintInfo.details, detail)
            --end
            restraintInfo.totalVal = toInt((restraintInfo.baseVal+restraintInfo.baseExtra)*(1+(restraintInfo.extraVal/100)))
            --local deltaValue = restraintInfo.totalVal-(restraintInfo.baseVal+restraintInfo.baseExtra)
            --if deltaValue>0 then
            --    -- 阵营强化
            --    local detail = {}
            --    detail.desc = "136000"
            --    detail.val = toInt(deltaValue)
            --    table.insert(restraintInfo.details, detail)
            --end
        else
            local str = LuaEntry.DataConfig:TryGetStr("battle_config", "k31") or ""
            local spls = string.split(str, ";")
            local baseVal = tonumber(spls[restraintInfo.num - 2]) or 0
            restraintInfo.baseVal = restraintInfo.baseVal+ baseVal
            restraintInfo.extraVal = 0

            --if effectList == nil then
            --    -- 使用我自己的
            --    local function GetMyEffect(effectId)
            --        return { effectId = effectId, value = LuaEntry.Effect:GetGameEffect(effectId) }
            --    end
            --
            --    effectList = {}
            --    table.insert(effectList, GetMyEffect(EffectDefine.CAMP_RESTRAINT_ADD_BASE))
            --    table.insert(effectList, GetMyEffect(EffectDefine.CAMP_RESTRAINT_ADD))
            --    table.insert(effectList, GetMyEffect(HeroUtils.GetHeroRestraintEffectType(restraintInfo.camp)))
            --end
            --
            --for _, v in pairs(effectList) do
            --    if v.effectId == HeroUtils.GetHeroRestraintEffectType(restraintInfo.camp) then
            --        if v.value > 0 then
            --            restraintInfo.extraVal = restraintInfo.extraVal + v.value
            --        end
            --    elseif v.effectId == EffectDefine.CAMP_RESTRAINT_ADD then
            --        if v.value > 0 then
            --            restraintInfo.extraVal = restraintInfo.extraVal + v.value
            --        end
            --    elseif v.effectId == EffectDefine.CAMP_RESTRAINT_ADD_BASE then
            --        if v.value > 0 then
            --            restraintInfo.baseExtra = restraintInfo.baseExtra + v.value
            --        end
            --    end
            --end
            --if restraintInfo.baseVal > 0 then
            --    -- 基础值
            --    local detail = {}
            --    detail.desc = "100275"
            --    detail.val = restraintInfo.baseVal
            --    table.insert(restraintInfo.details, detail)
            --end
            --if restraintInfo.baseExtra>0 then
            --    local detail = {}
            --    detail.desc = "133000"
            --    detail.val = restraintInfo.baseExtra
            --    table.insert(restraintInfo.details, detail)
            --end
            restraintInfo.totalVal = toInt((restraintInfo.baseVal+restraintInfo.baseExtra)*(1+(restraintInfo.extraVal/100)))
            --local deltaValue = restraintInfo.totalVal-(restraintInfo.baseVal+restraintInfo.baseExtra)
            --if deltaValue>0 then
            --    -- 阵营强化
            --    local detail = {}
            --    detail.desc = "136000"
            --    detail.val = toInt(deltaValue)
            --    table.insert(restraintInfo.details, detail)
            --end
        end
        
    end

    return restraintInfo
end

-- 获取阵营组合额外带兵量
local function GetHeroCampAddArmyCount(heroDataList)
    local effectIds = {}
    local bonusInfo = DataCenter.CampEffectManager:GetCampEffectInfoByHeroData(heroDataList)
    if bonusInfo.type == CampEffectType.Fetter_5 then
        table.insert(effectIds, HeroCampAddArmyEffects[bonusInfo.camps[1]][5])
        table.insert(effectIds, HeroCampAddArmyEffects[bonusInfo.camps[1]][4])
        table.insert(effectIds, HeroCampAddArmyEffects[bonusInfo.camps[1]][3])
        table.insert(effectIds, HeroCampAddArmyEffects[bonusInfo.camps[1]][2])
    elseif bonusInfo.type == CampEffectType.Fetter_4 then
        table.insert(effectIds, HeroCampAddArmyEffects[bonusInfo.camps[1]][4])
        table.insert(effectIds, HeroCampAddArmyEffects[bonusInfo.camps[1]][3])
        table.insert(effectIds, HeroCampAddArmyEffects[bonusInfo.camps[1]][2])
    elseif bonusInfo.type == CampEffectType.Fetter_3_2 then
        table.insert(effectIds, HeroCampAddArmyEffects[bonusInfo.camps[1]][3])
        table.insert(effectIds, HeroCampAddArmyEffects[bonusInfo.camps[1]][2])
        table.insert(effectIds, HeroCampAddArmyEffects[bonusInfo.camps[2]][2])
    elseif bonusInfo.type == CampEffectType.Fetter_3 then
        table.insert(effectIds, HeroCampAddArmyEffects[bonusInfo.camps[1]][3])
        table.insert(effectIds, HeroCampAddArmyEffects[bonusInfo.camps[1]][2])
    elseif bonusInfo.type == CampEffectType.Fetter_2 then
        table.insert(effectIds, HeroCampAddArmyEffects[bonusInfo.camps[1]][2])
    end
    local count = 0
    for _, effectId in pairs(effectIds) do
        count = count + math.floor(LuaEntry.Effect:GetGameEffect(effectId))
    end
    return count
end
local function CheckFormationUnlock(index)
    if index ==1 then
        return LuaEntry.Effect:GetGameEffect(30554)>0
    elseif index ==2 then
        return LuaEntry.Effect:GetGameEffect(30555)>0
    elseif index ==3 then
        return LuaEntry.Effect:GetGameEffect(30556)>0
    elseif index ==4 then
        return LuaEntry.Effect:GetGameEffect(30557)>0
    end
end
MarchUtil.OnChangeSingleMarch = OnChangeSingleMarch
MarchUtil.OnAttackMonster =OnAttackMonster
MarchUtil.OnAttackArmy =OnAttackArmy
MarchUtil.OnCollectSimple =OnCollectSimple
MarchUtil.OnCollectGarbage = OnCollectGarbage
MarchUtil.OnTargetAllianceMine = OnTargetAllianceMine
MarchUtil.OnAttackCollectBuild =OnAttackCollectBuild
MarchUtil.OnBackHome =OnBackHome
MarchUtil.OnAssistanceBuild = OnAssistanceBuild
MarchUtil.OnAssistanceOtherCity =OnAssistanceOtherCity
MarchUtil.OnAttackOtherCity = OnAttackOtherCity
MarchUtil.OnAttackOtherBuild =OnAttackOtherBuild
MarchUtil.OnStation= OnStation
MarchUtil.OnGotoCollect = OnGotoCollect
MarchUtil.SetAutoBackHomeState = SetAutoBackHomeState
MarchUtil.GetAutoBackHomeState = GetAutoBackHomeState
MarchUtil.OnGotoWormHole =OnGotoWormHole
MarchUtil.OnBuildWormHole = OnBuildWormHole
MarchUtil.OnExplore= OnExplore
MarchUtil.OnJoinRally =OnJoinRally
MarchUtil.OnClickStartMarch = OnClickStartMarch
MarchUtil.GetMaxHeroValueByFormationIndex = GetMaxHeroValueByFormationIndex
MarchUtil.GetFormationAtkAddNumByFormationIndex =GetFormationAtkAddNumByFormationIndex
MarchUtil.GetFormationMaxNumByFormationIndex = GetFormationMaxNumByFormationIndex
MarchUtil.GetFormationDefAddNumByFormationIndex =GetFormationDefAddNumByFormationIndex
MarchUtil.GetFormationBuildNameByIndex = GetFormationBuildNameByIndex
MarchUtil.GetResourcePointUnlockStateByType =GetResourcePointUnlockStateByType
MarchUtil.GetMaxCanAddSoldierNum = GetMaxCanAddSoldierNum
MarchUtil.GetFormationPower = GetFormationPower
MarchUtil.GetFormationPowerNew = GetFormationPowerNew
MarchUtil.GetMarchStateIconByType = GetMarchStateIconByType
MarchUtil.GetCampAddParam = GetCampAddParam
MarchUtil.GetEffectNumInFormation = GetEffectNumInFormation
MarchUtil.GetFormationDefNum = GetFormationDefNum
MarchUtil.GetFormationAtkNum = GetFormationAtkNum
MarchUtil.GetMaxHeroValueByDefendFormationIndex = GetMaxHeroValueByDefendFormationIndex
MarchUtil.GetTargetMarchType = GetTargetMarchType
MarchUtil.GetDefenceFormationMaxCanAddSoldierNum= GetDefenceFormationMaxCanAddSoldierNum
MarchUtil.GetExploreFormationPower = GetExploreFormationPower
MarchUtil.OnChangeSingleFormation = OnChangeSingleFormation
MarchUtil.SendCreateMarchMessage = SendCreateMarchMessage
MarchUtil.GetCostStaminaByTargetType = GetCostStaminaByTargetType
MarchUtil.OnAssistanceAllianceCity = OnAssistanceAllianceCity
MarchUtil.OnAttackAllianceCity = OnAttackAllianceCity
MarchUtil.GetCanAddHeroNum = GetCanAddHeroNum
MarchUtil.GetFormationAddWeightPercentByFormationIndex = GetFormationAddWeightPercentByFormationIndex
MarchUtil.GetFormationCollectSpeedAdd =GetFormationCollectSpeedAdd
MarchUtil.GetFormationSpeedAddByIndex = GetFormationSpeedAddByIndex
MarchUtil.GetFormationAddWeightNumByFormationIndex =GetFormationAddWeightNumByFormationIndex
MarchUtil.GetBaseHeroRestraintValue = GetBaseHeroRestraintValue
MarchUtil.OnGotoCrossServerWormHole = OnGotoCrossServerWormHole
MarchUtil.ChoosePathInWormHoleOrDirect =ChoosePathInWormHoleOrDirect
MarchUtil.StartMarch = StartMarch
MarchUtil.GetAttackPos = GetAttackPos
MarchUtil.SendCreateMarchToServer = SendCreateMarchToServer
MarchUtil.SendChangeMarchToServer = SendChangeMarchToServer
MarchUtil.OnAttackDesert = OnAttackDesert
MarchUtil.OnAssistanceDesert =OnAssistanceDesert
MarchUtil.GetFormationStartPos = GetFormationStartPos
MarchUtil.GetMaxCanAddSoldierNumLog = GetMaxCanAddSoldierNumLog
MarchUtil.GetFormationAtkAddEffectEnumByIndex = GetFormationAtkAddEffectEnumByIndex
MarchUtil.GetFormationDefAddEffectEnumByIndex = GetFormationDefAddEffectEnumByIndex
MarchUtil.GetAttackCityTargetType = GetAttackCityTargetType
MarchUtil.GetNeedGotoWormHolePointId = GetNeedGotoWormHolePointId
MarchUtil.GetCurArmyWeight = GetCurArmyWeight
MarchUtil.GetCampBonusExtraVal = GetCampBonusExtraVal
MarchUtil.GetCampBonusEffectId = GetCampBonusEffectId
MarchUtil.OnAssistanceAllianceBuild = OnAssistanceAllianceBuild
MarchUtil.OnCollectActAllianceBuild = OnCollectActAllianceBuild
MarchUtil.OnAttackAllianceBuild =OnAttackAllianceBuild
MarchUtil.OnAttackActAllianceBuild = OnAttackActAllianceBuild
MarchUtil.GetEffectListByCamp = GetEffectListByCamp
MarchUtil.GetRestraintInfo = GetRestraintInfo
MarchUtil.GetHeroCampAddArmyCount = GetHeroCampAddArmyCount
MarchUtil.OnDragSingleMarch =OnDragSingleMarch
MarchUtil.OnAttackDragonBuild = OnAttackDragonBuild
MarchUtil.OnAssistanceDragonBuild = OnAssistanceDragonBuild
MarchUtil.OnTakeSecretKey = OnTakeSecretKey
MarchUtil.OnPickSecretKey =OnPickSecretKey
MarchUtil.OnSendSecretKeyToCamp = OnSendSecretKeyToCamp
MarchUtil.GetCampBonusBaseEffectList = GetCampBonusBaseEffectList
MarchUtil.OnTriggerDragonBuild = OnTriggerDragonBuild
MarchUtil.CheckFormationUnlock = CheckFormationUnlock
return ConstClass("MarchUtil", MarchUtil)