---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 1022.
--- DateTime: 2023/4/11 14:24
---迭代器，目前只支持数组，可以顺序读取和随机读取数据
local Iterator = BaseClass("Iterator")

function Iterator:__init(array)
    if table.IsNullOrEmpty(array) then
        self.m_arrayData = {}
        self.m_length = 0
    else
        self.m_arrayData = table.values(array) --为了保证数数组数据安全性，会把值复制出来一份，如果是字典表也会成为数组
        self.m_length = #self.m_arrayData
    end
    self.m_index = 1
end
--增加新对象到数组，支持扩展数组
function Iterator:Push(data)
    table.insert(self.m_arrayData,data)
    self.m_length = #self.m_arrayData
end
--获取随机得一个对象
function Iterator:GetRandom()
    if not self:IsAvailable() then
        return nil
    end
    
    self.m_index = math.random(1,self.m_length)
    
    return self.m_arrayData[self.m_index]
end
--正序获取对象
function Iterator:GetNext()
    if not self:IsAvailable() then
        return nil
    end
    
    if self:IsDone() then
        self:ResetToTop()
    end
    
    local target = self.m_arrayData[self.m_index]
    
    self.m_index = self.m_index + 1
    
    return target
end
--倒叙获取对象
function Iterator:GetPrev()
    if not self:IsAvailable() then
        return nil
    end
    
    if self:IsDone() then
        self:ResetToBottom()
    end
    
    local target = self.m_arrayData[self.m_index]

    self.m_index = self.m_index - 1

    return target
end
--重置到顶部
function Iterator:ResetToTop()
    self.m_index = 1
end
--重置到底部
function Iterator:ResetToBottom()
    self.m_index = self.m_length
end
--是否到头了
function Iterator:IsDone()
    return self.m_index > self.m_length or self.m_index < 1
end

function Iterator:GetCount()
    return self.m_length
end
--是否可用
function Iterator:IsAvailable()
    return not table.IsNullOrEmpty(self.m_arrayData) and self.m_length > 0
end

function Iterator:__delete()
    self.m_arrayData = nil
end

return Iterator