---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 24224.
--- DateTime: 2022/12/16 17:40
---
local WorldAllianceBuildUtil = {}

local function GetBuildTileIndex(buildId,index)
    local res = {}
    local sz = 0
    local tempTemplate = DataCenter.AllianceMineManager:GetAllianceMineTemplate(buildId)
    if tempTemplate then
        sz = tempTemplate.resSize
    end
    if sz~=nil and sz>1 then
        local vecPos = SceneUtils.IndexToTilePos(index,ForceChangeScene.World)
        local rangeList = BuildingUtils.GetAllNeighborsPos4(vecPos,sz)
        if rangeList~=nil and #rangeList>0 then
            table.walk(rangeList,function(k,v)
                local item = SceneUtils.TilePosToIndex(v,ForceChangeScene.World)
                table.insert(res,item)
            end)
        end
    else
        table.insert(res,index)
    end
    return res
end

local function IsAllianceCenterGroup(buildId)
    if buildId == BuildingTypes.ALLIANCE_CENTER_1 or buildId == BuildingTypes.ALLIANCE_CENTER_2 
            or buildId == BuildingTypes.ALLIANCE_CENTER_3 or buildId == BuildingTypes.ALLIANCE_CENTER_4 then
        return true
    end
    return false
end
local function IsAllianceFrontGroup(buildId)
    if buildId == BuildingTypes.ALLIANCE_FRONT_BUILD_1 or buildId == BuildingTypes.ALLIANCE_FRONT_BUILD_2 or buildId == BuildingTypes.ALLIANCE_FRONT_BUILD_3 then
        return true
    end
    return false
end
local function IsAllianceMineGroup(buildId)
    if buildId == BuildingTypes.ALLIANCE_RES_1 or buildId == BuildingTypes.ALLIANCE_RES_2
            or buildId == BuildingTypes.ALLIANCE_RES_3 or buildId == BuildingTypes.ALLIANCE_RES_4
            or buildId == BuildingTypes.ALLIANCE_RES_5 or buildId == BuildingTypes.ALLIANCE_RES_6
            or buildId == BuildingTypes.ALLIANCE_RES_7 or buildId == BuildingTypes.ALLIANCE_RES_8
            or buildId == BuildingTypes.ALLIANCE_RES_9 then
        return true
    end
    return false
end

local function IsAllianceActMineGroup(buildId)
    if buildId == BuildingTypes.ALLIANCE_ACT_RES_1 or buildId == BuildingTypes.ALLIANCE_ACT_RES_2 or buildId == BuildingTypes.ALLIANCE_ACT_RES_3 then
        return true
    end
    if buildId == BuildingTypes.EDEN_ALLIANCE_ACT_RES_1 or buildId == BuildingTypes.EDEN_ALLIANCE_ACT_RES_2 or buildId == BuildingTypes.EDEN_ALLIANCE_ACT_RES_3 then
        return true
    end
    if buildId == BuildingTypes.EDEN_CROSS_ALLIANCE_ACT_RES_1 or buildId == BuildingTypes.EDEN_CROSS_ALLIANCE_ACT_RES_2 or buildId == BuildingTypes.EDEN_CROSS_ALLIANCE_ACT_RES_3 then
        return true
    end
    return false
end

--获取该位置能否放置建筑(buildUuid 针对移动)
local function IsCanPutDownByAllianceBuild(buildId,index)
    if WorldAllianceBuildUtil.IsAllianceCenterGroup(buildId) == true then
        return WorldAllianceBuildUtil.IsCanPutDownByAllianceCenter(buildId,index)
    end
    local points = WorldAllianceBuildUtil.GetBuildTileIndex(buildId, index)
    local isCanPlaceInMain = true
    if WorldAllianceBuildUtil.IsAllianceMineGroup(buildId) ==true and buildId and LuaEntry.Player.serverType == ServerType.NORMAL then
        local tempTemplate = DataCenter.AllianceMineManager:GetAllianceMineTemplate(buildId)
        if tempTemplate~=nil and tempTemplate.limitRuin>0 then
            isCanPlaceInMain = false
        end
    end
    for k,v in pairs(points) do
        --判断点能不能放IsCanPutDownByPoint 函数中 不要放这里
        local putState = WorldAllianceBuildUtil.IsCanPutDownByPoint(v, buildId,isCanPlaceInMain)
        if putState ~= BuildPutState.Ok then
            return putState
        end
    end
    return BuildPutState.Ok
end

local function IsCanPutDownByAllianceCenter(buildId,index)
    local points = WorldAllianceBuildUtil.GetBuildTileIndex(buildId, index)
    local tempTemplate = DataCenter.AllianceMineManager:GetAllianceMineTemplate(buildId)
    if tempTemplate~=nil then
        local desertLimit = tempTemplate.place_ruin_dic
        if desertLimit~=nil and table.count(desertLimit)>0 then
            local canPut = false
            local canEmpty = false
            if buildId == BuildingTypes.ALLIANCE_CENTER_1 then
                canEmpty = true
            end
            local worldPos = BuildingUtils.GetBuildModelCenterVec(index, tempTemplate.resSize)
            local centerPoint = SceneUtils.WorldToTileIndex(worldPos)
            local worldTileInfo = CS.SceneManager.World:GetWorldTileInfo(centerPoint)
            if worldTileInfo~=nil then
                local pointData = worldTileInfo:GetPointInfo()
                if pointData == nil then
                    local desertInfo = worldTileInfo:GetWorldDesertInfo()
                    if desertInfo~=nil then
                        local state = desertInfo:GetPlayerType()
                        if state == CS.PlayerType.PlayerSelf or state == CS.PlayerType.PlayerAlliance or state == CS.PlayerType.PlayerAllianceLeader then
                            local level = GetTableData(TableName.Desert, desertInfo.desertId, "desert_level")
                            if level~=nil and level>0 and desertLimit[level]~=nil then
                                canPut = true
                            end
                        end
                        if canPut == false and canEmpty == true and state == CS.PlayerType.PlayerNone then
                            local level = GetTableData(TableName.Desert, desertInfo.desertId, "desert_level")
                            if level~=nil and level>0 and desertLimit[level]~=nil then
                                canPut = true
                            end
                        end
                    end
                end
            end
            if canPut == false then
                return BuildPutState.OnDesert
            end
        end
    end
    for k,v in pairs(points) do
        --判断点能不能放IsCanPutDownByPoint 函数中 不要放这里
        local putState = WorldAllianceBuildUtil.IsCanPutDownAllianceCenterByPoint(v)
        if putState ~= BuildPutState.Ok then
            return putState
        end
    end
    return BuildPutState.Ok
end

--判断每个坐标点能不能放建筑，不能返回原因
--noPutPoint 当放农田后台数据没返回，已经放的点不能再次放置
local function IsCanPutDownAllianceCenterByPoint(index)
    if CS.SceneManager.World:IsInMapByIndex(index)==false then
        return BuildPutState.OutUnlockRange
    end
    if  SceneUtils.IsInBlackRange(index) then
        return BuildPutState.InBlackLandRange
    end
    
    if  DataCenter.DesertDataManager:CanPlaceAllianceCenterByPointId(index) ==false then
        return BuildPutState.OnDesert
    end
    if LuaEntry.Player.serverType == ServerType.EDEN_SERVER then
        local myAllow = false
        local areaId = CS.SceneManager.World:GetAreaIdByPosId(index-1)
        local areaTemp = DataCenter.EdenAreaTemplateManager:GetTemplate(areaId)
        if areaTemp~=nil then
            if areaTemp.area_type == EdenAreaType.NORTH_BORN_AREA then
                if DataCenter.RobotWarsManager:GetSelfCamp() == EdenCamp.NORTH then
                    myAllow = true
                end
            elseif areaTemp.area_type == EdenAreaType.SOUTH_BORN_AREA then
                if DataCenter.RobotWarsManager:GetSelfCamp() == EdenCamp.SOUTH then
                    myAllow = true
                end
            end
        end
        if myAllow ==false then
            return BuildPutState.AllianceBuildNotInBirthRange
        end
    end
    local temp =  DataCenter.WorldPointManager:GetPointInfo(index)
    if temp~=nil then
        return BuildPutState.Building
    end
    if CS.SceneManager.World:IsTileWalkable(CS.SceneManager.World:IndexToTilePos(index))==false then
        return BuildPutState.StaticPoint
    end
    return BuildPutState.Ok
end

--判断每个坐标点能不能放建筑，不能返回原因
--noPutPoint 当放农田后台数据没返回，已经放的点不能再次放置
local function IsCanPutDownByPoint(index, buildId,isCanPlaceInMain)
    if CS.SceneManager.World:IsInMapByIndex(index)==false then
        return BuildPutState.OutUnlockRange
    end
    if  SceneUtils.IsInBlackRange(index) then
        return BuildPutState.InBlackLandRange
    end
    if WorldAllianceBuildUtil.IsAllianceMineGroup(buildId) ==true then
        if LuaEntry.Player.serverType == ServerType.EDEN_SERVER then
            local myAllow = false
            local areaId = CS.SceneManager.World:GetAreaIdByPosId(index-1)
            local areaTemp = DataCenter.EdenAreaTemplateManager:GetTemplate(areaId)
            if areaTemp~=nil then
                if areaTemp.area_type == EdenAreaType.NORTH_BORN_AREA then
                    if DataCenter.RobotWarsManager:GetSelfCamp() == EdenCamp.NORTH then
                        myAllow = true
                    end
                elseif areaTemp.area_type == EdenAreaType.SOUTH_BORN_AREA then
                    if DataCenter.RobotWarsManager:GetSelfCamp() == EdenCamp.SOUTH then
                        myAllow = true
                    end
                end
            end
            if myAllow ==false then
                return BuildPutState.AllianceMineNotInBirthRange
            end
        end
        local zoneId = CS.SceneManager.World:GetZoneIdByPosId(index-1)
        local cityInfo = nil
        local cityData = DataCenter.WorldAllianceCityDataManager:GetAllianceCityDataByCityId(zoneId)
        if cityData~=nil then
            if cityData.allianceId~=nil and cityData.allianceId~="" then
                if cityData.allianceId==LuaEntry.Player.allianceId then
                    cityInfo = cityData
                end
            end
        end
        if cityInfo~=nil then
            local v2 = SceneUtils.IndexToTilePos(index,ForceChangeScene.World)
            local distanceMax = LuaEntry.DataConfig:TryGetNum("allance_build", "k1")
            local size = GetTableData(TableName.WorldCity,zoneId, "size")
            local min = math.ceil(size/2)
            local max = math.floor(distanceMax/2)
            local centerV2 = cityInfo.posV2
            local distanceX = math.abs(v2.x - centerV2.x)
            local distanceY = math.abs(v2.y- centerV2.y)
            if distanceX<=min and distanceY<=min then
                return BuildPutState.Building
            elseif distanceX>=max or distanceY>=max then
                if isCanPlaceInMain then
                    local k2 = LuaEntry.DataConfig:TryGetNum("allance_build", "k2")
                    local maxMainRange = math.floor(k2/2)
                    local mainV2 = SceneUtils.IndexToTilePos(LuaEntry.Player:GetMainWorldPos(),ForceChangeScene.World)
                    local dX = math.abs(v2.x - mainV2.x)
                    local dY = math.abs(v2.y - mainV2.y)
                    if dX>=maxMainRange or dY>=maxMainRange then
                        return BuildPutState.NotNearAlRuin
                    end
                else
                    return BuildPutState.NotNearAlRuin
                end
            end
        else
            if isCanPlaceInMain then
                local v2 = SceneUtils.IndexToTilePos(index,ForceChangeScene.World)
                local k2 = LuaEntry.DataConfig:TryGetNum("allance_build", "k2")
                local maxMainRange = math.floor(k2/2)
                local mainV2 = SceneUtils.IndexToTilePos(LuaEntry.Player:GetMainWorldPos(),ForceChangeScene.World)
                local dX = math.abs(v2.x - mainV2.x)
                local dY = math.abs(v2.y - mainV2.y)
                if dX>=maxMainRange or dY>=maxMainRange then
                    return BuildPutState.NotNearAlRuin
                end
            else
                return BuildPutState.NotNearAlRuin
            end
        end
        
    end
    if  DataCenter.DesertDataManager:CanPlaceAllianceBuildByPointId(index) ==false then
        return BuildPutState.OnDesert
    end
    local temp =  DataCenter.WorldPointManager:GetPointInfo(index)
    if temp~=nil then
        return BuildPutState.Building
    end
    if CS.SceneManager.World:IsTileWalkable(CS.SceneManager.World:IndexToTilePos(index))==false then
        return BuildPutState.StaticPoint
    end
    if WorldAllianceBuildUtil.IsAllianceActMineGroup(buildId) ==true then
        if LuaEntry.Player.serverType == ServerType.EDEN_SERVER then
            local startPos =LuaEntry.Player:GetMainWorldPos()
            if SceneUtils.IsTargetPosWalkable(index,startPos)==false then
                return BuildPutState.AllianceEdenMineCanNotReach
            end
        end
    end
    return BuildPutState.Ok
end

WorldAllianceBuildUtil.IsCanPutDownByAllianceBuild = IsCanPutDownByAllianceBuild
WorldAllianceBuildUtil.IsCanPutDownByPoint = IsCanPutDownByPoint
WorldAllianceBuildUtil.GetBuildTileIndex = GetBuildTileIndex
WorldAllianceBuildUtil.IsAllianceCenterGroup = IsAllianceCenterGroup
WorldAllianceBuildUtil.IsAllianceMineGroup = IsAllianceMineGroup
WorldAllianceBuildUtil.IsCanPutDownByAllianceCenter = IsCanPutDownByAllianceCenter
WorldAllianceBuildUtil.IsCanPutDownAllianceCenterByPoint = IsCanPutDownAllianceCenterByPoint
WorldAllianceBuildUtil.IsAllianceFrontGroup = IsAllianceFrontGroup
WorldAllianceBuildUtil.IsAllianceActMineGroup = IsAllianceActMineGroup
return ConstClass("BuildingUtils", WorldAllianceBuildUtil)